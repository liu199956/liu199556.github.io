<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Admin</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-03-18T05:20:34.679Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Admin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>git</title>
    <link href="http://example.com/2022/03/18/git/"/>
    <id>http://example.com/2022/03/18/git/</id>
    <published>2022-03-18T02:49:10.000Z</published>
    <updated>2022-03-18T05:20:34.679Z</updated>
    
    <content type="html"><![CDATA[<h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>在仓库目录终端下 - 设置全局用户</span><br><span class="line">&gt;: git config --<span class="keyword">global</span> user.name <span class="string">&#x27;lxx&#x27;</span></span><br><span class="line">&gt;: git config --<span class="keyword">global</span> user.email <span class="string">&#x27;lxx@qq.com&#x27;</span></span><br><span class="line"><span class="number">2.</span>在仓库目录终端下 - 设置局部用户</span><br><span class="line">&gt;: git config user.name <span class="string">&#x27;lhj&#x27;</span></span><br><span class="line">-- 用户名</span><br><span class="line">&gt;: git config user.email <span class="string">&#x27;lhj@qq.com&#x27;</span></span><br><span class="line">-- 用户邮箱</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">注：在当前仓库下的config新建用户信息，只能在当前仓库下使用</span></span><br><span class="line"><span class="string">注：一个仓库有局部用户，优先使用局部用户，没有配置再找全局用户</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="number">3.</span>撤销工作区操作：改、删</span><br><span class="line">&gt;: git checkout .</span><br><span class="line">-- 撤销所有暂存区的提交</span><br><span class="line">&gt;: git checkout 文件名</span><br><span class="line">-- 撤销某一文件的暂存区提交</span><br><span class="line">&gt;: git checkout -b dev </span><br><span class="line">    -- 新建分支dev并切换到该分支</span><br><span class="line"><span class="number">4.</span>查看当前分支</span><br><span class="line">&gt;: git branch -a </span><br><span class="line"><span class="number">5.</span>撤销版本库提交：commit的逆运算</span><br><span class="line">回滚暂存区已经提交到版本库的操作：</span><br><span class="line">    查看历史版本：</span><br><span class="line">        &gt;: git log</span><br><span class="line">        &gt;: git reflog</span><br><span class="line">    查看时间点之前|之后的日志：</span><br><span class="line">        &gt;: git log --after <span class="number">2018</span>-<span class="number">6</span>-<span class="number">1</span></span><br><span class="line">        &gt;: git log --before <span class="number">2018</span>-<span class="number">6</span>-<span class="number">1</span></span><br><span class="line">        &gt;: git reflog --after <span class="number">2018</span>-<span class="number">6</span>-<span class="number">1</span></span><br><span class="line">        &gt;: git reflog --before <span class="number">2018</span>-<span class="number">6</span>-<span class="number">1</span></span><br><span class="line">    查看指定开发者日志</span><br><span class="line">        &gt;: git log --author author_name</span><br><span class="line">        &gt;: git reflog --author author_name</span><br><span class="line">    回滚到指定版本：</span><br><span class="line">        回滚到上一个版本：</span><br><span class="line">            &gt;: git reset --hard HEAD^</span><br><span class="line">            &gt;: git reset --hard HEAD~</span><br><span class="line">        回滚到上三个版本：</span><br><span class="line">            &gt;: git reset --hard HEAD^^^</span><br><span class="line">            &gt;: git reset --hard HEAD~<span class="number">3</span></span><br><span class="line">        回滚到指定版本号的版本：</span><br><span class="line">            &gt;: git reset --hard 版本号 (重点)</span><br><span class="line">            &gt;: eg: git reset --hard 35cb292</span><br><span class="line">                   </span><br></pre></td></tr></table></figure><h4 id="其它命令"><a href="#其它命令" class="headerlink" title="其它命令"></a>其它命令</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>）查看仓库已配置的远程源</span><br><span class="line">&gt;: git remote</span><br><span class="line">&gt;: git remote -v</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>）查看remote命令帮助文档</span><br><span class="line">&gt;: git remote -h</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>）删除远程源</span><br><span class="line">&gt;: git remote remove 源名</span><br><span class="line">eg: git remote remove origin</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>）添加远程源</span><br><span class="line">&gt;: git remote add 源名 源地址</span><br><span class="line">&gt;: git remote add orgin git@gitee.com:doctor_owen/luffyapi.git</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>）提交代码到远程源</span><br><span class="line">&gt;: git push 源码 分支名</span><br><span class="line"></span><br><span class="line"><span class="number">6</span>）克隆远程源</span><br><span class="line">&gt;: git clone 远程源地址</span><br></pre></td></tr></table></figure><h4 id="合并分支"><a href="#合并分支" class="headerlink" title="合并分支"></a>合并分支</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>查看当前所在分支</span><br><span class="line">$ git branch -a</span><br><span class="line">* master</span><br><span class="line">  remotes/origin/HEAD -&gt; origin/master</span><br><span class="line">  remotes/origin/master</span><br><span class="line"><span class="number">2.</span>创建新分支dev</span><br><span class="line">$ git checkout -b dev</span><br><span class="line">Switched to a new branch <span class="string">&#x27;dev&#x27;</span></span><br><span class="line"><span class="number">3.</span>查看新分支状态</span><br><span class="line">$ git status</span><br><span class="line">On branch dev</span><br><span class="line">Changes <span class="keyword">not</span> staged <span class="keyword">for</span> commit:</span><br><span class="line">...</span><br><span class="line">Untracked files:</span><br><span class="line">  (use <span class="string">&quot;git add &lt;file&gt;...&quot;</span> to include <span class="keyword">in</span> what will be committed)</span><br><span class="line">        .idea/.gitignore</span><br><span class="line">        .idea/inspectionProfiles/</span><br><span class="line">        .idea/misc.xml</span><br><span class="line">        .idea/modules.xml</span><br><span class="line">        .idea/vcs.xml</span><br><span class="line"><span class="number">4.</span>在dev分支开发</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;注释&quot;</span></span><br><span class="line">git push origin dev</span><br><span class="line"></span><br><span class="line"> * [new branch]      dev -&gt; dev</span><br><span class="line"><span class="number">5.</span>在主分支合并dev（先切换到master分支上）</span><br><span class="line">git  checkout master</span><br><span class="line"><span class="number">6.</span>协同开发需要先把远程代码pull下来</span><br><span class="line">git pull origin master</span><br><span class="line"></span><br><span class="line"> * branch            master     -&gt; FETCH_HEAD</span><br><span class="line">Already up to date.</span><br><span class="line"><span class="number">7.</span>合并分支</span><br><span class="line">git merge dev</span><br><span class="line"><span class="number">8.</span>查看状态及提交命令</span><br><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Your branch <span class="keyword">is</span> ahead of <span class="string">&#x27;origin/master&#x27;</span> by <span class="number">2</span> commits.</span><br><span class="line">  (use <span class="string">&quot;git push&quot;</span> to publish your local commits)</span><br><span class="line"></span><br><span class="line">nothing to commit, working tree clean</span><br><span class="line"><span class="number">9.</span>将本地变更提交到远程仓库</span><br><span class="line">git push origin master</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="冲突解决"><a href="#冲突解决" class="headerlink" title="冲突解决"></a>冲突解决</h4><ul><li>冲突产生的原因：两个人在不同分支的同一个文件修改了不同的代码</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>在dev分支cs脚本新增如下代码提交到本地仓库</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dev</span>():</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;dev分分支测试&quot;</span>)</span><br><span class="line">dev()</span><br><span class="line"></span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;dev分支cs脚本新增内容&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>切换到master分支并在cs脚本新增如下代码提交到本地仓库</span><br><span class="line">git checkout master</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">master</span>():</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;master分分支测试&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">master()</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;master分支cs脚本新增内容&quot;</span></span><br><span class="line"><span class="number">3.</span>合并分支dev会产生冲突</span><br><span class="line">git merge dev</span><br><span class="line"></span><br><span class="line">CONFLICT (content): Merge conflict <span class="keyword">in</span> ATM/cs.py</span><br><span class="line">Automatic merge failed; fix conflicts <span class="keyword">and</span> then commit the result.</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>冲突处理(&lt;&lt;&lt;&lt;&lt;&lt;&lt; ，=======，&gt;&gt;&gt;&gt;&gt;&gt;&gt; 标记了冲突出现的位置,对冲突文本进行选择修改，使用master分支，删除dev分支内容)</span><br><span class="line">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">master</span>():</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;master分分支测试&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">master()</span><br><span class="line">=======</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dev</span>():</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;dev分分支测试&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dev()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;&gt;&gt;&gt;&gt; dev</span><br><span class="line"><span class="number">5.</span>提交合并</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;使用master分支cs脚本，删除dev分层cs脚本内容&quot;</span></span><br></pre></td></tr></table></figure><h4 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">简易的命令行入门教程:</span><br><span class="line">Git 全局设置:</span><br><span class="line"></span><br><span class="line">git config --<span class="keyword">global</span> user.name <span class="string">&quot;xxx&quot;</span></span><br><span class="line">git config --<span class="keyword">global</span> user.email <span class="string">&quot;1026170773@qq.com&quot;</span></span><br><span class="line">创建 git 仓库:</span><br><span class="line"></span><br><span class="line">mkdir luufy</span><br><span class="line">cd luufy</span><br><span class="line">git init</span><br><span class="line"></span><br><span class="line">git commit -m <span class="string">&quot;first commit&quot;</span></span><br><span class="line">git remote add origin https://gitee.com/liuhaojie_199556/luufy.git</span><br><span class="line">git push  origin master</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="采用ssh协议连接远程源"><a href="#采用ssh协议连接远程源" class="headerlink" title="采用ssh协议连接远程源"></a>采用ssh协议连接远程源</h4><ul><li><a href="https://gitee.com/help/articles/4181#article-header0">https://gitee.com/help/articles/4181#article-header0</a></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">本机命令，生成公钥：ssh-keygen -t rsa -C <span class="string">&quot;1026170773@qq.com&quot;</span></span><br><span class="line">邮箱可以任意填写</span><br><span class="line">本机命令，查看公钥：cat ~/.ssh/id_rsa.pub</span><br><span class="line"></span><br><span class="line">码云线上添加公钥：项目仓库 =&gt; 管理 =&gt; 部署公钥管理 =&gt; 添加公钥 =&gt; 添加个人公钥</span><br></pre></td></tr></table></figure><h4 id="协同开发"><a href="#协同开发" class="headerlink" title="协同开发"></a>协同开发</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>）作为开发者，第一次同步项目（前台已经是项目开发者了）</span><br><span class="line">&gt;: git clone 项目地址</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>）保证自己本地有dev分支，且与远程仓库版本同步(没有就自己新建)</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>）本地开发的代码，必须add、commit到本地版本库后，才和远程仓库进行交互</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>）交互顺序：必须 先拉(pull)后提(push)</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>）必须切换到要交互的分支，在与远程同名的分支进行交互，如本地dev与远程dev交互</span><br><span class="line">&gt;: git checkout dev</span><br><span class="line">&gt;: git add .</span><br><span class="line">&gt;: git commit -m <span class="string">&#x27;本次提交的信息提示&#x27;</span></span><br><span class="line">&gt;: git pull origin dev</span><br><span class="line">&gt;: git push origin dev</span><br></pre></td></tr></table></figure><h4 id="远程仓库回滚"><a href="#远程仓库回滚" class="headerlink" title="远程仓库回滚"></a>远程仓库回滚</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">用dev分支举例</span><br><span class="line"><span class="number">1</span>）本地切换到远程要回滚的分支对应的本地分支</span><br><span class="line">git checkout dev</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>）回滚本地分支</span><br><span class="line">git reset --hard 版本号</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>）本地版本强行提交给服务器</span><br><span class="line">git push origin dev -f</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;常用命令&quot;&gt;&lt;a href=&quot;#常用命令&quot; class=&quot;headerlink&quot; title=&quot;常用命令&quot;&gt;&lt;/a&gt;常用命令&lt;/h4&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;p</summary>
      
    
    
    
    
    <category term="git" scheme="http://example.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Go</title>
    <link href="http://example.com/2021/12/10/Go/"/>
    <id>http://example.com/2021/12/10/Go/</id>
    <published>2021-12-10T02:58:27.000Z</published>
    <updated>2021-12-10T07:01:41.456Z</updated>
    
    
    
    
    
    <category term="Go" scheme="http://example.com/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>opencv</title>
    <link href="http://example.com/2021/11/23/opencv/"/>
    <id>http://example.com/2021/11/23/opencv/</id>
    <published>2021-11-23T07:00:05.000Z</published>
    <updated>2022-04-29T09:40:21.786Z</updated>
    
    <content type="html"><![CDATA[<h4 id="rtsp后台视频流搭建"><a href="#rtsp后台视频流搭建" class="headerlink" title="rtsp后台视频流搭建"></a>rtsp后台视频流搭建</h4><img src="/2021/11/23/opencv/image-20211123151226557.png" alt="opencv" style="zoom:150%;"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget  http://www.live555.com/liveMedia/public/live555-latest.tar.gz</span><br><span class="line">tar xzf live555-latest.tar.gz</span><br><span class="line">cd live</span><br><span class="line">./genMakefiles linux-64bit    #注意后面这个参数是根据当前文件夹下config.&lt;后缀&gt;获取得到的</span><br><span class="line">make</span><br><span class="line">cd mediaServer</span><br><span class="line">./live555MediaServer   # 启动rtsp服务</span><br></pre></td></tr></table></figure><h4 id="ffmpeg"><a href="#ffmpeg" class="headerlink" title="ffmpeg"></a>ffmpeg</h4><ul><li><p><a href="https://zhuanlan.zhihu.com/p/67878761">https://zhuanlan.zhihu.com/p/67878761</a></p></li><li><p><a href="https://blog.csdn.net/qq_43474959/article/details/105366800">https://blog.csdn.net/qq_43474959/article/details/105366800</a></p></li><li><p>FFmpeg是一套可以用来记录、转换数字音频、视频，并能将其转化为流的开源计算机程序</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">xz -d ffmpeg-git-amd64-static.tar.xz</span><br><span class="line">tar -xvf ffmpeg-git-amd64-static.tar</span><br><span class="line">cd ffmpeg-git-<span class="number">20211108</span>-amd64-static/</span><br><span class="line">./ffmpeg</span><br><span class="line"><span class="comment"># 建立软连接</span></span><br><span class="line">ln -s /usr/local/ffmpeg/ffmpeg-git-<span class="number">20211108</span>-amd64-static/ffmpeg /usr/<span class="built_in">bin</span>/ffmpeg</span><br><span class="line">ln -s /usr/local/ffmpeg/ffmpeg-git-<span class="number">20211108</span>-amd64-static/ffprobe /usr/<span class="built_in">bin</span>/ffprobe</span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">ffmpeg</span><br></pre></td></tr></table></figure><p><strong>常用参数</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">主要参数：</span><br><span class="line">i 设定输入流</span><br><span class="line">f 设定输出格式</span><br><span class="line">ss 开始时间</span><br><span class="line">t  持续时间</span><br><span class="line">视频参数：</span><br><span class="line">b 设定视频流量，默认为200Kbit/s-r 设定帧速率，默认为<span class="number">25</span></span><br><span class="line">s 设定画面的宽与高-aspect 设定画面的比例</span><br><span class="line">vn 不处理视频-vcodec 设定视频编解码器，未设定时则使用与输入流相同的编解码器</span><br><span class="line">音频参数：</span><br><span class="line">ar 设定采样率</span><br><span class="line">ac 设定声音的Channel数</span><br><span class="line">acodec 设定声音编解码器，未设定时则使用与输入流相同的编解码器an 不处理音频</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>1.分离视频音频流</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i input_file -vcodec copy -an output_file_video　　//分离视频流</span><br><span class="line">ffmpeg -i input_file -acodec copy -vn output_file_audio　　//分离音频流</span><br></pre></td></tr></table></figure><p>2.<strong>视频图片剪切</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg –i test.avi –r 1 –f image2 image-%3d.jpeg //提取图片</span><br><span class="line">ffmpeg -ss 0:1:30 -t 0:0:20 -i input.avi -vcodec copy -acodec copy output.avi //剪切视频</span><br></pre></td></tr></table></figure><p>3.视频流推流(rtmp)</p><ul><li>拉取摄像机RTSP流，推送给RTMP服务器 -vcodec copy -acodec copy (限于摄像机提供的就为H.264+AAC的码流)</li><li>若不是则-vcodec copy<code>改为</code>-vcodec libx264<code>，</code>-acodec copy<code>改为</code>-acodec aac</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i rtsp://<span class="number">10.21</span><span class="number">.6</span><span class="number">.11</span>/video/<span class="number">2.</span>mkv  -vcodec libx264 -preset:v ultrafast -tune:v zerolatency -acodec copy -f flv  rtmp://<span class="number">10.21</span><span class="number">.6</span><span class="number">.12</span>/live/livestream</span><br></pre></td></tr></table></figure><p>4.视频流推流(rtsp)</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg <span class="literal">-re</span> <span class="literal">-stream_loop</span> <span class="literal">-1</span> <span class="literal">-i</span> <span class="number">2</span>.mp4 <span class="literal">-c</span> <span class="built_in">copy</span> <span class="operator">-f</span> rtsp rtsp://<span class="number">10.21</span>.<span class="number">6.11</span>/video</span><br></pre></td></tr></table></figure><h4 id="srs"><a href="#srs" class="headerlink" title="srs"></a>srs</h4><ul><li>(Simple RTMP Server)  是国人写的一款非常优秀的开源流媒体服务器软件，可用于直播/录播/视频客服等多种场景，其定位是运营级的互联网直播服务器集群</li></ul><p>docker启动</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">eip=<span class="variable">$</span>(ifconfig eth0|grep <span class="string">&#x27;inet &#x27;</span>|awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> [[ ! -<span class="type">z</span> <span class="variable">$eip</span> ]]; then</span><br><span class="line">  docker run <span class="literal">-d</span> -<span class="literal">-rm</span> -<span class="literal">-env</span> CANDIDATE=<span class="variable">$</span>(ifconfig eth0|grep <span class="string">&#x27;inet &#x27;</span>|awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>) \</span><br><span class="line">      <span class="literal">-p</span> <span class="number">1935</span>:<span class="number">1935</span> <span class="literal">-p</span> <span class="number">8080</span>:<span class="number">8080</span> <span class="literal">-p</span> <span class="number">1985</span>:<span class="number">1985</span> <span class="literal">-p</span> <span class="number">8000</span>:<span class="number">8000</span>/udp \</span><br><span class="line">      registry.cn<span class="literal">-hangzhou</span>.aliyuncs.com/ossrs/srs:v4.<span class="number">0.76</span> \</span><br><span class="line">      objs/srs <span class="literal">-c</span> conf/rtc.conf</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>ffmpeg推流</p><ul><li><a href="http://10.21.6.12:8080/live/livestream.flv">http://10.21.6.12:8080/live/livestream.flv</a></li><li>webrtc://10.21.6.12/live/livestream</li><li>rtmp://10.21.6.12/live/livestream</li><li><img src="/2021/11/23/opencv/image-20220309175859987.png" alt="opencv"></li></ul><p><code>将rtsp视频流推流到srs</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg <span class="literal">-re</span> <span class="literal">-i</span> rtsp://<span class="number">10.21</span>.<span class="number">6.11</span>/video/<span class="number">2</span>.mkv <span class="literal">-vcodec</span> libx264 <span class="literal">-acodec</span> aac <span class="operator">-f</span> flv   rtmp://<span class="number">10.21</span>.<span class="number">6.12</span>/live/livestream</span><br></pre></td></tr></table></figure><p><code>循环将本地文件推流到srs</code></p><ul><li>nohup不挂断的运行，并没有后台运行的功能，就是指，用nohup运行命令可以使命令永久的执行下去</li><li>&amp; 后台运行</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vi push.sh</span><br><span class="line">chmod +x push.sh</span><br><span class="line"></span><br><span class="line">nohup ffmpeg <span class="literal">-threads</span> <span class="number">2</span> <span class="literal">-re</span> <span class="literal">-fflags</span> +genpts <span class="literal">-stream_loop</span> <span class="literal">-1</span>  <span class="literal">-i</span> ./input.mp4  <span class="literal">-vcodec</span> libx264 <span class="literal">-preset</span>:v ultrafast <span class="literal">-tune</span>:v zerolatency <span class="literal">-acodec</span> <span class="built_in">copy</span> <span class="operator">-f</span>  flv <span class="literal">-y</span>  rtmp://<span class="number">10.21</span>.<span class="number">6.12</span>/live/input &amp;</span><br><span class="line"></span><br><span class="line">nohup ffmpeg <span class="literal">-threads</span> <span class="number">2</span> <span class="literal">-re</span> <span class="literal">-fflags</span> +genpts <span class="literal">-stream_loop</span> <span class="literal">-1</span>  <span class="literal">-i</span> ./output.mp4  <span class="literal">-vcodec</span> libx264 <span class="literal">-preset</span>:v ultrafast <span class="literal">-tune</span>:v zerolatency <span class="literal">-acodec</span> <span class="built_in">copy</span> <span class="operator">-f</span>  flv <span class="literal">-y</span>  rtmp://<span class="number">10.21</span>.<span class="number">6.12</span>/live/output &amp;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>批量杀包含ffmpeg进程</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ps</span> <span class="literal">-ef</span> | grep ffmpeg | grep <span class="literal">-v</span> grep | cut <span class="literal">-c</span> <span class="number">9</span><span class="literal">-15</span> | xargs <span class="built_in">kill</span> <span class="literal">-9</span></span><br></pre></td></tr></table></figure><h4 id="nginx-rtmp搭建视频点播"><a href="#nginx-rtmp搭建视频点播" class="headerlink" title="nginx+rtmp搭建视频点播"></a>nginx+rtmp搭建视频点播</h4><ul><li>已下载nginx</li><li>下载nginx-rtmp-module</li><li><img src="/2021/11/23/opencv/image-20211123153836430.png" alt="opencv"></li><li>make &amp;&amp; make install</li><li>nginx.conf视频点播服务器配置</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">rtmp &#123;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line"></span><br><span class="line">        listen <span class="number">1935</span>;  <span class="comment">#监听的端口</span></span><br><span class="line"></span><br><span class="line">        chunk_size <span class="number">4000</span>;</span><br><span class="line"></span><br><span class="line">        application hls &#123;  <span class="comment">#rtmp推流请求路径</span></span><br><span class="line">            live on;</span><br><span class="line">            hls on;</span><br><span class="line">            hls_path /usr/local/nginx/html/hls;</span><br><span class="line">            hls_fragment 1s;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    ....</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="ffmpeg推本地摄像头录像到rtmp服务后台"><a href="#ffmpeg推本地摄像头录像到rtmp服务后台" class="headerlink" title="ffmpeg推本地摄像头录像到rtmp服务后台"></a>ffmpeg推本地摄像头录像到rtmp服务后台</h4><p><img src="/2021/11/23/opencv/image-20211123154630135.png" alt="opencv"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.查看摄像头和麦克风信息</span><br><span class="line">ffmpeg -list_devices true -f dshow -i dummy</span><br><span class="line">2.摄像头推流</span><br><span class="line">ffmpeg -f dshow -i video=&quot;HD Camera&quot; -vcodec libx264 -preset:v ultrafast -tune:v zerolatency -f flv rtmp://192.168.17.6:1935/hls/test.mp4</span><br></pre></td></tr></table></figure><h4 id="opencv截取rtmp视频流存放mongodb"><a href="#opencv截取rtmp视频流存放mongodb" class="headerlink" title="opencv截取rtmp视频流存放mongodb"></a>opencv截取rtmp视频流存放mongodb</h4><ul><li>django+celery</li><li><img src="/2021/11/23/opencv/image-20211123154924271.png" alt="opencv"></li><li>views.py</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@action(<span class="params">methods=[<span class="string">&#x27;POST&#x27;</span>], detail=<span class="literal">False</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getVideoStream</span>(<span class="params">self, request, *args, **kwargs</span>):</span></span><br><span class="line">    video_path = request.data.get(<span class="string">&quot;video_path&quot;</span>)</span><br><span class="line">    filename = request.data.get(<span class="string">&quot;filename&quot;</span>)</span><br><span class="line">    end_time = request.data.get(<span class="string">&quot;end_time&quot;</span>)</span><br><span class="line">    filepath = sys.path[<span class="number">0</span>] + <span class="string">&#x27;/model/video/&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(filepath):</span><br><span class="line">        os.mkdir(filepath)</span><br><span class="line">    uuid_str = <span class="built_in">str</span>(uuid.uuid4())</span><br><span class="line">    name = filename + <span class="string">&quot;_&quot;</span> + uuid_str + <span class="string">&quot;.avi&quot;</span> </span><br><span class="line">    path = filepath + name</span><br><span class="line">    <span class="keyword">if</span> video_path <span class="keyword">and</span> filename <span class="keyword">and</span> end_time:</span><br><span class="line">        result = tasks.detect.delay(video_path, end_time, path)</span><br><span class="line">        <span class="keyword">return</span> redirect(<span class="string">&quot;/api/service/result/?id=&#123;&#125;&quot;</span>.<span class="built_in">format</span>(result))</span><br><span class="line">    <span class="keyword">return</span> APIResponse(code=<span class="number">1</span>, msg=<span class="string">&quot;缺少参数&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li>result接口</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@action(<span class="params">methods=[<span class="string">&#x27;GET&#x27;</span>], detail=<span class="literal">False</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">result</span>(<span class="params">self, request, *args, **kwargs</span>):</span></span><br><span class="line">    <span class="built_in">id</span> = request.GET.get(<span class="string">&#x27;id&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">id</span>:</span><br><span class="line">        res = AsyncResult(<span class="built_in">id</span>=<span class="built_in">id</span>, app=app)</span><br><span class="line">        <span class="keyword">if</span> res.successful():</span><br><span class="line">            result = res.result</span><br><span class="line">            <span class="keyword">return</span> APIResponse(code=<span class="number">0</span>, msg=<span class="string">&#x27;执行完成&#x27;</span>, result=<span class="string">&#x27;&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(result))</span><br><span class="line">        <span class="keyword">elif</span> res.status == <span class="string">&#x27;STARTED&#x27;</span>:</span><br><span class="line">            result = res.result</span><br><span class="line">            <span class="keyword">return</span> APIResponse(code=<span class="number">2</span>, msg=<span class="string">&#x27;任务已经开始被执行&#x27;</span>, result=<span class="string">&#x27;&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(result))</span><br><span class="line">        <span class="keyword">elif</span> res.status == <span class="string">&#x27;PENDING&#x27;</span>:</span><br><span class="line">            result = res.result</span><br><span class="line">            <span class="keyword">return</span> APIResponse(code=<span class="number">3</span>, msg=<span class="string">&#x27;任务等待被执行&#x27;</span>, result=<span class="string">&#x27;&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(result))</span><br><span class="line">        <span class="keyword">elif</span> res.failed():</span><br><span class="line">            result = res.result</span><br><span class="line">            <span class="keyword">return</span> APIResponse(code=<span class="number">4</span>, msg=<span class="string">&#x27;执行失败&#x27;</span>, result=<span class="string">&#x27;&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(result))</span><br><span class="line">        <span class="keyword">elif</span> res.status == <span class="string">&#x27;RETRY&#x27;</span>:</span><br><span class="line">            result = res.result</span><br><span class="line">            <span class="keyword">return</span> APIResponse(code=<span class="number">5</span>, msg=<span class="string">&#x27;任务异常后正在重试&#x27;</span>, result=<span class="string">&#x27;&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(result))</span><br><span class="line">    <span class="keyword">return</span> APIResponse(code=<span class="number">1</span>, msg=<span class="string">&#x27;缺少参数&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li>celery.py</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> celery <span class="keyword">import</span> Celery</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">os.environ.setdefault(<span class="string">&quot;DJANGO_SETTINGS_MODULE&quot;</span>, <span class="string">&quot;AlgorithmServer.settings&quot;</span>)</span><br><span class="line"><span class="comment"># broker = &#x27;amqp://foda:foda@2021.@10.21.6.12:5672/myvhost&#x27;</span></span><br><span class="line"><span class="comment"># backend = &#x27;amqp://foda:foda@2021.@10.21.6.12:5672/myvhost&#x27;</span></span><br><span class="line">broker = <span class="string">&#x27;redis://127.0.0.1:6379/1&#x27;</span></span><br><span class="line">backend = <span class="string">&#x27;redis://127.0.0.1:6379/2&#x27;</span></span><br><span class="line">app = Celery(broker=broker, backend=backend,</span><br><span class="line">             include=[<span class="string">&#x27;celery_task.tasks&#x27;</span>])</span><br><span class="line"></span><br><span class="line">app.conf.timezone = <span class="string">&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line">app.conf.enable_utc = <span class="literal">False</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>tasks.py</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">from</span> .celery <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> model.db <span class="keyword">import</span> MongoGridFS</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.task</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">detect</span>(<span class="params">video_path, end_time, path</span>):</span></span><br><span class="line">    cap = cv2.VideoCapture(video_path)</span><br><span class="line">    fps = <span class="built_in">int</span>(cap.get(cv2.CAP_PROP_FPS))</span><br><span class="line">    width = <span class="built_in">int</span>(cap.get(cv2.CAP_PROP_FRAME_WIDTH))</span><br><span class="line">    height = <span class="built_in">int</span>(cap.get(cv2.CAP_PROP_FRAME_HEIGHT))</span><br><span class="line">    </span><br><span class="line">    pos = cap.get(cv2.CAP_PROP_POS_FRAMES)</span><br><span class="line">    end_pos = <span class="built_in">int</span>(end_time) * fps</span><br><span class="line">    fourcc = cv2.VideoWriter_fourcc(<span class="string">&#x27;X&#x27;</span>, <span class="string">&#x27;V&#x27;</span>, <span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27;D&#x27;</span>)</span><br><span class="line">    outfile = cv2.VideoWriter(path, fourcc, fps, (width, height))</span><br><span class="line">    <span class="keyword">while</span> (pos &lt;= end_pos):</span><br><span class="line">        success, frame = cap.read()</span><br><span class="line">        <span class="keyword">if</span> success:</span><br><span class="line">            <span class="comment"># cv2.imshow(&#x27;current frame&#x27;, frame)</span></span><br><span class="line">            outfile.write(frame)</span><br><span class="line">            <span class="keyword">if</span> cv2.waitKey(<span class="number">1</span>) &amp; <span class="number">0xFF</span> == <span class="built_in">ord</span>(<span class="string">&#x27;q&#x27;</span>):</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            pos = cap.get(cv2.CAP_PROP_POS_FRAMES)</span><br><span class="line">            <span class="keyword">if</span> pos &gt;= end_pos:</span><br><span class="line">                gfs = MongoGridFS(<span class="string">&#x27;fs&#x27;</span>, <span class="string">&#x27;video&#x27;</span>)</span><br><span class="line">                db = gfs.connect_db()</span><br><span class="line">                name = gfs.upload_file(db, path)</span><br><span class="line">                <span class="keyword">if</span> name:</span><br><span class="line">                    <span class="keyword">return</span> name</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;&#123;&#125;已存在&quot;</span>.<span class="built_in">format</span>(name)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;error&#x27;</span></span><br><span class="line"></span><br><span class="line">    cap.release()</span><br><span class="line">    outfile.release()</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>安装celery pip3 install celery==4.4.7</li><li>celery worker -A celery_task -l info -P eventlet</li><li>celery worker -A celery_task -l info  -P threads -c 100</li><li>若保存 pip install eventlet</li><li><img src="/2021/11/23/opencv/image-20211123155436340.png" alt="opencv"></li><li>启动django项目</li><li>开启摄像头推流</li><li>请求<img src="/2021/11/23/opencv/image-20211123155653136.png" alt="opencv"></li><li>结果<img src="/2021/11/23/opencv/image-20211123161450930.png" alt="opencv"></li></ul><h4 id="直播推流"><a href="#直播推流" class="headerlink" title="直播推流"></a>直播推流</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> queue</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> cv2 <span class="keyword">as</span> cv</span><br><span class="line"><span class="keyword">import</span> subprocess <span class="keyword">as</span> sp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Live</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.frame_queue = queue.Queue()</span><br><span class="line">        self.command = <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="comment"># 自行设置</span></span><br><span class="line">        self.rtmpUrl = <span class="string">&quot;rtmp://192.168.17.6:1935/hls/lll.mp4&quot;</span></span><br><span class="line">        self.camera_path = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">read_frame</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;开启推流&quot;</span>)</span><br><span class="line">        cap = cv.VideoCapture(self.camera_path)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Get video information</span></span><br><span class="line">        fps = <span class="built_in">int</span>(cap.get(cv.CAP_PROP_FPS))</span><br><span class="line">        width = <span class="built_in">int</span>(cap.get(cv.CAP_PROP_FRAME_WIDTH))</span><br><span class="line">        height = <span class="built_in">int</span>(cap.get(cv.CAP_PROP_FRAME_HEIGHT))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># ffmpeg command</span></span><br><span class="line">        self.command = [<span class="string">&#x27;ffmpeg&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;-y&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;-f&#x27;</span>, <span class="string">&#x27;rawvideo&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;-vcodec&#x27;</span>, <span class="string">&#x27;rawvideo&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;-pix_fmt&#x27;</span>, <span class="string">&#x27;bgr24&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;-s&#x27;</span>, <span class="string">&quot;&#123;&#125;x&#123;&#125;&quot;</span>.<span class="built_in">format</span>(width, height),</span><br><span class="line">                        <span class="string">&#x27;-r&#x27;</span>, <span class="built_in">str</span>(fps),</span><br><span class="line">                        <span class="string">&#x27;-i&#x27;</span>, <span class="string">&#x27;-&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;-c:v&#x27;</span>, <span class="string">&#x27;libx264&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;-pix_fmt&#x27;</span>, <span class="string">&#x27;yuv420p&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;-preset&#x27;</span>, <span class="string">&#x27;ultrafast&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;-f&#x27;</span>, <span class="string">&#x27;flv&#x27;</span>,</span><br><span class="line">                        self.rtmpUrl]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># read webcamera</span></span><br><span class="line">        <span class="keyword">while</span> (cap.isOpened()):</span><br><span class="line">            ret, frame = cap.read()</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> ret:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;Opening camera is failed&quot;</span>)</span><br><span class="line">                <span class="comment"># 说实话这里的break应该替换为：</span></span><br><span class="line">                <span class="comment"># cap = cv.VideoCapture(self.camera_path)</span></span><br><span class="line">                <span class="comment"># 因为我这俩天遇到的项目里出现断流的毛病</span></span><br><span class="line">                <span class="comment"># 特别是拉取rtmp流的时候！！！！</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># put frame into queue</span></span><br><span class="line">            self.frame_queue.put(frame)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">push_frame</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment"># 防止多线程时 command 未被设置</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(self.command) &gt; <span class="number">0</span>:</span><br><span class="line">                <span class="comment"># 管道配置</span></span><br><span class="line">                p = sp.Popen(self.command, stdin=sp.PIPE)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">if</span> self.frame_queue.empty() != <span class="literal">True</span>:</span><br><span class="line">                frame = self.frame_queue.get()</span><br><span class="line">                <span class="comment"># process frame</span></span><br><span class="line">                <span class="comment"># 你处理图片的代码</span></span><br><span class="line">                <span class="comment"># write to pipe</span></span><br><span class="line">                p.stdin.write(frame.tostring())</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line">        threads = [</span><br><span class="line">            threading.Thread(target=Live.read_frame, args=(self,)),</span><br><span class="line">            threading.Thread(target=Live.push_frame, args=(self,))</span><br><span class="line">        ]</span><br><span class="line">        <span class="comment"># [thread.setDaemon(True) for thread in threads]</span></span><br><span class="line">        [thread.start() <span class="keyword">for</span> thread <span class="keyword">in</span> threads]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    l = Live()</span><br><span class="line">    l.run()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="拉流"><a href="#拉流" class="headerlink" title="拉流"></a>拉流</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Producer</span>(<span class="params">threading.Thread</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;docstring for Producer&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, rtmp_str</span>):</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">super</span>(Producer, self).__init__()</span><br><span class="line"></span><br><span class="line">        self.rtmp_str = rtmp_str</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 通过cv2中的类获取视频流操作对象cap</span></span><br><span class="line">        self.cap = cv2.VideoCapture(self.rtmp_str)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 调用cv2方法获取cap的视频帧（帧：每秒多少张图片）</span></span><br><span class="line">        <span class="comment"># fps = self.cap.get(cv2.CAP_PROP_FPS)</span></span><br><span class="line">        self.fps = self.cap.get(cv2.CAP_PROP_FPS)</span><br><span class="line">        <span class="built_in">print</span>(self.fps)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 获取cap视频流的每帧大小</span></span><br><span class="line">        self.width = <span class="built_in">int</span>(self.cap.get(cv2.CAP_PROP_FRAME_WIDTH))</span><br><span class="line">        self.height = <span class="built_in">int</span>(self.cap.get(cv2.CAP_PROP_FRAME_HEIGHT))</span><br><span class="line">        self.size = (self.width, self.height)</span><br><span class="line">        <span class="built_in">print</span>(self.size)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 定义编码格式mpge-4</span></span><br><span class="line">        self.fourcc = cv2.VideoWriter_fourcc(<span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;P&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;2&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 定义视频文件输入对象</span></span><br><span class="line">        self.outVideo = cv2.VideoWriter(<span class="string">&#x27;saveDir1.avi&#x27;</span>, self.fourcc, self.fps, self.size)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;in producer&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        ret, image = self.cap.read()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> ret:</span><br><span class="line">            <span class="comment"># if ret == True:</span></span><br><span class="line"></span><br><span class="line">            self.outVideo.write(image)</span><br><span class="line"></span><br><span class="line">            cv2.imshow(<span class="string">&#x27;video&#x27;</span>, image)</span><br><span class="line"></span><br><span class="line">            cv2.waitKey(<span class="built_in">int</span>(<span class="number">1000</span> / <span class="built_in">int</span>(self.fps)))  <span class="comment"># 延迟</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> cv2.waitKey(<span class="number">1</span>) &amp; <span class="number">0xFF</span> == <span class="built_in">ord</span>(<span class="string">&#x27;q&#x27;</span>):</span><br><span class="line"></span><br><span class="line">                self.outVideo.release()</span><br><span class="line"></span><br><span class="line">                self.cap.release()</span><br><span class="line"></span><br><span class="line">                cv2.destroyAllWindows()</span><br><span class="line"></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">            ret, image = self.cap.read()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;run program&#x27;</span>)</span><br><span class="line">    rtmp_str = <span class="string">&#x27;rtsp://10.21.6.11/video/2.mkv&#x27;</span></span><br><span class="line"></span><br><span class="line">    producer = Producer(rtmp_str)  </span><br><span class="line">    producer.start()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Celery-gt-Flower-gt-Prometheus-gt-Grafana"><a href="#Celery-gt-Flower-gt-Prometheus-gt-Grafana" class="headerlink" title="Celery -&gt; Flower -&gt; Prometheus -&gt; Grafana"></a>Celery -&gt; Flower -&gt; Prometheus -&gt; Grafana</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">1.启动redis服务(celery消息中间件)</span><br><span class="line">docker run --name redis -d -p 6379:6379 redis</span><br><span class="line">2.启动celery服务</span><br><span class="line">celery -A celery_task worker -l info</span><br><span class="line">3.启动flower监控</span><br><span class="line">celery -A celery_task flower</span><br><span class="line">4.配置Prometheus</span><br><span class="line">vim /usr/local/prometheus/prometheus.yml</span><br><span class="line">global:</span><br><span class="line">  scrape_interval:     15s</span><br><span class="line">  evaluation_interval: 15s</span><br><span class="line"></span><br><span class="line">scrape_configs:</span><br><span class="line">  - job_name: prometheus</span><br><span class="line">    static_configs:</span><br><span class="line">      - targets: [&#x27;localhost:9090&#x27;]</span><br><span class="line">  - job_name: flower</span><br><span class="line">    static_configs:</span><br><span class="line">      - targets: [&#x27;localhost:5555&#x27;]</span><br><span class="line">5.docker启动prometheus</span><br><span class="line">docker run --name prometheus -v /usr/local/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml -p 9090:9090 --network host prom/prometheus</span><br><span class="line">6.docker启动Grafana</span><br><span class="line">docker run --name Grafana -d -v grafana-storage:/var/lib/grafana -p 3000:3000 --network host grafana/grafana</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="linux安装opencv问题解决"><a href="#linux安装opencv问题解决" class="headerlink" title="linux安装opencv问题解决"></a>linux安装opencv问题解决</h4><p>centos</p><p><img src="/2021/11/23/opencv/image-20211130174239356.png" alt="image-20211130174239356"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install libSM-1.2.2-2.el7.x86_64 --setopt=protected_multilib=false -y</span><br><span class="line">yum install libXrender-0.9.10-1.el7.x86_64 --setopt=protected_multilib=false -y</span><br><span class="line">yum install libXext-1.3.3-3.el7.x86_64 --setopt=protected_multilib=false -y</span><br></pre></td></tr></table></figure><p>ubuntu</p><p><img src="/2021/11/23/opencv/image-20211223141710233.png" alt="opencv"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">pip install opencv<span class="literal">-python</span> <span class="literal">-i</span> https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">pip install opencv<span class="literal">-contrib</span><span class="literal">-python</span> <span class="literal">-i</span> https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line"></span><br><span class="line">apt<span class="literal">-get</span> update</span><br><span class="line">apt<span class="literal">-get</span> install <span class="literal">-y</span> libgl1<span class="literal">-mesa</span><span class="literal">-dev</span></span><br><span class="line">apt<span class="literal">-get</span> install libgtk2.<span class="number">0</span><span class="literal">-dev</span> pkg<span class="literal">-config</span></span><br></pre></td></tr></table></figure><h4 id="Ubuntu编译opencv支持h264"><a href="#Ubuntu编译opencv支持h264" class="headerlink" title="Ubuntu编译opencv支持h264"></a>Ubuntu编译opencv支持h264</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># https://zhuanlan.zhihu.com/p/113666046（下载conda脚本安装对应python版本）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译opencv遇到的问题</span></span><br><span class="line"><span class="comment"># pip install </span></span><br><span class="line">root@f9469a74f572:/home<span class="comment"># python -c &#x27;import cv2&#x27;</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;string&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  File <span class="string">&quot;/root/anaconda3/lib/python3.7/site-packages/cv2/__init__.py&quot;</span>, line <span class="number">8</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    from .cv2 import *</span><br><span class="line">ImportError: libhdf5_serial.so.<span class="number">100</span>: cannot open shared object file: No such file or directory</span><br><span class="line"></span><br><span class="line"><span class="comment"># https://stackoverflow.com/questions/48965309/h5py-import-error-on-libhdf5-serial-so-100 （下载依赖）</span></span><br><span class="line">apt<span class="literal">-get</span> update</span><br><span class="line">apt<span class="literal">-get</span> install libhdf5<span class="literal">-dev</span></span><br><span class="line">apt<span class="literal">-get</span> install libhdf5<span class="literal">-serial</span><span class="literal">-dev</span></span><br><span class="line"></span><br><span class="line">apt<span class="literal">-get</span> install libcblas<span class="literal">-dev</span></span><br><span class="line"><span class="comment"># 问题</span></span><br><span class="line">Package libcblas<span class="literal">-dev</span> is not available, but is referred to by another package.</span><br><span class="line">This may mean that the package is missing, has been obsoleted, or</span><br><span class="line">is only available from another source</span><br><span class="line">However the following packages replace it:</span><br><span class="line">  libatlas<span class="literal">-base</span><span class="literal">-dev</span></span><br><span class="line"></span><br><span class="line">apt<span class="literal">-get</span> install libatlas<span class="literal">-base</span><span class="literal">-dev</span></span><br><span class="line"></span><br><span class="line">apt<span class="literal">-get</span> install libjasper<span class="literal">-dev</span></span><br><span class="line"><span class="comment"># 问题</span></span><br><span class="line">Unable to locate package libjasper<span class="literal">-dev</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解决</span></span><br><span class="line">apt<span class="literal">-get</span> install software<span class="literal">-properties</span><span class="literal">-common</span></span><br><span class="line"><span class="built_in">add-apt</span><span class="literal">-repository</span> <span class="string">&quot;deb http://security.ubuntu.com/ubuntu xenial-security main&quot;</span></span><br><span class="line">apt<span class="literal">-get</span> update</span><br><span class="line"></span><br><span class="line">apt<span class="literal">-get</span> install libjasper<span class="literal">-dev</span> </span><br><span class="line">apt<span class="literal">-get</span> install libqtgui4 </span><br><span class="line">apt<span class="literal">-get</span> install libqt4<span class="literal">-test</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 问题</span></span><br><span class="line">root@f9469a74f572:/home<span class="comment"># python -c &#x27;import cv2&#x27;</span></span><br><span class="line"></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;string&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  File <span class="string">&quot;/root/anaconda3/lib/python3.7/site-packages/cv2/__init__.py&quot;</span>, line <span class="number">8</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    from .cv2 import *</span><br><span class="line">ImportError: libtesseract.so.<span class="number">4</span>: cannot open shared object file: No such file or directory</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解决 https://askubuntu.com/questions/1108884/ubuntu-18-04-error-install-tesseract</span></span><br><span class="line"></span><br><span class="line">apt install libtesseract<span class="literal">-dev</span> libleptonica<span class="literal">-dev</span> liblept5</span><br><span class="line">apt install tesseract<span class="literal">-ocr</span> <span class="literal">-y</span></span><br><span class="line"><span class="comment"># 问题</span></span><br><span class="line">root@f9469a74f572:/home<span class="comment"># python -c &#x27;import cv2&#x27;</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;string&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  File <span class="string">&quot;/root/anaconda3/lib/python3.7/site-packages/cv2/__init__.py&quot;</span>, line <span class="number">8</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    from .cv2 import *</span><br><span class="line">ImportError: libdc1394.so.<span class="number">22</span>: cannot open shared object file: No such file or directory</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解决 https://blog.csdn.net/u013171226/article/details/122035605</span></span><br><span class="line">apt<span class="literal">-get</span> install libgtk2.<span class="number">0</span><span class="literal">-0</span> </span><br><span class="line">apt<span class="literal">-get</span> install libdc1394<span class="literal">-22</span><span class="literal">-dev</span></span><br><span class="line"></span><br><span class="line">root@f9469a74f572:/home<span class="comment"># python -c &#x27;import cv2&#x27;</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;string&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  File <span class="string">&quot;/root/anaconda3/lib/python3.7/site-packages/cv2/__init__.py&quot;</span>, line <span class="number">8</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    from .cv2 import *</span><br><span class="line">ImportError: libgstbase<span class="literal">-1</span>.<span class="number">0</span>.so.<span class="number">0</span>: cannot open shared object file: No such file or directory</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解决</span></span><br><span class="line">root@f9469a74f572:/usr/lib/x86_64<span class="literal">-linux</span><span class="literal">-gnu</span><span class="comment"># apt-get install libgstreamer1.0-0</span></span><br><span class="line">Reading package lists... Done</span><br><span class="line">Building dependency tree</span><br><span class="line">Reading state information... Done</span><br><span class="line">The following additional packages will be installed:</span><br><span class="line">  libcap2 libcap2<span class="literal">-bin</span> libpam<span class="literal">-cap</span></span><br><span class="line">需要先安装 libcap2 libcap2<span class="literal">-bin</span> libpam<span class="literal">-cap</span> 三个包再安装libgstreamer1.<span class="number">0</span><span class="literal">-0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 问题</span></span><br><span class="line">root@f9469a74f572:/home<span class="comment"># python -c &#x27;import cv2&#x27;</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;string&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  File <span class="string">&quot;/root/anaconda3/lib/python3.7/site-packages/cv2/__init__.py&quot;</span>, line <span class="number">8</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    from .cv2 import *</span><br><span class="line">ImportError: libgstapp<span class="literal">-1</span>.<span class="number">0</span>.so.<span class="number">0</span>: cannot open shared object file: No such file or directory</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解决</span></span><br><span class="line"></span><br><span class="line">apt<span class="literal">-get</span> -<span class="literal">-reinstall</span> install libgstreamer<span class="literal">-plugins</span><span class="literal">-base1</span>.<span class="number">0</span><span class="literal">-0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 问题</span></span><br><span class="line">root@f9469a74f572:/home<span class="comment"># python -c &#x27;import cv2&#x27;</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;string&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  File <span class="string">&quot;/root/anaconda3/lib/python3.7/site-packages/cv2/__init__.py&quot;</span>, line <span class="number">8</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    from .cv2 import *</span><br><span class="line">ImportError: libavcodec.so.<span class="number">57</span>: cannot open shared object file: No such file or directory</span><br><span class="line"></span><br><span class="line">解决</span><br><span class="line">apt<span class="literal">-get</span> install  libavcodec<span class="literal">-dev</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 问题</span></span><br><span class="line">root@f9469a74f572:/<span class="comment"># python -c &#x27;import cv2&#x27;</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;string&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  File <span class="string">&quot;/root/anaconda3/lib/python3.7/site-packages/cv2/__init__.py&quot;</span>, line <span class="number">8</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    from .cv2 import *</span><br><span class="line">ImportError: libavformat.so.<span class="number">57</span>: cannot open shared object file: No such file or directory</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解决</span></span><br><span class="line">apt<span class="literal">-get</span> install libav<span class="built_in">format-dev</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 问题</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;string&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  File <span class="string">&quot;/opt/conda/lib/python3.7/site-packages/cv2/__init__.py&quot;</span>, line <span class="number">8</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    from .cv2 import *</span><br><span class="line">ImportError: libswscale.so.<span class="number">4</span>: cannot open shared object file: No such file or directory</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解决</span></span><br><span class="line">apt<span class="literal">-get</span> install libswscale<span class="literal">-dev</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 问题</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;string&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  File <span class="string">&quot;/root/anaconda3/lib/python3.7/site-packages/cv2/__init__.py&quot;</span>, line <span class="number">8</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    from .cv2 import *</span><br><span class="line">ImportError: libgtk<span class="literal">-3</span>.so.<span class="number">0</span>: cannot open shared object file: No such file or directory</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解决</span></span><br><span class="line">apt install libgtk<span class="literal">-3</span><span class="literal">-dev</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 问题</span></span><br><span class="line">root@f9469a74f572:~/anaconda3/lib/python3.<span class="number">7</span>/site<span class="literal">-packages</span><span class="comment"># python -c &#x27;import cv2&#x27;</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;string&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  File <span class="string">&quot;/root/anaconda3/lib/python3.7/site-packages/cv2/__init__.py&quot;</span>, line <span class="number">8</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    from .cv2 import *</span><br><span class="line">ImportError: /root/anaconda3/bin/../lib/./libharfbuzz.so.<span class="number">0</span>: undefined symbol: FT_Done_MM_Var</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解决</span></span><br><span class="line"><span class="built_in">rm</span> <span class="literal">-rf</span> /root/anaconda3/bin/../lib/./libharfbuzz.so.<span class="number">0</span></span><br><span class="line"><span class="built_in">cp</span> /usr/lib/x86_64<span class="literal">-linux</span><span class="literal">-gnu</span>/libharfbuzz.so.<span class="number">0</span>  /root/anaconda3/bin/../lib/./</span><br><span class="line"></span><br><span class="line"><span class="comment"># 问题 (解决方案同上)</span></span><br><span class="line">root@f9469a74f572:~/anaconda3/lib<span class="comment"># python -c &#x27;import cv2&#x27;</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;string&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  File <span class="string">&quot;/root/anaconda3/lib/python3.7/site-packages/cv2/__init__.py&quot;</span>, line <span class="number">8</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    from .cv2 import *</span><br><span class="line">ImportError: /root/anaconda3/bin/../lib/libfontconfig.so.<span class="number">1</span>: undefined symbol: FT_Done_MM_Var</span><br><span class="line"></span><br><span class="line"> <span class="comment"># ubtntu容器pip清华园下载报错</span></span><br><span class="line">pip install <span class="literal">-r</span> requirements.txt <span class="literal">-i</span> http://mirrors.aliyun.com/pypi/simple -<span class="literal">-trusted</span><span class="literal">-host</span> mirrors.aliyun.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解决docker容器内Ubuntu系统语言中文乱码问题</span></span><br><span class="line">locale <span class="comment"># 查看当前系统语言环境</span></span><br><span class="line">root@f9469a74f572:/<span class="comment"># locale</span></span><br><span class="line">LANG=</span><br><span class="line">LANGUAGE=</span><br><span class="line">LC_CTYPE=<span class="string">&quot;POSIX&quot;</span></span><br><span class="line">LC_NUMERIC=<span class="string">&quot;POSIX&quot;</span></span><br><span class="line">LC_TIME=<span class="string">&quot;POSIX&quot;</span></span><br><span class="line">LC_COLLATE=<span class="string">&quot;POSIX&quot;</span></span><br><span class="line">LC_MONETARY=<span class="string">&quot;POSIX&quot;</span></span><br><span class="line">LC_MESSAGES=<span class="string">&quot;POSIX&quot;</span></span><br><span class="line">LC_PAPER=<span class="string">&quot;POSIX&quot;</span></span><br><span class="line">LC_NAME=<span class="string">&quot;POSIX&quot;</span></span><br><span class="line">LC_ADDRESS=<span class="string">&quot;POSIX&quot;</span></span><br><span class="line">LC_TELEPHONE=<span class="string">&quot;POSIX&quot;</span></span><br><span class="line">LC_MEASUREMENT=<span class="string">&quot;POSIX&quot;</span></span><br><span class="line">LC_IDENTIFICATION=<span class="string">&quot;POSIX&quot;</span></span><br><span class="line">LC_ALL=</span><br><span class="line"></span><br><span class="line">locale <span class="literal">-a</span> <span class="comment"># 查看当前系统可用语言环境</span></span><br><span class="line">root@f9469a74f572:/<span class="comment"># locale -a</span></span><br><span class="line">C</span><br><span class="line">C.UTF<span class="literal">-8</span></span><br><span class="line">POSIX</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加系统语言</span></span><br><span class="line">locale<span class="literal">-gen</span> en_US.UTF<span class="literal">-8</span></span><br><span class="line">bash: locale<span class="literal">-gen</span>: command not found</span><br><span class="line">apt<span class="literal">-get</span> install <span class="literal">-y</span> locales</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;export LC_ALL=en_US.UTF-8&quot;</span> &gt;&gt; /root/.bashrc</span><br><span class="line">source /etc/profile</span><br><span class="line">source /root/.bashrc</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解决（先删除容器内系统语言环境，从宿主机复制语言环境到容器内，建议不要覆盖）</span></span><br><span class="line"><span class="built_in">rm</span> <span class="literal">-rf</span> /usr/share/locale/</span><br><span class="line">docker <span class="built_in">cp</span> /usr/share/locale/ 容器名:/usr/share/locale/</span><br><span class="line">docker <span class="built_in">cp</span> /usr/share/i18n/ 容器名:/usr/share/i18n/</span><br><span class="line"></span><br><span class="line"><span class="comment"># conda</span></span><br><span class="line">/root/anaconda3/lib/python3.<span class="number">7</span>/site<span class="literal">-packages</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;rtsp后台视频流搭建&quot;&gt;&lt;a href=&quot;#rtsp后台视频流搭建&quot; class=&quot;headerlink&quot; title=&quot;rtsp后台视频流搭建&quot;&gt;&lt;/a&gt;rtsp后台视频流搭建&lt;/h4&gt;&lt;img src=&quot;/2021/11/23/opencv/image-20</summary>
      
    
    
    
    
    <category term="opencv" scheme="http://example.com/tags/opencv/"/>
    
  </entry>
  
  <entry>
    <title>restframework</title>
    <link href="http://example.com/2021/10/25/restframework/"/>
    <id>http://example.com/2021/10/25/restframework/</id>
    <published>2021-10-25T06:11:22.000Z</published>
    <updated>2022-11-11T09:09:13.443Z</updated>
    
    <content type="html"><![CDATA[<h4 id="RESTful规范"><a href="#RESTful规范" class="headerlink" title="RESTful规范"></a>RESTful规范</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">REST与技术无关，代表的是一种软件架构风格，REST是Representational State Transfer的简称，中文翻译为“表征状态转移”</span><br></pre></td></tr></table></figure><h4 id="RESTful-API设计"><a href="#RESTful-API设计" class="headerlink" title="RESTful API设计"></a>RESTful API设计</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">-<span class="number">1</span>  数据的安全保障：url链接一般都采用https协议进行传输</span><br><span class="line">https://api.example.com                         尽量将API部署在专用域名（会存在跨域问题）</span><br><span class="line">https://example.org/api/                        API很简单</span><br><span class="line"></span><br><span class="line">    -<span class="number">2</span>  接口特征表现：api关键字标识</span><br><span class="line">    -https://api.baidu.com/books/</span><br><span class="line">        -https://www.baidu.com/api/books/</span><br><span class="line">    -<span class="number">3</span> 多版本共存：url链接中标识接口版本</span><br><span class="line">    -https://api.baidu.com/v1/books/</span><br><span class="line">-https://api.baidu.com/v2/books/</span><br><span class="line">    -<span class="number">4</span> 数据即是资源，均使用名词（可复数）***********</span><br><span class="line">    -接口一般都是完成前后台数据的交互，交互的数据我们称之为资源</span><br><span class="line">        -一般提倡用资源的复数形式,不要使用动词</span><br><span class="line">        -查询所有图书</span><br><span class="line">        -https://api.baidu.com/books/</span><br><span class="line">            -https://api.baidu.com/get_all_books/ <span class="comment"># 错误示范</span></span><br><span class="line">            -https://api.baidu.com/delete-user    <span class="comment"># 错误的示范</span></span><br><span class="line">            -https://api.baidu.com/user           <span class="comment"># 删除用户的示例：疑问：到底是删还是查？</span></span><br><span class="line">                </span><br><span class="line">   -<span class="number">5</span> 资源操作由请求方式决定：</span><br><span class="line">https://api.baidu.com/books       - get请求：获取所有书</span><br><span class="line">        https://api.baidu.com/books/<span class="number">1</span>     - get请求：获取主键为<span class="number">1</span>的书</span><br><span class="line">        https://api.baidu.com/books       - post请求：新增一本书书</span><br><span class="line">        https://api.baidu.com/books/<span class="number">1</span>     - put请求：整体修改主键为<span class="number">1</span>的书</span><br><span class="line">        https://api.baidu.com/books/<span class="number">1</span>     - patch请求：局部修改主键为<span class="number">1</span>的书</span><br><span class="line">        https://api.baidu.com/books/<span class="number">1</span>     - delete请求：删除主键为<span class="number">1</span>的书</span><br><span class="line">            </span><br><span class="line">   -<span class="number">6</span> 过滤，通过在url上传参的形式传递搜索条件</span><br><span class="line">        https://api.example.com/v1/zoos?limit=<span class="number">10</span>         ：指定返回记录的数量</span><br><span class="line">        https://api.example.com/v1/zoos?offset=<span class="number">10</span>&amp;limit=<span class="number">3</span>：指定返回记录的开始位置</span><br><span class="line">        https://api.example.com/v1/zoos?page=<span class="number">2</span>&amp;per_page=<span class="number">100</span>：指定第几页，以及每页的记录数</span><br><span class="line">        https://api.example.com/v1/zoos?sortby=name&amp;order=asc：指定返回结果按照哪个属性排序，以及排序顺序</span><br><span class="line">        https://api.example.com/v1/zoos?animal_type_id=<span class="number">1</span>：指定筛选条件</span><br><span class="line">            </span><br><span class="line">   -<span class="number">7</span>  响应状态码</span><br><span class="line">    <span class="number">200</span> OK - [GET]：服务器成功返回用户请求的数据，该操作是幂等的（Idempotent）。</span><br><span class="line">    <span class="number">201</span> CREATED - [POST/PUT/PATCH]：用户新建或修改数据成功。</span><br><span class="line">    <span class="number">202</span> Accepted - [*]：表示一个请求已经进入后台排队（异步任务）</span><br><span class="line">    <span class="number">204</span> NO CONTENT - [DELETE]：用户删除数据成功。</span><br><span class="line">    <span class="number">400</span> INVALID REQUEST - [POST/PUT/PATCH]：用户发出的请求有错误，服务器没有进行新建或修改数据的操作，该操作是幂等的。</span><br><span class="line">    <span class="number">401</span> Unauthorized - [*]：表示用户没有权限（令牌、用户名、密码错误）。</span><br><span class="line">    <span class="number">403</span> Forbidden - [*] 表示用户得到授权（与<span class="number">401</span>错误相对），但是访问是被禁止的。</span><br><span class="line">    <span class="number">404</span> NOT FOUND - [*]：用户发出的请求针对的是不存在的记录，服务器没有进行操作，该操作是幂等的。</span><br><span class="line">    <span class="number">406</span> Not Acceptable - [GET]：用户请求的格式不可得（比如用户请求JSON格式，但是只有XML格式）。</span><br><span class="line">    <span class="number">410</span> Gone -[GET]：用户请求的资源被永久删除，且不会再得到的。</span><br><span class="line">    <span class="number">422</span> Unprocesable entity - [POST/PUT/PATCH] 当创建一个对象时，发生一个验证错误。</span><br><span class="line">    <span class="number">500</span> INTERNAL SERVER ERROR - [*]：服务器发生错误，用户将无法判断发出的请求是否成功。</span><br><span class="line"></span><br><span class="line">更多看这里：http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html</span><br><span class="line">-返回数据中带状态码</span><br><span class="line">-&#123;<span class="string">&#x27;code&#x27;</span>:<span class="number">100</span>&#125;</span><br><span class="line">   -<span class="number">8</span> 返回结果中带错误信息</span><br><span class="line">-&#123;<span class="string">&#x27;code&#x27;</span>:<span class="number">100</span>,<span class="string">&#x27;msg&#x27;</span>:<span class="string">&#x27;因为xx原因失败&#x27;</span>&#125;</span><br><span class="line">   -<span class="number">9</span> 返回结果，该符合以下规范</span><br><span class="line">GET /collection：返回资源对象的列表（数组）</span><br><span class="line">        GET /collection/resource：返回单个资源对象（字典）</span><br><span class="line">        POST /collection：返回新生成的资源对象    （新增后的对象字典）</span><br><span class="line">        PUT /collection/resource：返回完整的资源对象 （修改后的对象字典）</span><br><span class="line">        PATCH /collection/resource：返回完整的资源对象 （修改后的对象字典）</span><br><span class="line">        DELETE /collection/resource：返回一个空文档   （）</span><br><span class="line">        </span><br><span class="line">   -<span class="number">10</span> 返回的数据中带链接地址</span><br><span class="line">-查询<span class="built_in">id</span>为<span class="number">1</span>的图书接口，返回结果示例</span><br><span class="line">    &#123;<span class="string">&#x27;code&#x27;</span>:<span class="number">100</span>,</span><br><span class="line">         <span class="string">&#x27;msg&#x27;</span>:<span class="string">&#x27;成功&#x27;</span>,</span><br><span class="line">         <span class="string">&#x27;result&#x27;</span>:</span><br><span class="line">             &#123;<span class="string">&#x27;title&#x27;</span>:<span class="string">&#x27;金瓶梅&#x27;</span>,</span><br><span class="line">              <span class="string">&#x27;price&#x27;</span>:<span class="number">12.3</span>,</span><br><span class="line">              <span class="string">&#x27;publish&#x27;</span>:<span class="string">&#x27;https://127.0.0.1/api/v1/publish/3&#x27;</span></span><br><span class="line">             &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h4 id="APIview源码分析"><a href="#APIview源码分析" class="headerlink" title="APIview源码分析"></a>APIview源码分析</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> APIview的as_view</span><br><span class="line">-内部还是执行了View的闭包函数view</span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">as_view</span>(<span class="params">cls, **initkwargs</span>):</span></span><br><span class="line">        view = <span class="built_in">super</span>().as_view(**initkwargs)</span><br><span class="line">        view.cls = cls</span><br><span class="line">        view.initkwargs = initkwargs</span><br><span class="line">        <span class="keyword">return</span> csrf_exempt(view)  -禁用掉了csrf</span><br><span class="line"><span class="number">2</span> 原生View类中过的as_view中的闭包函数view</span><br><span class="line">-本质执行了self.dispatch(request, *args, **kwargs)，执行的是APIView的dispatch</span><br><span class="line"><span class="number">3</span> APIView的dispatch</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">dispatch</span>(<span class="params">self, request, *args, **kwargs</span>):</span></span><br><span class="line">        <span class="comment"># DRF的Request类的对象，内部有request._request,是原生request</span></span><br><span class="line">        request = self.initialize_request(request, *args, **kwargs)</span><br><span class="line">        self.request = request</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            self.initial(request, *args, **kwargs)</span><br><span class="line">            <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">            #认证，权限，频率</span></span><br><span class="line"><span class="string">            self.perform_authentication(request)</span></span><br><span class="line"><span class="string">        self.check_permissions(request)</span></span><br><span class="line"><span class="string">        self.check_throttles(request)</span></span><br><span class="line"><span class="string">            &#x27;&#x27;&#x27;</span></span><br><span class="line">            <span class="keyword">if</span> request.method.lower() <span class="keyword">in</span> self.http_method_names:</span><br><span class="line">                handler = <span class="built_in">getattr</span>(self, request.method.lower(),</span><br><span class="line">                                  self.http_method_not_allowed)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                handler = self.http_method_not_allowed</span><br><span class="line"></span><br><span class="line">            response = handler(request, *args, **kwargs)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> exc:</span><br><span class="line">            <span class="comment"># 全局的异常捕获</span></span><br><span class="line">            response = self.handle_exception(exc)</span><br><span class="line"><span class="comment"># 把视图函数(类)返回的response，又包装了一下</span></span><br><span class="line">        self.response = self.finalize_response(request, response, *args, **kwargs)</span><br><span class="line">        <span class="keyword">return</span> self.response</span><br></pre></td></tr></table></figure><h4 id="请求和响应"><a href="#请求和响应" class="headerlink" title="请求和响应"></a>请求和响应</h4><p><code>请求对象</code></p><ul><li>REST framework 引入了一个<code>Request</code>扩展常规的对象<code>HttpRequest</code>，并提供更灵活的请求解析。对象的核心功能<code>Request</code>是<code>request.data</code>属性，它类似于<code>request.POST</code>，但对于使用 Web API 更有用</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">request.POST  <span class="comment"># Only handles form data.  Only works for &#x27;POST&#x27; method.</span></span><br><span class="line">request.data  <span class="comment"># Handles arbitrary data.  Works for &#x27;POST&#x27;, &#x27;PUT&#x27; and &#x27;PATCH&#x27; methods.</span></span><br><span class="line">request.FILES</span><br></pre></td></tr></table></figure><p><code>响应对象</code></p><ul><li>REST 框架还引入了一个<code>Response</code>对象，它是一种<code>TemplateResponse</code>接受未渲染内容并使用内容协商来确定返回给客户端的正确内容类型的类型</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> Response(data)  <span class="comment"># Renders to content type as requested by the client.</span></span><br></pre></td></tr></table></figure><p><code>封装响应</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework.response <span class="keyword">import</span> Response</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">APIResponse</span>(<span class="params">Response</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, code=<span class="number">0</span>, msg=<span class="string">&#x27;&#x27;</span>, status=<span class="literal">None</span>, result=<span class="literal">None</span>, headers=<span class="literal">None</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">                 content_type=<span class="literal">None</span>, **kwargs</span>):</span></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;code&#x27;</span>: code,</span><br><span class="line">            <span class="string">&#x27;msg&#x27;</span>: msg</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> result:</span><br><span class="line">            data[<span class="string">&#x27;result&#x27;</span>] = result</span><br><span class="line">        data.update(kwargs)</span><br><span class="line">        Response.__init__(self, data=data, status=status, headers=headers, content_type=content_type)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="包装API视图"><a href="#包装API视图" class="headerlink" title="包装API视图"></a>包装API视图</h4><h5 id="api-view"><a href="#api-view" class="headerlink" title="@api_view"></a><code>@api_view</code></h5><ul><li>1.<code>@api_view</code>用于处理基于函数的视图的装饰器</li><li>2 <code>APIView</code>用于处理基于类的视图的类</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> status</span><br><span class="line"><span class="keyword">from</span> rest_framework.decorators <span class="keyword">import</span> api_view</span><br><span class="line"><span class="keyword">from</span> rest_framework.response <span class="keyword">import</span> Response</span><br><span class="line"><span class="keyword">from</span> snippets.models <span class="keyword">import</span> Snippet</span><br><span class="line"><span class="keyword">from</span> snippets.serializers <span class="keyword">import</span> SnippetSerializer</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@api_view(<span class="params">[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">snippet_list</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    List all code snippets, or create a new snippet.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;GET&#x27;</span>:</span><br><span class="line">        snippets = Snippet.objects.<span class="built_in">all</span>()</span><br><span class="line">        serializer = SnippetSerializer(snippets, many=<span class="literal">True</span>)</span><br><span class="line">        <span class="keyword">return</span> Response(serializer.data)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">elif</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        serializer = SnippetSerializer(data=request.data)</span><br><span class="line">        <span class="keyword">if</span> serializer.is_valid():</span><br><span class="line">            serializer.save()</span><br><span class="line">            <span class="keyword">return</span> Response(serializer.data, status=status.HTTP_201_CREATED)</span><br><span class="line">        <span class="keyword">return</span> Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="meta">@api_view(<span class="params">[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;PUT&#x27;</span>, <span class="string">&#x27;DELETE&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">snippet_detail</span>(<span class="params">request, pk</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Retrieve, update or delete a code snippet.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        snippet = Snippet.objects.get(pk=pk)</span><br><span class="line">    <span class="keyword">except</span> Snippet.DoesNotExist:</span><br><span class="line">        <span class="keyword">return</span> Response(status=status.HTTP_404_NOT_FOUND)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;GET&#x27;</span>:</span><br><span class="line">        serializer = SnippetSerializer(snippet)</span><br><span class="line">        <span class="keyword">return</span> Response(serializer.data)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">elif</span> request.method == <span class="string">&#x27;PUT&#x27;</span>:</span><br><span class="line">        serializer = SnippetSerializer(snippet, data=request.data)</span><br><span class="line">        <span class="keyword">if</span> serializer.is_valid():</span><br><span class="line">            serializer.save()</span><br><span class="line">            <span class="keyword">return</span> Response(serializer.data)</span><br><span class="line">        <span class="keyword">return</span> Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">elif</span> request.method == <span class="string">&#x27;DELETE&#x27;</span>:</span><br><span class="line">        snippet.delete()</span><br><span class="line">        <span class="keyword">return</span> Response(status=status.HTTP_204_NO_CONTENT)</span><br></pre></td></tr></table></figure><ul><li>urls.py</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> rest_framework.urlpatterns <span class="keyword">import</span> format_suffix_patterns</span><br><span class="line"><span class="keyword">from</span> snippets <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;snippets/&#x27;</span>, views.snippet_list),</span><br><span class="line">    path(<span class="string">&#x27;snippets/&lt;int:pk&gt;&#x27;</span>, views.snippet_detail),</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">urlpatterns = format_suffix_patterns(urlpatterns)</span><br></pre></td></tr></table></figure><h5 id="APIView"><a href="#APIView" class="headerlink" title="APIView"></a><code>APIView</code></h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> snippets.models <span class="keyword">import</span> Snippet</span><br><span class="line"><span class="keyword">from</span> snippets.serializers <span class="keyword">import</span> SnippetSerializer</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> Http404</span><br><span class="line"><span class="keyword">from</span> rest_framework.views <span class="keyword">import</span> APIView</span><br><span class="line"><span class="keyword">from</span> rest_framework.response <span class="keyword">import</span> Response</span><br><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> status</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SnippetList</span>(<span class="params">APIView</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    List all snippets, or create a new snippet.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span>(<span class="params">self, request, <span class="built_in">format</span>=<span class="literal">None</span></span>):</span></span><br><span class="line">        snippets = Snippet.objects.<span class="built_in">all</span>()</span><br><span class="line">        serializer = SnippetSerializer(snippets, many=<span class="literal">True</span>)</span><br><span class="line">        <span class="keyword">return</span> Response(serializer.data)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span>(<span class="params">self, request, <span class="built_in">format</span>=<span class="literal">None</span></span>):</span></span><br><span class="line">        serializer = SnippetSerializer(data=request.data)</span><br><span class="line">        <span class="keyword">if</span> serializer.is_valid():</span><br><span class="line">            serializer.save()</span><br><span class="line">            <span class="keyword">return</span> Response(serializer.data, status=status.HTTP_201_CREATED)</span><br><span class="line">        <span class="keyword">return</span> Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SnippetDetail</span>(<span class="params">APIView</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Retrieve, update or delete a snippet instance.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_object</span>(<span class="params">self, pk</span>):</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">return</span> Snippet.objects.get(pk=pk)</span><br><span class="line">        <span class="keyword">except</span> Snippet.DoesNotExist:</span><br><span class="line">            <span class="keyword">raise</span> Http404</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span>(<span class="params">self, request, pk, <span class="built_in">format</span>=<span class="literal">None</span></span>):</span></span><br><span class="line">        snippet = self.get_object(pk)</span><br><span class="line">        serializer = SnippetSerializer(snippet)</span><br><span class="line">        <span class="keyword">return</span> Response(serializer.data)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">put</span>(<span class="params">self, request, pk, <span class="built_in">format</span>=<span class="literal">None</span></span>):</span></span><br><span class="line">        snippet = self.get_object(pk)</span><br><span class="line">        serializer = SnippetSerializer(snippet, data=request.data)</span><br><span class="line">        <span class="keyword">if</span> serializer.is_valid():</span><br><span class="line">            serializer.save()</span><br><span class="line">            <span class="keyword">return</span> Response(serializer.data)</span><br><span class="line">        <span class="keyword">return</span> Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete</span>(<span class="params">self, request, pk, <span class="built_in">format</span>=<span class="literal">None</span></span>):</span></span><br><span class="line">        snippet = self.get_object(pk)</span><br><span class="line">        snippet.delete()</span><br><span class="line">        <span class="keyword">return</span> Response(status=status.HTTP_204_NO_CONTENT)</span><br></pre></td></tr></table></figure><ul><li>urls.py</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> rest_framework.urlpatterns <span class="keyword">import</span> format_suffix_patterns</span><br><span class="line"><span class="keyword">from</span> snippets <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;snippets/&#x27;</span>, views.SnippetList.as_view()),</span><br><span class="line">    path(<span class="string">&#x27;snippets/&lt;int:pk&gt;/&#x27;</span>, views.SnippetDetail.as_view()),</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">urlpatterns = format_suffix_patterns(urlpatterns)</span><br></pre></td></tr></table></figure><h5 id="GenericAPIView"><a href="#GenericAPIView" class="headerlink" title="GenericAPIView"></a><code>GenericAPIView</code></h5><p>提供的每个具体通用视图都是通过将<code>GenericAPIView</code>, 与一个或多个 mixin 类组合起来的</p><ul><li><code>queryset</code>- 应该用于从此视图返回对象的查询集。通常，您必须设置此属性或覆盖该<code>get_queryset()</code>方法。如果您要覆盖视图方法，请务必调用<code>get_queryset()</code>而不是直接访问此属性，因为<code>queryset</code>它将被评估一次，并且这些结果将被缓存以供所有后续请求使用。</li><li><code>serializer_class</code>- 应该用于验证和反序列化输入以及序列化输出的序列化程序类。通常，您必须设置此属性或覆盖该<code>get_serializer_class()</code>方法。</li><li><code>lookup_field</code>- 用于执行单个模型实例的对象查找的模型字段。默认为<code>&#39;pk&#39;</code>. 请注意，在使用超链接 API 时，如果您需要使用自定义值，您需要确保API 视图*和序列化程序类都设置了查找字段。</li><li><code>lookup_url_kwarg</code>- 用于对象查找的 URL 关键字参数。URL conf 应包含与此值对应的关键字参数。如果未设置，则默认使用与 相同的值<code>lookup_field</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> snippets.models <span class="keyword">import</span> Snippet</span><br><span class="line"><span class="keyword">from</span> snippets.serializers <span class="keyword">import</span> SnippetSerializer</span><br><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> mixins</span><br><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> generics</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SnippetList</span>(<span class="params">mixins.ListModelMixin,</span></span></span><br><span class="line"><span class="params"><span class="class">                  mixins.CreateModelMixin,</span></span></span><br><span class="line"><span class="params"><span class="class">                  generics.GenericAPIView</span>):</span></span><br><span class="line">    queryset = Snippet.objects.<span class="built_in">all</span>()</span><br><span class="line">    serializer_class = SnippetSerializer</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span>(<span class="params">self, request, *args, **kwargs</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.<span class="built_in">list</span>(request, *args, **kwargs)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span>(<span class="params">self, request, *args, **kwargs</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.create(request, *args, **kwargs)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SnippetDetail</span>(<span class="params">mixins.RetrieveModelMixin,</span></span></span><br><span class="line"><span class="params"><span class="class">                    mixins.UpdateModelMixin,</span></span></span><br><span class="line"><span class="params"><span class="class">                    mixins.DestroyModelMixin,</span></span></span><br><span class="line"><span class="params"><span class="class">                    generics.GenericAPIView</span>):</span></span><br><span class="line">    queryset = Snippet.objects.<span class="built_in">all</span>()</span><br><span class="line">    serializer_class = SnippetSerializer</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span>(<span class="params">self, request, *args, **kwargs</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.retrieve(request, *args, **kwargs)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">put</span>(<span class="params">self, request, *args, **kwargs</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.update(request, *args, **kwargs)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete</span>(<span class="params">self, request, *args, **kwargs</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.destroy(request, *args, **kwargs)</span><br></pre></td></tr></table></figure><h5 id="九个视图类"><a href="#九个视图类" class="headerlink" title="九个视图类"></a><code>九个视图类</code></h5><ul><li>使用 mixin 类，我们重写了视图以使用比以前略少的代码，但我们可以更进一步。REST 框架提供了一组已经混合的通用视图，我们可以使用它们来进一步精简我们的<code>views.py</code>模块</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> snippets.models <span class="keyword">import</span> Snippet</span><br><span class="line"><span class="keyword">from</span> snippets.serializers <span class="keyword">import</span> SnippetSerializer</span><br><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> generics</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SnippetList</span>(<span class="params">generics.ListCreateAPIView</span>):</span></span><br><span class="line">    queryset = Snippet.objects.<span class="built_in">all</span>()</span><br><span class="line">    serializer_class = SnippetSerializer</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SnippetDetail</span>(<span class="params">generics.RetrieveUpdateDestroyAPIView</span>):</span></span><br><span class="line">    queryset = Snippet.objects.<span class="built_in">all</span>()</span><br><span class="line">    serializer_class = SnippetSerializer</span><br></pre></td></tr></table></figure><h5 id="ViewSet"><a href="#ViewSet" class="headerlink" title="ViewSet"></a><code>ViewSet</code></h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework.decorators <span class="keyword">import</span> action</span><br><span class="line"><span class="keyword">from</span> rest_framework.response <span class="keyword">import</span> Response</span><br><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> permissions</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SnippetViewSet</span>(<span class="params">viewsets.ModelViewSet</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    This viewset automatically provides `list`, `create`, `retrieve`,</span></span><br><span class="line"><span class="string">    `update` and `destroy` actions.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Additionally we also provide an extra `highlight` action.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    queryset = Snippet.objects.<span class="built_in">all</span>()</span><br><span class="line">    serializer_class = SnippetSerializer</span><br><span class="line">    permission_classes = [permissions.IsAuthenticatedOrReadOnly,</span><br><span class="line">                          IsOwnerOrReadOnly]</span><br></pre></td></tr></table></figure><h5 id="自定义通用视图"><a href="#自定义通用视图" class="headerlink" title="自定义通用视图"></a><code>自定义通用视图</code></h5><ul><li>例如，如果您需要基于 URL conf 中的多个字段查找对象，您可以创建一个 mixin 类，如下所示</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MultipleFieldLookupMixin</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Apply this mixin to any view or viewset to get multiple field filtering</span></span><br><span class="line"><span class="string">    based on a `lookup_fields` attribute, instead of the default single field filtering.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_object</span>(<span class="params">self</span>):</span></span><br><span class="line">        queryset = self.get_queryset()             <span class="comment"># Get the base queryset</span></span><br><span class="line">        queryset = self.filter_queryset(queryset)  <span class="comment"># Apply any filter backends</span></span><br><span class="line">        <span class="built_in">filter</span> = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> field <span class="keyword">in</span> self.lookup_fields:</span><br><span class="line">            <span class="keyword">if</span> self.kwargs[field]: <span class="comment"># Ignore empty fields.</span></span><br><span class="line">                <span class="built_in">filter</span>[field] = self.kwargs[field]</span><br><span class="line">        obj = get_object_or_404(queryset, **<span class="built_in">filter</span>)  <span class="comment"># Lookup the object</span></span><br><span class="line">        self.check_object_permissions(self.request, obj)</span><br><span class="line">        <span class="keyword">return</span> obj</span><br></pre></td></tr></table></figure><ul><li>视图中如下使用</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> generics</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RetrieveUserView</span>(<span class="params">MultipleFieldLookupMixin, generics.RetrieveAPIView</span>):</span></span><br><span class="line">    queryset = User.objects.<span class="built_in">all</span>()</span><br><span class="line">    serializer_class = UserSerializer</span><br><span class="line">    lookup_fields = [<span class="string">&#x27;account&#x27;</span>, <span class="string">&#x27;username&#x27;</span>]</span><br></pre></td></tr></table></figure><ul><li>全局过滤查询</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="keyword">from</span> .serializers <span class="keyword">import</span> AlgorithmModelSerializer, VideoSerializer</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> AlgorithmModel, AlgorithmSliceModel</span><br><span class="line"><span class="keyword">from</span> rest_framework_mongoengine <span class="keyword">import</span> viewsets</span><br><span class="line"><span class="keyword">from</span> rest_framework.decorators <span class="keyword">import</span> action</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MultipleFieldLookupMixin</span>():</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_kwargs_for_filtering</span>(<span class="params">self</span>):</span></span><br><span class="line">        filtering_kwargs = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> field <span class="keyword">in</span> self.lookup_fields:</span><br><span class="line">            field_value = self.request.query_params.get(field)</span><br><span class="line">            <span class="keyword">if</span> field_value:</span><br><span class="line">                filtering_kwargs[field] = field_value</span><br><span class="line">        <span class="keyword">return</span> filtering_kwargs</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_queryset</span>(<span class="params">self</span>):</span></span><br><span class="line">        queryset = self.queryset</span><br><span class="line">        filtering_kwargs = self.get_kwargs_for_filtering()</span><br><span class="line">        <span class="keyword">if</span> filtering_kwargs:</span><br><span class="line">            queryset = queryset.<span class="built_in">filter</span>(**filtering_kwargs)</span><br><span class="line">        <span class="keyword">return</span> queryset</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AlgorithmViewSet</span>(<span class="params">MultipleFieldLookupMixin, viewsets.ModelViewSet</span>):</span></span><br><span class="line">    queryset = AlgorithmModel.objects</span><br><span class="line">    serializer_class = AlgorithmModelSerializer</span><br><span class="line">    lookup_fields = [<span class="string">&#x27;type&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">VideoViewSet</span>(<span class="params">MultipleFieldLookupMixin, viewsets.ModelViewSet</span>):</span></span><br><span class="line">    queryset = AlgorithmSliceModel.objects</span><br><span class="line">    serializer_class = VideoSerializer</span><br><span class="line">    lookup_fields = (<span class="string">&#x27;algorithm&#x27;</span>, <span class="string">&#x27;event_name&#x27;</span>, <span class="string">&#x27;event_started__gte&#x27;</span>, <span class="string">&#x27;event_started__lte&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @action(<span class="params">methods=[<span class="string">&#x27;GET&#x27;</span>], detail=<span class="literal">True</span></span>)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">download</span>(<span class="params">self, request, *args, **kwargs</span>):</span></span><br><span class="line">        video = self.get_object()</span><br><span class="line">        file = video.slice_video.read()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> HttpResponse(file, content_type=<span class="string">&#x27;video/mp4&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="路由器"><a href="#路由器" class="headerlink" title="路由器"></a>路由器</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path, include</span><br><span class="line"><span class="keyword">from</span> rest_framework.routers <span class="keyword">import</span> DefaultRouter</span><br><span class="line"><span class="keyword">from</span> snippets <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create a router and register our viewsets with it.</span></span><br><span class="line">router = DefaultRouter()</span><br><span class="line">router.register(<span class="string">r&#x27;snippets&#x27;</span>, views.SnippetViewSet,basename=<span class="string">&quot;snippets&quot;</span>)</span><br><span class="line">router.register(<span class="string">r&#x27;users&#x27;</span>, views.UserViewSet,basename=<span class="string">&quot;users&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># The API URLs are now determined automatically by the router.</span></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;&#x27;</span>, include(router.urls)),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h4 id="序列化器"><a href="#序列化器" class="headerlink" title="序列化器"></a>序列化器</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">序列化：序列化器会把模型对象转换成字典，经过response以后变成json字符串</span><br><span class="line">反序列化：把客户端发送过来的数据，经过request以后变成字典，序列化器可以把字典转换成模型</span><br></pre></td></tr></table></figure><h5 id="序列化器的字段校验功能"><a href="#序列化器的字段校验功能" class="headerlink" title="序列化器的字段校验功能"></a>序列化器的字段校验功能</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">-字段自己的校验规则（max_length...）</span><br><span class="line">   -validators的校验</span><br><span class="line">       publish = serializers.CharField(max_length=<span class="number">32</span>,validators=[check,])</span><br><span class="line"></span><br><span class="line">       <span class="function"><span class="keyword">def</span> <span class="title">check</span>(<span class="params">data</span>):</span></span><br><span class="line">       <span class="keyword">if</span> <span class="built_in">len</span>(data)&gt;<span class="number">10</span>:</span><br><span class="line">           <span class="keyword">raise</span> ValidationError(<span class="string">&#x27;最长不能超过10&#x27;</span>)</span><br><span class="line">       <span class="keyword">else</span>:</span><br><span class="line">           <span class="keyword">return</span> data</span><br><span class="line">   -局部和全局钩子</span><br><span class="line">       <span class="comment"># 局部钩子,validate_字段名,需要带一个data,data就是该字段的数据</span></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">validate_title</span>(<span class="params">self, data</span>):</span></span><br><span class="line">       <span class="keyword">if</span> data.startswith(<span class="string">&#x27;sb&#x27;</span>):</span><br><span class="line">           <span class="keyword">raise</span> ValidationError(<span class="string">&#x27;不能以sb开头&#x27;</span>)</span><br><span class="line">       <span class="keyword">else</span>:</span><br><span class="line">           <span class="keyword">return</span> data</span><br><span class="line">   <span class="comment"># 全局钩子</span></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">validate</span>(<span class="params">self, attrs</span>):</span></span><br><span class="line">       title=attrs.get(<span class="string">&#x27;title&#x27;</span>)</span><br><span class="line">       publish=attrs.get(<span class="string">&#x27;publish&#x27;</span>)</span><br><span class="line">       <span class="keyword">if</span> title==publish:</span><br><span class="line">           <span class="keyword">raise</span> ValidationError(<span class="string">&#x27;书名不能跟出版社同名&#x27;</span>)</span><br><span class="line">       <span class="keyword">else</span>:</span><br><span class="line">           <span class="keyword">return</span> attrs</span><br></pre></td></tr></table></figure><h5 id="高级用法之source"><a href="#高级用法之source" class="headerlink" title="高级用法之source"></a>高级用法之source</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> 修改返回到前端的字段名</span><br><span class="line"><span class="comment"># source=title    返回前端显示的是name</span></span><br><span class="line">name = serializers.CharField(max_length=<span class="number">32</span>,min_length=<span class="number">2</span>,source=<span class="string">&#x27;title&#x27;</span>)</span><br><span class="line"><span class="number">2</span> 如果表模型中有方法</span><br><span class="line"><span class="comment"># 执行表模型中的test方法，并且把该方法的返回值赋值给xxx</span></span><br><span class="line">xxx=serializers.CharField(source=<span class="string">&#x27;test&#x27;</span>)</span><br><span class="line"><span class="number">3</span> sourc支持跨表操作</span><br><span class="line">addr=serializers.CharField(source=<span class="string">&#x27;publish.addr&#x27;</span>)</span><br><span class="line"><span class="number">4</span> 支持choice中文选择</span><br><span class="line">type_choice = serializers.CharField(source=<span class="string">&#x27;get_type_display&#x27;</span>)</span><br></pre></td></tr></table></figure><h5 id="高级用法之SerializerMethodField"><a href="#高级用法之SerializerMethodField" class="headerlink" title="高级用法之SerializerMethodField"></a>高级用法之SerializerMethodField</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1 Serializer</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BookSerializer</span>(<span class="params">serializers.Serializer</span>):</span></span><br><span class="line">    <span class="built_in">id</span> = serializers.IntegerField(required=<span class="literal">False</span>)</span><br><span class="line">    name = serializers.CharField(max_length=<span class="number">32</span>,min_length=<span class="number">2</span>,source=<span class="string">&#x27;title&#x27;</span>)</span><br><span class="line">    price = serializers.DecimalField(max_digits=<span class="number">5</span>, decimal_places=<span class="number">2</span>)</span><br><span class="line">    <span class="comment"># SerializerMethodField 必须写一个get_字段名的方法</span></span><br><span class="line">    publish = serializers.SerializerMethodField()</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_publish</span>(<span class="params">self,obj</span>):</span></span><br><span class="line">        dic=&#123;<span class="string">&#x27;name&#x27;</span>:obj.publish.name,<span class="string">&#x27;addr&#x27;</span>:obj.publish.addr&#125;</span><br><span class="line">        <span class="keyword">return</span> dic</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2 ModelSerializer</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BookModelSerializer</span>(<span class="params">serializers.ModelSerializer</span>):</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        model = models.Book</span><br><span class="line">        fields = <span class="string">&#x27;__all__&#x27;</span></span><br><span class="line">    publish = serializers.SerializerMethodField()</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_publish</span>(<span class="params">self,obj</span>):</span></span><br><span class="line">        dic=&#123;<span class="string">&#x27;name&#x27;</span>:obj.publish.name,<span class="string">&#x27;addr&#x27;</span>:obj.publish.addr&#125;</span><br><span class="line">        <span class="keyword">return</span> dic</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment"># 3 使用序列化类的嵌套</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PublishModelSerializer</span>(<span class="params">serializers.ModelSerializer</span>):</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        model = models.Publish</span><br><span class="line">        <span class="comment"># fields = &#x27;__all__&#x27;</span></span><br><span class="line">        fields = [<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;addr&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BookModelSerializer</span>(<span class="params">serializers.ModelSerializer</span>):</span></span><br><span class="line">    publish = PublishModelSerializer()</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        model = models.Book</span><br><span class="line">        fields = <span class="string">&#x27;__all__&#x27;</span></span><br><span class="line">        <span class="comment"># read_only_fields 序列化显示该字段不用存库</span></span><br><span class="line"><span class="comment"># write_only_fields 反序列化 该字段入库需要有值</span></span><br><span class="line">        read_only_fields = [<span class="string">&#x27;id&#x27;</span>,<span class="string">&#x27;author&#x27;</span>]  </span><br><span class="line">        write_only_fields = [<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;price&#x27;</span>, <span class="string">&#x27;email&#x27;</span>] </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rest_framework_mongoengine 字段选择支持中文选择</span></span><br><span class="line"><span class="keyword">from</span> rest_framework_mongoengine <span class="keyword">import</span> serializers</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> AlgorithmModel, AlgorithmSliceModel</span><br><span class="line"><span class="keyword">from</span> rest_framework_mongoengine <span class="keyword">import</span> fields <span class="keyword">as</span> drfm_fields</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AlgorithmModelSerializer</span>(<span class="params">serializers.DocumentSerializer</span>):</span></span><br><span class="line">    <span class="built_in">type</span> = drfm_fields.serializers.CharField(source=<span class="string">&#x27;get_type_display&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        model = AlgorithmModel</span><br><span class="line">        fields = <span class="string">&#x27;__all__&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="认证"><a href="#认证" class="headerlink" title="认证"></a>认证</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> 经过视图APIview--&gt;执行dispatch方法--&gt;self.initial(request, *args, **kwargs)--&gt;self.perform_authentication(request)</span><br><span class="line"></span><br><span class="line"><span class="number">2</span> perform_authentication(self, request)--&gt;需要去Request对象中找user属性或方法</span><br><span class="line"></span><br><span class="line"><span class="number">3</span> Request类中的user方法刚开始来没有_user属性-&gt;self._authenticate()</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>dispatch</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dispatch</span>(<span class="params">self, request, *args, **kwargs</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    `.dispatch()` is pretty much the same as Django&#x27;s regular dispatch,</span></span><br><span class="line"><span class="string">    but with extra hooks for startup, finalize, and exception handling.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    self.args = args</span><br><span class="line">    self.kwargs = kwargs</span><br><span class="line">    request = self.initialize_request(request, *args, **kwargs)</span><br><span class="line">    self.request = request</span><br><span class="line">    self.headers = self.default_response_headers  <span class="comment"># deprecate?</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        self.initial(request, *args, **kwargs)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Get the appropriate handler method</span></span><br><span class="line">        <span class="keyword">if</span> request.method.lower() <span class="keyword">in</span> self.http_method_names:</span><br><span class="line">            handler = <span class="built_in">getattr</span>(self, request.method.lower(),</span><br><span class="line">                              self.http_method_not_allowed)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            handler = self.http_method_not_allowed</span><br><span class="line"></span><br><span class="line">        response = handler(request, *args, **kwargs)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> exc:</span><br><span class="line">        response = self.handle_exception(exc)</span><br><span class="line"></span><br><span class="line">    self.response = self.finalize_response(request, response, *args, **kwargs)</span><br><span class="line">    <span class="keyword">return</span> self.response</span><br></pre></td></tr></table></figure><ul><li>initial</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">initial</span>(<span class="params">self, request, *args, **kwargs</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Runs anything that needs to occur prior to calling the method handler.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    self.format_kwarg = self.get_format_suffix(**kwargs)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Perform content negotiation and store the accepted info on the request</span></span><br><span class="line">    neg = self.perform_content_negotiation(request)</span><br><span class="line">    request.accepted_renderer, request.accepted_media_type = neg</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Determine the API version, if versioning is in use.</span></span><br><span class="line">    version, scheme = self.determine_version(request, *args, **kwargs)</span><br><span class="line">    request.version, request.versioning_scheme = version, scheme</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Ensure that the incoming request is permitted</span></span><br><span class="line">    <span class="comment"># 三大组件：认证、权限、频率</span></span><br><span class="line">    self.perform_authentication(request)</span><br><span class="line">    self.check_permissions(request)</span><br><span class="line">    self.check_throttles(request)</span><br></pre></td></tr></table></figure><ul><li>perform_authentication</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">perform_authentication</span>(<span class="params">self, request</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Perform authentication on the incoming request.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Note that if you override this and simply &#x27;pass&#x27;, then authentication</span></span><br><span class="line"><span class="string">    will instead be performed lazily, the first time either</span></span><br><span class="line"><span class="string">    `request.user` or `request.auth` is accessed.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    request.user</span><br></pre></td></tr></table></figure><ul><li>user</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@property</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">user</span>(<span class="params">self</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Returns the user associated with the current request, as authenticated</span></span><br><span class="line"><span class="string">    by the authentication classes provided to the request.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">hasattr</span>(self, <span class="string">&#x27;_user&#x27;</span>):</span><br><span class="line">        <span class="keyword">with</span> wrap_attributeerrors():</span><br><span class="line">            self._authenticate()</span><br><span class="line">    <span class="keyword">return</span> self._user</span><br><span class="line"></span><br><span class="line"><span class="meta">@user.setter</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">user</span>(<span class="params">self, value</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Sets the user on the current request. This is necessary to maintain</span></span><br><span class="line"><span class="string">    compatibility with django.contrib.auth where the user property is</span></span><br><span class="line"><span class="string">    set in the login and logout functions.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Note that we also set the user on Django&#x27;s underlying `HttpRequest`</span></span><br><span class="line"><span class="string">    instance, ensuring that it is available to any middleware in the stack.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    self._user = value</span><br><span class="line">    self._request.user = value</span><br></pre></td></tr></table></figure><ul><li>self._authenticate()</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">_authenticate</span>(<span class="params">self</span>):</span></span><br><span class="line">      <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">      Attempt to authenticate the request using each authentication instance</span></span><br><span class="line"><span class="string">      in turn.</span></span><br><span class="line"><span class="string">      &quot;&quot;&quot;</span></span><br><span class="line">      <span class="comment"># self.authenticators是在视图函数中配置的认证类    authentication_classes = [],循环拿到认证对象</span></span><br><span class="line">      <span class="keyword">for</span> authenticator <span class="keyword">in</span> self.authenticators:</span><br><span class="line">          <span class="keyword">try</span>:</span><br><span class="line"></span><br><span class="line">              user_auth_tuple = authenticator.authenticate(self)</span><br><span class="line">          <span class="keyword">except</span> exceptions.APIException:</span><br><span class="line">              self._not_authenticated()</span><br><span class="line">              <span class="keyword">raise</span></span><br><span class="line"><span class="comment"># 返回值的处理</span></span><br><span class="line">          <span class="keyword">if</span> user_auth_tuple <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">              self._authenticator = authenticator</span><br><span class="line">              <span class="comment"># 如果有返回值，就将登录用户与登录认证分别保存到request.user, request.auth</span></span><br><span class="line">              self.user, self.auth = user_auth_tuple</span><br><span class="line">              <span class="keyword">return</span></span><br><span class="line"><span class="comment"># 如果返回值为空，代表没有登录用户和认证信息，代表游客</span></span><br><span class="line">      self._not_authenticated()</span><br></pre></td></tr></table></figure><h4 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> 经过视图APIview--&gt;执行dispatch方法--&gt;self.initial(request, *args, **kwargs)--&gt;self.check_permissions(request)</span><br><span class="line"><span class="comment"># </span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">check_permissions</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Check if the request should be permitted.</span></span><br><span class="line"><span class="string">        Raises an appropriate exception if the request is not permitted.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">for</span> permission <span class="keyword">in</span> self.get_permissions():</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> permission.has_permission(request, self):</span><br><span class="line">                self.permission_denied(</span><br><span class="line">                    request,</span><br><span class="line">                    message=<span class="built_in">getattr</span>(permission, <span class="string">&#x27;message&#x27;</span>, <span class="literal">None</span>),</span><br><span class="line">                    code=<span class="built_in">getattr</span>(permission, <span class="string">&#x27;code&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">                )</span><br><span class="line"></span><br></pre></td></tr></table></figure><p> <code>内置权限的使用</code></p><ul><li>权限需要与认证一起使用</li><li>python manage.py createsuperuser</li><li>视图类加上认证和权限类，即在访问该接口是需要admin登录才可访问，判断的是is_staff字段</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework.authentication <span class="keyword">import</span> SessionAuthentication</span><br><span class="line"><span class="keyword">from</span> rest_framework.permissions <span class="keyword">import</span> IsAdminUser</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestView</span>(<span class="params">APIView</span>):</span></span><br><span class="line">    authentication_classes = [SessionAuthentication]</span><br><span class="line">    permission_classes = [IsAdminUser]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span>(<span class="params">self, request, *args, **kwargs</span>):</span></span><br><span class="line">        <span class="keyword">return</span> Response(<span class="string">&#x27;success&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="频率"><a href="#频率" class="headerlink" title="频率"></a>频率</h4><p><code>设置限制策略</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 全局配置</span></span><br><span class="line">REST_FRAMEWORK = &#123;</span><br><span class="line">    <span class="string">&#x27;DEFAULT_THROTTLE_CLASSES&#x27;</span>: [</span><br><span class="line">        <span class="string">&#x27;rest_framework.throttling.AnonRateThrottle&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;rest_framework.throttling.UserRateThrottle&#x27;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&#x27;DEFAULT_THROTTLE_RATES&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;anon&#x27;</span>: <span class="string">&#x27;3/m&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;user&#x27;</span>: <span class="string">&#x27;3/m&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>views.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestView</span>(<span class="params">ModelViewSet</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;局部配置&quot;&quot;&quot;</span></span><br><span class="line">    queryset = models.Publish.objects.<span class="built_in">all</span>()</span><br><span class="line">    serializer_class = PublishModelSerializer</span><br><span class="line">    authentication_classes = (JwtAuthentication,)</span><br><span class="line">    throttle_classes = (UserRateThrottle,)</span><br></pre></td></tr></table></figure><p><code>自定义限流</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThrottles</span>():</span></span><br><span class="line">    VISIT_RECORD = &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.history = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">allow_request</span>(<span class="params">self, request, view</span>):</span></span><br><span class="line">        <span class="comment"># （1）取出访问者ip</span></span><br><span class="line">        <span class="comment"># print(request.META)</span></span><br><span class="line">        ip = request.META.get(<span class="string">&#x27;REMOTE_ADDR&#x27;</span>)</span><br><span class="line">        <span class="keyword">import</span> time</span><br><span class="line">        ctime = time.time()</span><br><span class="line">        <span class="comment"># （2）判断当前ip不在访问字典里，添加进去，并且直接返回True,表示第一次访问</span></span><br><span class="line">        <span class="keyword">if</span> ip <span class="keyword">not</span> <span class="keyword">in</span> self.VISIT_RECORD:</span><br><span class="line">            self.VISIT_RECORD[ip] = [ctime, ]</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        self.history = self.VISIT_RECORD.get(ip)</span><br><span class="line">        <span class="comment"># （3）循环判断当前ip的列表，有值，并且当前时间减去列表的最后一个时间大于60s，把这种数据pop掉，这样列表中只有60s以内的访问时间，</span></span><br><span class="line">        <span class="keyword">while</span> self.history <span class="keyword">and</span> ctime - self.history[-<span class="number">1</span>] &gt; <span class="number">60</span>:</span><br><span class="line">            self.history.pop()</span><br><span class="line">        <span class="comment"># （4）判断，当列表小于3，说明一分钟以内访问不足三次，把当前时间插入到列表第一个位置，返回True，顺利通过</span></span><br><span class="line">        <span class="comment"># （5）当大于等于3，说明一分钟内访问超过三次，返回False验证失败</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(self.history) &lt; <span class="number">3</span>:</span><br><span class="line">            self.history.insert(<span class="number">0</span>, ctime)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wait</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">import</span> time</span><br><span class="line">        ctime = time.time()</span><br><span class="line">        <span class="keyword">return</span> <span class="number">60</span> - (ctime - self.history[-<span class="number">1</span>])</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>views.py</code></p><ul><li><p><img src="/2021/10/25/restframework/image-20220624153425191.png" alt="restframework"></p></li><li><p>在运行视图主体之前，检查列表中的每个油门。如果任何节流检查失败，<code>exceptions.Throttled</code>将引发异常，并且视图的主体将不会运行</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> utils.throttle <span class="keyword">import</span> MyThrottles</span><br><span class="line"><span class="keyword">from</span> rest_framework.throttling <span class="keyword">import</span> UserRateThrottle</span><br><span class="line"><span class="keyword">from</span> rest_framework.exceptions <span class="keyword">import</span> Throttled</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;&quot;&quot;局部配置&quot;&quot;&quot;</span></span><br><span class="line">    queryset = models.Publish.objects.<span class="built_in">all</span>()</span><br><span class="line">    serializer_class = PublishModelSerializer</span><br><span class="line">    authentication_classes = (JwtAuthentication,)</span><br><span class="line">    throttle_classes = (MyThrottles,)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">throttled</span>(<span class="params">self, request, wait</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;自定义报错异常&quot;&quot;&quot;</span></span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">MyThrottled</span>(<span class="params">Throttled</span>):</span></span><br><span class="line">            default_detail = <span class="string">&#x27;限流&#x27;</span></span><br><span class="line">            extra_detail_singular = <span class="string">&#x27;还有 &#123;wait&#125; second.&#x27;</span></span><br><span class="line">            extra_detail_plural = <span class="string">&#x27;出了 &#123;wait&#125; seconds.&#x27;</span></span><br><span class="line">            <span class="keyword">raise</span> MyThrottled(wait)</span><br></pre></td></tr></table></figure><p><code>SimpleRateThrottle源码分析</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SimpleRateThrottle</span>(<span class="params">BaseThrottle</span>):</span></span><br><span class="line">    <span class="comment"># 咱自己写的放在了全局变量，他的在django的缓存中</span></span><br><span class="line">    cache = default_cache</span><br><span class="line">    <span class="comment"># 获取当前时间，跟咱写的一样</span></span><br><span class="line">    timer = time.time</span><br><span class="line">    <span class="comment"># 做了一个字符串格式化，</span></span><br><span class="line">    cache_format = <span class="string">&#x27;throttle_%(scope)s_%(ident)s&#x27;</span></span><br><span class="line">    scope = <span class="literal">None</span></span><br><span class="line">    <span class="comment"># 从配置文件中取DEFAULT_THROTTLE_RATES，所以咱配置文件中应该配置，否则报错</span></span><br><span class="line">    THROTTLE_RATES = api_settings.DEFAULT_THROTTLE_RATES</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">getattr</span>(self, <span class="string">&#x27;rate&#x27;</span>, <span class="literal">None</span>):</span><br><span class="line">            <span class="comment"># 从配置文件中找出scope配置的名字对应的值，比如咱写的‘3/m’,他取出来</span></span><br><span class="line">            self.rate = self.get_rate()</span><br><span class="line">        <span class="comment">#     解析&#x27;3/m&#x27;,解析成 3      m</span></span><br><span class="line">        self.num_requests, self.duration = self.parse_rate(self.rate)</span><br><span class="line">    <span class="comment"># 这个方法需要重写</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_cache_key</span>(<span class="params">self, request, view</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Should return a unique cache-key which can be used for throttling.</span></span><br><span class="line"><span class="string">        Must be overridden.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        May return `None` if the request should not be throttled.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">raise</span> NotImplementedError(<span class="string">&#x27;.get_cache_key() must be overridden&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_rate</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">getattr</span>(self, <span class="string">&#x27;scope&#x27;</span>, <span class="literal">None</span>):</span><br><span class="line">            msg = (<span class="string">&quot;You must set either `.scope` or `.rate` for &#x27;%s&#x27; throttle&quot;</span> %</span><br><span class="line">                   self.__class__.__name__)</span><br><span class="line">            <span class="keyword">raise</span> ImproperlyConfigured(msg)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># 获取在setting里配置的字典中的之，self.scope是 咱写的luffy</span></span><br><span class="line">            <span class="keyword">return</span> self.THROTTLE_RATES[self.scope]</span><br><span class="line">        <span class="keyword">except</span> KeyError:</span><br><span class="line">            msg = <span class="string">&quot;No default throttle rate set for &#x27;%s&#x27; scope&quot;</span> % self.scope</span><br><span class="line">            <span class="keyword">raise</span> ImproperlyConfigured(msg)</span><br><span class="line">    <span class="comment"># 解析 3/m这种传参</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_rate</span>(<span class="params">self, rate</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Given the request rate string, return a two tuple of:</span></span><br><span class="line"><span class="string">        &lt;allowed number of requests&gt;, &lt;period of time in seconds&gt;</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> rate <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> (<span class="literal">None</span>, <span class="literal">None</span>)</span><br><span class="line">        num, period = rate.split(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">        num_requests = <span class="built_in">int</span>(num)</span><br><span class="line">        <span class="comment"># 只取了第一位，也就是 3/mimmmmmmm也是代表一分钟</span></span><br><span class="line">        duration = &#123;<span class="string">&#x27;s&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;m&#x27;</span>: <span class="number">60</span>, <span class="string">&#x27;h&#x27;</span>: <span class="number">3600</span>, <span class="string">&#x27;d&#x27;</span>: <span class="number">86400</span>&#125;[period[<span class="number">0</span>]]</span><br><span class="line">        <span class="keyword">return</span> (num_requests, duration)</span><br><span class="line">    <span class="comment"># 逻辑跟咱自定义的相同</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">allow_request</span>(<span class="params">self, request, view</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Implement the check to see if the request should be throttled.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        On success calls `throttle_success`.</span></span><br><span class="line"><span class="string">        On failure calls `throttle_failure`.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> self.rate <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">        self.key = self.get_cache_key(request, view)</span><br><span class="line">        <span class="keyword">if</span> self.key <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">        self.history = self.cache.get(self.key, [])</span><br><span class="line">        self.now = self.timer()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Drop any requests from the history which have now passed the</span></span><br><span class="line">        <span class="comment"># throttle duration</span></span><br><span class="line">        <span class="keyword">while</span> self.history <span class="keyword">and</span> self.history[-<span class="number">1</span>] &lt;= self.now - self.duration:</span><br><span class="line">            self.history.pop()</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(self.history) &gt;= self.num_requests:</span><br><span class="line">            <span class="keyword">return</span> self.throttle_failure()</span><br><span class="line">        <span class="keyword">return</span> self.throttle_success()</span><br><span class="line">    <span class="comment"># 成功返回true，并且插入到缓存中</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">throttle_success</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Inserts the current request&#x27;s timestamp along with the key</span></span><br><span class="line"><span class="string">        into the cache.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        self.history.insert(<span class="number">0</span>, self.now)</span><br><span class="line">        self.cache.<span class="built_in">set</span>(self.key, self.history, self.duration)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="comment"># 失败返回false</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">throttle_failure</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Called when a request to the API has failed due to throttling.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wait</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Returns the recommended next request time in seconds.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> self.history:</span><br><span class="line">            remaining_duration = self.duration - (self.now - self.history[-<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            remaining_duration = self.duration</span><br><span class="line"></span><br><span class="line">        available_requests = self.num_requests - <span class="built_in">len</span>(self.history) + <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> available_requests &lt;= <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> remaining_duration / <span class="built_in">float</span>(available_requests)</span><br><span class="line">SimpleRateThrottle源码分析</span><br></pre></td></tr></table></figure><h4 id="全局异常"><a href="#全局异常" class="headerlink" title="全局异常"></a>全局异常</h4><p><code>exception_handler.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework.views <span class="keyword">import</span> exception_handler</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">custom_exception_handler</span>(<span class="params">exc, context</span>):</span></span><br><span class="line">    <span class="comment"># Call REST framework&#x27;s default exception handler first,</span></span><br><span class="line">    <span class="comment"># to get the standard error response.</span></span><br><span class="line">    response = exception_handler(exc, context)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Now add the HTTP status code to the response.</span></span><br><span class="line">    <span class="keyword">if</span> response <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        message = response.data.get(<span class="string">&#x27;detail&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> message:</span><br><span class="line">            <span class="keyword">for</span> key, value <span class="keyword">in</span> response.data.items():</span><br><span class="line">                message = <span class="string">&#x27;&#123;0&#125;: &#123;1&#125;&#x27;</span>.<span class="built_in">format</span>(key, <span class="built_in">str</span>(value[<span class="number">0</span>]))</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;code&#x27;</span>: response.status_code,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span>: message,</span><br><span class="line">        &#125;</span><br><span class="line">        response.data = data</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> response</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="JWT"><a href="#JWT" class="headerlink" title="JWT"></a>JWT</h4><ul><li><a href="https://www.jianshu.com/p/576dbf44b2ae">https://www.jianshu.com/p/576dbf44b2ae</a></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">JWT的构成:第一部分我们称它为头部（header）,第二部分我们称其为载荷（payload, 类似于飞机上承载的物品），第三部分是签证（signature）</span><br><span class="line">eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxLCJ1c2VybmFtZSI6InN1cGVyIiwiZXhwIjoxNjU2MDQxMDkxLCJlbWFpbCI6IjEyMzQ1NkBxcS5jb20ifQ<span class="number">.0</span>Qex2dytyJGke1Kyl0Dx02XRAjKGlZ8M4OjegdD1bPg</span><br></pre></td></tr></table></figure><p><code>自定义JWT认证</code></p><p>auth.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework_jwt.authentication <span class="keyword">import</span> BaseJSONWebTokenAuthentication</span><br><span class="line"><span class="keyword">from</span> rest_framework_jwt.utils <span class="keyword">import</span> jwt_decode_handler</span><br><span class="line"><span class="keyword">from</span> rest_framework.exceptions <span class="keyword">import</span> AuthenticationFailed</span><br><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JwtAuthentication</span>(<span class="params">BaseJSONWebTokenAuthentication</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">authenticate</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        <span class="comment"># 认证逻辑()</span></span><br><span class="line">        <span class="comment"># token信息可以放在请求头中,请求地址中</span></span><br><span class="line">        <span class="comment"># key值可以随意叫</span></span><br><span class="line">        <span class="comment"># token = request.GET.get(&#x27;token&#x27;)  # token放到请求地址中</span></span><br><span class="line">        <span class="comment"># token放到请求头中 , key 必须为: Authorization</span></span><br><span class="line">        token = request.META.get(<span class="string">&#x27;HTTP_Authorization&#x27;</span>.upper())</span><br><span class="line">        <span class="comment"># 校验token是否合法</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            payload = jwt_decode_handler(token)</span><br><span class="line">        <span class="keyword">except</span> jwt.ExpiredSignature:</span><br><span class="line">            <span class="keyword">raise</span> AuthenticationFailed(<span class="string">&#x27;过期了&#x27;</span>)</span><br><span class="line">        <span class="keyword">except</span> jwt.DecodeError:</span><br><span class="line">            <span class="keyword">raise</span> AuthenticationFailed(<span class="string">&#x27;解码错误&#x27;</span>)</span><br><span class="line">        <span class="keyword">except</span> jwt.InvalidTokenError:</span><br><span class="line">            <span class="keyword">raise</span> AuthenticationFailed(<span class="string">&#x27;不合法的token&#x27;</span>)</span><br><span class="line">        user = self.authenticate_credentials(payload)</span><br><span class="line">        <span class="keyword">return</span> (user, token)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>views.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework.decorators <span class="keyword">import</span> action</span><br><span class="line"><span class="keyword">from</span> rest_framework.response <span class="keyword">import</span> Response</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> rest_framework.viewsets <span class="keyword">import</span> ModelViewSet</span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> models</span><br><span class="line"><span class="keyword">from</span> .serializer <span class="keyword">import</span> PublishModelSerializer</span><br><span class="line"><span class="keyword">from</span> utils.authenticate <span class="keyword">import</span> JwtAuthentication</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">jwt_response_payload_handler</span>(<span class="params">token, user=<span class="literal">None</span>, request=<span class="literal">None</span></span>):</span></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="string">&quot;token&quot;</span>: token,</span><br><span class="line">        <span class="string">&quot;code&quot;</span>: <span class="number">200</span>,</span><br><span class="line">        <span class="string">&quot;msg&quot;</span>: <span class="string">&quot;登录成功&quot;</span>,</span><br><span class="line">        <span class="string">&quot;user&quot;</span> : user.username</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestView</span>(<span class="params">ModelViewSet</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;局部配置&quot;&quot;&quot;</span></span><br><span class="line">    queryset = models.Publish.objects.<span class="built_in">all</span>()</span><br><span class="line">    serializer_class = PublishModelSerializer</span><br><span class="line">    authentication_classes = (JwtAuthentication,) </span><br><span class="line"> </span><br><span class="line"><span class="comment"># app01/urls.py</span></span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path, include</span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line"><span class="keyword">from</span> rest_framework.routers <span class="keyword">import</span> DefaultRouter</span><br><span class="line"><span class="keyword">from</span> rest_framework_jwt.views <span class="keyword">import</span> obtain_jwt_token</span><br><span class="line"></span><br><span class="line">router = DefaultRouter()</span><br><span class="line">router.register(<span class="string">r&#x27;test&#x27;</span>, views.TestView, basename=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;login/&#x27;</span>, obtain_jwt_token),</span><br><span class="line">    path(<span class="string">&#x27;&#x27;</span>, include(router.urls)),</span><br><span class="line">]</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>settings.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">&#x27;default&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;ENGINE&#x27;</span>: <span class="string">&#x27;django.db.backends.mysql&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&quot;django_server&quot;</span>,</span><br><span class="line">        <span class="string">&quot;HOST&quot;</span>: <span class="string">&quot;127.0.0.1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;PORT&quot;</span>: <span class="number">3306</span>,</span><br><span class="line">        <span class="string">&quot;USER&quot;</span>: <span class="string">&quot;root&quot;</span>,</span><br><span class="line">        <span class="string">&quot;PASSWORD&quot;</span>: <span class="string">&quot;1018&quot;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Internationalization</span></span><br><span class="line"><span class="comment"># https://docs.djangoproject.com/en/2.2/topics/i18n/</span></span><br><span class="line"></span><br><span class="line">LANGUAGE_CODE = <span class="string">&#x27;zh-hans&#x27;</span></span><br><span class="line"></span><br><span class="line">TIME_ZONE = <span class="string">&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line"></span><br><span class="line">USE_I18N = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">USE_L10N = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">USE_TZ = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Custom settings</span></span><br><span class="line">DATETIME_FORMAT = <span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span></span><br><span class="line">DATE_FORMAT = <span class="string">&#x27;%Y-%m-%d&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Django Rest Framework settings</span></span><br><span class="line">REST_FRAMEWORK = &#123;</span><br><span class="line">    <span class="comment"># Use Django&#x27;s standard `django.contrib.auth` permissions,</span></span><br><span class="line">    <span class="comment"># or allow read-only access for unauthenticated users.</span></span><br><span class="line">    <span class="string">&#x27;DEFAULT_PERMISSION_CLASSES&#x27;</span>: [</span><br><span class="line">        <span class="string">&#x27;rest_framework.permissions.AllowAny&#x27;</span>,</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&#x27;DEFAULT_AUTHENTICATION_CLASSES&#x27;</span>: [</span><br><span class="line">        <span class="comment"># &#x27;rest_framework.authentication.BasicAuthentication&#x27;,</span></span><br><span class="line">        <span class="string">&#x27;rest_framework_jwt.authentication.JSONWebTokenAuthentication&#x27;</span>, <span class="comment"># </span></span><br><span class="line">        <span class="comment"># &#x27;utils.authenticate.JwtAuthentication&#x27; # 全局配置自定义JWT认证</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="comment"># &#x27;DEFAULT_SCHEMA_CLASS&#x27;: &#x27;drf_spectacular.openapi.AutoSchema&#x27;,</span></span><br><span class="line">    <span class="string">&#x27;DATETIME_FORMAT&#x27;</span>: DATETIME_FORMAT,</span><br><span class="line">    <span class="string">&#x27;DATETIME_INPUT_FORMATS&#x27;</span>: [DATETIME_FORMAT],</span><br><span class="line">    <span class="string">&#x27;DATE_FORMAT&#x27;</span>: DATE_FORMAT,</span><br><span class="line">    <span class="string">&#x27;DATE_INPUT_FORMATS&#x27;</span>: [DATE_FORMAT],</span><br><span class="line">    <span class="string">&#x27;DEFAULT_FILTER_BACKENDS&#x27;</span>: [<span class="string">&#x27;django_filters.rest_framework.DjangoFilterBackend&#x27;</span>],</span><br><span class="line">    <span class="string">&#x27;DEFAULT_PAGINATION_CLASS&#x27;</span>: <span class="string">&#x27;rest_framework.pagination.PageNumberPagination&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;PAGE_SIZE&#x27;</span>: <span class="number">10</span>,</span><br><span class="line">    <span class="comment"># &#x27;DEFAULT_RENDERER_CLASSES&#x27;: [&#x27;utils.renderers.MyJSONRender&#x27;],</span></span><br><span class="line">    <span class="string">&#x27;EXCEPTION_HANDLER&#x27;</span>: <span class="string">&#x27;utils.exception_handler.custom_exception_handler&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># JWT配置过期时间</span></span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line">JWT_AUTH = &#123;</span><br><span class="line">    </span><br><span class="line">        <span class="string">&#x27;JWT_RESPONSE_PAYLOAD_HANDLER&#x27;</span>: <span class="string">&#x27;utils.authenticate.jwt_response_payload_handler&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;JWT_EXPIRATION_DELTA&#x27;</span>: datetime.timedelta(seconds=<span class="number">30</span>),<span class="comment">#到期时间</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>请求测试</code></p><ul><li>控制JWT登录返回</li></ul><p><img src="/2021/10/25/restframework/image-20220624160831274.png" alt="restframework"></p><ul><li>携带authortion 请求接口</li></ul><p><img src="/2021/10/25/restframework/image-20220624150032412.png" alt="restframework"></p><h4 id="base64"><a href="#base64" class="headerlink" title="base64"></a>base64</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&quot;username&quot;</span>: <span class="string">&quot;lhj&quot;</span>,</span><br><span class="line">    <span class="string">&quot;password&quot;</span>: <span class="string">&quot;129349388&quot;</span>,</span><br><span class="line">    <span class="string">&quot;sex&quot;</span>: <span class="string">&quot;男&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 编码</span></span><br><span class="line">res = base64.b64encode(json.dumps(data).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(res)</span><br><span class="line"><span class="string">&quot;&quot;&quot;b&#x27;eyJ1c2VybmFtZSI6ICJsaGoiLCAicGFzc3dvcmQiOiAiMTI5MzQ5Mzg4IiwgInNleCI6ICJcdTc1MzcifQ==&#x27;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment"># 解码</span></span><br><span class="line">ret = base64.b64decode(res)</span><br><span class="line"><span class="built_in">print</span>(json.loads(ret))</span><br><span class="line"><span class="string">&quot;&quot;&quot;&#123;&#x27;username&#x27;: &#x27;lhj&#x27;, &#x27;password&#x27;: &#x27;129349388&#x27;, &#x27;sex&#x27;: &#x27;男&#x27;&#125;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h4 id="REST-FRAMEWORK配置"><a href="#REST-FRAMEWORK配置" class="headerlink" title="REST_FRAMEWORK配置"></a>REST_FRAMEWORK配置</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">AUTH_USER_MODEL = <span class="string">&#x27;user.User&#x27;</span>  <span class="comment"># 应用名.模型类名</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Database</span></span><br><span class="line"><span class="comment"># https://docs.djangoproject.com/en/2.2/ref/settings/#databases</span></span><br><span class="line"></span><br><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">&#x27;default&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;ENGINE&#x27;</span>: <span class="string">&#x27;django.db.backends.mysql&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&quot;hpd_server&quot;</span>,</span><br><span class="line">        <span class="string">&quot;HOST&quot;</span>: <span class="string">&quot;127.0.0.1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;PORT&quot;</span>: <span class="number">3306</span>,</span><br><span class="line">        <span class="string">&quot;USER&quot;</span>: <span class="string">&quot;root&quot;</span>,</span><br><span class="line">        <span class="string">&quot;PASSWORD&quot;</span>: <span class="string">&quot;1018&quot;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Internationalization</span></span><br><span class="line"><span class="comment"># https://docs.djangoproject.com/en/2.2/topics/i18n/</span></span><br><span class="line"></span><br><span class="line">LANGUAGE_CODE = <span class="string">&#x27;zh-hans&#x27;</span></span><br><span class="line"></span><br><span class="line">TIME_ZONE = <span class="string">&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line"></span><br><span class="line">USE_I18N = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">USE_L10N = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">USE_TZ = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Static files (CSS, JavaScript, Images)</span></span><br><span class="line"><span class="comment"># https://docs.djangoproject.com/en/2.2/howto/static-files/</span></span><br><span class="line"></span><br><span class="line">STATIC_URL = <span class="string">&#x27;/static/&#x27;</span></span><br><span class="line">STATIC_ROOT = os.path.join(BASE_DIR, <span class="string">&#x27;static&#x27;</span>)</span><br><span class="line"></span><br><span class="line">MEDIA_URL = <span class="string">&#x27;/media/&#x27;</span></span><br><span class="line">MEDIA_ROOT = os.path.join(BASE_DIR, <span class="string">&#x27;media&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Custom settings</span></span><br><span class="line">DATETIME_FORMAT = <span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span></span><br><span class="line">DATE_FORMAT = <span class="string">&#x27;%Y-%m-%d&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Django Rest Framework settings</span></span><br><span class="line">REST_FRAMEWORK = &#123;</span><br><span class="line">    <span class="comment"># Use Django&#x27;s standard `django.contrib.auth` permissions,</span></span><br><span class="line">    <span class="comment"># or allow read-only access for unauthenticated users.</span></span><br><span class="line">    <span class="string">&#x27;DEFAULT_PERMISSION_CLASSES&#x27;</span>: [</span><br><span class="line">        <span class="string">&#x27;rest_framework.permissions.AllowAny&#x27;</span>,</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&#x27;DEFAULT_AUTHENTICATION_CLASSES&#x27;</span>: [</span><br><span class="line">        <span class="string">&#x27;rest_framework.authentication.BasicAuthentication&#x27;</span>,</span><br><span class="line">    ],</span><br><span class="line">    <span class="comment"># &#x27;DEFAULT_SCHEMA_CLASS&#x27;: &#x27;drf_spectacular.openapi.AutoSchema&#x27;,</span></span><br><span class="line">    <span class="string">&#x27;DATETIME_FORMAT&#x27;</span>: DATETIME_FORMAT,</span><br><span class="line">    <span class="string">&#x27;DATETIME_INPUT_FORMATS&#x27;</span>: [DATETIME_FORMAT],</span><br><span class="line">    <span class="string">&#x27;DATE_FORMAT&#x27;</span>: DATE_FORMAT,</span><br><span class="line">    <span class="string">&#x27;DATE_INPUT_FORMATS&#x27;</span>: [DATE_FORMAT],</span><br><span class="line">    <span class="string">&#x27;DEFAULT_FILTER_BACKENDS&#x27;</span>: [<span class="string">&#x27;django_filters.rest_framework.DjangoFilterBackend&#x27;</span>],</span><br><span class="line">    <span class="string">&#x27;DEFAULT_PAGINATION_CLASS&#x27;</span>: <span class="string">&#x27;rest_framework.pagination.PageNumberPagination&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;DEFAULT_VERSIONING_CLASS&#x27;</span>: <span class="string">&#x27;rest_framework.versioning.URLPathVersioning&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;ALLOWED_VERSIONS&#x27;</span>: [<span class="string">&#x27;v1&#x27;</span>, <span class="string">&#x27;v2&#x27;</span>],</span><br><span class="line">    <span class="string">&#x27;PAGE_SIZE&#x27;</span>: <span class="number">10</span>,</span><br><span class="line">    <span class="comment"># &#x27;DEFAULT_RENDERER_CLASSES&#x27;: [&#x27;utils.renderers.MyJSONRender&#x27;],</span></span><br><span class="line">    <span class="string">&#x27;EXCEPTION_HANDLER&#x27;</span>: <span class="string">&#x27;utils.exception_handler.custom_exception_handler&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">LOGGING = &#123;</span><br><span class="line">    <span class="string">&#x27;version&#x27;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">&#x27;disable_existing_loggers&#x27;</span>: <span class="literal">False</span>,</span><br><span class="line">    <span class="string">&#x27;formatters&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;verbose&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;format&#x27;</span>: <span class="string">&#x27;%(levelname)s %(asctime)s %(module)s %(lineno)d %(message)s&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;simple&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;format&#x27;</span>: <span class="string">&#x27;%(levelname)s %(module)s %(lineno)d %(message)s&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;filters&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;require_debug_true&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;()&#x27;</span>: <span class="string">&#x27;django.utils.log.RequireDebugTrue&#x27;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;handlers&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;console&#x27;</span>: &#123;</span><br><span class="line">            <span class="comment"># 实际开发建议使用WARNING</span></span><br><span class="line">            <span class="string">&#x27;level&#x27;</span>: <span class="string">&#x27;DEBUG&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;filters&#x27;</span>: [<span class="string">&#x27;require_debug_true&#x27;</span>],</span><br><span class="line">            <span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;logging.StreamHandler&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;formatter&#x27;</span>: <span class="string">&#x27;simple&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;file&#x27;</span>: &#123;</span><br><span class="line">            <span class="comment"># 实际开发建议使用ERROR</span></span><br><span class="line">            <span class="string">&#x27;level&#x27;</span>: <span class="string">&#x27;ERROR&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;logging.handlers.RotatingFileHandler&#x27;</span>,</span><br><span class="line">            <span class="comment"># 日志位置,日志文件名,日志保存目录必须手动创建，注：这里的文件路径要注意BASE_DIR代表的是小luffyapi</span></span><br><span class="line">            <span class="string">&#x27;filename&#x27;</span>: os.path.join(os.path.dirname(BASE_DIR), <span class="string">&quot;logs&quot;</span>, <span class="string">&quot;luffy.log&quot;</span>),</span><br><span class="line">            <span class="comment"># 日志文件的最大值,这里我们设置300M</span></span><br><span class="line">            <span class="string">&#x27;maxBytes&#x27;</span>: <span class="number">300</span> * <span class="number">1024</span> * <span class="number">1024</span>,</span><br><span class="line">            <span class="comment"># 日志文件的数量,设置最大日志数量为10</span></span><br><span class="line">            <span class="string">&#x27;backupCount&#x27;</span>: <span class="number">10</span>,</span><br><span class="line">            <span class="comment"># 日志格式:详细格式</span></span><br><span class="line">            <span class="string">&#x27;formatter&#x27;</span>: <span class="string">&#x27;verbose&#x27;</span>,</span><br><span class="line">            <span class="comment"># 文件内容编码</span></span><br><span class="line">            <span class="string">&#x27;encoding&#x27;</span>: <span class="string">&#x27;utf-8&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment"># 日志对象</span></span><br><span class="line">    <span class="string">&#x27;loggers&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;django&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;handlers&#x27;</span>: [<span class="string">&#x27;console&#x27;</span>, <span class="string">&#x27;file&#x27;</span>],</span><br><span class="line">            <span class="string">&#x27;propagate&#x27;</span>: <span class="literal">True</span>,  <span class="comment"># 是否让日志信息继续冒泡给其他的日志处理系统</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>版本控制</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">path(<span class="string">&#x27;api/&lt;str:version&gt;/algorithm/&#x27;</span>, include(<span class="string">&#x27;algorithm.urls&#x27;</span>)),</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path, include</span><br><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> routers</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> .views <span class="keyword">import</span> AlgorithmViewSet, VideoViewSet</span><br><span class="line"></span><br><span class="line">router = routers.DefaultRouter()</span><br><span class="line">router.register(<span class="string">r&#x27;model&#x27;</span>, AlgorithmViewSet, basename=<span class="string">&#x27;model&#x27;</span>)</span><br><span class="line">router.register(<span class="string">r&#x27;video&#x27;</span>, VideoViewSet, basename=<span class="string">&#x27;video&#x27;</span>)</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;&#x27;</span>, include(router.urls)),</span><br><span class="line">]</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;RESTful规范&quot;&gt;&lt;a href=&quot;#RESTful规范&quot; class=&quot;headerlink&quot; title=&quot;RESTful规范&quot;&gt;&lt;/a&gt;RESTful规范&lt;/h4&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;</summary>
      
    
    
    
    
    <category term="restframework" scheme="http://example.com/tags/restframework/"/>
    
  </entry>
  
  <entry>
    <title>django+uWSGI+nginx部署</title>
    <link href="http://example.com/2021/09/29/django+uWSGI+nginx%E9%83%A8%E7%BD%B2/"/>
    <id>http://example.com/2021/09/29/django+uWSGI+nginx%E9%83%A8%E7%BD%B2/</id>
    <published>2021-09-29T03:53:00.000Z</published>
    <updated>2022-08-25T08:38:22.453Z</updated>
    
    <content type="html"><![CDATA[<h4 id="WSGI-uWSGI-uwsgi"><a href="#WSGI-uWSGI-uwsgi" class="headerlink" title="WSGI uWSGI uwsgi"></a>WSGI uWSGI uwsgi</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">WSGI:Web服务器网关接口（Python Web Server Gateway Interface，缩写为WSGI）是为Python语言定义的Web服务器和Web应用程序或框架之间的一种简单而通用的接口</span><br><span class="line">uWSGI:它是一个Web服务器（类似的有wsgiref，gunicorn），它实现了WSGI协议、uwsgi、http等协议。用于接收前端服务器转发的动态请求并处理后发给 web 应用程序。</span><br><span class="line">uwsgi:它是uWSGI服务器实现的独有的协议，用于定义传输信息的类型，是用于前端服务器与 uwsgi 的通信规范</span><br></pre></td></tr></table></figure><p>WSGI有什么问题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">你可能会问“为什么不升级 WSGI”？多年来，这个问题已经被问过很多次，问题通常最终是 WSGI 的单一可调用接口不适合 WebSocket 等更多涉及的 Web 协议。</span><br><span class="line"></span><br><span class="line">WSGI 应用程序是一个单一的、同步的可调用对象，它接受一个请求并返回一个响应；这不允许长期连接，就像您使用长轮询 HTTP 或 WebSocket 连接一样。</span><br><span class="line"></span><br><span class="line">即使我们使这个可调用异步，它仍然只有一个提供请求的路径，因此具有多个传入事件（如接收 WebSocket 帧）的协议无法触发它。</span><br></pre></td></tr></table></figure><p>ASGI如何工作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ASGI 被构造为单个异步可调用对象。它需要一个scope，它<span class="built_in">dict</span>包含有关特定连接的详细信息 send，一个异步可调用对象，它允许应用程序向客户端发送事件消息，以及receive一个异步调用对象，它允许应用程序从客户端接收事件消息。</span><br><span class="line"></span><br><span class="line">这不仅允许每个应用程序有多个传入事件和传出事件，还允许后台协程，以便应用程序可以做其他事情（例如侦听外部触发器上的事件，如 Redis 队列）</span><br></pre></td></tr></table></figure><h4 id="项目流程"><a href="#项目流程" class="headerlink" title="项目流程"></a>项目流程</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">首先客户端请求服务资源，</span><br><span class="line">nginx作为直接对外的服务接口,接收到客户端发送过来的http请求,会解包、分析，</span><br><span class="line">如果是静态文件请求就根据nginx配置的静态文件目录，返回请求的资源，</span><br><span class="line">如果是动态的请求,nginx就通过配置文件,将请求传递给uWSGI；uWSGI 将接收到的包进行处理，并转发给wsgi，</span><br><span class="line">wsgi根据请求调用django工程的某个文件或函数，处理完后django将返回值交给wsgi，</span><br><span class="line">wsgi将返回值进行打包，转发给uWSGI，</span><br><span class="line">uWSGI接收后转发给nginx,nginx最终将返回值返回给客户端(如浏览器)。</span><br><span class="line"><span class="emphasis">*注:不同的组件之间传递信息涉及到数据格式和协议的转换</span></span><br></pre></td></tr></table></figure><h4 id="配置pip源"><a href="#配置pip源" class="headerlink" title="配置pip源"></a>配置pip源</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd &amp;&amp; mkdir .pip</span><br><span class="line">cd .pip </span><br><span class="line">vim pip.conf</span><br><span class="line">[<span class="keyword">global</span>]</span><br><span class="line">index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure><h4 id="安装python"><a href="#安装python" class="headerlink" title="安装python"></a>安装python</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">1）前往用户根目录</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">: <span class="built_in">cd</span> ~</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">: yum install zlib-devel bzip2-devel ncurses-devel  <span class="comment"># 安装依赖</span></span></span><br><span class="line">2）下载 或 上传 Python3.6.7</span><br><span class="line"><span class="meta">#</span><span class="bash"> 服务器终端</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">: wget https://www.python.org/ftp/python/3.6.7/Python-3.6.7.tar.xz</span></span><br><span class="line"></span><br><span class="line">3）解压安装包</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">: tar -xf Python-3.6.7.tar.xz</span></span><br><span class="line"></span><br><span class="line">4）进入目标文件</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">: <span class="built_in">cd</span> Python-3.6.7</span></span><br><span class="line"></span><br><span class="line">5）配置安装路径：mkdir /usr/local/python3</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">: ./configure --prefix=/usr/<span class="built_in">local</span>/python3 <span class="comment"># 如果报错</span></span></span><br><span class="line">yum install gcc -y  # 安装gcc编译工具</span><br><span class="line"></span><br><span class="line">6）编译并安装</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">: make &amp;&amp; sudo make install</span></span><br><span class="line"></span><br><span class="line">7）建立软连接：终端命令 python3，pip3</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">: ls -l /usr/bin | grep python <span class="comment">#查看软连接</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">: ln -s /usr/<span class="built_in">local</span>/python3/bin/python3.6 /usr/bin/python3</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">: ln -s /usr/<span class="built_in">local</span>/python3/bin/pip3.6 /usr/bin/pip3</span></span><br><span class="line"></span><br><span class="line">8）删除安装包与文件：</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">: rm -rf Python-3.6.7</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">: rm -rf Python-3.6.7.tar.xz</span></span><br></pre></td></tr></table></figure><h4 id="解决linux下pip报错"><a href="#解决linux下pip报错" class="headerlink" title="解决linux下pip报错"></a>解决linux下pip报错</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>安装相关依赖</span><br><span class="line">yum install gcc libffi-devel zlib* openssl-devel</span><br><span class="line"><span class="number">2.</span>安装openssl</span><br><span class="line">wget https://github.com/openssl/openssl/archive/OpenSSL_1_1_1d.tar.gz</span><br><span class="line">tar -zxvf OpenSSL_1_1_1d.tar.gz</span><br><span class="line">mkdir openssl</span><br><span class="line">cd OpenSSL_1_1_1d</span><br><span class="line"><span class="number">3.</span>编译安装</span><br><span class="line">./config --prefix=/usr/local/openssl</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="number">4.</span>替换当前系统旧版本openssl</span><br><span class="line">mv /usr/<span class="built_in">bin</span>/openssl /usr/<span class="built_in">bin</span>/openssl.old</span><br><span class="line">mv /usr/lib64/openssl /usr/lib64/openssl.old</span><br><span class="line">mv /usr/lib64/libssl.so /usr/lib64/libssl.so.old</span><br><span class="line">ln -s /usr/local/openssl/<span class="built_in">bin</span>/openssl /usr/<span class="built_in">bin</span>/openssl</span><br><span class="line">ln -s /usr/local/openssl/include/openssl /usr/include/openssl</span><br><span class="line">ln -s /usr/local/openssl/lib/libssl.so /usr/lib64/libssl.so</span><br><span class="line">echo <span class="string">&quot;/usr/local/openssl/lib&quot;</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig -v </span><br><span class="line"><span class="number">5.</span>查看版本</span><br><span class="line">openssl version</span><br><span class="line">openssl: error <span class="keyword">while</span> loading shared libraries: libcrypto.so<span class="number">.1</span><span class="number">.1</span>: cannot <span class="built_in">open</span> shared <span class="built_in">object</span> file: No such file <span class="keyword">or</span> directory</span><br><span class="line"><span class="comment"># 若查看版本报错加上下面两句      -s软连接 -snf重新指定软链接         </span></span><br><span class="line">ln -s /usr/local/openssl/lib/libcrypto.so<span class="number">.1</span><span class="number">.1</span> /usr/lib64/libcrypto.so<span class="number">.1</span><span class="number">.1</span></span><br><span class="line"></span><br><span class="line">ln -snf /usr/local/openssl/lib/libcrypto.so<span class="number">.1</span><span class="number">.1</span> /usr/lib64/libcrypto.so<span class="number">.1</span><span class="number">.1</span></span><br><span class="line">[root@FCY-SRV03 openssl-OpenSSL_1_1_1d]<span class="comment"># openssl version</span></span><br><span class="line">OpenSSL <span class="number">1.1</span><span class="number">.1</span>d  <span class="number">10</span> Sep <span class="number">2019</span></span><br><span class="line"></span><br><span class="line"><span class="number">6.</span>重新安装python</span><br><span class="line">mkdir python3</span><br><span class="line">cd Python-<span class="number">3.8</span><span class="number">.5</span></span><br><span class="line">./configure --prefix=/usr/local/python3 --<span class="keyword">with</span>-openssl=/usr/local/openssl</span><br><span class="line">make &amp;&amp; sudo make install</span><br><span class="line"><span class="comment"># 如果出现pip警告</span></span><br><span class="line">echo <span class="string">&#x27;export PATH=/usr/local/python3/bin:$PATH&#x27;</span> &gt;&gt;~/.bashrc</span><br><span class="line">source ~/.bashrc</span><br><span class="line"><span class="comment"># 建立软连接</span></span><br><span class="line">ln -s /usr/local/python3/<span class="built_in">bin</span>/python3 /usr/<span class="built_in">bin</span>/python3</span><br><span class="line">ln -s /usr/local/python3/<span class="built_in">bin</span>/pip3 /usr/<span class="built_in">bin</span>/pip3</span><br><span class="line"><span class="comment"># 验证</span></span><br><span class="line">python3 -v</span><br><span class="line">pip3 -v</span><br></pre></td></tr></table></figure><h4 id="配置python虚拟环境"><a href="#配置python虚拟环境" class="headerlink" title="配置python虚拟环境"></a>配置python虚拟环境</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">pip3 install virtualenvwrapper</span><br><span class="line">vim ~/.bashrc</span><br><span class="line"><span class="comment"># 增加配置</span></span><br><span class="line">export PATH=/usr/local/python3/<span class="built_in">bin</span>:$PATH</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">VIRTUALENVWRAPPER_PYTHON=/usr/local/python3/<span class="built_in">bin</span>/python3    <span class="comment"># 指定virtualenvwrapper执行的python版本</span></span><br><span class="line">export WORKON_HOME=/root/.virtualenv    <span class="comment"># 指定虚拟环境存放目录，.virtualenvs目录名可自拟</span></span><br><span class="line">source /usr/local/python3/<span class="built_in">bin</span>/virtualenvwrapper.sh    <span class="comment"># virtualenvwrapper.sh所在目录</span></span><br><span class="line">source ~/.bashrc <span class="comment"># 激活配置</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建虚拟环境</span></span><br><span class="line">mkvirtualenv test</span><br><span class="line"><span class="comment"># 使用虚拟环境</span></span><br><span class="line">workon test</span><br><span class="line"><span class="comment"># 退出虚拟环境</span></span><br><span class="line">deactivate</span><br><span class="line"><span class="comment"># 删除虚拟环境</span></span><br><span class="line">rmvirtualenv test</span><br></pre></td></tr></table></figure><h4 id="安装uwsgi"><a href="#安装uwsgi" class="headerlink" title="安装uwsgi"></a>安装uwsgi</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果安装过程中报错</span></span><br><span class="line"><span class="comment"># 1.下载相对对应python版本的python-devel</span></span><br><span class="line"><span class="comment"># 2.openssl版本不对，安装1.1以上，卸载yum安装的openssl-devel</span></span><br><span class="line">yum remove openssl-devel</span><br><span class="line">openssl version</span><br><span class="line">pip install uwsgi</span><br></pre></td></tr></table></figure><h4 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>）前往用户根目录</span><br><span class="line">cd /usr/local/</span><br><span class="line">mkdir nginx</span><br><span class="line">yum -y install gcc pcre-devel zlib-devel openssl openssl-devel </span><br><span class="line"></span><br><span class="line"><span class="number">2</span>）下载nginx1<span class="number">.13</span><span class="number">.7</span></span><br><span class="line">wget http://nginx.org/download/nginx-<span class="number">1.13</span><span class="number">.7</span>.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>）解压安装包</span><br><span class="line">tar -xf nginx-<span class="number">1.13</span><span class="number">.7</span>.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>）进入目标文件</span><br><span class="line">cd nginx-<span class="number">1.13</span><span class="number">.7</span></span><br><span class="line"></span><br><span class="line"><span class="number">5</span>）配置安装路径：</span><br><span class="line">&gt;: ./configure --prefix=/usr/local/nginx</span><br><span class="line"></span><br><span class="line"><span class="number">6</span>）编译并安装</span><br><span class="line">&gt;: make &amp;&amp; sudo make install</span><br><span class="line"></span><br><span class="line"><span class="number">7</span>）建立软连接：终端命令 nginx</span><br><span class="line">&gt;: ln -s /usr/local/nginx/sbin/nginx /usr/<span class="built_in">bin</span>/nginx</span><br><span class="line"></span><br><span class="line"><span class="number">8</span>）删除安装包与文件：</span><br><span class="line">&gt;: cd ~</span><br><span class="line">&gt;: rm -rf nginx-<span class="number">1.13</span><span class="number">.7</span></span><br><span class="line">&gt;: rm -rf nginx-<span class="number">1.13</span><span class="number">.7</span>.tar.xz</span><br><span class="line"></span><br><span class="line"><span class="number">9</span>）测试Nginx环境，服务器运行nginx，本地访问服务器ip</span><br><span class="line">&gt;: nginx</span><br><span class="line">&gt;: 服务器绑定的域名 或 ip:<span class="number">80</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#Nginx命令</span></span><br><span class="line"><span class="number">1</span>）启动</span><br><span class="line">&gt;: nginx</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>）关闭nginx</span><br><span class="line">&gt;: nginx -s stop</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>）重启nginx</span><br><span class="line">&gt;: nginx -s reload</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>）查看端口，强行关闭</span><br><span class="line">&gt;: ps -aux|grep nginx</span><br><span class="line">&gt;: kill &lt;pid:进程编号&gt;</span><br><span class="line"> </span><br></pre></td></tr></table></figure><h4 id="配置uwsgi-ini"><a href="#配置uwsgi-ini" class="headerlink" title="配置uwsgi.ini"></a>配置uwsgi.ini</h4><ul><li>需要在django项目根目录（与manage.py同级目录）下，vim uwsgi.ini，写入相关配置</li><li>启动：uwsgi –ini uwsgi.ini<br>停止：uwsgi –stop uwsgi.pid<br>重启：uwsgi –reload uwsgi.pid</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[uwsgi]</span><br><span class="line"><span class="comment">#项目目录</span></span><br><span class="line">chdir=/usr/local/project/AlgorithmServer</span><br><span class="line"><span class="comment">#指定项目application</span></span><br><span class="line">module=AlgorithmServer.wsgi:application</span><br><span class="line">home=/root/.virtualenv/AlgorithmServer</span><br><span class="line"><span class="comment">#指定sock的文件路径（nginx使用）</span></span><br><span class="line">socket=<span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">9001</span></span><br><span class="line"><span class="comment">#http=0.0.0.0:8000</span></span><br><span class="line"><span class="comment"># 进程个数（processess一样效果）</span></span><br><span class="line">processes=<span class="number">4</span></span><br><span class="line"><span class="built_in">max</span>-requests=<span class="number">5000</span></span><br><span class="line"><span class="comment">#指定启动时的pid文件路径</span></span><br><span class="line">pidfile=/usr/local/project/AlgorithmServer/uwsgi.pid</span><br><span class="line"><span class="comment">#启用主进程</span></span><br><span class="line">master=<span class="literal">True</span></span><br><span class="line"><span class="comment">#自动移除unix Socket和pid文件当服务停止的时候</span></span><br><span class="line">vacuum=<span class="literal">True</span></span><br><span class="line"><span class="comment">#设置日志目录</span></span><br><span class="line">daemonize=/usr/local/project/AlgorithmServer/uwsgi.log</span><br></pre></td></tr></table></figure><h4 id="收集静态资源"><a href="#收集静态资源" class="headerlink" title="收集静态资源"></a>收集静态资源</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/project/AlgorithmServer</span><br><span class="line">mkdir static</span><br><span class="line">chmod 777 static/</span><br><span class="line">python manage.py collectstatic</span><br></pre></td></tr></table></figure><h4 id="Django项目配置"><a href="#Django项目配置" class="headerlink" title="Django项目配置"></a>Django项目配置</h4><ul><li>settings.py</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line">from os import path</span><br><span class="line">from pathlib import Path</span><br><span class="line"></span><br><span class="line"><span class="section"># Build paths inside the project like this: BASE<span class="emphasis">_DIR / &#x27;subdir&#x27;.</span></span></span><br><span class="line"><span class="emphasis"><span class="section">BASE_</span>DIR = Path(<span class="strong">__file__</span>).resolve().parent.parent</span></span><br><span class="line">sys.path.insert(0, path.join(BASE<span class="emphasis">_DIR, &#x27;apps&#x27;))</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis"># Application definition</span></span><br><span class="line"><span class="emphasis">INSTALLED_</span>APPS = [</span><br><span class="line"><span class="code">    &#x27;rest_framework&#x27;,</span></span><br><span class="line"><span class="code">    &#x27;drf_spectacular&#x27;,</span></span><br><span class="line"><span class="code">    &#x27;django_filters&#x27;,</span></span><br><span class="line"><span class="code"> ]</span></span><br><span class="line"><span class="code"> </span></span><br><span class="line"><span class="code"> </span></span><br><span class="line"><span class="code">TEMPLATES = [</span></span><br><span class="line"><span class="code">    &#123;</span></span><br><span class="line"><span class="code">        &#x27;BACKEND&#x27;: &#x27;django.template.backends.django.DjangoTemplates&#x27;,</span></span><br><span class="line"><span class="code">        &#x27;DIRS&#x27;: [BASE_DIR / &#x27;templates&#x27;]</span></span><br><span class="line"><span class="code">        ,</span></span><br><span class="line"><span class="code">        &#x27;APP_DIRS&#x27;: True,</span></span><br><span class="line"><span class="code">        &#x27;OPTIONS&#x27;: &#123;</span></span><br><span class="line"><span class="code">            &#x27;context_processors&#x27;: [</span></span><br><span class="line"><span class="code">                &#x27;django.template.context_processors.debug&#x27;,</span></span><br><span class="line"><span class="code">                &#x27;django.template.context_processors.request&#x27;,</span></span><br><span class="line"><span class="code">                &#x27;django.contrib.auth.context_processors.auth&#x27;,</span></span><br><span class="line"><span class="code">                &#x27;django.contrib.messages.context_processors.messages&#x27;,</span></span><br><span class="line"><span class="code">            ],</span></span><br><span class="line"><span class="code">        &#125;,</span></span><br><span class="line"><span class="code">    &#125;,</span></span><br><span class="line"><span class="code">]</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="section"># Internationalization</span></span><br><span class="line"><span class="section"># https://docs.djangoproject.com/en/3.2/topics/i18n/</span></span><br><span class="line"></span><br><span class="line">LANGUAGE<span class="emphasis">_CODE = &#x27;zh-hans&#x27;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">TIME_</span>ZONE = &#x27;Asia/Shanghai&#x27;</span><br><span class="line"></span><br><span class="line">USE<span class="emphasis">_I18N = True</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">USE_</span>L10N = True</span><br><span class="line"></span><br><span class="line">USE<span class="emphasis">_TZ = False</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis"># Static files (CSS, JavaScript, Images)</span></span><br><span class="line"><span class="emphasis"># https://docs.djangoproject.com/en/3.2/howto/static-files/</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">STATIC_</span>URL = &#x27;/static/&#x27;</span><br><span class="line">STATIC<span class="emphasis">_ROOT = &#x27;static&#x27;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis"># Default primary key field type</span></span><br><span class="line"><span class="emphasis"># https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">DEFAULT_</span>AUTO<span class="emphasis">_FIELD = &#x27;django.db.models.BigAutoField&#x27;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">#MEDIA_</span>ROOT = &#x27;media&#x27;</span><br><span class="line"></span><br><span class="line">MEDIA<span class="emphasis">_URL = &#x27;/media/&#x27;</span></span><br><span class="line"><span class="emphasis">MEDIA_</span>ROOT = &#x27;media&#x27;</span><br><span class="line"></span><br><span class="line"><span class="section"># Custom settings</span></span><br><span class="line">DATETIME<span class="emphasis">_FORMAT = &#x27;%Y-%m-%d %H:%M:%S&#x27;</span></span><br><span class="line"><span class="emphasis">DATE_</span>FORMAT = &#x27;%Y-%m-%d&#x27;</span><br><span class="line"></span><br><span class="line"><span class="section"># Django Rest Framework settings</span></span><br><span class="line">REST<span class="emphasis">_FRAMEWORK = &#123;</span></span><br><span class="line"><span class="emphasis">    # Use Django&#x27;s standard `django.contrib.auth` permissions,</span></span><br><span class="line"><span class="emphasis">    # or allow read-only access for unauthenticated users.</span></span><br><span class="line"><span class="emphasis">    &#x27;DEFAULT_</span>PERMISSION<span class="emphasis">_CLASSES&#x27;: [</span></span><br><span class="line"><span class="emphasis">        &#x27;rest_</span>framework.permissions.AllowAny&#x27;,</span><br><span class="line"><span class="code">    ],</span></span><br><span class="line"><span class="code">    &#x27;DEFAULT_SCHEMA_CLASS&#x27;: &#x27;drf_spectacular.openapi.AutoSchema&#x27;,</span></span><br><span class="line"><span class="code">    &#x27;DATETIME_FORMAT&#x27;: DATETIME_FORMAT,</span></span><br><span class="line"><span class="code">    &#x27;DATETIME_INPUT_FORMATS&#x27;: [DATETIME_FORMAT],</span></span><br><span class="line"><span class="code">    &#x27;DATE_FORMAT&#x27;: DATE_FORMAT,</span></span><br><span class="line"><span class="code">    &#x27;DATE_INPUT_FORMATS&#x27;: [DATE_FORMAT],</span></span><br><span class="line"><span class="code">    &#x27;DEFAULT_FILTER_BACKENDS&#x27;: [&#x27;django_filters.rest_framework.DjangoFilterBackend&#x27;],</span></span><br><span class="line"><span class="code">    &#x27;DEFAULT_PAGINATION_CLASS&#x27;: &#x27;rest_framework.pagination.PageNumberPagination&#x27;,</span></span><br><span class="line"><span class="code">    &#x27;PAGE_SIZE&#x27;: 10,</span></span><br><span class="line"><span class="code">    # &#x27;DEFAULT_RENDERER_CLASSES&#x27;: [&#x27;utils.renderers.MyJSONRender&#x27;],</span></span><br><span class="line"><span class="code">    &#x27;EXCEPTION_HANDLER&#x27;: &#x27;utils.exception_handler.custom_exception_handler&#x27;</span></span><br><span class="line"><span class="code">&#125;</span></span><br></pre></td></tr></table></figure><ul><li>urls.py</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">from django.urls import path, include</span><br><span class="line">from django.conf import settings</span><br><span class="line">from django.conf.urls.static import static</span><br><span class="line"></span><br><span class="line">from django.views.generic import RedirectView</span><br><span class="line">from drf<span class="emphasis">_spectacular.views import SpectacularAPIView, SpectacularSwaggerView</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">urlpatterns = [</span></span><br><span class="line"><span class="emphasis">    path(&#x27;&#x27;, RedirectView.as_</span>view(url=&#x27;docs/&#x27;)),</span><br><span class="line"><span class="code">    path(&#x27;api/schema/&#x27;, SpectacularAPIView.as_view(), name=&#x27;schema&#x27;),</span></span><br><span class="line"><span class="code">    path(&#x27;docs/&#x27;, SpectacularSwaggerView.as_view(url_name=&#x27;schema&#x27;), name=&#x27;swagger-ui&#x27;),</span></span><br><span class="line"><span class="code">    path(&#x27;admin/&#x27;, admin.site.urls),</span></span><br><span class="line"><span class="code">]</span></span><br><span class="line"><span class="code"></span></span><br><span class="line">if settings.DEBUG:</span><br><span class="line"><span class="code">    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT) </span></span><br></pre></td></tr></table></figure><h4 id="nginx配置文件"><a href="#nginx配置文件" class="headerlink" title="nginx配置文件"></a>nginx配置文件</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">events &#123;</span><br><span class="line">    worker_connections  <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet<span class="literal">-stream</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">    <span class="comment">#                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">    <span class="comment">#                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#access_log  logs/access.log  main;</span></span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#keepalive_timeout  0;</span></span><br><span class="line">    keepalive_timeout  <span class="number">65</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       <span class="number">80</span>;</span><br><span class="line">        server_name  <span class="number">192.168</span>.<span class="number">17.6</span>;</span><br><span class="line">        charset utf<span class="literal">-8</span>;</span><br><span class="line">        <span class="comment">#access_log  /usr/local/project/AlgorithmServer/nginx_access.log;</span></span><br><span class="line">        <span class="comment">#error_log  /usr/local/project/AlgorithmServer/nginx_error.log;</span></span><br><span class="line">        client_max_body_size <span class="number">75</span>M;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">           include /usr/local/nginx/conf/uwsgi_params;</span><br><span class="line">           uwsgi_pass  <span class="number">0.0</span>.<span class="number">0.0</span>:<span class="number">9001</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"> location /<span class="keyword">static</span> &#123;</span><br><span class="line">           alias  /usr/local/project/AlgorithmServer/<span class="keyword">static</span>;</span><br><span class="line">        &#125;              </span><br><span class="line"></span><br><span class="line">        <span class="comment">#error_page  404              /404.html;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        error_page   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /<span class="number">50</span>x.html;</span><br><span class="line">        location = /<span class="number">50</span>x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Flask部署"><a href="#Flask部署" class="headerlink" title="Flask部署"></a>Flask部署</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">FROM python:<span class="number">3.9</span></span><br><span class="line">ENV PYTHONDONTWRITEBYTECODE=<span class="number">1</span></span><br><span class="line">ENV PYTHONUNBUFFERED=<span class="number">1</span></span><br><span class="line">WORKDIR /backend</span><br><span class="line"><span class="built_in">COPY</span> ./backend .</span><br><span class="line">RUN pip install  -<span class="literal">-no</span><span class="literal">-cache</span><span class="literal">-dir</span> <span class="literal">-r</span> requirements.txt <span class="literal">-i</span> https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">EXPOSE <span class="number">5000</span></span><br><span class="line"><span class="comment"># 命令启动</span></span><br><span class="line">uwsgi -<span class="literal">-socket</span> <span class="number">0.0</span>.<span class="number">0.0</span>:<span class="number">5000</span> -<span class="literal">-protocol</span>=http <span class="literal">-p</span> <span class="number">3</span> <span class="literal">-w</span> server:app</span><br><span class="line"><span class="comment"># 配置文件</span></span><br><span class="line">[<span class="type">uwsgi</span>]</span><br><span class="line"><span class="comment">#项目目录</span></span><br><span class="line"><span class="built_in">chdir</span>=/backend</span><br><span class="line"><span class="comment">#指定项目application</span></span><br><span class="line"><span class="comment"># server启动脚本:对应里面的app</span></span><br><span class="line">module=server:app</span><br><span class="line"><span class="comment">#指定sock的文件路径（nginx使用）</span></span><br><span class="line"><span class="comment">#socket=0.0.0.0:5000</span></span><br><span class="line">http=<span class="number">0.0</span>.<span class="number">0.0</span>:<span class="number">5000</span></span><br><span class="line"><span class="comment"># 进程个数（processess一样效果）</span></span><br><span class="line">processes=<span class="number">4</span></span><br><span class="line">max<span class="literal">-requests</span>=<span class="number">5000</span></span><br><span class="line"><span class="comment">#指定启动时的pid文件路径</span></span><br><span class="line">pidfile=/backend/uwsgi.pid</span><br><span class="line"><span class="comment">#启用主进程</span></span><br><span class="line">master=True</span><br><span class="line"><span class="comment">#自动移除unix Socket和pid文件当服务停止的时候</span></span><br><span class="line">vacuum=True</span><br><span class="line"><span class="comment">#设置日志目录</span></span><br><span class="line">daemonize=/backend/uwsgi.log</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;WSGI-uWSGI-uwsgi&quot;&gt;&lt;a href=&quot;#WSGI-uWSGI-uwsgi&quot; class=&quot;headerlink&quot; title=&quot;WSGI uWSGI uwsgi&quot;&gt;&lt;/a&gt;WSGI uWSGI uwsgi&lt;/h4&gt;&lt;figure class=&quot;hi</summary>
      
    
    
    
    
    <category term="uWSGI" scheme="http://example.com/tags/uWSGI/"/>
    
  </entry>
  
  <entry>
    <title>RabbitMQ</title>
    <link href="http://example.com/2021/09/04/RabbitMQ/"/>
    <id>http://example.com/2021/09/04/RabbitMQ/</id>
    <published>2021-09-04T10:00:11.000Z</published>
    <updated>2021-11-12T04:58:02.236Z</updated>
    
    <content type="html"><![CDATA[<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><ul><li>RabbitMq 是实现了高级消息队列协议（AMQP）的开源消息代理中间件。消息队列是一种应用程序对应用程序的通行方式，应用程序通过写消息，将消息传递于队列，由另一应用程序读取 完成通信。而作为中间件的 RabbitMq 无疑是目前最流行的消息队列之一</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 应用场景</span></span><br><span class="line">系统的高可用：日常生活当中各种商城秒杀，高流量，高并发的场景。当服务器接收到如此大量请求处理业务时，有宕机的风险。某些业务可能极其复杂，但这部分不是高时效性，不需要立即反馈给用户，我们可以将这部分处理请求抛给队列，让程序后置去处理，减轻服务器在高并发场景下的压力。</span><br><span class="line"></span><br><span class="line">分布式系统，集成系统，子系统之间的对接，以及架构设计中常常需要考虑消息队列的应用</span><br></pre></td></tr></table></figure><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Broker：简单来说就是消息队列服务器实体。</span><br><span class="line">Exchange：消息交换机，它指定消息按什么规则，路由到哪个队列。</span><br><span class="line">Queue：消息队列载体，每个消息都会被投入到一个或多个队列。</span><br><span class="line">Binding：绑定，它的作用就是把exchange和queue按照路由规则绑定起来。</span><br><span class="line">Routing Key：路由关键字，exchange根据这个关键字进行消息投递。</span><br><span class="line">vhost：虚拟主机，一个broker里可以开设多个vhost，用作不同用户的权限分离。</span><br><span class="line">producer：消息生产者，就是投递消息的程序。</span><br><span class="line">consumer：消息消费者，就是接受消息的程序。</span><br><span class="line">channel：消息通道，在客户端的每个连接里，可建立多个channel，每个channel代表一个会话任务</span><br></pre></td></tr></table></figure><h4 id="轮询模式"><a href="#轮询模式" class="headerlink" title="轮询模式"></a>轮询模式</h4><ul><li>此模式下，发送队列的一方把消息存入mq的指定队列后，若有消费者端联入相应队列，即会获取到消息，并且队列中的消息会被消费掉。<br>若有多个消费端同时连接着队列，则会已轮询的方式将队列中的消息消费掉</li></ul><p><strong>生产者</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pika</span><br><span class="line"></span><br><span class="line">credentials = pika.PlainCredentials(<span class="string">&#x27;guest&#x27;</span>, <span class="string">&#x27;guest&#x27;</span>)</span><br><span class="line">connection = pika.BlockingConnection(pika.ConnectionParameters(</span><br><span class="line">    <span class="string">&#x27;127.0.0.1&#x27;</span>,  <span class="comment"># MQ地址(本机)</span></span><br><span class="line">    <span class="number">5672</span>,  <span class="comment"># 端口号</span></span><br><span class="line">    <span class="string">&#x27;/&#x27;</span>,  <span class="comment"># 虚拟主机</span></span><br><span class="line">    credentials  <span class="comment"># 用户名|密码</span></span><br><span class="line">))</span><br><span class="line">channel = connection.channel()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 声明queue</span></span><br><span class="line">channel.queue_declare(</span><br><span class="line">    queue=<span class="string">&#x27;queue_name_test&#x27;</span>,  <span class="comment"># 队列名</span></span><br><span class="line">    durable=<span class="literal">True</span>)  <span class="comment"># 使队列持久化</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># n RabbitMQ a message can never be sent directly to the queue, it always needs to go through an exchange.</span></span><br><span class="line">channel.basic_publish(exchange=<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">                      routing_key=<span class="string">&#x27;queue_name_test&#x27;</span>,</span><br><span class="line">                      body=<span class="string">&#x27;Hello World!&#x27;</span>,</span><br><span class="line">                      properties=pika.BasicProperties(delivery_mode=<span class="number">2</span>, ))  <span class="comment"># 消息持久化</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot; [x] Sent &#x27;Hello World!&#x27;&quot;</span>)</span><br><span class="line">connection.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>消费者</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">import pika</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">auth = pika.PlainCredentials(</span><br><span class="line">    username=&#x27;guest&#x27;,</span><br><span class="line">    password=&#x27;guest&#x27;,</span><br><span class="line">)  # 用户名 / 密码</span><br><span class="line">connection = pika.BlockingConnection(</span><br><span class="line">    pika.ConnectionParameters(</span><br><span class="line">        &#x27;127.0.0.1&#x27;,  # RabbitMQ 地址</span><br><span class="line">        5672,  # 端口号</span><br><span class="line">        &#x27;/&#x27;,  # 虚拟主机</span><br><span class="line">        auth,  # 验证</span><br><span class="line">    )</span><br><span class="line">)  # 链接RabbitMQ</span><br><span class="line">channel = connection.channel()  # 创建RabbitMQ通道</span><br><span class="line"></span><br><span class="line">channel.queue_declare(</span><br><span class="line">    queue=&#x27;queue_name_test&#x27;,  # 消费对列名</span><br><span class="line">    durable=True,  # 持久化</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def callback(ch, method, properties, body):</span><br><span class="line">    print(&quot;消费者:  %r&quot; % body)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">channel.basic_consume(  # 消费信息</span><br><span class="line">    queue=&#x27;queue_name_test&#x27;,  # 对列名</span><br><span class="line">    # auto_ack=True,  # 自动回应 ，一般不写，如果机器宕机消息就丢失</span><br><span class="line">    on_message_callback=callback,  # 如果接收到消息，就调用callback回调消息</span><br><span class="line">)</span><br><span class="line">time.sleep(5)  # 模拟消费时间</span><br><span class="line">print(&quot;消费者&quot;)</span><br><span class="line">channel.start_consuming()  # 开始消费</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="模拟轮询"><a href="#模拟轮询" class="headerlink" title="模拟轮询"></a>模拟轮询</h4><p><strong>生产者</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pika</span><br><span class="line"></span><br><span class="line">credentials = pika.PlainCredentials(<span class="string">&#x27;guest&#x27;</span>, <span class="string">&#x27;guest&#x27;</span>)</span><br><span class="line">connection = pika.BlockingConnection(pika.ConnectionParameters(</span><br><span class="line">    <span class="string">&#x27;127.0.0.1&#x27;</span>,  <span class="comment"># MQ地址(本机)</span></span><br><span class="line">    <span class="number">5672</span>,  <span class="comment"># 端口号</span></span><br><span class="line">    <span class="string">&#x27;/&#x27;</span>,  <span class="comment"># 虚拟主机</span></span><br><span class="line">    credentials  <span class="comment"># 用户名|密码</span></span><br><span class="line">))</span><br><span class="line">channel = connection.channel()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 声明queue</span></span><br><span class="line">channel.queue_declare(</span><br><span class="line">    queue=<span class="string">&#x27;queue_name_test&#x27;</span>,  <span class="comment"># 队列名</span></span><br><span class="line">    durable=<span class="literal">True</span>)  <span class="comment"># 使队列持久化</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 轮询模式</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    channel.basic_publish(exchange=<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">                          routing_key=<span class="string">&#x27;queue_name_test&#x27;</span>,</span><br><span class="line">                          body=<span class="string">&#x27;Hello World &#123;&#125;!&#x27;</span>.<span class="built_in">format</span>(i),</span><br><span class="line">                          properties=pika.BasicProperties(delivery_mode=<span class="number">2</span>, ))  <span class="comment"># 消息持久化</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot; [x] Sent &#x27;Hello World!&#x27;&quot;</span>)</span><br><span class="line">connection.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>新建3个文件消费者（分别启动）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">consumer1打印：消费者:  <span class="string">b&#x27;Hello World 2!&#x27;</span></span><br><span class="line">consumer2打印：消费者:  <span class="string">b&#x27;Hello World 0!&#x27;</span></span><br><span class="line">  消费者:  <span class="string">b&#x27;Hello World 3!&#x27;</span></span><br><span class="line">consumer3打印：消consumer2打印：费者:  <span class="string">b&#x27;Hello World 1!&#x27;</span></span><br><span class="line">消费者:  <span class="string">b&#x27;Hello World 4!&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>设置权重</strong></p><ul><li>RabbitMQ给消费者发消息的时候检测下消费者里的消息数量，如果超过指定值（比如1条），就不给你发了。<br>只需要在消费者端，channel.basic_consume前加上就可以了</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">channel.basic_qos(prefetch_count=<span class="number">1</span>)  <span class="comment"># 类似权重，按能力分发，如果有一个消息，就不在给你发</span></span><br><span class="line">channel.basic_consume(  </span><br><span class="line"><span class="comment"># auto_ack=True,  # 自动回应要注释</span></span><br><span class="line">)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>闲置消费</strong></p><ul><li><p>正常情况如果有多个消费者，是按照顺序第一个消息给第一个消费者，第二个消息给第二个消费者</p><p>但是可能第一个消息的消费者处理消息很耗时，一直没结束，就可以让第二个消费者优先获得闲置的消息</p></li><li><p>consumer</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pika</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">auth = pika.PlainCredentials(username=<span class="string">&#x27;guest&#x27;</span>,password=<span class="string">&#x27;guest&#x27;</span>)  </span><br><span class="line">connection = pika.BlockingConnection(pika.ConnectionParameters(<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">5672</span>,  <span class="string">&#x27;/&#x27;</span>, auth,))</span><br><span class="line"> </span><br><span class="line">channel = connection.channel()  </span><br><span class="line"></span><br><span class="line">channel.queue_declare( queue=<span class="string">&#x27;queue_name_test&#x27;</span>, durable=<span class="literal">True</span>, </span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">callback</span>(<span class="params">ch, method, properties, body</span>):</span></span><br><span class="line">    ch.basic_ack(delivery_tag=method.delivery_tag)</span><br><span class="line"><span class="built_in">print</span>(body)</span><br><span class="line"></span><br><span class="line">channel.basic_qos(prefetch_count=<span class="number">1</span>) </span><br><span class="line">channel.basic_consume(  </span><br><span class="line">    queue=<span class="string">&#x27;queue_name_test&#x27;</span>,  </span><br><span class="line">    <span class="comment"># auto_ack=True,  # 自动回应 ，一般不写，如果机器宕机消息就丢失</span></span><br><span class="line">    on_message_callback=callback,  </span><br><span class="line">)</span><br><span class="line">time.sleep(<span class="number">5</span>)  <span class="comment"># 模拟消费时间</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;消费者&quot;</span>)</span><br><span class="line">channel.start_consuming()  <span class="comment"># 开始消费</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="消息持久化"><a href="#消息持久化" class="headerlink" title="消息持久化"></a>消息持久化</h4><ul><li><strong>每次声明队列的时候，都加上durable</strong>，注意每个队列都得写，客户端、服务端声明的时候都得写，需要重新写一个队列。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">channel.queue_declare(queue=<span class="string">&#x27;hello2&#x27;</span>, durable=<span class="literal">True</span>) <span class="comment"># 队列持久化</span></span><br></pre></td></tr></table></figure><ul><li>producter</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">properties=pika.BasicProperties(</span><br><span class="line">    delivery_mode=<span class="number">2</span>,  <span class="comment"># 消息持久化，服务器宕机重启消息不会丢失</span></span><br><span class="line">    )</span><br></pre></td></tr></table></figure><h4 id="ack消息确认机制"><a href="#ack消息确认机制" class="headerlink" title="ack消息确认机制"></a>ack消息确认机制</h4><ul><li>producer</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pika</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">credentials = pika.PlainCredentials(<span class="string">&quot;guest&quot;</span>,<span class="string">&quot;guest&quot;</span>)</span><br><span class="line"></span><br><span class="line">connection = pika.BlockingConnection(pika.ConnectionParameters(<span class="string">&#x27;127.0.0.1&#x27;</span>,credentials=credentials))</span><br><span class="line">channel = connection.channel()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">channel.queue_declare(<span class="string">&#x27;hello&#x27;</span>, durable=<span class="literal">True</span>)</span><br><span class="line">channel.basic_publish(exchange=<span class="string">&#x27;&#x27;</span>, routing_key=<span class="string">&#x27;hello&#x27;</span>, body=<span class="string">&#x27;Hello World!&#x27;</span>, properties=pika.BasicProperties(</span><br><span class="line">    delivery_mode=<span class="number">2</span>, ))   </span><br><span class="line">connection.close()</span><br></pre></td></tr></table></figure><ul><li>consumer</li><li>生产者端消息持久后,需要在消费者端加上(ch.basic_ack(delivery_tag =method.delivery_tag)): 保证消息被消费后，消费端发送一个ack，然后服务端从队列删除该消息.</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pika</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">credentials = pika.PlainCredentials(<span class="string">&quot;guest&quot;</span>,<span class="string">&quot;guest&quot;</span>)</span><br><span class="line">connection = pika.BlockingConnection(pika.ConnectionParameters(<span class="string">&#x27;127.0.0.1&#x27;</span>,credentials=credentials))</span><br><span class="line">channel = connection.channel()</span><br><span class="line"><span class="comment"># 有可能客户端先启动，hello这个队列可能不存在，它也要声明</span></span><br><span class="line"><span class="comment"># 如果队列存在，就不创建，如果队列不存在，就创建</span></span><br><span class="line">channel.queue_declare(queue=<span class="string">&#x27;hello&#x27;</span>, durable=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">callback</span>(<span class="params">ch, method, properties, body</span>):</span></span><br><span class="line">    <span class="comment"># 通知服务端，消息取走了，如果auto_ack=False，不加下面，消息会一直存在</span></span><br><span class="line">    ch.basic_ack(delivery_tag=method.delivery_tag)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot; 我从队列中取到了：%s&quot;</span> % body)</span><br><span class="line"></span><br><span class="line">channel.basic_consume(queue=<span class="string">&#x27;hello&#x27;</span>, on_message_callback=callback, auto_ack=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">channel.start_consuming()</span><br></pre></td></tr></table></figure><h4 id="广播模式"><a href="#广播模式" class="headerlink" title="广播模式"></a>广播模式</h4><ul><li><p>rabbitmq 的发布与订阅要借助交换机（Exchange）的原理实现</p></li><li><p>Exchange 一共有三种工作模式：<strong>fanout, direct, topicd</strong></p></li><li><p>需要queue和exchange绑定，因为消费者不是和exchange直连的，消费者是连在queue上，queue绑定在exchange上，消费者只会在queue里拿消息</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">          |------------------------|</span><br><span class="line">          |            /—— queue &lt;—|—&gt; consumer1</span><br><span class="line">producer —|—exchange1 &lt;bind        |                 </span><br><span class="line">       \  |            \—— queue &lt;—|—&gt; consumer2</span><br><span class="line">        \-|-exchange2    ……        |</span><br><span class="line">          |------------------------|</span><br></pre></td></tr></table></figure><p><strong>fanout</strong></p><p>这种模式下，传递到 exchange 的消息将会<strong>转发到所有</strong>与其绑定的 queue 上。</p><ul><li>不需要指定 routing_key ，即使指定了也是无效。</li><li>需要提前将 exchange 和 queue 绑定，一个 exchange 可以绑定多个 queue，一个queue可以绑定多个exchange。</li><li>需要先启动 <strong>订阅者</strong>，此模式下的队列是 consumer 随机生成的，<strong>发布者</strong> 仅仅发布消息到 exchange ，由 exchange 转发消息至 queue。</li></ul><p><strong>发布者</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pika</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">credentials = pika.PlainCredentials(<span class="string">&#x27;guest&#x27;</span>, <span class="string">&#x27;guest&#x27;</span>)  <span class="comment"># mq用户名和密码</span></span><br><span class="line"><span class="comment"># 虚拟队列需要指定参数 virtual_host，如果是默认的可以不填。</span></span><br><span class="line">connection = pika.BlockingConnection(</span><br><span class="line">    pika.ConnectionParameters(host=<span class="string">&#x27;127.0.0.1&#x27;</span>, port=<span class="number">5672</span>, virtual_host=<span class="string">&#x27;/&#x27;</span>, credentials=credentials))</span><br><span class="line">channel = connection.channel()</span><br><span class="line"><span class="comment"># 声明exchange，由exchange指定消息在哪个队列传递，如不存在，则创建。durable = True 代表exchange持久化存储，False 非持久化存储</span></span><br><span class="line">channel.exchange_declare(exchange=<span class="string">&#x27;python-test&#x27;</span>, durable=<span class="literal">True</span>, exchange_type=<span class="string">&#x27;fanout&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    message = json.dumps(&#123;<span class="string">&#x27;OrderId&#x27;</span>: <span class="string">&quot;1000%s&quot;</span> % i&#125;)</span><br><span class="line">    <span class="comment"># 向队列插入数值 routing_key是队列名。delivery_mode = 2 声明消息在队列中持久化，delivery_mod = 1 消息非持久化。routing_key 不需要配置</span></span><br><span class="line">    channel.basic_publish(exchange=<span class="string">&#x27;python-test&#x27;</span>, routing_key=<span class="string">&#x27;&#x27;</span>, body=message,</span><br><span class="line">                          properties=pika.BasicProperties(delivery_mode=<span class="number">2</span>))</span><br><span class="line">    <span class="built_in">print</span>(message)</span><br><span class="line">connection.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>订阅者</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pika</span><br><span class="line"></span><br><span class="line">credentials = pika.PlainCredentials(<span class="string">&#x27;guest&#x27;</span>, <span class="string">&#x27;guest&#x27;</span>)</span><br><span class="line">connection = pika.BlockingConnection(pika.ConnectionParameters(host = <span class="string">&#x27;127.0.0.1&#x27;</span>,port = <span class="number">5672</span>,virtual_host = <span class="string">&#x27;/&#x27;</span>,credentials = credentials))</span><br><span class="line">channel = connection.channel()</span><br><span class="line"><span class="comment"># 创建临时队列,队列名传空字符，consumer关闭后，队列自动删除</span></span><br><span class="line">result = channel.queue_declare(<span class="string">&#x27;&#x27;</span>,exclusive=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># 声明exchange，由exchange指定消息在哪个队列传递，如不存在，则创建。durable = True 代表exchange持久化存储，False 非持久化存储</span></span><br><span class="line">channel.exchange_declare(exchange = <span class="string">&#x27;python-test&#x27;</span>,durable = <span class="literal">True</span>, exchange_type=<span class="string">&#x27;fanout&#x27;</span>)</span><br><span class="line"><span class="comment"># 绑定exchange和队列  exchange 使我们能够确切地指定消息应该到哪个队列去</span></span><br><span class="line">channel.queue_bind(exchange = <span class="string">&#x27;python-test&#x27;</span>,queue = result.method.queue)</span><br><span class="line"><span class="comment"># 定义一个回调函数来处理消息队列中的消息，这里是打印出来</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">callback</span>(<span class="params">ch, method, properties, body</span>):</span></span><br><span class="line">    ch.basic_ack(delivery_tag = method.delivery_tag)</span><br><span class="line">    <span class="built_in">print</span>(body.decode())</span><br><span class="line"></span><br><span class="line">channel.basic_consume(result.method.queue,callback,<span class="comment"># 设置成 False，在调用callback函数时，未收到确认标识，消息会重回队列。True，无论调用callback成功与否，消息都被消费掉</span></span><br><span class="line">                      auto_ack = <span class="literal">False</span>)</span><br><span class="line">channel.start_consuming()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p> <strong>direct</strong></p><p>这种工作模式的原理是 消息发送至 exchange，exchange 根据 <strong>路由键（routing_key）</strong>转发到相对应的 queue 上。</p><ul><li> 可以使用默认 exchange =’ ‘ ，也可以自定义 exchange</li><li>这种模式下不需要将 exchange 和 任何进行绑定，当然绑定也是可以的。可以将 exchange 和 queue ，routing_key 和 queue 进行绑定</li><li>传递或接受消息时 需要 <strong>指定 routing_key</strong></li><li>需要先启动 <strong>订阅者</strong>，此模式下的队列是 consumer 随机生成的，<strong>发布者</strong> 仅仅发布消息到 exchange ，由 exchange 转发消息至 queue。</li></ul><p><strong>发布者</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pika</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">credentials = pika.PlainCredentials(<span class="string">&#x27;guest&#x27;</span>, <span class="string">&#x27;guest&#x27;</span>)  <span class="comment"># mq用户名和密码</span></span><br><span class="line"><span class="comment"># 虚拟队列需要指定参数 virtual_host，如果是默认的可以不填。</span></span><br><span class="line">connection = pika.BlockingConnection(</span><br><span class="line">    pika.ConnectionParameters(host=<span class="string">&#x27;127.0.0.1&#x27;</span>, port=<span class="number">5672</span>, virtual_host=<span class="string">&#x27;/&#x27;</span>, credentials=credentials))</span><br><span class="line">channel = connection.channel()</span><br><span class="line"><span class="comment"># 声明exchange，由exchange指定消息在哪个队列传递，如不存在，则创建。durable = True 代表exchange持久化存储，False 非持久化存储</span></span><br><span class="line">channel.exchange_declare(exchange=<span class="string">&#x27;python1-test&#x27;</span>, durable=<span class="literal">True</span>, exchange_type=<span class="string">&#x27;direct&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    message = json.dumps(&#123;<span class="string">&#x27;OrderId&#x27;</span>: <span class="string">&quot;1000%s&quot;</span> % i&#125;)</span><br><span class="line">    <span class="comment"># 指定 routing_key.delivery_mode = 2 声明消息在队列中持久化，delivery_mod = 1 消息非持久化</span></span><br><span class="line">    channel.basic_publish(exchange=<span class="string">&#x27;python1-test&#x27;</span>, routing_key=<span class="string">&#x27;OrderId&#x27;</span>, body=message,</span><br><span class="line">                          properties=pika.BasicProperties(delivery_mode=<span class="number">2</span>))</span><br><span class="line">    <span class="built_in">print</span>(message)</span><br><span class="line">connection.close()</span><br></pre></td></tr></table></figure><p><strong>订阅者</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pika</span><br><span class="line"></span><br><span class="line">credentials = pika.PlainCredentials(<span class="string">&#x27;guest&#x27;</span>, <span class="string">&#x27;guest&#x27;</span>)</span><br><span class="line">connection = pika.BlockingConnection(</span><br><span class="line">    pika.ConnectionParameters(host=<span class="string">&#x27;127.0.0.1&#x27;</span>, port=<span class="number">5672</span>, virtual_host=<span class="string">&#x27;/&#x27;</span>, credentials=credentials))</span><br><span class="line">channel = connection.channel()</span><br><span class="line"><span class="comment"># 创建临时队列，队列名传空字符，consumer关闭后，队列自动删除</span></span><br><span class="line">result = channel.queue_declare(<span class="string">&#x27;&#x27;</span>, exclusive=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># 声明exchange，由exchange指定消息在哪个队列传递，如不存在，则创建。durable = True 代表exchange持久化存储，False 非持久化存储</span></span><br><span class="line">channel.exchange_declare(exchange=<span class="string">&#x27;python1-test&#x27;</span>, durable=<span class="literal">True</span>, exchange_type=<span class="string">&#x27;direct&#x27;</span>)</span><br><span class="line"><span class="comment"># 绑定exchange和队列  exchange 使我们能够确切地指定消息应该到哪个队列去</span></span><br><span class="line">channel.queue_bind(exchange=<span class="string">&#x27;python1-test&#x27;</span>, queue=result.method.queue, routing_key=<span class="string">&#x27;OrderId&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个回调函数来处理消息队列中的消息，这里是打印出来</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">callback</span>(<span class="params">ch, method, properties, body</span>):</span></span><br><span class="line">    ch.basic_ack(delivery_tag=method.delivery_tag)</span><br><span class="line">    <span class="built_in">print</span>(body.decode())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># channel.basic_qos(prefetch_count=1)</span></span><br><span class="line"><span class="comment"># 告诉rabbitmq，用callback来接受消息</span></span><br><span class="line">channel.basic_consume(result.method.queue, callback,</span><br><span class="line">                      <span class="comment"># 设置成 False，在调用callback函数时，未收到确认标识，消息会重回队列。True，无论调用callback成功与否，消息都被消费掉</span></span><br><span class="line">                      auto_ack=<span class="literal">False</span>)</span><br><span class="line">channel.start_consuming()</span><br></pre></td></tr></table></figure><h4 id="RPC实现"><a href="#RPC实现" class="headerlink" title="RPC实现"></a>RPC实现</h4><p><strong>client</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pika</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FibonacciRpcClient</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.connection = pika.BlockingConnection(pika.ConnectionParameters(</span><br><span class="line">            host=<span class="string">&#x27;localhost&#x27;</span>))</span><br><span class="line">        self.channel = self.connection.channel()</span><br><span class="line">        result = self.channel.queue_declare(queue=<span class="string">&#x27;&#x27;</span>, exclusive=<span class="literal">True</span>)</span><br><span class="line">        self.callback_queue = result.method.queue</span><br><span class="line"></span><br><span class="line">        self.channel.basic_consume(</span><br><span class="line">            queue=self.callback_queue,</span><br><span class="line">            on_message_callback = self.on_response,  <span class="comment"># 只要一收到消息就调用on_response</span></span><br><span class="line">            auto_ack=<span class="literal">True</span>,</span><br><span class="line">        )  <span class="comment"># 收这个queue的消息</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">on_response</span>(<span class="params">self, ch, method, props, body</span>):</span>  <span class="comment"># 必须四个参数</span></span><br><span class="line">        <span class="comment"># 如果收到的ID和本机生成的相同，则返回的结果就是我想要的指令返回的结果</span></span><br><span class="line">        <span class="keyword">if</span> self.corr_id == props.correlation_id:</span><br><span class="line">            self.response = body</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">call</span>(<span class="params">self, n</span>):</span></span><br><span class="line">        self.response = <span class="literal">None</span>  <span class="comment"># 初始self.response为None</span></span><br><span class="line">        self.corr_id = <span class="built_in">str</span>(uuid.uuid4())  <span class="comment"># 随机唯一字符串</span></span><br><span class="line">        self.channel.basic_publish(</span><br><span class="line">            exchange=<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            routing_key=<span class="string">&#x27;rpc_queue&#x27;</span>,  <span class="comment"># 发消息到rpc_queue</span></span><br><span class="line">            properties=pika.BasicProperties(  <span class="comment"># 消息持久化</span></span><br><span class="line">                reply_to=self.callback_queue,  <span class="comment"># 让服务端命令结果返回到callback_queue</span></span><br><span class="line">                correlation_id=self.corr_id,  <span class="comment"># 把随机uuid同时发给服务器</span></span><br><span class="line">            ),</span><br><span class="line">            body=<span class="built_in">str</span>(n)</span><br><span class="line">        )</span><br><span class="line">        <span class="keyword">while</span> self.response <span class="keyword">is</span> <span class="literal">None</span>:  <span class="comment"># 当没有数据，就一直循环</span></span><br><span class="line">            <span class="comment"># 启动后，on_response函数接到消息，self.response 值就不为空了</span></span><br><span class="line">            self.connection.process_data_events()  <span class="comment"># 非阻塞版的start_consuming()</span></span><br><span class="line">            <span class="comment"># print(&quot;no msg……&quot;)</span></span><br><span class="line">            <span class="comment"># time.sleep(0.5)</span></span><br><span class="line">        <span class="comment"># 收到消息就调用on_response</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">int</span>(self.response)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    fibonacci_rpc = FibonacciRpcClient()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot; [x] Requesting fib(7)&quot;</span>)</span><br><span class="line">    response = fibonacci_rpc.call(<span class="number">7</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot; [.] Got %r&quot;</span> % response)</span><br></pre></td></tr></table></figure><ul><li>server</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pika</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fib</span>(<span class="params">n</span>):</span></span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">elif</span> n == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> fib(n-<span class="number">1</span>) + fib(n-<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">on_request</span>(<span class="params">ch, method, props, body</span>):</span></span><br><span class="line">    n = <span class="built_in">int</span>(body)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot; [.] fib(%s)&quot;</span> % n)</span><br><span class="line">    response = fib(n)</span><br><span class="line"></span><br><span class="line">    ch.basic_publish(</span><br><span class="line">            exchange=<span class="string">&#x27;&#x27;</span>,  <span class="comment"># 把执行结果发回给客户端</span></span><br><span class="line">            routing_key=props.reply_to,  <span class="comment"># 客户端要求返回想用的queue</span></span><br><span class="line">            <span class="comment"># 返回客户端发过来的correction_id 为了让客户端验证消息一致性</span></span><br><span class="line">            properties=pika.BasicProperties(correlation_id = props.correlation_id),</span><br><span class="line">            body=<span class="built_in">str</span>(response)</span><br><span class="line">    )</span><br><span class="line">    ch.basic_ack(delivery_tag = method.delivery_tag)  <span class="comment"># 任务完成，告诉客户端</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    connection = pika.BlockingConnection(pika.ConnectionParameters(</span><br><span class="line">            host=<span class="string">&#x27;localhost&#x27;</span>))</span><br><span class="line">    channel = connection.channel()</span><br><span class="line">    channel.queue_declare(queue=<span class="string">&#x27;rpc_queue&#x27;</span>)  <span class="comment"># 声明一个rpc_queue ,</span></span><br><span class="line"></span><br><span class="line">    channel.basic_qos(prefetch_count=<span class="number">1</span>)</span><br><span class="line">    <span class="comment"># 在rpc_queue里收消息,收到消息就调用on_request</span></span><br><span class="line">    channel.basic_consume(queue=<span class="string">&#x27;rpc_queue&#x27;</span>,on_message_callback = on_request)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot; [x] Awaiting RPC requests&quot;</span>)</span><br><span class="line">    channel.start_consuming()</span><br></pre></td></tr></table></figure><h4 id="linux安装"><a href="#linux安装" class="headerlink" title="linux安装"></a>linux安装</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.将rabbitmq安装包上传到linux系统中</span></span><br><span class="line">erlang-<span class="number">22.0</span><span class="number">.7</span>-<span class="number">1.</span>el7.x86_64.rpm  <span class="comment">#l7表示是Centosl7,Centosl8表示Centos8</span></span><br><span class="line">rabbitmq-server-<span class="number">3.7</span><span class="number">.18</span>-<span class="number">1.</span>el7.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.安装Erlang依赖包</span></span><br><span class="line">rpm -ivh erlang-<span class="number">22.0</span><span class="number">.7</span>-<span class="number">1.</span>el7.x86_64.rpm</span><br><span class="line">    rpm -ivh socat-<span class="number">1.7</span><span class="number">.3</span><span class="number">.2</span>-<span class="number">2.</span>el7.x86_64.rpm</span><br><span class="line">rpm -ivh rabbitmq-server-<span class="number">3.7</span><span class="number">.18</span>-<span class="number">1.</span>el7.noarch.rpm</span><br><span class="line"><span class="comment"># 3.安装RabbitMQ安装包(需要联网)</span></span><br><span class="line">yum install -y rabbitmq-server-<span class="number">3.7</span><span class="number">.18</span>-<span class="number">1.</span>el7.noarch.rpm</span><br><span class="line">注意:默认安装完成后配置文件模板在:/usr/share/doc/rabbitmq-server-<span class="number">3.7</span><span class="number">.18</span>/rabbitmq.config.example目录中,需要</span><br><span class="line">将配置文件复制到/etc/rabbitmq/目录中,并修改名称为rabbitmq.config</span><br><span class="line"><span class="comment"># 4.复制配置文件</span></span><br><span class="line">cp /usr/share/doc/rabbitmq-server-<span class="number">3.7</span><span class="number">.18</span>/rabbitmq.config.example /etc/rabbitmq/rabbitmq.config</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.查看配置文件位置</span></span><br><span class="line">ls /etc/rabbitmq/rabbitmq.config</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.修改配置文件(参见下图:)</span></span><br><span class="line">vim /etc/rabbitmq/rabbitmq.config </span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2021/09/04/RabbitMQ/image-20210905231220486.png" alt="RabbitMQ"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">将上图中配置文件中红色部分去掉`%%`,以及最后的`,`逗号 </span><br><span class="line">修改为下图:</span><br></pre></td></tr></table></figure><p><img src="/2021/09/04/RabbitMQ/image-20210905231408847.png" alt="RabbitMQ"></p><p><img src="/2021/09/04/RabbitMQ/image-20210905231555985.png" alt="RabbitMQ"></p><p><img src="/2021/09/04/RabbitMQ/image-20210905231852033.png" alt="RabbitMQ"></p><p><img src="/2021/09/04/RabbitMQ/image-20210905232051467.png" alt="RabbitMQ"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 7.执行如下命令,启动rabbitmq中的插件管理</span></span><br><span class="line">rabbitmq-plugins enable rabbitmq_management</span><br><span class="line"></span><br><span class="line">出现如下说明:</span><br><span class="line">Enabling plugins on node rabbit@localhost:</span><br><span class="line">    rabbitmq_management</span><br><span class="line">    The following plugins have been configured:</span><br><span class="line">      rabbitmq_management</span><br><span class="line">      rabbitmq_management_agent</span><br><span class="line">      rabbitmq_web_dispatch</span><br><span class="line">    Applying plugin configuration to rabbit@localhost...</span><br><span class="line">    The following plugins have been enabled:</span><br><span class="line">      rabbitmq_management</span><br><span class="line">      rabbitmq_management_agent</span><br><span class="line">      rabbitmq_web_dispatch</span><br><span class="line"></span><br><span class="line">    <span class="built_in">set</span> <span class="number">3</span> plugins.</span><br><span class="line">    Offline change; changes will take effect at broker restart.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 8.启动RabbitMQ的服务</span></span><br><span class="line">systemctl start rabbitmq-server</span><br><span class="line">systemctl restart rabbitmq-server</span><br><span class="line">systemctl stop rabbitmq-server</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 9.查看服务状态(见下图:)</span></span><br><span class="line">systemctl status rabbitmq-server</span><br><span class="line">  ● rabbitmq-server.service - RabbitMQ broker</span><br><span class="line">     Loaded: loaded (/usr/lib/systemd/system/rabbitmq-server.service; disabled; vendor preset: disabled)</span><br><span class="line">     Active: active (running) since 三 <span class="number">2019</span>-09-<span class="number">25</span> <span class="number">22</span>:<span class="number">26</span>:<span class="number">35</span> CST; 7s ago</span><br><span class="line">   Main PID: <span class="number">2904</span> (beam.smp)</span><br><span class="line">     Status: <span class="string">&quot;Initialized&quot;</span></span><br><span class="line">     CGroup: /system.<span class="built_in">slice</span>/rabbitmq-server.service</span><br><span class="line">             ├─<span class="number">2904</span> /usr/lib64/erlang/erts-<span class="number">10.4</span><span class="number">.4</span>/<span class="built_in">bin</span>/beam.smp -W w -A <span class="number">64</span> -MBas ageffcbf -MHas ageffcbf -</span><br><span class="line">             MBlmbcs...</span><br><span class="line">             ├─<span class="number">3220</span> erl_child_setup <span class="number">32768</span></span><br><span class="line">             ├─<span class="number">3243</span> inet_gethost <span class="number">4</span></span><br><span class="line">             └─<span class="number">3244</span> inet_gethost <span class="number">4</span></span><br><span class="line">      .........</span><br><span class="line"><span class="comment"># 10.关闭防火墙</span></span><br><span class="line">systemctl stop firewalld</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="rabbitmq命令相关"><a href="#rabbitmq命令相关" class="headerlink" title="rabbitmq命令相关"></a>rabbitmq命令相关</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.服务启动相关</span></span><br><span class="line">systemctl start|restart|stop|status rabbitmq-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.管理命令行  用来在不使用web管理界面情况下命令操作RabbitMQ</span></span><br><span class="line">rabbitmqctl  <span class="built_in">help</span>  可以查看更多命令</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.插件管理命令行</span></span><br><span class="line">rabbitmq-plugins enable|<span class="built_in">list</span>|disable </span><br></pre></td></tr></table></figure><h4 id="设置用户名和权限"><a href="#设置用户名和权限" class="headerlink" title="设置用户名和权限"></a>设置用户名和权限</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">rabbitmqctl add_user xxx <span class="number">123</span></span><br><span class="line"><span class="comment"># 设置用户为administrator角色</span></span><br><span class="line">rabbitmqctl set_user_tags xxx administrator</span><br><span class="line"><span class="comment"># 设置权限</span></span><br><span class="line">rabbitmqctl set_permissions <span class="literal">-p</span> <span class="string">&quot;/&quot;</span> xxx <span class="string">&quot;.*&quot;</span> <span class="string">&quot;.*&quot;</span> <span class="string">&quot;.*&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 然后重启rabbiMQ服务</span></span><br><span class="line">systemctl reatart rabbitmq<span class="literal">-server</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 然后可以使用刚才的用户远程连接rabbitmq server了</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="celery使用rabbitmq作为中间件"><a href="#celery使用rabbitmq作为中间件" class="headerlink" title="celery使用rabbitmq作为中间件"></a>celery使用rabbitmq作为中间件</h4><ul><li><p><img src="/2021/09/04/RabbitMQ/image-20211112125648863.png" alt="RabbitMQ"></p></li><li><p>新增mq用户和虚拟主机</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@FCY-SRV02 ~]<span class="comment"># rabbitmqctl add_user foda foda@2021.</span></span><br><span class="line">Adding user <span class="string">&quot;foda&quot;</span> ...</span><br><span class="line">[root@FCY-SRV02 ~]<span class="comment"># rabbitmqctl add_vhost myvhost</span></span><br><span class="line">Adding vhost <span class="string">&quot;myvhost&quot;</span> ...</span><br><span class="line">[root@FCY-SRV02 ~]<span class="comment"># rabbitmqctl set_user_tags foda mytag</span></span><br><span class="line">Setting tags <span class="keyword">for</span> user <span class="string">&quot;foda&quot;</span> to [mytag] ...</span><br><span class="line">[root@FCY-SRV02 ~]<span class="comment"># rabbitmqctl set_permissions -p myvhost foda &quot;.*&quot; &quot;.*&quot; &quot;.*&quot;</span></span><br><span class="line">Setting permissions <span class="keyword">for</span> user <span class="string">&quot;foda&quot;</span> <span class="keyword">in</span> vhost <span class="string">&quot;myvhost&quot;</span> ...</span><br><span class="line">[root@FCY-SRV02 ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><ul><li>celery.py</li><li>启动命令: celery worker -A celery_task -l info -P eventlet</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> celery <span class="keyword">import</span> Celery</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">os.environ.setdefault(<span class="string">&quot;DJANGO_SETTINGS_MODULE&quot;</span>, <span class="string">&quot;AlgorithmServer.settings&quot;</span>)</span><br><span class="line">broker = <span class="string">&#x27;amqp://foda:foda@2021.@10.21.6.12:5672/myvhost&#x27;</span></span><br><span class="line">backend = <span class="string">&#x27;amqp://foda:foda@2021.@10.21.6.12:5672/myvhost&#x27;</span></span><br><span class="line">app = Celery(broker=broker, backend=backend,</span><br><span class="line">             include=[<span class="string">&#x27;celery_task.order_task&#x27;</span>, <span class="string">&#x27;celery_task.user_task&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 时区</span></span><br><span class="line">app.conf.timezone = <span class="string">&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line"><span class="comment"># 是否使用UTC</span></span><br><span class="line">app.conf.enable_utc = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 任务的定时配置</span></span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> timedelta</span><br><span class="line"><span class="keyword">from</span> celery.schedules <span class="keyword">import</span> crontab</span><br><span class="line"></span><br><span class="line">app.conf.beat_schedule = &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x27;update_banner&#x27;: &#123;</span></span><br><span class="line">    <span class="comment">#     &#x27;task&#x27;: &#x27;&#x27;,</span></span><br><span class="line">    <span class="comment">#     &#x27;schedule&#x27;: timedelta(seconds=10),</span></span><br><span class="line">    <span class="comment">#     # &#x27;schedule&#x27;: crontab(hour=8, day_of_week=1),  # 每周一早八点</span></span><br><span class="line">    <span class="comment">#     # &#x27;schedule&#x27;: crontab(hour=8, day_of_month=1),  # 每月一号早八点</span></span><br><span class="line">    <span class="comment">#     &#x27;args&#x27;: (),</span></span><br><span class="line">    <span class="comment"># &#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>django中使用celery异步任务</li><li>views.py</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> celery_task <span class="keyword">import</span> user_task</span><br><span class="line"><span class="keyword">from</span> celery_task.celery <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> celery.result <span class="keyword">import</span> AsyncResult    </span><br><span class="line">    </span><br><span class="line"><span class="meta">    @action(<span class="params">methods=[<span class="string">&#x27;GET&#x27;</span>], detail=<span class="literal">False</span></span>)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_celery</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        <span class="built_in">id</span> = request.GET.get(<span class="string">&#x27;id&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">id</span>:</span><br><span class="line">            res = AsyncResult(<span class="built_in">id</span>=<span class="built_in">id</span>, app=app)</span><br><span class="line">            <span class="keyword">if</span> res.successful():</span><br><span class="line">                result = res.get()</span><br><span class="line">                <span class="built_in">print</span>(result)</span><br><span class="line">                <span class="keyword">return</span> APIResponse(code=<span class="number">1</span>, msg=<span class="string">&#x27;执行完成&#x27;</span>, result=<span class="string">&#x27;&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(result))</span><br><span class="line">            <span class="keyword">elif</span> res.failed():</span><br><span class="line">                <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;执行失败&#x27;</span>)</span><br><span class="line">            <span class="keyword">elif</span> res.status == <span class="string">&#x27;PENDING&#x27;</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;任务等待中被执行&#x27;</span>)</span><br><span class="line">                <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;PENDING&#x27;</span>)</span><br><span class="line">            <span class="keyword">elif</span> res.status == <span class="string">&#x27;RETRY&#x27;</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;任务异常后正在重试&#x27;</span>)</span><br><span class="line">                <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;RETRY&#x27;</span>)</span><br><span class="line">            <span class="keyword">elif</span> res.status == <span class="string">&#x27;STARTED&#x27;</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;任务已经开始被执行&#x27;</span>)</span><br><span class="line">                <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;STARTED&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        url = <span class="string">&#x27;http://127.0.0.1:8080/product/getPythonData&#x27;</span></span><br><span class="line">        res = user_task.test.delay(url)</span><br><span class="line">        <span class="keyword">return</span> APIResponse(code=<span class="number">0</span>, result=<span class="string">&#x27;任务号&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(res))</span><br></pre></td></tr></table></figure><ul><li>user_task.py</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.task</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span>(<span class="params">url</span>):</span></span><br><span class="line">    response = requests.get(url=url)</span><br><span class="line">    <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;success&#x27;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;error&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="集群搭建"><a href="#集群搭建" class="headerlink" title="集群搭建"></a>集群搭建</h4><ul><li>核心解决问题:  当集群中某一时刻master节点宕机,可以对Queue中信息,进行备份</li></ul><p><img src="/2021/09/04/RabbitMQ/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3VuaXF1ZV9wZXJmZWN0,size_16,color_FFFFFF,t_70" alt="RabbitMQ"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 0.集群规划</span></span><br><span class="line">node1: <span class="number">10.15</span><span class="number">.0</span><span class="number">.3</span>  mq1  master 主节点</span><br><span class="line">node2: <span class="number">10.15</span><span class="number">.0</span><span class="number">.4</span>  mq2  repl1  副本节点</span><br><span class="line">node3: <span class="number">10.15</span><span class="number">.0</span><span class="number">.5</span>  mq3  repl2  副本节点</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.克隆三台机器主机名和ip映射</span></span><br><span class="line">vim /etc/hosts加入:</span><br><span class="line">        </span><br><span class="line"><span class="number">10.21</span><span class="number">.6</span><span class="number">.11</span>      FCY-SRV01.local FCY-SRV01</span><br><span class="line"><span class="number">10.21</span><span class="number">.6</span><span class="number">.12</span>      FCY-SRV02.local FCY-SRV02</span><br><span class="line"><span class="number">10.21</span><span class="number">.6</span><span class="number">.13</span>      FCY-SRV03.local FCY-SRV03</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.三个机器安装rabbitmq,并同步cookie文件,在node1上执行:</span></span><br><span class="line">scp /var/lib/rabbitmq/.erlang.cookie root@FCY-SRV02:/var/lib/rabbitmq/</span><br><span class="line">scp /var/lib/rabbitmq/.erlang.cookie root@FCY-SRV03:/var/lib/rabbitmq/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.查看cookie是否一致:</span></span><br><span class="line">node1: cat /var/lib/rabbitmq/.erlang.cookie </span><br><span class="line">node2: cat /var/lib/rabbitmq/.erlang.cookie </span><br><span class="line">node3: cat /var/lib/rabbitmq/.erlang.cookie </span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.后台启动rabbitmq所有节点执行如下命令,启动成功访问管理界面:</span></span><br><span class="line">rabbitmq-server -detached </span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.在node2和node3执行加入集群命令:</span></span><br><span class="line"><span class="number">1.</span>关闭       rabbitmqctl stop_app</span><br><span class="line"><span class="number">2.</span>加入集群    rabbitmqctl join_cluster rabbit@FCY-SRV01</span><br><span class="line"><span class="number">3.</span>启动服务    rabbitmqctl start_app</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.查看集群状态,任意节点执行:</span></span><br><span class="line">rabbitmqctl cluster_status</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7.如果出现如下显示,集群搭建成功:</span></span><br><span class="line">[root@FCY-SRV01 rabbitmq]<span class="comment"># rabbitmqctl cluster_status</span></span><br><span class="line">Cluster status of node rabbit@FCY-SRV01 ...</span><br><span class="line">[&#123;nodes,[&#123;disc,[<span class="string">&#x27;rabbit@FCY-SRV01&#x27;</span>,<span class="string">&#x27;rabbit@FCY-SRV02&#x27;</span>,<span class="string">&#x27;rabbit@FCY-SRV03&#x27;</span>]&#125;]&#125;,</span><br><span class="line"> &#123;running_nodes,[<span class="string">&#x27;rabbit@FCY-SRV03&#x27;</span>,<span class="string">&#x27;rabbit@FCY-SRV02&#x27;</span>,<span class="string">&#x27;rabbit@FCY-SRV01&#x27;</span>]&#125;,</span><br><span class="line"> &#123;cluster_name,&lt;&lt;<span class="string">&quot;rabbit@FCY-SRV01.local&quot;</span>&gt;&gt;&#125;,</span><br><span class="line"> &#123;partitions,[]&#125;,</span><br><span class="line"> &#123;alarms,[&#123;<span class="string">&#x27;rabbit@FCY-SRV03&#x27;</span>,[]&#125;,</span><br><span class="line">          &#123;<span class="string">&#x27;rabbit@FCY-SRV02&#x27;</span>,[]&#125;,</span><br><span class="line">          &#123;<span class="string">&#x27;rabbit@FCY-SRV01&#x27;</span>,[]&#125;]&#125;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 8.登录管理界面,展示如下状态:</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2021/09/04/RabbitMQ/image-20211106011125448.png" alt="RabbitMQ"></p><h4 id="镜像集群"><a href="#镜像集群" class="headerlink" title="镜像集群"></a>镜像集群</h4><p><img src="/2021/09/04/RabbitMQ/20201030230122209.png" alt="RabbitMQ"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">This guide covers mirroring (queue contents replication) </span><br><span class="line">of classic queues  --摘自官网</span><br><span class="line"></span><br><span class="line">By default, contents of a queue within a RabbitMQ </span><br><span class="line">cluster are located on a single node (the node on </span><br><span class="line">which the queue was declared). This <span class="keyword">is</span> <span class="keyword">in</span> contrast </span><br><span class="line">to exchanges <span class="keyword">and</span> bindings, which can always be</span><br><span class="line">considered to be on <span class="built_in">all</span> nodes. Queues can </span><br><span class="line">optionally be made *mirrored* across multiple nodes. </span><br><span class="line">--摘自官网</span><br><span class="line">镜像队列机制就是将队列在三个节点之间设置主从关系，</span><br><span class="line">消息会在三个节点之间进行自动同步，且如果其中一个</span><br><span class="line">节点不可用，并不会导致消息丢失或服务不可用的情况，</span><br><span class="line">提升MQ集群的整体高可用性。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>搭建</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 0.策略说明</span></span><br><span class="line">rabbitmqctl set_policy [-<span class="type">p</span> &lt;<span class="type">vhost</span>&gt;] [--<span class="type">priority</span> &lt;<span class="type">priority</span>&gt;] [--<span class="type">apply</span>-<span class="type">to</span> &lt;<span class="type">apply</span>-<span class="type">to</span>&gt;] &lt;name&gt; &lt;pattern&gt;  &lt;definition&gt;</span><br><span class="line"><span class="literal">-p</span> Vhost： 可选参数，针对指定vhost下的queue进行设置</span><br><span class="line">Name:     policy的名称</span><br><span class="line">Pattern: queue的匹配模式(正则表达式)</span><br><span class="line">Definition：镜像定义，包括三个部分ha<span class="literal">-mode</span>, ha<span class="literal">-params</span>, ha<span class="literal">-sync</span><span class="literal">-mode</span></span><br><span class="line">ha<span class="literal">-mode</span>:指明镜像队列的模式，有效值为 all/exactly/nodes</span><br><span class="line">all：表示在集群中所有的节点上进行镜像</span><br><span class="line">exactly：表示在指定个数的节点上进行镜像，节点的个数由ha<span class="literal">-params</span>指定</span><br><span class="line">nodes：表示在指定的节点上进行镜像，节点名称通过ha<span class="literal">-params</span>指定</span><br><span class="line">ha<span class="literal">-params</span>：ha<span class="literal">-mode</span>模式需要用到的参数</span><br><span class="line">ha<span class="literal">-sync</span><span class="literal">-mode</span>：进行队列中消息的同步方式，有效值为automatic和manual</span><br><span class="line">              priority：可选参数，policy的优先级</span><br><span class="line">              </span><br><span class="line">               </span><br><span class="line"><span class="comment"># 1.查看当前策略</span></span><br><span class="line">rabbitmqctl list_policies</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.添加策略</span></span><br><span class="line">rabbitmqctl set_policy ha<span class="literal">-all</span> <span class="string">&#x27;^mongodb&#x27;</span> <span class="string">&#x27;&#123;&quot;ha-mode&quot;:&quot;all&quot;,&quot;ha-sync-mode&quot;:&quot;automatic&quot;&#125;&#x27;</span> </span><br><span class="line">说明:策略正则表达式为 “^” 表示所有匹配所有队列名称  ^hello:匹配hello开头队列</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.删除策略</span></span><br><span class="line">rabbitmqctl clear_policy ha<span class="literal">-all</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.测试集群</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2021/09/04/RabbitMQ/image-20211106012409207.png" alt="RabbitMQ"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;RabbitMq 是实现了高级消息队列协议（AMQP）的开源消息代理中间件。消息队列是一种应用程序对应用程序的通行方式，应用程序</summary>
      
    
    
    
    
    <category term="RabbitMQ" scheme="http://example.com/tags/RabbitMQ/"/>
    
  </entry>
  
  <entry>
    <title>nacos</title>
    <link href="http://example.com/2021/08/30/nacos/"/>
    <id>http://example.com/2021/08/30/nacos/</id>
    <published>2021-08-30T01:50:19.000Z</published>
    <updated>2021-10-18T12:36:40.947Z</updated>
    
    <content type="html"><![CDATA[<h4 id="nacos服务注册原理"><a href="#nacos服务注册原理" class="headerlink" title="nacos服务注册原理"></a>nacos服务注册原理</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Nacos 服务注册需要具备的能力：</span></span><br><span class="line">服务提供者把自己的协议地址注册到Nacos server</span><br><span class="line">服务消费者需要从Nacos Server上去查询服务提供者的地址（根据服务名称）</span><br><span class="line">Nacos Server需要感知到服务提供者的上下线的变化</span><br><span class="line">服务消费者需要动态感知到Nacos Server端服务地址的变化</span><br></pre></td></tr></table></figure><h4 id="安装nacos"><a href="#安装nacos" class="headerlink" title="安装nacos"></a>安装nacos</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local</span><br><span class="line">tar -zxvf nacos-server-1.4.2.tar.gz</span><br><span class="line">tar -zxvf jdk-8u301-linux-x64.tar.gz</span><br><span class="line">vim /etc/profile # 配置java环境</span><br><span class="line">    export JAVA_HOME=/usr/local/jdk1.8.0_301</span><br><span class="line">    export CLASSPATH=$:CLASSPATH:$JAVA_HOME/lib/</span><br><span class="line">    export PATH=$PATH:$JAVA_HOME/bin</span><br><span class="line">source /etc/profile/</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">2）下载mysql57</span><br><span class="line">wget http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm</span><br><span class="line"></span><br><span class="line">3）安装mysql57</span><br><span class="line">yum -y install mysql57-community-release-el7-10.noarch.rpm</span><br><span class="line">yum -y install mysql-community-server</span><br><span class="line"></span><br><span class="line">4）启动mysql57并查看启动状态</span><br><span class="line">systemctl start mysqld.service</span><br><span class="line">systemctl status mysqld.service</span><br><span class="line"></span><br><span class="line">5）查看默认密码并登录</span><br><span class="line">grep &quot;password&quot; /var/log/mysqld.log</span><br><span class="line">mysql -uroot -p</span><br><span class="line"></span><br><span class="line">6) 修改密码</span><br><span class="line">set password= &#x27;Foda123456?&#x27;;</span><br><span class="line"></span><br><span class="line">7) 创建数据库</span><br><span class="line">create database nacos_config;</span><br><span class="line"></span><br><span class="line">8) 使用数据库</span><br><span class="line">use nacos_config</span><br><span class="line"></span><br><span class="line">9)加载sql脚本</span><br><span class="line">source /usr/local/nacos/conf/nacos-mysql.sql</span><br><span class="line"></span><br><span class="line">10）查看用户权限</span><br><span class="line">SELECT user,host FROM mysql.user;</span><br><span class="line"></span><br><span class="line">GRANT</span><br><span class="line">  [权限] </span><br><span class="line">ON [库.表] </span><br><span class="line">TO [用户名]@[IP] </span><br><span class="line">IDENTIFIED BY [密码] </span><br><span class="line"><span class="meta">#</span><span class="bash"> WITH GRANT OPTION;</span></span><br><span class="line"></span><br><span class="line">- 1 </span><br><span class="line">UPDATE mysql.user SET user.Host=&#x27;%&#x27; where user.User=&#x27;root&#x27;;</span><br><span class="line"></span><br><span class="line">- 2 </span><br><span class="line">GRANT</span><br><span class="line">  ALL PRIVILEGES</span><br><span class="line">ON *.*</span><br><span class="line">TO root@&#x27;192.168.17.210&#x27;</span><br><span class="line">IDENTIFIED BY &#x27;Foda123456?&#x27;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">10) 加载</span><br><span class="line">flush privileges;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h4><ul><li>Nginx (engine x) 是一个高性能的HTTP和反向代理web服务器<br>Apache和Nginx最核心的区别在于 apache 是同步多进程模型，一个连接对应一个进程；而 nginx 是异步的，多个连接（万级别）可以对应一个进程</li></ul><p>​    http请求转发<br>   反向代理服务器<br>   负载均衡<br>   动静分离</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">1）前往用户根目录</span><br><span class="line">cd /usr/local/</span><br><span class="line">mkdir nginx</span><br><span class="line">yum -y install gcc pcre-devel zlib-devel openssl openssl-devel </span><br><span class="line"></span><br><span class="line">2）下载nginx1.13.7</span><br><span class="line">wget http://nginx.org/download/nginx-1.13.7.tar.gz</span><br><span class="line"></span><br><span class="line">3）解压安装包</span><br><span class="line">tar -xf nginx-1.13.7.tar.gz</span><br><span class="line"></span><br><span class="line">4）进入目标文件</span><br><span class="line">cd nginx-1.13.7</span><br><span class="line"></span><br><span class="line">5）配置安装路径：</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">: ./configure --prefix=/usr/<span class="built_in">local</span>/nginx</span></span><br><span class="line"></span><br><span class="line">6）编译并安装</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">: make &amp;&amp; sudo make install</span></span><br><span class="line"></span><br><span class="line">7）建立软连接：终端命令 nginx</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">: ln -s /usr/<span class="built_in">local</span>/nginx/sbin/nginx /usr/bin/nginx</span></span><br><span class="line"></span><br><span class="line">8）删除安装包与文件：</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">: <span class="built_in">cd</span> ~</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">: rm -rf nginx-1.13.7</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">: rm -rf nginx-1.13.7.tar.xz</span></span><br><span class="line"></span><br><span class="line">9）测试Nginx环境，服务器运行nginx，本地访问服务器ip</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">: nginx</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">: 服务器绑定的域名 或 ip:80</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">Nginx命令</span></span><br><span class="line">1）启动</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">: nginx</span></span><br><span class="line"></span><br><span class="line">2）关闭nginx</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">: nginx -s stop</span></span><br><span class="line"></span><br><span class="line">3）重启nginx</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">: nginx -s reload</span></span><br><span class="line"></span><br><span class="line">4）查看端口，强行关闭</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">: ps -aux|grep nginx</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">: <span class="built_in">kill</span> &lt;pid:进程编号&gt;</span></span><br><span class="line"> </span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="nacos集群配置"><a href="#nacos集群配置" class="headerlink" title="nacos集群配置"></a>nacos集群配置</h4><p><img src="/2021/08/30/nacos/image-20210830101658816.png" alt="nacos"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/nacos/conf</span><br><span class="line">cp application.properties application.properties.bk</span><br><span class="line">cp cluster.conf.example cluster.conf</span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改集群配置</span></span><br><span class="line">vim cluster.conf </span><br><span class="line"></span><br><span class="line">192.168.17.1:8848</span><br><span class="line">192.168.17.2:8848</span><br><span class="line">192.168.17.3:8848</span><br><span class="line">192.168.17.4:8848</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改启动脚本，如果遇到内存不足，可以把内存改小点</span></span><br><span class="line">cd ../bin/startup.sh</span><br><span class="line">cp startup.sh startup.sh.bk</span><br><span class="line">vim startup.sh </span><br><span class="line">JAVA_OPT=&quot;$&#123;JAVA_OPT&#125; -server -Xms256m -Xmx256m -Xmn256m -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=320m&quot;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改nacos配置</span></span><br><span class="line">vim /usr/local/conf/application.properties</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">db.url.0=jdbc:mysql://127.0.0.1:3306/nacos_config?characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true&amp;useUnicode=true&amp;useSSL=false&amp;serverTimezone=UTC</span><br><span class="line">db.user.0=root</span><br><span class="line">db.password.0=&lt;ws7saQZASK2</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## Connection pool configuration: hikariCP</span></span></span><br><span class="line">db.pool.config.connectionTimeout=30000</span><br><span class="line">db.pool.config.validationTimeout=10000</span><br><span class="line">db.pool.config.maximumPoolSize=20</span><br><span class="line">db.pool.config.minimumIdle=2</span><br><span class="line"></span><br><span class="line">cd /usr/local/nacos/bin</span><br><span class="line">sh startup.sh # 分别启动</span><br><span class="line">sh startup.sh -m standalone # 单机启动</span><br><span class="line">ps -ef|grep nacos|grep -v grep|wc -l # 查看集群个数</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 批量杀掉包含model6.jar的进程</span></span><br><span class="line">for i in `ps -ef|grep model6.jar |awk &#x27;&#123;print $2&#125;&#x27; `; do kill -9 $i ; done;</span><br></pre></td></tr></table></figure><h4 id="nginx配置反向代理"><a href="#nginx配置反向代理" class="headerlink" title="nginx配置反向代理"></a>nginx配置反向代理</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    #gzip  on;</span><br><span class="line"></span><br><span class="line">    upstream cluster &#123;</span><br><span class="line">        server  ip1;</span><br><span class="line">        server  ip2;</span><br><span class="line">        server  ip3;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       1111;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        #charset koi8-r;</span><br><span class="line"></span><br><span class="line">        #access_log  logs/host.access.log  main;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">           # root   html;</span><br><span class="line">           # index  index.html index.htm;</span><br><span class="line">           proxy_pass http://cluster;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">nginx -c /usr/local/nginx/conf/nginx.conf # 指定配置文件启动nginx</span><br></pre></td></tr></table></figure><h4 id="nacos配置问题"><a href="#nacos配置问题" class="headerlink" title="nacos配置问题"></a>nacos配置问题</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.内存不足，导致启动失败</span></span><br><span class="line">vim startup.sh </span><br><span class="line">JAVA_OPT=<span class="string">&quot;$&#123;JAVA_OPT&#125; -server -Xms256m -Xmx256m -Xmn256m -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=320m&quot;</span></span><br><span class="line"><span class="comment"># 2.Caused by: java.lang.IllegalStateException: No DataSource set</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改了数据库url配置参数，解决了问题：</span></span><br><span class="line">vim ../conf/application.properties</span><br><span class="line"></span><br><span class="line">&amp;connectTimeout=<span class="number">10000</span>&amp;socketTimeout=<span class="number">30000</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="python连接"><a href="#python连接" class="headerlink" title="python连接"></a>python连接</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> nacos</span><br><span class="line"></span><br><span class="line"><span class="comment"># Both HTTP/HTTPS protocols are supported, if not set protocol prefix default is HTTP, and HTTPS with no ssl check(verify=False)</span></span><br><span class="line"><span class="comment"># &quot;192.168.3.4:8848&quot; or &quot;https://192.168.3.4:443&quot; or &quot;http://192.168.3.4:8848,192.168.3.5:8848&quot; or &quot;https://192.168.3.4:443,https://192.168.3.5:443&quot;</span></span><br><span class="line">server_addresses = <span class="string">&quot;http://10.21.6.11:8848&quot;</span></span><br><span class="line">namespace = <span class="string">&quot;public&quot;</span></span><br><span class="line">data_id = <span class="string">&quot;nacos-python&quot;</span></span><br><span class="line">group = <span class="string">&quot;DEFAULT_GROUP&quot;</span></span><br><span class="line"></span><br><span class="line">NacosClient = nacos.NacosClient(server_addresses, namespace=namespace, username=<span class="string">&quot;nacos&quot;</span>, password=<span class="string">&quot;nacos&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># publish_config 发布配置</span></span><br><span class="line"><span class="comment"># ret = NacosClient.publish_config(data_id=data_id, group=group, content=&#x27;public the msg&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># get_config  获取配置</span></span><br><span class="line"><span class="comment"># print(NacosClient.get_config(data_id, group))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 注册实例</span></span><br><span class="line">ret = NacosClient.add_naming_instance(<span class="string">&#x27;nacos-python&#x27;</span>, <span class="string">&#x27;10.21.6.21&#x27;</span>, <span class="number">8080</span>, metadata=<span class="literal">None</span>, enable=<span class="literal">True</span>, healthy=<span class="literal">True</span>,</span><br><span class="line">                                      ephemeral=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送心跳</span></span><br><span class="line">NacosClient.send_heartbeat(<span class="string">&#x27;nacos-python&#x27;</span>, <span class="string">&#x27;10.21.6.21&#x27;</span>, <span class="number">8080</span>, metadata=<span class="literal">None</span>, ephemeral=<span class="literal">False</span>,</span><br><span class="line">                           group_name=<span class="string">&#x27;DEFAULT_GROUP&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注销注册实例</span></span><br><span class="line"><span class="comment"># NacosClient.remove_naming_instance(&#x27;nacos-python&#x27;, &#x27;10.21.6.21&#x27;, 8080)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改实例</span></span><br><span class="line"><span class="comment"># NacosClient.modify_naming_instance(&#x27;nacos-python&#x27;, &#x27;10.21.6.11&#x27;, 8848,  weight=None, metadata=None, enable=None)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询实例</span></span><br><span class="line"><span class="comment"># ret = NacosClient.list_naming_instance(&#x27;nacos-python&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询实例详细信息</span></span><br><span class="line"><span class="comment"># NacosClient.get_naming_instance(service_name, ip, port, cluster_name)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 订阅服务实例已更改</span></span><br><span class="line"><span class="comment"># NacosClient.subscribe(listener_fn, listener_interval=7, *args, **kwargs)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 取消订阅服务实例已更改</span></span><br><span class="line"><span class="comment"># NacosClient.unsubscribe(service_name, listener_name)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止所有服务订阅</span></span><br><span class="line"><span class="comment"># NacosClient.stop_subscribe()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加观察者</span></span><br><span class="line"><span class="comment"># ret = NacosClient.add_config_watcher(data_id, group, callback())</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># print(ret)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>torando</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> nacos</span><br><span class="line"><span class="keyword">import</span> tornado.web</span><br><span class="line"><span class="keyword">from</span> tornado.options <span class="keyword">import</span> define, options</span><br><span class="line"><span class="keyword">from</span> tornado.ioloop <span class="keyword">import</span> IOLoop</span><br><span class="line"><span class="keyword">from</span> tornado.httpserver <span class="keyword">import</span> HTTPServer</span><br><span class="line"><span class="keyword">from</span> mongogridfs <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># 当前服务监听的端口</span></span><br><span class="line">define(<span class="string">&quot;port&quot;</span>, default=<span class="number">8080</span>, <span class="built_in">help</span>=<span class="string">&quot;run on the given port&quot;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>)</span><br><span class="line"><span class="comment"># 当前在nacos中注册的名称</span></span><br><span class="line">define(<span class="string">&quot;appName&quot;</span>, default=<span class="string">&#x27;nacos-python&#x27;</span>, <span class="built_in">help</span>=<span class="string">&quot;app name in nacos&quot;</span>, <span class="built_in">type</span>=string)</span><br><span class="line"></span><br><span class="line">server_addresses = <span class="string">&quot;http://192.168.16.1:8848&quot;</span></span><br><span class="line">namespace = <span class="string">&quot;public&quot;</span></span><br><span class="line">data_id = <span class="string">&quot;nacos-python&quot;</span></span><br><span class="line">group = <span class="string">&quot;DEFAULT_GROUP&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexHandler</span>(<span class="params">tornado.web.RequestHandler</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span>(<span class="params">self</span>):</span></span><br><span class="line">        dic = &#123;<span class="string">&#x27;model_id&#x27;</span>: <span class="built_in">str</span>(model_id)&#125;</span><br><span class="line">        self.write(dic)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">nacosclient</span>():</span></span><br><span class="line">    tornado.options.parse_command_line()</span><br><span class="line"></span><br><span class="line">    NacosClient = nacos.NacosClient(server_addresses, namespace=namespace, username=<span class="string">&quot;nacos&quot;</span>, password=<span class="string">&quot;nacos&quot;</span>)</span><br><span class="line">    <span class="comment"># 注册实例</span></span><br><span class="line">    NacosClient.add_naming_instance(options.appName, server_addresses, options.port, metadata=<span class="literal">None</span>, enable=<span class="literal">True</span>,</span><br><span class="line">                                    healthy=<span class="literal">True</span>,</span><br><span class="line">                                    ephemeral=<span class="literal">True</span>)</span><br><span class="line">    <span class="comment"># 发送心跳</span></span><br><span class="line">    NacosClient.send_heartbeat(options.appName, server_addresses, options.port, metadata=<span class="literal">None</span>, ephemeral=<span class="literal">False</span>,</span><br><span class="line">                               group_name=<span class="string">&#x27;DEFAULT_GROUP&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    app = tornado.web.Application(handlers=[(<span class="string">r&quot;/&quot;</span>, IndexHandler)])</span><br><span class="line">    http_server = tornado.httpserver.HTTPServer(app)</span><br><span class="line">    http_server.listen(options.port)</span><br><span class="line">    tornado.ioloop.IOLoop.instance().start()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;nacos exec&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    nacosclient()</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;nacos服务注册原理&quot;&gt;&lt;a href=&quot;#nacos服务注册原理&quot; class=&quot;headerlink&quot; title=&quot;nacos服务注册原理&quot;&gt;&lt;/a&gt;nacos服务注册原理&lt;/h4&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;tab</summary>
      
    
    
    
    
    <category term="nacos" scheme="http://example.com/tags/nacos/"/>
    
  </entry>
  
  <entry>
    <title>docker</title>
    <link href="http://example.com/2021/08/23/docker/"/>
    <id>http://example.com/2021/08/23/docker/</id>
    <published>2021-08-23T09:23:37.000Z</published>
    <updated>2022-10-20T08:09:46.404Z</updated>
    
    <content type="html"><![CDATA[<h4 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h4><ul><li>简介</li><li><a href="https://www.yuque.com/leifengyang/oncloud/kgheaf">https://www.yuque.com/leifengyang/oncloud/kgheaf</a></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Docker 的基础是 Linux 容器（LXC）等技术。在 LXC 的基础上 Docker</span><br><span class="line">进行了进一步的封装，让用户不需要去关心容器的管理，使得操作更为简便。用户操作 Docker 的容器就像操作一个快速轻量级的虚拟机一样简单。Docker 可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不</span><br><span class="line">会有任何接口（类似 iPhone 的 app）,更重要的是容器性能开销极低。</span><br></pre></td></tr></table></figure><ul><li>Docker 虚拟机的比较</li></ul><table><thead><tr><th>特性</th><th align="center">容器</th><th align="center">虚拟机</th></tr></thead><tbody><tr><td>性能</td><td align="center">接近原生</td><td align="center">较好</td></tr><tr><td>启动速度</td><td align="center">秒级</td><td align="center">分钟级</td></tr><tr><td>内存</td><td align="center">MB 级</td><td align="center">GB 级</td></tr><tr><td>硬盘适应</td><td align="center">MB 级</td><td align="center">GB 级</td></tr><tr><td>运行密度</td><td align="center">单台主机支持上千个</td><td align="center">单台主机支持几个</td></tr><tr><td>隔离性</td><td align="center">安全隔离</td><td align="center">完全隔离</td></tr><tr><td>迁移</td><td align="center">优秀</td><td align="center">一般</td></tr></tbody></table><p>​            </p><ul><li>Docker 概念和使用</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 镜像（Image）</span><br><span class="line">Docker 镜像（Image），就相当于是一个 root 文件系统。比如官方镜像 ubuntu:<span class="number">16.04</span> 就包含了完整的一套 Ubuntu16<span class="number">.04</span> 最小系统的 root 文件系统。</span><br><span class="line"><span class="number">2.</span> 容器（Container）</span><br><span class="line">镜像（Image）和容器（Container）的关系，就像是面向对象程序设计中的类和实例一样，镜像是静态的定义，容器是镜像运行时的实体。容器可以被创建、启动、停止、删除、暂停等。</span><br><span class="line"><span class="number">3.</span> 仓库（Repository）</span><br><span class="line">用来保存镜像的仓库。当我们构建好自己的镜像之后，需要存放在仓库中，当我们需要启动一个镜像时，可以在仓库中下载下来</span><br></pre></td></tr></table></figure><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><ul><li>更换系统 yum 源</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname -a</span><br></pre></td></tr></table></figure><ul><li>备份原来的yum源</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.bak</span><br></pre></td></tr></table></figure><ul><li>配置阿里源</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo</span><br></pre></td></tr></table></figure><ul><li>刷新yum源缓存</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum makecache</span><br></pre></td></tr></table></figure><ul><li>更新系统</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update -y --exclud=kernel*</span><br></pre></td></tr></table></figure><ul><li>安装基础软件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure><ul><li>添加软件源信息</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><ul><li>更新并安装docker-ce</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum makecache fast</span><br><span class="line">yum -y install docker-ce</span><br></pre></td></tr></table></figure><ul><li>设置开启自启动</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable --now docker</span><br></pre></td></tr></table></figure><ul><li>测试启动</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker info</span><br></pre></td></tr></table></figure><ul><li><p>配置镜像加速</p></li><li><p><img src="/2021/08/23/docker/image-20211011141029612.png" alt="docker"></p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/docker</span><br><span class="line">vim /etc/docker/daemon.json</span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br><span class="line">ps -ef|grep docker|grep -v grep</span><br></pre></td></tr></table></figure><ul><li>卸载</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop docker</span><br><span class="line">yum -y remove docker-ce</span><br><span class="line">rm -rf /var/lib/docker</span><br></pre></td></tr></table></figure><ul><li>docker离线安装</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载离线安装包</span></span><br><span class="line">tar xvf docker<span class="literal">-19</span>.<span class="number">03.3</span>.tgz</span><br><span class="line"><span class="built_in">mv</span> docker/* /usr/bin/</span><br></pre></td></tr></table></figure><ul><li>vim /etc/systemd/system/docker.service</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">Unit</span>]</span><br><span class="line"></span><br><span class="line">Description=Docker Application Container Engine</span><br><span class="line"></span><br><span class="line">Documentation=https://docs.docker.com</span><br><span class="line"></span><br><span class="line">After=network<span class="literal">-online</span>.target firewalld.service</span><br><span class="line"></span><br><span class="line">Wants=network<span class="literal">-online</span>.target</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">[<span class="type">Service</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">Type</span>=notify</span><br><span class="line"></span><br><span class="line">ExecStart=/usr/bin/dockerd</span><br><span class="line"></span><br><span class="line">ExecReload=/bin/<span class="built_in">kill</span> <span class="literal">-s</span> HUP <span class="variable">$MAINPID</span></span><br><span class="line"></span><br><span class="line">LimitNOFILE=infinity</span><br><span class="line"></span><br><span class="line">LimitNPROC=infinity</span><br><span class="line"></span><br><span class="line">TimeoutStartSec=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">Delegate=yes</span><br><span class="line"></span><br><span class="line">KillMode=<span class="keyword">process</span></span><br><span class="line"></span><br><span class="line">Restart=on<span class="literal">-failure</span></span><br><span class="line"></span><br><span class="line">StartLimitBurst=<span class="number">3</span></span><br><span class="line"></span><br><span class="line">StartLimitInterval=<span class="number">60</span>s</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">[<span class="type">Install</span>]</span><br><span class="line"></span><br><span class="line">WantedBy=multi<span class="literal">-user</span>.target</span><br></pre></td></tr></table></figure><ul><li>赋执行权限</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /etc/systemd/system/docker.service</span><br><span class="line"></span><br><span class="line">systemctl daemon<span class="literal">-reload</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">#开机启动</span></span><br><span class="line"></span><br><span class="line">systemctl enable docker.service</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动docker</span></span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">start</span> docker</span><br></pre></td></tr></table></figure><h4 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a><strong>镜像</strong></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker镜像就是要一个只读的模板，用来创建docker容器，一个镜像可以创建多个容器</span><br></pre></td></tr></table></figure><p><strong>获取镜像</strong></p><ul><li>docker pull [image_name]:[image_version]</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull python:3.6</span><br></pre></td></tr></table></figure><p><strong>查看镜像</strong> </p><ul><li><img src="/2021/08/23/docker/image-20210823180134481.png" alt="docker"></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">REPOSTITORY：表示镜像的仓库源</span><br><span class="line">TAG：镜像的标签</span><br><span class="line">IMAGE ID：镜像ID</span><br><span class="line">CREATED：镜像创建时间</span><br><span class="line">SIZE：镜像大小</span><br></pre></td></tr></table></figure><p><strong>参数说明</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br><span class="line">-a : 列出所有（包括临时文件）镜像文件</span><br><span class="line">-q : 仅显示 ID 信息</span><br><span class="line">--digests=true|false：列出镜像的数字摘要值</span><br></pre></td></tr></table></figure><p><strong>使用镜像启动容器</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -t -i python:3.6 sh</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><p><strong>查找镜像</strong></p><ul><li>Docker Hub 网址为：<em><a href="https://hub.docker.com/">https://hub.docker.com/</a></em></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker search python  </span><br><span class="line">docker search -f is-official=true python # -f : 过滤输出内容</span><br><span class="line">docker search -f stars=8 --limit 3 python  # --limit: 限制输出结果</span><br></pre></td></tr></table></figure><p><strong>设置镜像标签</strong></p><p><img src="/2021/08/23/docker/image-20210824100949258.png" alt="docker"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker tag 镜像ID 源镜像名称/标签</span><br></pre></td></tr></table></figure><p><strong>删除镜像</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker rmi 镜像名称:镜像标签</span><br><span class="line">docker rmi 镜像名称:镜像标签 镜像名称:镜像标签 # 删除多个</span><br><span class="line">docker rmi python:pythontag</span><br><span class="line">docker rmi -f python:pythontag  # -f强制删除</span><br><span class="line">docker rmi $(docker images -q)</span><br></pre></td></tr></table></figure><p><strong>清理镜像</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker image prune -a  # 删除所有未使用的镜像</span><br><span class="line">docker image prune -a -f  # 强制删除不提示</span><br></pre></td></tr></table></figure><p><strong>构建镜像</strong></p><ul><li>基于容器保存</li><li>-a 作者信息 -m 提交信息 -p 提交时，暂停容器运行</li></ul><p><img src="/2021/08/23/docker/image-20210824104511305.png" alt="docker"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -it centos /bin/bash  # 启动一个容器、修改并保存</span><br><span class="line">docker ps</span><br></pre></td></tr></table></figure><p><strong>保存镜像</strong></p><ul><li><p>export 和 import 的针对点是容器，将本机的容器导出为镜像包</p></li><li><p>export保存镜像</p></li></ul><p><img src="/2021/08/23/docker/image-20210824105305107.png" alt="docker"></p><ul><li>import导入镜像</li></ul><p><img src="/2021/08/23/docker/image-20210824105500458.png" alt="docker"></p><p><strong>save和load</strong></p><ul><li>save 和 load 的针对的点是镜像，将本机的镜像导入、导出为镜像包。</li></ul><p><strong>save保存镜像</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker save 镜像ID &gt; 压缩包</span><br><span class="line">docker save 4b6c4a2e83f7 &gt; python.tar</span><br><span class="line">docker save -o test.tar centos nginx  # -o 保存多个镜像</span><br></pre></td></tr></table></figure><p><strong>load导入镜像</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker load  &lt;  python.tar</span><br><span class="line">docker load -i  python.tar</span><br></pre></td></tr></table></figure><p><strong>应用场景</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker export 的应用场景：主要用来制作基础镜像，比如我们从一个 ubuntu 镜像启动一个容器，然后安装一些软件和进行一些设置后，使用 docker export 保存为一个基础镜像。然后，把这个镜像分发给其他人使用，比如作为基础的开发环境。</span><br><span class="line"></span><br><span class="line">docker save 的应用场景：如果我们的应用是使用 docker-compose.yml 编排的多个镜像组合，但我们要部署的客户服务器并不能连外网。这时就可以使用docker save 将用到的镜像打个包，然后拷贝到客户服务器上使用docker load 载入</span><br></pre></td></tr></table></figure><h4 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h4><p><strong>容器启动参数</strong></p><p><img src="/2021/08/23/docker/image-20210824111409641.png" alt="docker"></p><p><strong>创建并启动容器</strong></p><p><img src="/2021/08/23/docker/image-20210824111834752.png" alt="docker"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name wantname -e MYSQL_ROOT_PASSWORD=pwd mysql:tag</span><br><span class="line">docker run -d --name nginx -p 80:80 nginx  # 创建并启动容器</span><br><span class="line">docker run -d --name nginx --restart=always -p 80:80  nginx # 开启自启动 </span><br></pre></td></tr></table></figure><p><strong>启动容器</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker start 容器<span class="built_in">id</span> 或者 容器名</span><br><span class="line">docker start nginx <span class="comment"># 启动容器</span></span><br></pre></td></tr></table></figure><p><strong>停止容器</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker stop 容器<span class="built_in">id</span> 或者 容器名</span><br><span class="line">docker stop nginx  <span class="comment"># 停止容器</span></span><br></pre></td></tr></table></figure><p><strong>重启容器</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker restart 容器<span class="built_in">id</span> 或者 容器名</span><br><span class="line">docker restart nginx</span><br></pre></td></tr></table></figure><p><strong>进入容器</strong></p><p><img src="/2021/08/23/docker/image-20210824113350587.png" alt="docker"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run -it python sh <span class="comment"># 创建一个伪终端启动容器</span></span><br><span class="line">exit <span class="comment"># 容器停止退出</span></span><br><span class="line">crtl+P+Q <span class="comment"># 容器不停止退出</span></span><br></pre></td></tr></table></figure><p><strong>删除容器</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker rm 容器id/名字</span><br><span class="line">docker rm nginx</span><br><span class="line">docker rm -f nginx  # -f强制删除</span><br><span class="line">docker rm -f $(docker ps -a -q) # 删除多个容器</span><br><span class="line">docker ps -a -q|xargs docker rm # 删除多个容器</span><br></pre></td></tr></table></figure><p><strong>查看容器</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect nginx</span><br></pre></td></tr></table></figure><p><strong>查看容器日志信息</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs -f -t --tail</span><br></pre></td></tr></table></figure><p><strong>docker启动mongoDB</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name mongodb -p <span class="number">27017</span>:<span class="number">27017</span> mongo:<span class="number">5.0</span><span class="number">.2</span> <span class="comment"># 以守护进程的方式启动mongodb</span></span><br><span class="line">docker <span class="built_in">exec</span> -it mongodb mongo  <span class="comment"># 连接mongodb</span></span><br><span class="line">docker <span class="built_in">exec</span> -it 47eeda0c2c2f  mongo</span><br><span class="line">docker <span class="built_in">exec</span> -it mongodb /<span class="built_in">bin</span>/sh <span class="comment"># 进入docker mongodb容器</span></span><br></pre></td></tr></table></figure><p><strong>docker保存容器修改</strong></p><p><img src="/2021/08/23/docker/image-20220113160143072.png" alt="docker"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker commit -m &quot;信息&quot; 容器id 镜像：版本</span></span><br><span class="line">docker commit <span class="literal">-m</span> <span class="string">&quot;install mongoengine&quot;</span> eef33167c716 algorithmserver_web:v2</span><br></pre></td></tr></table></figure><h4 id="容器与宿主机文件拷贝"><a href="#容器与宿主机文件拷贝" class="headerlink" title="容器与宿主机文件拷贝"></a>容器与宿主机文件拷贝</h4><p>宿主机-&gt;容器</p><p><img src="/2021/08/23/docker/image-20211223165651753.png" alt="docker"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">cp</span> 宿主机中要拷贝的文件名及其路径 容器名：要拷贝到容器里面对应的路径</span><br><span class="line">docker <span class="built_in">cp</span> /root/anaconda<span class="literal">-ks</span>.cfg algorithmserver_web_1:/code</span><br></pre></td></tr></table></figure><p>容器-&gt;宿主机</p><p><img src="/2021/08/23/docker/image-20211223170115929.png" alt="docker"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">cp</span> 容器名:文件路径（容器） 宿主机</span><br><span class="line">docker <span class="built_in">cp</span> algorithmserver_web_1:/usr/share/bug/libgl1<span class="literal">-mesa</span><span class="literal">-dev</span> /root</span><br></pre></td></tr></table></figure><h4 id="数据卷"><a href="#数据卷" class="headerlink" title="数据卷"></a>数据卷</h4><ul><li>挂载数据卷可实现宿主主机与容器数据共享</li></ul><p><img src="/2021/08/23/docker/image-20211008172639416.png" alt="docker"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -v /宿主机绝对路径目录:/容器内目录 镜像名</span><br><span class="line">docker run -it -v /宿主机绝对路径目录:/容器内目录:ro 镜像名 #设置权限只读</span><br><span class="line"><span class="meta">#</span><span class="bash"> 挂载数据卷</span></span><br><span class="line">docker run -it -v /python/data:/python python:3.9 sh</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看挂载信息</span></span><br><span class="line">docker inspect 4c27b13aee90</span><br><span class="line"><span class="meta">#</span><span class="bash"> 进入容器内部</span></span><br><span class="line">docker attach 4c27b13aee90</span><br><span class="line">docker exec -it 启动的容器别名 sh</span><br></pre></td></tr></table></figure><h4 id="数据容器卷"><a href="#数据容器卷" class="headerlink" title="数据容器卷"></a>数据容器卷</h4><ul><li>命名的容器挂载数据卷，其它容器通过挂载这个（父容器）实现数据共享，挂载数据卷的容器，称之为数据卷容器</li></ul><p><img src="/2021/08/23/docker/image-20211009144813551.png" alt="docker"></p><p><img src="/2021/08/23/docker/image-20211009145341338.png" alt="docker"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --name dc01  lhj/centos </span><br><span class="line">docker run -it --name dc02 --volumes-<span class="keyword">from</span> dc01 lhj/centos</span><br><span class="line">docker run -it --name dc03 --volumes-<span class="keyword">from</span> dc01 lhj/centos</span><br><span class="line">[root@localhost _data]<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID   IMAGE        COMMAND                  CREATED          STATUS          PORTS     NAMES</span><br><span class="line">163088d46633   lhj/centos   <span class="string">&quot;/bin/sh -c /bin/bash&quot;</span>   <span class="number">18</span> seconds ago   Up <span class="number">17</span> seconds             dc03</span><br><span class="line">90bc58078e62   lhj/centos   <span class="string">&quot;/bin/sh -c /bin/bash&quot;</span>   <span class="number">7</span> minutes ago    Up <span class="number">7</span> minutes              dc02</span><br><span class="line">1654c3f6ad8f   lhj/centos   <span class="string">&quot;/bin/sh -c /bin/bash&quot;</span>   <span class="number">9</span> minutes ago    Up <span class="number">9</span> minutes              dc01</span><br><span class="line">[root@localhost _data]<span class="comment">#</span></span><br><span class="line">[root@localhost _data]<span class="comment"># docker rm -f 1654c3f6ad8f</span></span><br><span class="line">1654c3f6ad8f</span><br><span class="line">[root@localhost _data]<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID   IMAGE        COMMAND                  CREATED          STATUS          PORTS     NAMES</span><br><span class="line">163088d46633   lhj/centos   <span class="string">&quot;/bin/sh -c /bin/bash&quot;</span>   <span class="number">35</span> seconds ago   Up <span class="number">34</span> seconds             dc03</span><br><span class="line">90bc58078e62   lhj/centos   <span class="string">&quot;/bin/sh -c /bin/bash&quot;</span>   <span class="number">7</span> minutes ago    Up <span class="number">7</span> minutes              dc02</span><br><span class="line">[root@localhost _data]<span class="comment"># docker attach 90bc58078e62</span></span><br><span class="line">[root@90bc58078e62 dataVolumeContainer1]<span class="comment"># ls</span></span><br><span class="line">add01.txt  add02.txt  add03.txt</span><br><span class="line">[root@90bc58078e62 dataVolumeContainer1]<span class="comment"># touch dc02.txt</span></span><br><span class="line">[root@90bc58078e62 dataVolumeContainer1]<span class="comment"># read escape sequence</span></span><br><span class="line">[root@localhost _data]<span class="comment"># docker rm -f 90bc58078e62</span></span><br><span class="line">90bc58078e62</span><br><span class="line">[root@localhost _data]<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID   IMAGE        COMMAND                  CREATED              STATUS              PORTS     NAMES</span><br><span class="line">163088d46633   lhj/centos   <span class="string">&quot;/bin/sh -c /bin/bash&quot;</span>   About a minute ago   Up About a minute             dc03</span><br><span class="line">[root@localhost _data]<span class="comment"># docker attach 163088d46633</span></span><br><span class="line">[root@163088d46633 dataVolumeContainer1]<span class="comment"># ls</span></span><br><span class="line">add01.txt  add02.txt  add03.txt  dc02.txt</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="DockerFile解析"><a href="#DockerFile解析" class="headerlink" title="DockerFile解析"></a>DockerFile解析</h4><ul><li>DockerFile是用来构建Docker镜像的构建文件，是由一系列命令和参数构成的脚本</li></ul><p><img src="/2021/08/23/docker/image-20211009142340469.png" alt="docker"></p><p><strong>demo</strong></p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> centos</span><br><span class="line"><span class="keyword">VOLUME</span><span class="bash"> [<span class="string">&quot;/dataVolumeContainer1&quot;</span>,<span class="string">&quot;/dataVolumeContainer1&quot;</span>]</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> <span class="built_in">echo</span> <span class="string">&quot;finshed,--------success&quot;</span></span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash">/bin/bash</span></span><br></pre></td></tr></table></figure><p><strong>构建</strong></p><p><img src="/2021/08/23/docker/image-20211009151136347.png" alt="docker"></p><ul><li>step1 编写DockerFile文件</li><li>step2 docker build</li><li>step3 docker run</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker build -f /mydocker/DockerFile -t lhj/centos . #构建DockerFile</span><br><span class="line">docker run -it lhj/centos  #进入容器</span><br><span class="line">docker inspect e0575ea51593 </span><br><span class="line">cd /var/lib/docker/volumes/5331cf60580c2a0eb1e59b830f251e3056ae0fc978f9760a88d61b1b681547f3/_data #默认宿主机挂载位置</span><br></pre></td></tr></table></figure><p><strong>结构</strong></p><p><img src="/2021/08/23/docker/image-20211009151855127.png" alt="docker"></p><p><strong>CMD与ENTRYPOINT区别</strong></p><ul><li>CMD</li><li>会被覆盖，后面指令覆盖前面</li></ul><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> centos</span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> yum install -y curl</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash">[<span class="string">&quot;curl&quot;</span>,<span class="string">&quot;-s&quot;</span>,<span class="string">&quot;http:ip.cn&quot;</span>]</span></span><br></pre></td></tr></table></figure><ul><li>ENTRYPOINT</li><li>追加组合</li></ul><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> centos</span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> yum install -y curl</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="bash">[<span class="string">&quot;curl&quot;</span>,<span class="string">&quot;-s&quot;</span>,<span class="string">&quot;http:ip.cn&quot;</span>]</span></span><br></pre></td></tr></table></figure><h4 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h4><p><img src="/2021/08/23/docker/image-20211011113800624.png" alt="docker"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost mydocker]# docker pull mysql:5.6</span><br><span class="line">5.6: Pulling from library/mysql</span><br><span class="line">36d925ed8e30: Pull complete</span><br><span class="line">b8766e63cc85: Pull complete</span><br><span class="line">aab9ef03e185: Pull complete</span><br><span class="line">d9ae834f6554: Pull complete</span><br><span class="line">1f38cd4db895: Pull complete</span><br><span class="line">ed9900fd3414: Pull complete</span><br><span class="line">364aaef88bbc: Pull complete</span><br><span class="line">505933e6336f: Pull complete</span><br><span class="line">f5aa5be6914b: Pull complete</span><br><span class="line">f82ca44b4d49: Pull complete</span><br><span class="line">733552208c91: Pull complete</span><br><span class="line">Digest: sha256:506460490d4f4624f42b820f5a4b07130a8310fafb8cc1f886f1f8da50b3001c</span><br><span class="line">Status: Downloaded newer image for mysql:5.6</span><br><span class="line">docker.io/library/mysql:5.6</span><br><span class="line">[root@localhost mydocker]# docker images</span><br><span class="line">REPOSITORY   TAG       IMAGE ID       CREATED          SIZE</span><br><span class="line">myip1        latest    0f7c2f675ae2   45 minutes ago   231MB</span><br><span class="line">lhj/centos   latest    bebd2d7ea52d   45 hours ago     231MB</span><br><span class="line">mongo        latest    c1a14d3979c5   9 days ago       691MB</span><br><span class="line">python       3.9       6beb0d435def   12 days ago      911MB</span><br><span class="line">nginx        latest    f8f4ffc8092c   12 days ago      133MB</span><br><span class="line">mysql        5.6       8d06d2d16232   12 days ago      303MB</span><br><span class="line">centos       latest    5d0da3dc9764   3 weeks ago      231MB</span><br><span class="line">mongo        5.0.2     0bcbeb494bed   5 weeks ago      684MB</span><br><span class="line">[root@localhost mydocker]# docker run  --name mysql -p 3306:3306 -v /mysql/conf:/etc/mysql/conf.d -v /mysql/logs:/logs -v /mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.6</span><br><span class="line">56c038e44ef05235de1b6299483741709fe694720cce3bbfdfc81847453fc6aa</span><br><span class="line">[root@localhost mydocker]# docker ps</span><br><span class="line">CONTAINER ID   IMAGE       COMMAND                  CREATED          STATUS          PORTS                                           NAMES</span><br><span class="line">56c038e44ef0   mysql:5.6   &quot;docker-entrypoint.s…&quot;   5 seconds ago    Up 4 seconds    0.0.0.0:3306-&gt;3306/tcp, :::3306-&gt;3306/tcp       mysql</span><br><span class="line">ed6a14933b20   mongo       &quot;docker-entrypoint.s…&quot;   54 minutes ago   Up 54 minutes   0.0.0.0:21017-&gt;27017/tcp, :::21017-&gt;27017/tcp   loving_sammet</span><br><span class="line"></span><br><span class="line">[root@localhost mydocker]# docker exec -it 56c038e44ef0 /bin/bash</span><br><span class="line">root@56c038e44ef0:/# mysql -u root -p</span><br><span class="line">Enter password: 123456</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 4</span><br><span class="line">Server version: 5.6.51 MySQL Community Server (GPL)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="安装redis"><a href="#安装redis" class="headerlink" title="安装redis"></a>安装redis</h4><p><img src="/2021/08/23/docker/image-20211011151730237.png" alt="docker"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1.拉取redis镜像</span><br><span class="line">docker pull redis:6.0</span><br><span class="line">2.启动镜像</span><br><span class="line">docker run -p 6379:6379 --name redis -v /myredis/data:/data -v /myredis/conf/redis.conf:/usr/local/etc/redis/redis.conf -d redis:6.0 redis-server /usr/local/etc/redis/redis.conf --appendonly yes</span><br><span class="line">3.在/myredis/conf/redis.conf目录下编辑redis.conf配置文件</span><br><span class="line">4.进入容器连接redis客户端</span><br><span class="line">docker exec -it 运行的容器id redis-cli</span><br></pre></td></tr></table></figure><h4 id="单机安装mongodb集群"><a href="#单机安装mongodb集群" class="headerlink" title="单机安装mongodb集群"></a>单机安装mongodb集群</h4><ul><li><a href="https://www.mongodb.com/compatibility/deploying-a-mongodb-cluster-with-docker">https://www.mongodb.com/compatibility/deploying-a-mongodb-cluster-with-docker</a></li><li>第一步是创建一个 Docker 网络。这个网络会让你在这个网络中运行的每个容器都能看到彼此。要创建网络，请运行docker network create命令。</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network create mongoCluster</span><br></pre></td></tr></table></figure><ul><li>启动mongodb实例</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run <span class="literal">-d</span> -<span class="literal">-rm</span> <span class="literal">-p</span> <span class="number">27017</span>:<span class="number">27017</span> -<span class="literal">-name</span> mongo1 -<span class="literal">-network</span> mongoCluster mongo:<span class="number">5</span> mongod -<span class="literal">-replSet</span> myReplicaSet -<span class="literal">-bind_ip</span> localhost,mongo1</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>启动另外两台实例</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run <span class="literal">-d</span> -<span class="literal">-rm</span> <span class="literal">-p</span> <span class="number">27018</span>:<span class="number">27017</span> -<span class="literal">-name</span> mongo2 -<span class="literal">-network</span> mongoCluster mongo:<span class="number">5</span> mongod -<span class="literal">-replSet</span> myReplicaSet -<span class="literal">-bind_ip</span> localhost,mongo2</span><br><span class="line"> </span><br><span class="line">docker run <span class="literal">-d</span> -<span class="literal">-rm</span> <span class="literal">-p</span> <span class="number">27019</span>:<span class="number">27017</span> -<span class="literal">-name</span> mongo3 -<span class="literal">-network</span> mongoCluster mongo:<span class="number">5</span> mongod -<span class="literal">-replSet</span> myReplicaSet -<span class="literal">-bind_ip</span> localhost,mongo3</span><br></pre></td></tr></table></figure><ul><li>启动副本集</li><li><img src="/2021/08/23/docker/image-20211210175449895.png" alt="image-20211210175449895"></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">docker exec <span class="literal">-it</span> <span class="number">4</span>a9c0d70936d sh</span><br><span class="line"></span><br><span class="line">&gt; show dbs;</span><br><span class="line">uncaught exception: Error: listDatabases failed:&#123;</span><br><span class="line"><span class="string">&quot;topologyVersion&quot;</span> : &#123;</span><br><span class="line"><span class="string">&quot;processId&quot;</span> : ObjectId(<span class="string">&quot;61b31e32956a165bacc691c8&quot;</span>),</span><br><span class="line"><span class="string">&quot;counter&quot;</span> : NumberLong(<span class="number">0</span>)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">&quot;ok&quot;</span> : <span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;errmsg&quot;</span> : <span class="string">&quot;not master and slaveOk=false&quot;</span>,</span><br><span class="line"><span class="string">&quot;code&quot;</span> : <span class="number">13435</span>,</span><br><span class="line"><span class="string">&quot;codeName&quot;</span> : <span class="string">&quot;NotPrimaryNoSecondaryOk&quot;</span></span><br><span class="line">&#125; :</span><br><span class="line">_getErrorWithCode@src/mongo/shell/utils.js:<span class="number">25</span>:<span class="number">13</span></span><br><span class="line">Mongo.prototype.getDBs/&lt;@src/mongo/shell/mongo.js:<span class="number">145</span>:<span class="number">19</span></span><br><span class="line">Mongo.prototype.getDBs@src/mongo/shell/mongo.js:<span class="number">97</span>:<span class="number">12</span></span><br><span class="line">shellHelper.show@src/mongo/shell/utils.js:<span class="number">956</span>:<span class="number">13</span></span><br><span class="line">shellHelper@src/mongo/shell/utils.js:<span class="number">838</span>:<span class="number">15</span></span><br><span class="line"><span class="selector-tag">@</span>(shellhelp2):<span class="number">1</span>:<span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt; rs.initiate(&#123;</span><br><span class="line">...  _id: <span class="string">&quot;myReplicaSet&quot;</span>,</span><br><span class="line">...  members: [</span><br><span class="line"><span class="type">...</span>    &#123;<span class="type">_id</span>: <span class="number">0</span>, <span class="type">host</span>: <span class="string">&quot;mongo1&quot;</span>&#125;,</span><br><span class="line"><span class="type">...</span>    &#123;<span class="type">_id</span>: <span class="number">1</span>, <span class="type">host</span>: <span class="string">&quot;mongo2&quot;</span>&#125;,</span><br><span class="line"><span class="type">...</span>    &#123;<span class="type">_id</span>: <span class="number">2</span>, <span class="type">host</span>: <span class="string">&quot;mongo3&quot;</span>&#125;</span><br><span class="line"><span class="type">...</span>  ]</span><br><span class="line">... &#125;)</span><br><span class="line">&#123; <span class="string">&quot;ok&quot;</span> : <span class="number">1</span> &#125;</span><br><span class="line">myReplicaSet:PRIMARY&gt; rs.status()</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;set&quot;</span> : <span class="string">&quot;myReplicaSet&quot;</span>,</span><br><span class="line"><span class="string">&quot;date&quot;</span> : ISODate(<span class="string">&quot;2021-12-10T09:38:38.497Z&quot;</span>),</span><br><span class="line"><span class="string">&quot;myState&quot;</span> : <span class="number">2</span>,</span><br><span class="line"><span class="string">&quot;term&quot;</span> : NumberLong(<span class="number">0</span>),</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>两个从节点</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rs.secondaryOk();</span><br></pre></td></tr></table></figure><ul><li>测试</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主</span></span><br><span class="line">myReplicaSet:PRIMARY&gt; db.test.insert(&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;lhj&quot;</span>&#125;)</span><br><span class="line">WriteResult(&#123; <span class="string">&quot;nInserted&quot;</span> : <span class="number">1</span> &#125;)</span><br><span class="line">myReplicaSet:PRIMARY&gt; show dbs;</span><br><span class="line">admin   <span class="number">0.000</span>GB</span><br><span class="line">config  <span class="number">0.000</span>GB</span><br><span class="line">local   <span class="number">0.000</span>GB</span><br><span class="line">test    <span class="number">0.000</span>GB</span><br><span class="line">myReplicaSet:PRIMARY&gt; db.test.find()</span><br><span class="line">&#123; <span class="string">&quot;_id&quot;</span> : ObjectId(<span class="string">&quot;61b32306dc11cfcf586c0ff6&quot;</span>), <span class="string">&quot;name&quot;</span> : <span class="string">&quot;lhj&quot;</span> &#125;</span><br><span class="line"><span class="comment"># 从</span></span><br><span class="line">myReplicaSet:SECONDARY&gt; show dbs;</span><br><span class="line">admin   <span class="number">0.000</span>GB</span><br><span class="line">config  <span class="number">0.000</span>GB</span><br><span class="line">local   <span class="number">0.000</span>GB</span><br><span class="line">test    <span class="number">0.000</span>GB</span><br><span class="line">myReplicaSet:SECONDARY&gt; db.test.find()</span><br><span class="line">&#123; <span class="string">&quot;_id&quot;</span> : ObjectId(<span class="string">&quot;61b32306dc11cfcf586c0ff6&quot;</span>), <span class="string">&quot;name&quot;</span> : <span class="string">&quot;lhj&quot;</span> &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="多机安装mongodb集群"><a href="#多机安装mongodb集群" class="headerlink" title="多机安装mongodb集群"></a>多机安装mongodb集群</h4><p><img src="/2021/08/23/docker/image-20211211033910600.png" alt="image-20211211033910600"></p><ul><li><code>-d</code> 指示此容器应以分离模式（在后台）运行。</li><li><code>-p</code>表示端口映射。您机器上端口 27017 上的任何传入请求都将重定向到容器中的端口 27017。</li><li><code>--name</code>表示容器的名称。这将成为这台机器的主机名。</li><li><code>mongo:4</code>是 Docker 将使用的映像。此镜像是 MongoDB 社区服务器版本 5</li><li>该指令的其余部分是容器启动后将执行的命令。此命令<code>mongod</code>为副本集创建一个新实例</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 192.168.17.50</span></span><br><span class="line"><span class="comment"># 启动一个mongo实例</span></span><br><span class="line">docker run <span class="literal">-d</span> <span class="literal">-p</span> <span class="number">27017</span>:<span class="number">27017</span> -<span class="literal">-name</span> mongo1 <span class="literal">-v</span> /home/mongodb/<span class="keyword">data</span>/mongo1:/<span class="keyword">data</span>/db mongo:<span class="number">4</span> mongod -<span class="literal">-replSet</span> myReplicaSet  -<span class="literal">-bind_ip_all</span></span><br><span class="line"><span class="comment"># 进入该容器</span></span><br><span class="line">docker exec <span class="literal">-it</span> mongo1 sh </span><br><span class="line"><span class="comment"># 初始化副本集</span></span><br><span class="line">use admin</span><br><span class="line">rs.initiate(&#123;</span><br><span class="line"> _id: <span class="string">&quot;myReplicaSet&quot;</span>,</span><br><span class="line"> members: [</span><br><span class="line">   &#123;<span class="type">_id</span>: <span class="number">0</span>, <span class="type">host</span>: <span class="string">&quot;192.168.17.50&quot;</span>,<span class="type">priority</span>:<span class="number">2</span>&#125;,</span><br><span class="line">   &#123;<span class="type">_id</span>: <span class="number">1</span>, <span class="type">host</span>: <span class="string">&quot;192.168.17.53&quot;</span>,<span class="type">priority</span>:<span class="number">1</span>&#125;,</span><br><span class="line">   &#123;<span class="type">_id</span>: <span class="number">2</span>, <span class="type">host</span>: <span class="string">&quot;192.168.17.54&quot;</span>,<span class="type">arbiterOnly</span>:<span class="type">true</span>&#125;</span><br><span class="line"> ]</span><br><span class="line">&#125;)</span><br><span class="line">myReplicaSet:PRIMARY&gt; use test;</span><br><span class="line">switched to db test</span><br><span class="line">myReplicaSet:PRIMARY&gt; db.test.insert(&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;lhj&quot;</span>&#125;)</span><br><span class="line">WriteResult(&#123; <span class="string">&quot;nInserted&quot;</span> : <span class="number">1</span> &#125;)</span><br><span class="line">myReplicaSet:PRIMARY&gt; db.test.find()</span><br><span class="line">&#123; <span class="string">&quot;_id&quot;</span> : ObjectId(<span class="string">&quot;61b3aab264d9a9b602a0bb8f&quot;</span>), <span class="string">&quot;name&quot;</span> : <span class="string">&quot;lhj&quot;</span> &#125;</span><br><span class="line"><span class="comment"># 增加节点</span></span><br><span class="line">myReplicaSet:PRIMARY&gt; rs.add(<span class="string">&quot;192.168.17.55:27000&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 192.168.17.53</span></span><br><span class="line"><span class="comment"># 启动一个mongo实例</span></span><br><span class="line">docker run <span class="literal">-d</span> <span class="literal">-p</span> <span class="number">27017</span>:<span class="number">27017</span> -<span class="literal">-name</span> mongo2 <span class="literal">-v</span> /home/mongodb/<span class="keyword">data</span>/mongo2:/<span class="keyword">data</span>/db mongo:<span class="number">4</span> mongod -<span class="literal">-replSet</span> myReplicaSet  -<span class="literal">-bind_ip_all</span></span><br><span class="line"><span class="comment"># 进入该容器</span></span><br><span class="line">docker exec <span class="literal">-it</span> mongo2 sh </span><br><span class="line"><span class="comment"># 初始化从库</span></span><br><span class="line">&gt; rs.secondaryOk();</span><br><span class="line">myReplicaSet:SECONDARY&gt; show dbs;</span><br><span class="line">admin   <span class="number">0.000</span>GB</span><br><span class="line">config  <span class="number">0.000</span>GB</span><br><span class="line">local   <span class="number">0.000</span>GB</span><br><span class="line">myReplicaSet:SECONDARY&gt; show dbs;</span><br><span class="line">admin   <span class="number">0.000</span>GB</span><br><span class="line">config  <span class="number">0.000</span>GB</span><br><span class="line">local   <span class="number">0.000</span>GB</span><br><span class="line">test    <span class="number">0.000</span>GB</span><br><span class="line">myReplicaSet:SECONDARY&gt; db.test.find()</span><br><span class="line">&#123; <span class="string">&quot;_id&quot;</span> : ObjectId(<span class="string">&quot;61b3aab264d9a9b602a0bb8f&quot;</span>), <span class="string">&quot;name&quot;</span> : <span class="string">&quot;lhj&quot;</span> &#125;</span><br><span class="line">myReplicaSet:SECONDARY&gt; db.test.insert(&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;cong&quot;</span>&#125;)</span><br><span class="line">WriteCommandError(&#123;</span><br><span class="line"><span class="string">&quot;topologyVersion&quot;</span> : &#123;</span><br><span class="line"><span class="string">&quot;processId&quot;</span> : ObjectId(<span class="string">&quot;61b3a7f336b78718740a6c5a&quot;</span>),</span><br><span class="line"><span class="string">&quot;counter&quot;</span> : NumberLong(<span class="number">4</span>)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">&quot;operationTime&quot;</span> : Timestamp(<span class="number">1639164645</span>, <span class="number">1</span>),</span><br><span class="line"><span class="string">&quot;ok&quot;</span> : <span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;errmsg&quot;</span> : <span class="string">&quot;not master&quot;</span>,</span><br><span class="line"><span class="string">&quot;code&quot;</span> : <span class="number">10107</span>,</span><br><span class="line"><span class="string">&quot;codeName&quot;</span> : <span class="string">&quot;NotWritablePrimary&quot;</span>,</span><br><span class="line"><span class="string">&quot;<span class="variable">$clusterTime</span>&quot;</span> : &#123;</span><br><span class="line"><span class="string">&quot;clusterTime&quot;</span> : Timestamp(<span class="number">1639164645</span>, <span class="number">1</span>),</span><br><span class="line"><span class="string">&quot;signature&quot;</span> : &#123;</span><br><span class="line"><span class="string">&quot;hash&quot;</span> : BinData(<span class="number">0</span>,<span class="string">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAA=&quot;</span>),</span><br><span class="line"><span class="string">&quot;keyId&quot;</span> : NumberLong(<span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 192.168.17.54</span></span><br><span class="line"><span class="comment"># 启动一个mongo实例</span></span><br><span class="line">docker run <span class="literal">-d</span> <span class="literal">-p</span> <span class="number">27017</span>:<span class="number">27017</span> -<span class="literal">-name</span> mongo3 <span class="literal">-v</span> /home/mongodb/<span class="keyword">data</span>/mongo3:/<span class="keyword">data</span>/db mongo:<span class="number">4</span> mongod -<span class="literal">-replSet</span> myReplicaSet  -<span class="literal">-bind_ip_all</span> </span><br><span class="line"><span class="comment"># 进入该容器</span></span><br><span class="line">docker exec <span class="literal">-it</span> mongo3 sh </span><br><span class="line"><span class="comment"># 初始化从库</span></span><br><span class="line">&gt; rs.secondaryOk();</span><br><span class="line">myReplicaSet:SECONDARY&gt; show dbs;</span><br><span class="line">admin   <span class="number">0.000</span>GB</span><br><span class="line">config  <span class="number">0.000</span>GB</span><br><span class="line">local   <span class="number">0.000</span>GB</span><br><span class="line">myReplicaSet:SECONDARY&gt; show dbs;</span><br><span class="line">admin   <span class="number">0.000</span>GB</span><br><span class="line">config  <span class="number">0.000</span>GB</span><br><span class="line">local   <span class="number">0.000</span>GB</span><br><span class="line">test    <span class="number">0.000</span>GB</span><br><span class="line">myReplicaSet:SECONDARY&gt; db.test.find()</span><br><span class="line">&#123; <span class="string">&quot;_id&quot;</span> : ObjectId(<span class="string">&quot;61b3aab264d9a9b602a0bb8f&quot;</span>), <span class="string">&quot;name&quot;</span> : <span class="string">&quot;lhj&quot;</span> &#125;</span><br><span class="line">myReplicaSet:SECONDARY&gt; db.test.insert(&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;cong&quot;</span>&#125;)</span><br><span class="line">WriteCommandError(&#123;</span><br><span class="line"><span class="string">&quot;topologyVersion&quot;</span> : &#123;</span><br><span class="line"><span class="string">&quot;processId&quot;</span> : ObjectId(<span class="string">&quot;61b3a8c499baddf2687229e1&quot;</span>),</span><br><span class="line"><span class="string">&quot;counter&quot;</span> : NumberLong(<span class="number">4</span>)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">&quot;operationTime&quot;</span> : Timestamp(<span class="number">1639164685</span>, <span class="number">1</span>),</span><br><span class="line"><span class="string">&quot;ok&quot;</span> : <span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;errmsg&quot;</span> : <span class="string">&quot;not master&quot;</span>,</span><br><span class="line"><span class="string">&quot;code&quot;</span> : <span class="number">10107</span>,</span><br><span class="line"><span class="string">&quot;codeName&quot;</span> : <span class="string">&quot;NotWritablePrimary&quot;</span>,</span><br><span class="line"><span class="string">&quot;<span class="variable">$clusterTime</span>&quot;</span> : &#123;</span><br><span class="line"><span class="string">&quot;clusterTime&quot;</span> : Timestamp(<span class="number">1639164685</span>, <span class="number">1</span>),</span><br><span class="line"><span class="string">&quot;signature&quot;</span> : &#123;</span><br><span class="line"><span class="string">&quot;hash&quot;</span> : BinData(<span class="number">0</span>,<span class="string">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAA=&quot;</span>),</span><br><span class="line"><span class="string">&quot;keyId&quot;</span> : NumberLong(<span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)s</span><br></pre></td></tr></table></figure><h4 id="本地镜像推送到阿里云服务器"><a href="#本地镜像推送到阿里云服务器" class="headerlink" title="本地镜像推送到阿里云服务器"></a>本地镜像推送到阿里云服务器</h4><p><img src="/2021/08/23/docker/image-20211011142539982.png" alt="docker"></p><p><img src="/2021/08/23/docker/image-20211011142607874.png" alt="docker"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 登录阿里云Docker Registry</span><br><span class="line">docker login --username=liuhaojie1995 registry.cn-shanghai.aliyuncs.com</span><br><span class="line"><span class="number">2.</span> 从Registry中拉取镜像</span><br><span class="line">docker tag [ImageId] registry.cn-shanghai.aliyuncs.com/lhaojie/mydocker:[镜像版本号]</span><br><span class="line"><span class="number">3.</span> 将镜像推送到Registry</span><br><span class="line">docker push registry.cn-shanghai.aliyuncs.com/lhaojie/mydocker:[镜像版本号]</span><br><span class="line"><span class="number">4.</span> 从Registry中拉取镜像</span><br><span class="line">docker pull registry.cn-shanghai.aliyuncs.com/lhaojie/mydocker:[镜像版本号]</span><br></pre></td></tr></table></figure><h4 id="搭建私有镜像仓库harbor"><a href="#搭建私有镜像仓库harbor" class="headerlink" title="搭建私有镜像仓库harbor"></a>搭建私有镜像仓库harbor</h4><p><code>安装docker-compose</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> docker<span class="literal">-compose</span> /usr/bin/ &amp;&amp; <span class="built_in">cd</span> /usr/bin/</span><br><span class="line">chmod +x docker<span class="literal">-compose</span></span><br></pre></td></tr></table></figure><p><code>部署harbor</code></p><ul><li><a href="https://github.com/goharbor/harbor/releases">https://github.com/goharbor/harbor/releases</a></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">tar xvf harbor<span class="literal">-offline</span><span class="literal">-installer</span><span class="literal">-v1</span>.<span class="number">10.10</span>.tgz <span class="literal">-C</span> /usr/local</span><br><span class="line"><span class="built_in">cd</span> /usr/local/harbor</span><br><span class="line"><span class="comment"># 备份配置文件</span></span><br><span class="line"><span class="built_in">cp</span> harbor.yml harbor.yml.bk</span><br><span class="line">vim harbor.yml</span><br><span class="line">hostname: harbor.wuvikr.top</span><br><span class="line">harbor_admin_password: pass1234</span><br><span class="line"><span class="comment">#https:</span></span><br><span class="line">  <span class="comment"># https port for harbor, default is 443</span></span><br><span class="line"><span class="comment">#  port: 443</span></span><br><span class="line">  <span class="comment"># The path of cert and key files for nginx</span></span><br><span class="line"><span class="comment">#  certificate: /your/certificate/path</span></span><br><span class="line"><span class="comment">#  private_key: /your/private/key/path</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># /etc/hosts配置文件增加</span></span><br><span class="line"><span class="number">192.168</span>.<span class="number">17.57</span> harbor.wuvikr.top</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行安装脚本（/usr/local/harbor目录）</span></span><br><span class="line">./install.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>报错排查</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1 ERROR:root:Please specify hostname</span></span><br><span class="line">修改配置文件hostname: reg.mydomain.com （错误）</span><br><span class="line">hostname: harbor.wuvikr.top （正确）</span><br><span class="line"><span class="comment">#2 ERROR:root:Error: The protocol is https but attribute ssl_cert is not set</span></span><br><span class="line">需要配置证书认证</span><br></pre></td></tr></table></figure><p><code>harbor官网证书认证</code></p><ul><li><a href="https://goharbor.io/docs/2.4.0/install-config/configure-https/">https://goharbor.io/docs/2.4.0/install-config/configure-https/</a></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.生成 CA 证书私钥</span></span><br><span class="line">openssl genrsa <span class="literal">-out</span> ca.key <span class="number">4096</span></span><br><span class="line"><span class="comment">#2.生成 CA 证书</span></span><br><span class="line">openssl req <span class="literal">-x509</span> <span class="literal">-new</span> <span class="literal">-nodes</span> <span class="literal">-sha512</span> <span class="literal">-days</span> <span class="number">3650</span> \</span><br><span class="line"> <span class="literal">-subj</span> <span class="string">&quot;/C=CN/ST=Beijing/L=Beijing/O=example/OU=Personal/CN=harbor.wuvikr.top&quot;</span> \</span><br><span class="line"> <span class="literal">-key</span> ca.key \</span><br><span class="line"> <span class="literal">-out</span> ca.crt</span><br><span class="line"><span class="comment">#3.生成服务器证书（证书通常包含一个.crt文件和一个.key文件）</span></span><br><span class="line"><span class="comment">#3.1生成私钥</span></span><br><span class="line">openssl genrsa <span class="literal">-out</span> harbor.wuvikr.top.key <span class="number">4096</span></span><br><span class="line"><span class="comment">#3.2生成证书签名请求 (CSR)</span></span><br><span class="line">openssl req <span class="literal">-sha512</span> <span class="literal">-new</span> \</span><br><span class="line">    <span class="literal">-subj</span> <span class="string">&quot;/C=CN/ST=Beijing/L=Beijing/O=example/OU=Personal/CN=harbor.wuvikr.top&quot;</span> \</span><br><span class="line">    <span class="literal">-key</span> harbor.wuvikr.top.key \</span><br><span class="line">    <span class="literal">-out</span> harbor.wuvikr.top.csr</span><br><span class="line"><span class="comment">#3.3生成 x509 v3 扩展文件</span></span><br><span class="line"><span class="built_in">cat</span> &gt; v3.ext &lt;&lt;<span class="literal">-EOF</span></span><br><span class="line">authorityKeyIdentifier=keyid,issuer</span><br><span class="line">basicConstraints=CA:FALSE</span><br><span class="line">keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment</span><br><span class="line">extendedKeyUsage = serverAuth</span><br><span class="line">subjectAltName = @alt_names</span><br><span class="line"></span><br><span class="line">[<span class="type">alt_names</span>]</span><br><span class="line">DNS.<span class="number">1</span>=harbor.wuvikr.top</span><br><span class="line">EOF</span><br><span class="line"><span class="comment">#3.4使用该v3.ext文件为您的 Harbor 主机生成证书</span></span><br><span class="line">openssl x509 <span class="literal">-req</span> <span class="literal">-sha512</span> <span class="literal">-days</span> <span class="number">3650</span> \</span><br><span class="line">    <span class="literal">-extfile</span> v3.ext \</span><br><span class="line">    <span class="literal">-CA</span> ca.crt <span class="literal">-CAkey</span> ca.key <span class="literal">-CAcreateserial</span> \</span><br><span class="line">    <span class="operator">-in</span> harbor.wuvikr.top.csr \</span><br><span class="line">    <span class="literal">-out</span> harbor.wuvikr.top.crt</span><br><span class="line"><span class="comment">#4.Docker 守护进程将.crt文件解释为 CA 证书，将.cert文件解释为客户端证书</span></span><br><span class="line">openssl x509 <span class="literal">-inform</span> PEM <span class="operator">-in</span> harbor.wuvikr.top.crt <span class="literal">-out</span> harbor.wuvikr.top.cert</span><br><span class="line"><span class="comment">#5.将服务器证书、密钥和 CA 文件复制到 Harbor 主机上的 Docker 证书文件夹中。您必须先创建适当的文件夹</span></span><br><span class="line"><span class="built_in">cp</span> harbor.wuvikr.top.cert /etc/docker/certs.d/harbor.wuvikr.top/</span><br><span class="line"><span class="built_in">cp</span> harbor.wuvikr.top.key /etc/docker/certs.d/harbor.wuvikr.top/</span><br><span class="line"><span class="built_in">cp</span> ca.crt /etc/docker/certs.d/harbor.wuvikr.top/</span><br></pre></td></tr></table></figure><p><code>证书认证</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">mkdir /usr/local/harbor/certs</span><br><span class="line"><span class="built_in">cd</span> /usr/local/harbor/certs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成CA证书</span></span><br><span class="line">openssl req <span class="literal">-newkey</span> rsa:<span class="number">2048</span> <span class="literal">-nodes</span> <span class="literal">-x509</span> <span class="literal">-subj</span> <span class="string">&quot;/C=CN/ST=Shanghai/L=Shanghai/O=wuvikr/OU=IT/CN=harbor.wuvikr.top/emailAddress=ca.wuvikr.top&quot;</span> <span class="literal">-set_serial</span> <span class="number">01</span> <span class="literal">-keyout</span> ca.key <span class="literal">-days</span> <span class="number">3650</span> <span class="literal">-out</span> ca.crt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 成harbor证书申请</span></span><br><span class="line">openssl req <span class="literal">-newkey</span> rsa:<span class="number">2048</span> <span class="literal">-nodes</span> <span class="literal">-subj</span> <span class="string">&quot;/C=CN/ST=Shanghai/L=Shanghai/O=wuvikr/OU=devops/CN=harbor.wuvikr.top     &quot;</span> <span class="literal">-set_serial</span> <span class="number">02</span> <span class="literal">-keyout</span> harbor.key <span class="literal">-out</span> harbor.csr</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为harbor颁发证书</span></span><br><span class="line">openssl x509 <span class="literal">-req</span> <span class="operator">-in</span> harbor.csr <span class="literal">-CA</span> ca.crt <span class="literal">-CAkey</span> ca.key <span class="literal">-CAcreateserial</span> <span class="literal">-out</span> harbor.crt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看证书</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">localhost</span> <span class="type">certs</span>]<span class="comment"># pwd</span></span><br><span class="line">/usr/local/harbor/certs</span><br><span class="line">[<span class="type">root</span>@<span class="type">localhost</span> <span class="type">certs</span>]<span class="comment"># ls</span></span><br><span class="line">ca.crt  ca.key  ca.srl  harbor.crt  harbor.csr  harbor.key</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改配置harbor.yml</span></span><br><span class="line">vim harbor.yml</span><br><span class="line"><span class="comment"># 修改如下图</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2021/08/23/docker/image-20220225144001422.png" alt="docker"></p><p><code>启动</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用prepare脚本重新加载harbor.yml中的配置</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">localhost</span> <span class="type">harbor</span>]<span class="comment"># ./prepare</span></span><br><span class="line">prepare base <span class="built_in">dir</span> is <span class="built_in">set</span> to /usr/local/harbor</span><br><span class="line">/usr/src/app/utils/configs.py:<span class="number">100</span>: YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated, as the default Loader is unsa     fe. Please read https://msg.pyyaml.org/load <span class="keyword">for</span> full details.</span><br><span class="line">  configs = yaml.load(f)</span><br><span class="line">/usr/src/app/utils/configs.py:<span class="number">90</span>: YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated, as the default Loader is unsaf     e. Please read https://msg.pyyaml.org/load <span class="keyword">for</span> full details.</span><br><span class="line">  versions = yaml.load(f)</span><br><span class="line">Clearing the configuration file: /config/log/logrotate.conf</span><br><span class="line">Clearing the configuration file: /config/log/rsyslog_docker.conf</span><br><span class="line">Generated configuration file: /config/log/logrotate.conf</span><br><span class="line">Generated configuration file: /config/log/rsyslog_docker.conf</span><br><span class="line">Generated configuration file: /config/nginx/nginx.conf</span><br><span class="line">Generated configuration file: /config/core/env</span><br><span class="line">Generated configuration file: /config/core/app.conf</span><br><span class="line">Generated configuration file: /config/registry/config.yml</span><br><span class="line">Generated configuration file: /config/registryctl/env</span><br><span class="line">Generated configuration file: /config/db/env</span><br><span class="line">Generated configuration file: /config/jobservice/env</span><br><span class="line">Generated configuration file: /config/jobservice/config.yml</span><br><span class="line">Generated and saved secret to file: /secret/keys/secretkey</span><br><span class="line">Generated certificate, key file: /secret/core/private_key.pem, cert file: /secret/registry/root.crt</span><br><span class="line">Generated configuration file: /compose_location/docker<span class="literal">-compose</span>.yml</span><br><span class="line">Clean up the input <span class="built_in">dir</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>查看运行中的容器</code></p><p><img src="/2021/08/23/docker/image-20220225144254489.png" alt="docker"></p><p><code>web界面</code></p><ul><li>ip地址</li></ul><p><img src="/2021/08/23/docker/image-20220225144337888.png" alt="docker"></p><p><code>解决https下登录证书问题</code></p><p><img src="/2021/08/23/docker/image-20220225145249557.png" alt="docker"></p><p><code>上传镜像到harbor仓库</code></p><ul><li><p>harbor界面点击新建项目为 lhj</p></li><li><p><img src="/2021/08/23/docker/image-20220225160024962.png" alt="docker"></p></li><li><p><img src="/2021/08/23/docker/image-20220225160149144.png" alt="docker"></p></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在项目中标记镜像：</span></span><br><span class="line">docker tag SOURCE_IMAGE[:<span class="type">TAG</span>] harbor.wuvikr.top/lhj/IMAGE[:<span class="type">TAG</span>]</span><br><span class="line"><span class="comment"># 推送镜像到当前项目：</span></span><br><span class="line">docker push harbor.wuvikr.top/lhj/IMAGE[:<span class="type">TAG</span>]</span><br></pre></td></tr></table></figure><h4 id="kubesphere配置http的harbor仓库"><a href="#kubesphere配置http的harbor仓库" class="headerlink" title="kubesphere配置http的harbor仓库"></a>kubesphere配置http的harbor仓库</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">registry:</span><br><span class="line">    <span class="built_in">type</span>: harbor</span><br><span class="line">    auths:</span><br><span class="line">      <span class="string">&quot;http://192.168.72.15&quot;</span>:</span><br><span class="line">        username: admin</span><br><span class="line">        password: Harbor12345</span><br><span class="line">        skipTLSVerify: true</span><br><span class="line">        plainHTTP: true</span><br><span class="line">    privateRegistry: <span class="string">&quot;http://192.168.72.15&quot;</span></span><br><span class="line">    namespaceOverride: <span class="string">&quot;kubesphereio&quot;</span></span><br><span class="line">    registryMirrors: []</span><br><span class="line">    insecureRegistries: []</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="搭建sentry"><a href="#搭建sentry" class="headerlink" title="搭建sentry"></a>搭建sentry</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#启动redis容器</span></span><br><span class="line">docker run <span class="literal">-d</span> -<span class="literal">-name</span> sentry<span class="literal">-redis</span> redis</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动postgres容器</span></span><br><span class="line">docker run <span class="literal">-d</span> -<span class="literal">-name</span> sentry<span class="literal">-postgres</span> <span class="literal">-e</span> POSTGRES_PASSWORD=Foda2022 <span class="literal">-e</span> POSTGRES_USER=admin postgres</span><br><span class="line"></span><br><span class="line"><span class="comment">#生成秘钥 key 供所有 sentry 容器共享（该值作用于环境变量：SENTRY_SECRET_KEY）</span></span><br><span class="line">docker run -<span class="literal">-rm</span> sentry config generate<span class="literal">-secret</span><span class="literal">-key</span></span><br><span class="line"></span><br><span class="line">密钥:q%<span class="number">1</span>)<span class="number">8</span>k6hbnnkp6kof5po)*jcx<span class="comment">#63bp37-3b*m=o^rv7rmzyqce</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据库更新</span></span><br><span class="line">docker run <span class="literal">-it</span> -<span class="literal">-rm</span> <span class="literal">-e</span> SENTRY_SECRET_KEY=<span class="string">&#x27;q%1)8k6hbnnkp6kof5po)*jcx#63bp37-3b*m=o^rv7rmzyqce&#x27;</span> -<span class="literal">-link</span> sentry<span class="literal">-postgres</span>:postgres -<span class="literal">-link</span> sentry<span class="literal">-redis</span>:redis sentry upgrade</span><br><span class="line"></span><br><span class="line"><span class="comment">#会创建一个账号</span></span><br><span class="line">Email: foda@ai.com</span><br><span class="line">Password: Foda2022</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动sentry服务</span></span><br><span class="line">docker run <span class="literal">-d</span> -<span class="literal">-name</span> sentry<span class="literal">-luffy</span> <span class="literal">-p</span> <span class="number">8888</span>:<span class="number">9000</span> <span class="literal">-e</span> SENTRY_SECRET_KEY=<span class="string">&#x27;q%1)8k6hbnnkp6kof5po)*jcx#63bp37-3b*m=o^rv7rmzyqce&#x27;</span> -<span class="literal">-link</span> sentry<span class="literal">-redis</span>:redis -<span class="literal">-link</span> sentry<span class="literal">-postgres</span>:postgres sentry</span><br><span class="line"></span><br><span class="line"><span class="comment">#额外需要启动 celery beat 和 celery worker</span></span><br><span class="line">docker run <span class="literal">-d</span> -<span class="literal">-name</span> sentry<span class="literal">-cron</span> <span class="literal">-e</span> SENTRY_SECRET_KEY=<span class="string">&#x27;q%1)8k6hbnnkp6kof5po)*jcx#63bp37-3b*m=o^rv7rmzyqce&#x27;</span> -<span class="literal">-link</span> sentry<span class="literal">-postgres</span>:postgres -<span class="literal">-link</span> sentry<span class="literal">-redis</span>:redis sentry run cron</span><br><span class="line"></span><br><span class="line">docker run <span class="literal">-d</span> -<span class="literal">-name</span> sentry<span class="literal">-worker</span><span class="literal">-1</span> <span class="literal">-e</span> SENTRY_SECRET_KEY=<span class="string">&#x27;q%1)8k6hbnnkp6kof5po)*jcx#63bp37-3b*m=o^rv7rmzyqce&#x27;</span> -<span class="literal">-link</span> sentry<span class="literal">-postgres</span>:postgres -<span class="literal">-link</span> sentry<span class="literal">-redis</span>:redis sentry run worker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建用户</span></span><br><span class="line">docker run <span class="literal">-it</span> -<span class="literal">-rm</span> <span class="literal">-e</span> SENTRY_SECRET_KEY=<span class="string">&#x27;q%1)8k6hbnnkp6kof5po)*jcx#63bp37-3b*m=o^rv7rmzyqce&#x27;</span> -<span class="literal">-link</span> sentry<span class="literal">-redis</span>:redis -<span class="literal">-link</span> sentry<span class="literal">-postgres</span>:postgres sentry createuser</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2021/08/23/docker/image-20220816141727251.png" alt="docker"></p><p><img src="/2021/08/23/docker/image-20220816141953908.png" alt="docker"></p><h4 id="docker-compose"><a href="#docker-compose" class="headerlink" title="docker-compose"></a>docker-compose</h4><p><img src="/2021/08/23/docker/image-20211214173116426.png" alt="docker"></p><p><a href="https://docs.docker.com/compose/gettingstarted/#where-to-go-next">https://docs.docker.com/compose/gettingstarted/#where-to-go-next</a></p><p><code>安装compose</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1.运行此命令以下载 Docker Compose 的当前稳定版本：</span></span><br><span class="line">curl -L &quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose</span><br><span class="line"><span class="meta">#</span><span class="bash"> 2.对二进制文件应用可执行权限</span></span><br><span class="line">chmod +x /usr/local/bin/docker-compose</span><br><span class="line"><span class="meta">#</span><span class="bash"> 3.测试安装</span></span><br><span class="line">docker-compose --version</span><br><span class="line"><span class="meta">#</span><span class="bash"> 出现版本成功</span></span><br><span class="line">docker-compose version 1.29.2, build 5becea4c</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3.0&quot;</span></span><br><span class="line">   </span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">web:</span></span><br><span class="line">    <span class="comment">#build: .</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">algorithmserver_web:v1</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">.:/code</span></span><br><span class="line">    <span class="attr">expose:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8000&quot;</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">db</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mongodb</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">db_network</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">nginx_network</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis_network</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mongod_network</span></span><br><span class="line">    <span class="attr">tty:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">stdin_open:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">db:</span></span><br><span class="line">    <span class="attr">image:</span>  <span class="string">mysql:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">mysql</span></span><br><span class="line">    <span class="comment">#command: --default-authentication-plugin=mysql_native_password</span></span><br><span class="line">    <span class="comment">#command: --disable-partition-engine-check</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./compose/mysql:/var/lib/mysql:rw</span></span><br><span class="line">      <span class="comment">#- ./compose/mysql/conf/my.conf:/etc/mysql/my.cnf</span></span><br><span class="line">      <span class="comment">#- ./compose/mysql/init:/docker-entrypoint-initdb.d/</span></span><br><span class="line">    <span class="attr">expose:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;3307&quot;</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;3307:3306&quot;</span></span><br><span class="line">    <span class="attr">restart:</span>  <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_ROOT_PASSWORD=Foda.ai2021</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_DATABASE=algorithm</span></span><br><span class="line">    <span class="attr">command:</span>  [</span><br><span class="line">      <span class="string">&#x27;--character-set-server=utf8&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;--collation-server=utf8_general_ci&#x27;</span></span><br><span class="line">    ]</span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">db_network</span></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis:6.0</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">redis-server</span>  <span class="string">/etc/redis/redis.conf</span>  <span class="string">--requirepass</span> <span class="string">Foda.ai2021</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis_network</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./compose/redis/:/data</span> <span class="comment"># 通过挂载给redis数据备份</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./compose/redis/redis.conf:/etc/redis/redis.conf</span> <span class="comment"># 挂载redis配置文件</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;6379:6379&quot;</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span> </span><br><span class="line">    </span><br><span class="line">  <span class="attr">mongodb:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">&quot;mongo:4&quot;</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">mongo</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="comment">#- ./compose/mongo/configdb:/data/configdb</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./compose/mongo/db:/data/db</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./compose/mongo/mongod.conf:/etc/mongod.conf.orig</span></span><br><span class="line">    <span class="comment">#command:</span></span><br><span class="line">      <span class="comment">#- mongod </span></span><br><span class="line">      <span class="comment">#- &quot;--replSet&quot;</span></span><br><span class="line">      <span class="comment">#- rs0</span></span><br><span class="line">      <span class="comment">#- &quot;--bind_ip&quot;</span></span><br><span class="line">      <span class="comment">#- 0.0.0.0</span></span><br><span class="line">    <span class="attr">expose:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;27017&quot;</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;27017:27017&quot;</span>   </span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mongod_network</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">  <span class="attr">nginx:</span></span><br><span class="line">    <span class="attr">build:</span> <span class="string">./compose/nginx</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8000:8000&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;443:443&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./compose/nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf</span> <span class="comment"># 挂载nginx配置文件</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./compose/nginx/ssl:/usr/share/nginx/ssl</span> <span class="comment"># 挂载ssl证书目录</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./compose/nginx/log:/var/log/nginx</span> <span class="comment"># 挂载日志</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./static:/usr/share/nginx/html/static</span> <span class="comment"># 挂载静态文件</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./media:/usr/share/nginx/html/media</span> <span class="comment"># 挂载用户上传媒体文件</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">nginx_network</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">web</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">db_network:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span></span><br><span class="line">  <span class="attr">nginx_network:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span></span><br><span class="line">  <span class="attr">redis_network:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span></span><br><span class="line">  <span class="attr">mongod_network:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span></span><br><span class="line">    </span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="从-Docker-Compose-到-Kubernetes-的转换工具"><a href="#从-Docker-Compose-到-Kubernetes-的转换工具" class="headerlink" title="从 Docker Compose 到 Kubernetes 的转换工具"></a>从 Docker Compose 到 Kubernetes 的转换工具</h4><ul><li><p><a href="https://kompose.io/">https://kompose.io/</a></p></li><li><p><code>Kompose 是 Docker Compose 到 Kubernetes（或 OpenShift）等容器编排器的转换工具</code></p></li></ul><p><strong><code>Kubernetes + Compose = Kompose</code></strong></p><ul><li>使用 Docker Compose 简化开发过程，然后将容器部署到生产集群</li><li><code>docker-compose.yaml</code>用一个简单的命令转换你的<code>kompose convert</code></li></ul><p><code>安装</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install epel-release</span><br><span class="line">yum -y install kompose</span><br></pre></td></tr></table></figure><h4 id="k8s基础概念"><a href="#k8s基础概念" class="headerlink" title="k8s基础概念"></a>k8s基础概念</h4><h5 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a><strong>安装docker</strong></h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">sudo yum remove docker*</span><br><span class="line">sudo yum install <span class="literal">-y</span> yum<span class="literal">-utils</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#配置docker的yum地址</span></span><br><span class="line">sudo yum<span class="literal">-config</span><span class="literal">-manager</span> \</span><br><span class="line">-<span class="literal">-add</span><span class="literal">-repo</span> \</span><br><span class="line">http://mirrors.aliyun.com/docker<span class="literal">-ce</span>/linux/centos/docker<span class="literal">-ce</span>.repo</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#安装指定版本</span></span><br><span class="line">sudo yum install <span class="literal">-y</span> docker<span class="literal">-ce</span><span class="literal">-20</span>.<span class="number">10.7</span> docker<span class="literal">-ce</span><span class="literal">-cli</span><span class="literal">-20</span>.<span class="number">10.7</span> containerd.io<span class="literal">-1</span>.<span class="number">4.6</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#启动&amp;开机启动docker</span></span><br><span class="line">systemctl enable docker -<span class="literal">-now</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># docker加速配置</span></span><br><span class="line">sudo mkdir <span class="literal">-p</span> /etc/docker</span><br><span class="line">sudo <span class="built_in">tee</span> /etc/docker/daemon.json &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://82m9ar63.mirror.aliyuncs.com&quot;</span>],</span><br><span class="line">  <span class="string">&quot;exec-opts&quot;</span>: [<span class="string">&quot;native.cgroupdriver=systemd&quot;</span>],</span><br><span class="line">  <span class="string">&quot;log-driver&quot;</span>: <span class="string">&quot;json-file&quot;</span>,</span><br><span class="line">  <span class="string">&quot;log-opts&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;max-size&quot;</span>: <span class="string">&quot;100m&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;storage-driver&quot;</span>: <span class="string">&quot;overlay2&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon<span class="literal">-reload</span></span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><h5 id="kubeadm创建集群"><a href="#kubeadm创建集群" class="headerlink" title="kubeadm创建集群"></a><strong>kubeadm创建集群</strong></h5><p><code>基础环境</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">各个机器设置自己的域名</span></span><br><span class="line">hostnamectl set-hostname k8s-master</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 将 SELinux 设置为 permissive 模式（相当于将其禁用）</span></span><br><span class="line">sudo setenforce 0</span><br><span class="line">sudo sed -i &#x27;s/^SELINUX=enforcing$/SELINUX=permissive/&#x27; /etc/selinux/config</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">关闭swap</span></span><br><span class="line">swapoff -a  </span><br><span class="line">sed -ri &#x27;s/.*swap.*/#&amp;/&#x27; /etc/fstab</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">允许 iptables 检查桥接流量</span></span><br><span class="line">cat &lt;&lt;EOF | sudo tee /etc/modules-load.d/k8s.conf</span><br><span class="line">br_netfilter</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">cat &lt;&lt;EOF | sudo tee /etc/sysctl.d/k8s.conf</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">EOF</span><br><span class="line">sudo sysctl --system</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>安装kubelet、kubeadm、kubectl</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt;EOF | sudo <span class="built_in">tee</span> /etc/yum.repos.d/kubernetes.repo</span><br><span class="line">[<span class="type">kubernetes</span>]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes<span class="literal">-el7</span><span class="literal">-x86_64</span></span><br><span class="line">enabled=<span class="number">1</span></span><br><span class="line">gpgcheck=<span class="number">0</span></span><br><span class="line">repo_gpgcheck=<span class="number">0</span></span><br><span class="line">gpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum<span class="literal">-key</span>.gpg</span><br><span class="line">   http://mirrors.aliyun.com/kubernetes/yum/doc/rpm<span class="literal">-package</span><span class="literal">-key</span>.gpg</span><br><span class="line">exclude=kubelet kubeadm kubectl</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo yum install <span class="literal">-y</span> kubelet<span class="literal">-1</span>.<span class="number">20.9</span> kubeadm<span class="literal">-1</span>.<span class="number">20.9</span> kubectl<span class="literal">-1</span>.<span class="number">20.9</span> -<span class="literal">-disableexcludes</span>=kubernetes</span><br><span class="line"></span><br><span class="line">sudo systemctl enable -<span class="literal">-now</span> kubelet</span><br></pre></td></tr></table></figure><h5 id="使用kubeadm引导集群"><a href="#使用kubeadm引导集群" class="headerlink" title="使用kubeadm引导集群"></a><strong>使用kubeadm引导集群</strong></h5><p><code>下载各个机器需要的镜像</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">tee</span> ./images.sh &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">images=(</span><br><span class="line">kube<span class="literal">-apiserver</span>:v1.<span class="number">20.9</span></span><br><span class="line">kube<span class="literal">-proxy</span>:v1.<span class="number">20.9</span></span><br><span class="line">kube<span class="literal">-controller</span><span class="literal">-manager</span>:v1.<span class="number">20.9</span></span><br><span class="line">kube<span class="literal">-scheduler</span>:v1.<span class="number">20.9</span></span><br><span class="line">coredns:<span class="number">1.7</span>.<span class="number">0</span></span><br><span class="line">etcd:<span class="number">3.4</span>.<span class="number">13</span><span class="literal">-0</span></span><br><span class="line">pause:<span class="number">3.2</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">for</span> imageName <span class="keyword">in</span> <span class="variable">$</span>&#123;images[<span class="selector-tag">@</span>]&#125; ; <span class="keyword">do</span></span><br><span class="line">docker pull registry.cn<span class="literal">-hangzhou</span>.aliyuncs.com/lfy_k8s_images/<span class="variable">$imageName</span></span><br><span class="line">done</span><br><span class="line">EOF</span><br><span class="line">   </span><br><span class="line">chmod +x ./images.sh &amp;&amp; ./images.sh</span><br></pre></td></tr></table></figure><p><code>初始化主节点</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#所有机器添加master域名映射，以下需要修改为自己的</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;10.21.6.11  cluster-endpoint&quot;</span> &gt;&gt; /etc/hosts</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 主节点初始化(在主节点上执行)</span></span><br><span class="line">kubeadm init \</span><br><span class="line">-<span class="literal">-apiserver</span><span class="literal">-advertise</span><span class="literal">-address</span>=<span class="number">10.21</span>.<span class="number">6.11</span> \</span><br><span class="line">-<span class="literal">-control</span><span class="literal">-plane</span><span class="literal">-endpoint</span>=cluster<span class="literal">-endpoint</span> \</span><br><span class="line">-<span class="literal">-image</span><span class="literal">-repository</span> registry.cn<span class="literal">-hangzhou</span>.aliyuncs.com/lfy_k8s_images \</span><br><span class="line">-<span class="literal">-kubernetes</span><span class="literal">-version</span> v1.<span class="number">20.9</span> \</span><br><span class="line">-<span class="literal">-service</span><span class="literal">-cidr</span>=<span class="number">10.96</span>.<span class="number">0.0</span>/<span class="number">16</span> \</span><br><span class="line">-<span class="literal">-pod</span><span class="literal">-network</span><span class="literal">-cidr</span>=<span class="number">192.168</span>.<span class="number">0.0</span>/<span class="number">16</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#所有网络范围不重叠</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">Your Kubernetes control<span class="literal">-plane</span> has initialized successfully!</span><br><span class="line"></span><br><span class="line">To <span class="built_in">start</span> <span class="keyword">using</span> your cluster, you need to run the following as a regular user:</span><br><span class="line"></span><br><span class="line">  mkdir <span class="literal">-p</span> <span class="variable">$HOME</span>/.kube</span><br><span class="line">  sudo <span class="built_in">cp</span> <span class="literal">-i</span> /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">  sudo chown <span class="variable">$</span>(id <span class="literal">-u</span>):<span class="variable">$</span>(id <span class="literal">-g</span>) <span class="variable">$HOME</span>/.kube/config</span><br><span class="line"></span><br><span class="line">Alternatively, <span class="keyword">if</span> you are the root user, you can run:</span><br><span class="line"></span><br><span class="line">  export KUBECONFIG=/etc/kubernetes/admin.conf</span><br><span class="line"></span><br><span class="line">You should now deploy a pod network to the cluster.</span><br><span class="line">Run <span class="string">&quot;kubectl apply -f [podnetwork].yaml&quot;</span> with one of the options listed at:</span><br><span class="line">  https://kubernetes.io/docs/concepts/cluster<span class="literal">-administration</span>/addons/</span><br><span class="line"></span><br><span class="line">You can now join any number of control<span class="literal">-plane</span> nodes by copying certificate authorities</span><br><span class="line">and service account keys on each node and then running the following as root:</span><br><span class="line"></span><br><span class="line">  kubeadm join cluster<span class="literal">-endpoint</span>:<span class="number">6443</span> -<span class="literal">-token</span> uz1po9.pcefpry1k8wv7pwm \</span><br><span class="line">    -<span class="literal">-discovery</span><span class="literal">-token</span><span class="literal">-ca</span><span class="literal">-cert</span><span class="literal">-hash</span> sha256:b33b78aabccd27809616bb740c73316dfaf03fba61f80e429ba480c1f07dbcc5 \</span><br><span class="line">    -<span class="literal">-control</span><span class="literal">-plane</span></span><br><span class="line"></span><br><span class="line">Then you can join any number of worker nodes by running the following on each as root:</span><br><span class="line"></span><br><span class="line">kubeadm join cluster<span class="literal">-endpoint</span>:<span class="number">6443</span> -<span class="literal">-token</span> uz1po9.pcefpry1k8wv7pwm \</span><br><span class="line">    -<span class="literal">-discovery</span><span class="literal">-token</span><span class="literal">-ca</span><span class="literal">-cert</span><span class="literal">-hash</span> sha256:b33b78aabccd27809616bb740c73316dfaf03fba61f80e429ba480c1f07dbcc5</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>根据提示继续</code></p><p><img src="/2021/08/23/docker/image-20211214150314359.png" alt="docker"></p><p><code>设置.kube/config</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir <span class="literal">-p</span> <span class="variable">$HOME</span>/.kube</span><br><span class="line">sudo <span class="built_in">cp</span> <span class="literal">-i</span> /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">sudo chown <span class="variable">$</span>(id <span class="literal">-u</span>):<span class="variable">$</span>(id <span class="literal">-g</span>) <span class="variable">$HOME</span>/.kube/config</span><br></pre></td></tr></table></figure><p><code>安装网络组件</code></p><ul><li><a href="https://projectcalico.docs.tigera.io/getting-started/kubernetes/self-managed-onprem/onpremises#install-calico-with-kubernetes-api-datastore-more-than-50-nodes">https://projectcalico.docs.tigera.io/getting-started/kubernetes/self-managed-onprem/onpremises#install-calico-with-kubernetes-api-datastore-more-than-50-nodes</a></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主节点</span></span><br><span class="line"><span class="built_in">curl</span> https://docs.projectcalico.org/manifests/calico.yaml <span class="literal">-O</span></span><br><span class="line"></span><br><span class="line">kubectl apply <span class="operator">-f</span> calico.yaml</span><br></pre></td></tr></table></figure><p><code>加入node节点</code></p><p><img src="/2021/08/23/docker/image-20211214151244970.png" alt="docker"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从节点执行</span></span><br><span class="line"></span><br><span class="line">kubeadm join cluster<span class="literal">-endpoint</span>:<span class="number">6443</span> -<span class="literal">-token</span> uz1po9.pcefpry1k8wv7pwm \</span><br><span class="line">    -<span class="literal">-discovery</span><span class="literal">-token</span><span class="literal">-ca</span><span class="literal">-cert</span><span class="literal">-hash</span> sha256:b33b78aabccd27809616bb740c73316dfaf03fba61f80e429ba480c1f07dbcc5</span><br></pre></td></tr></table></figure><p><code>新令牌</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm token create -<span class="literal">-print</span><span class="operator">-join</span><span class="literal">-command</span></span><br></pre></td></tr></table></figure><p><code>验证集群</code></p><p><img src="/2021/08/23/docker/image-20211214153542834.png" alt="docker"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看集群所有节点</span></span><br><span class="line">kubectl get nodes</span><br><span class="line"></span><br><span class="line"><span class="comment">#根据配置文件，给集群创建资源</span></span><br><span class="line">kubectl apply <span class="operator">-f</span> xxxx.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看集群部署了哪些应用？</span></span><br><span class="line">docker <span class="built_in">ps</span>   ===   kubectl get pods <span class="literal">-A</span></span><br><span class="line"><span class="comment"># 运行中的应用在docker里面叫容器，在k8s里面叫Pod</span></span><br><span class="line">kubectl get pods <span class="literal">-A</span></span><br></pre></td></tr></table></figure><h5 id="部署dashboard"><a href="#部署dashboard" class="headerlink" title="部署dashboard"></a>部署dashboard</h5><p>kubernetes官方提供的可视化界面</p><p><a href="https://github.com/kubernetes/dashboard">https://github.com/kubernetes/dashboard</a></p><p><code>recommended.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Copyright 2017 The Kubernetes Authors.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span><br><span class="line"><span class="comment"># you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"># You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"># distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class="line"><span class="comment"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"># See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"># limitations under the License.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Namespace</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">443</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8443</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Secret</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard-certs</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">Opaque</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Secret</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard-csrf</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">Opaque</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">csrf:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Secret</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard-key-holder</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">Opaque</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard-settings</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="comment"># Allow Dashboard to get, update and delete Dashboard exclusive secrets.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;secrets&quot;</span>]</span><br><span class="line">    <span class="attr">resourceNames:</span> [<span class="string">&quot;kubernetes-dashboard-key-holder&quot;</span>, <span class="string">&quot;kubernetes-dashboard-certs&quot;</span>, <span class="string">&quot;kubernetes-dashboard-csrf&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;update&quot;</span>, <span class="string">&quot;delete&quot;</span>]</span><br><span class="line">    <span class="comment"># Allow Dashboard to get and update &#x27;kubernetes-dashboard-settings&#x27; config map.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;configmaps&quot;</span>]</span><br><span class="line">    <span class="attr">resourceNames:</span> [<span class="string">&quot;kubernetes-dashboard-settings&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;update&quot;</span>]</span><br><span class="line">    <span class="comment"># Allow Dashboard to get metrics.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;services&quot;</span>]</span><br><span class="line">    <span class="attr">resourceNames:</span> [<span class="string">&quot;heapster&quot;</span>, <span class="string">&quot;dashboard-metrics-scraper&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;proxy&quot;</span>]</span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;services/proxy&quot;</span>]</span><br><span class="line">    <span class="attr">resourceNames:</span> [<span class="string">&quot;heapster&quot;</span>, <span class="string">&quot;http:heapster:&quot;</span>, <span class="string">&quot;https:heapster:&quot;</span>, <span class="string">&quot;dashboard-metrics-scraper&quot;</span>, <span class="string">&quot;http:dashboard-metrics-scraper&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="comment"># Allow Metrics Scraper to get metrics from the Metrics server</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;metrics.k8s.io&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;pods&quot;</span>, <span class="string">&quot;nodes&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">RoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">kubernetesui/dashboard:v2.3.1</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">Always</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8443</span></span><br><span class="line">              <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">          <span class="attr">args:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--auto-generate-certificates</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--namespace=kubernetes-dashboard</span></span><br><span class="line">            <span class="comment"># Uncomment the following line to manually specify Kubernetes API server Host</span></span><br><span class="line">            <span class="comment"># If not specified, Dashboard will attempt to auto discover the API server and connect</span></span><br><span class="line">            <span class="comment"># to it. Uncomment only if the default does not work.</span></span><br><span class="line">            <span class="comment"># - --apiserver-host=http://my-address:port</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">kubernetes-dashboard-certs</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/certs</span></span><br><span class="line">              <span class="comment"># Create on-disk volume to store exec logs</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/tmp</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">tmp-volume</span></span><br><span class="line">          <span class="attr">livenessProbe:</span></span><br><span class="line">            <span class="attr">httpGet:</span></span><br><span class="line">              <span class="attr">scheme:</span> <span class="string">HTTPS</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">8443</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">30</span></span><br><span class="line">            <span class="attr">timeoutSeconds:</span> <span class="number">30</span></span><br><span class="line">          <span class="attr">securityContext:</span></span><br><span class="line">            <span class="attr">allowPrivilegeEscalation:</span> <span class="literal">false</span></span><br><span class="line">            <span class="attr">readOnlyRootFilesystem:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">runAsUser:</span> <span class="number">1001</span></span><br><span class="line">            <span class="attr">runAsGroup:</span> <span class="number">2001</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">kubernetes-dashboard-certs</span></span><br><span class="line">          <span class="attr">secret:</span></span><br><span class="line">            <span class="attr">secretName:</span> <span class="string">kubernetes-dashboard-certs</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">tmp-volume</span></span><br><span class="line">          <span class="attr">emptyDir:</span> &#123;&#125;</span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">      <span class="attr">nodeSelector:</span></span><br><span class="line">        <span class="attr">&quot;kubernetes.io/os&quot;:</span> <span class="string">linux</span></span><br><span class="line">      <span class="comment"># Comment the following tolerations if Dashboard must not be deployed on master</span></span><br><span class="line">      <span class="attr">tolerations:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">node-role.kubernetes.io/master</span></span><br><span class="line">          <span class="attr">effect:</span> <span class="string">NoSchedule</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">8000</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8000</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">k8s-app:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">k8s-app:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line">      <span class="attr">annotations:</span></span><br><span class="line">        <span class="attr">seccomp.security.alpha.kubernetes.io/pod:</span> <span class="string">&#x27;runtime/default&#x27;</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">kubernetesui/metrics-scraper:v1.0.6</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8000</span></span><br><span class="line">              <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">          <span class="attr">livenessProbe:</span></span><br><span class="line">            <span class="attr">httpGet:</span></span><br><span class="line">              <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">8000</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">30</span></span><br><span class="line">            <span class="attr">timeoutSeconds:</span> <span class="number">30</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/tmp</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">tmp-volume</span></span><br><span class="line">          <span class="attr">securityContext:</span></span><br><span class="line">            <span class="attr">allowPrivilegeEscalation:</span> <span class="literal">false</span></span><br><span class="line">            <span class="attr">readOnlyRootFilesystem:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">runAsUser:</span> <span class="number">1001</span></span><br><span class="line">            <span class="attr">runAsGroup:</span> <span class="number">2001</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">      <span class="attr">nodeSelector:</span></span><br><span class="line">        <span class="attr">&quot;kubernetes.io/os&quot;:</span> <span class="string">linux</span></span><br><span class="line">      <span class="comment"># Comment the following tolerations if Dashboard must not be deployed on master</span></span><br><span class="line">      <span class="attr">tolerations:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">node-role.kubernetes.io/master</span></span><br><span class="line">          <span class="attr">effect:</span> <span class="string">NoSchedule</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">tmp-volume</span></span><br><span class="line">          <span class="attr">emptyDir:</span> &#123;&#125;</span><br></pre></td></tr></table></figure><p><code>设置访问端口</code></p><ul><li>type: ClusterIP 改为 type: NodePort</li><li><img src="/2021/08/23/docker/image-20211217151653245.png" alt="docker"></li><li><a href="https://10.21.6.11:30409/">https://10.21.6.11:30409</a></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl edit svc kubernetes<span class="literal">-dashboard</span> <span class="literal">-n</span> kubernetes<span class="literal">-dashboard</span></span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get svc <span class="literal">-A</span> |grep kubernetes<span class="literal">-dashboard</span></span><br></pre></td></tr></table></figure><p><code>创建访问账号</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建访问账号，准备一个yaml文件； vi dash.yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  name: admin<span class="literal">-user</span></span><br><span class="line">  namespace: kubernetes<span class="literal">-dashboard</span></span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: admin<span class="literal">-user</span></span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: cluster<span class="literal">-admin</span></span><br><span class="line">subjects:</span><br><span class="line">- kind: ServiceAccount</span><br><span class="line">  name: admin<span class="literal">-user</span></span><br><span class="line">  namespace: kubernetes<span class="literal">-dashboard</span></span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply <span class="operator">-f</span> dash.yaml</span><br></pre></td></tr></table></figure><p><code>获取令牌访问</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl <span class="literal">-n</span> kubernetes<span class="literal">-dashboard</span> get secret <span class="variable">$</span>(kubectl <span class="literal">-n</span> kubernetes<span class="literal">-dashboard</span> get sa/admin<span class="literal">-user</span> <span class="literal">-o</span> jsonpath=<span class="string">&quot;&#123;.secrets[0].name&#125;&quot;</span>) <span class="literal">-o</span> go<span class="literal">-template</span>=<span class="string">&quot;&#123;&#123;.data.token | base64decode&#125;&#125;&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJhbGciOiJSUzI1NiIsImtpZCI6IlV4Y1pZeWdhZl9MdXdoQnp2ZWhYdU1RS0xXbzR0aW5OdC0zZDVydDdSV2MifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlcm5ldGVzLWRhc2hib2FyZCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhZG1pbi11c2VyLXRva2VuLWZtOXh4Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImFkbWluLXVzZXIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiI4NGNlMzI0Mi05MTYxLTQyNmUtYWZiYS1mN2EyZjZiMWUzN2UiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZXJuZXRlcy1kYXNoYm9hcmQ6YWRtaW4tdXNlciJ9.jcz3ApeImGaWxEDXHOGiECOsgRyYXJSglGgHw4iFoOomcDyUS<span class="literal">-KNAYbqqOEAhJJ2paTHFBqaDy8FmFzO</span><span class="literal">-h7qDCcSzL6BNy4WviiGEaPSfFnZYuMmb7NT6SWz9YrKyTjCVhcTc_muG4QEJKd15eCWMqBU83GI3M9LZQULcXKFJ6JpuRBKAgFTvcmOxqjJDZSSW2PxPkAc2eMZXn5wyxmuIm_LvvzSmHlFKjYXUWfqxu104fUZDbsaSed2n6z4DeHDK3NlHOKlzA2cPu1wvesxLSAt_ngeY0qGCOHV6dY86KLWWdNIXsoG1Gnst_EPh46mXvkcH3yDnkDEbFySKHMIyw</span></span><br></pre></td></tr></table></figure><p><code>界面</code></p><p><img src="/2021/08/23/docker/image-20211217152209810.png" alt="docker"></p><h4 id="k8s核心实战"><a href="#k8s核心实战" class="headerlink" title="k8s核心实战"></a>k8s核心实战</h4><h5 id="存储抽象"><a href="#存储抽象" class="headerlink" title="存储抽象"></a>存储抽象</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#所有机器安装</span></span><br><span class="line">yum install <span class="literal">-y</span> nfs<span class="literal">-utils</span></span><br></pre></td></tr></table></figure><p><strong>主节点</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#nfs主节点</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;/nfs/data/ *(insecure,rw,sync,no_root_squash)&quot;</span> &gt; /etc/exports</span><br><span class="line"></span><br><span class="line">mkdir <span class="literal">-p</span> /nfs/<span class="keyword">data</span></span><br><span class="line">systemctl enable rpcbind -<span class="literal">-now</span></span><br><span class="line">systemctl enable nfs<span class="literal">-server</span> -<span class="literal">-now</span></span><br><span class="line"><span class="comment">#配置生效</span></span><br><span class="line">exportfs <span class="literal">-r</span></span><br></pre></td></tr></table></figure><p><strong>从节点</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">showmount <span class="literal">-e</span> <span class="number">10.21</span>.<span class="number">6.11</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#执行以下命令挂载 nfs 服务器上的共享目录到本机路径 /root/nfsmount</span></span><br><span class="line">mkdir <span class="literal">-p</span> /nfs/<span class="keyword">data</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">mount</span> <span class="literal">-t</span> nfs <span class="number">10.21</span>.<span class="number">6.11</span>:/nfs/<span class="keyword">data</span> /nfs/<span class="keyword">data</span></span><br><span class="line"><span class="comment"># 写入一个测试文件</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;hello nfs server&quot;</span> &gt; /nfs/<span class="keyword">data</span>/test.txt</span><br></pre></td></tr></table></figure><h5 id="metrics-server监控指标"><a href="#metrics-server监控指标" class="headerlink" title="metrics-server监控指标"></a>metrics-server监控指标</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">metrics-server</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">metrics-server</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">metrics-server</span></span><br><span class="line">    <span class="attr">rbac.authorization.k8s.io/aggregate-to-admin:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">    <span class="attr">rbac.authorization.k8s.io/aggregate-to-edit:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">    <span class="attr">rbac.authorization.k8s.io/aggregate-to-view:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">system:aggregated-metrics-reader</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">metrics.k8s.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pods</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">nodes</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">metrics-server</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">system:metrics-server</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pods</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">nodes</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">nodes/stats</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">namespaces</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">configmaps</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">RoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">metrics-server</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">metrics-server-auth-reader</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">extension-apiserver-authentication-reader</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">metrics-server</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">metrics-server</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">metrics-server:system:auth-delegator</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">system:auth-delegator</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">metrics-server</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">metrics-server</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">system:metrics-server</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">system:metrics-server</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">metrics-server</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">metrics-server</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">metrics-server</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">https</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">443</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="string">https</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">metrics-server</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">metrics-server</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">metrics-server</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">k8s-app:</span> <span class="string">metrics-server</span></span><br><span class="line">  <span class="attr">strategy:</span></span><br><span class="line">    <span class="attr">rollingUpdate:</span></span><br><span class="line">      <span class="attr">maxUnavailable:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">k8s-app:</span> <span class="string">metrics-server</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--cert-dir=/tmp</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--kubelet-insecure-tls</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--secure-port=4443</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--kubelet-use-node-status-port</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/lfy_k8s_images/metrics-server:v0.4.3</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">livenessProbe:</span></span><br><span class="line">          <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/livez</span></span><br><span class="line">            <span class="attr">port:</span> <span class="string">https</span></span><br><span class="line">            <span class="attr">scheme:</span> <span class="string">HTTPS</span></span><br><span class="line">          <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">metrics-server</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">4443</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">https</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="attr">readinessProbe:</span></span><br><span class="line">          <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/readyz</span></span><br><span class="line">            <span class="attr">port:</span> <span class="string">https</span></span><br><span class="line">            <span class="attr">scheme:</span> <span class="string">HTTPS</span></span><br><span class="line">          <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">        <span class="attr">securityContext:</span></span><br><span class="line">          <span class="attr">readOnlyRootFilesystem:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">runAsNonRoot:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">runAsUser:</span> <span class="number">1000</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/tmp</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">tmp-dir</span></span><br><span class="line">      <span class="attr">nodeSelector:</span></span><br><span class="line">        <span class="attr">kubernetes.io/os:</span> <span class="string">linux</span></span><br><span class="line">      <span class="attr">priorityClassName:</span> <span class="string">system-cluster-critical</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">metrics-server</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">emptyDir:</span> &#123;&#125;</span><br><span class="line">        <span class="attr">name:</span> <span class="string">tmp-dir</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apiregistration.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">APIService</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">metrics-server</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">v1beta1.metrics.k8s.io</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">group:</span> <span class="string">metrics.k8s.io</span></span><br><span class="line">  <span class="attr">groupPriorityMinimum:</span> <span class="number">100</span></span><br><span class="line">  <span class="attr">insecureSkipTLSVerify:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">service:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">metrics-server</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line">  <span class="attr">version:</span> <span class="string">v1beta1</span></span><br><span class="line">  <span class="attr">versionPriority:</span> <span class="number">100</span></span><br></pre></td></tr></table></figure><h5 id="nfs动态存储"><a href="#nfs动态存储" class="headerlink" title="nfs动态存储"></a><strong>nfs动态存储</strong></h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 创建了一个存储类</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">storage.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StorageClass</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nfs-storage</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">storageclass.kubernetes.io/is-default-class:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line"><span class="attr">provisioner:</span> <span class="string">k8s-sigs.io/nfs-subdir-external-provisioner</span></span><br><span class="line"><span class="attr">parameters:</span></span><br><span class="line">  <span class="attr">archiveOnDelete:</span> <span class="string">&quot;true&quot;</span>  <span class="comment">## 删除pv的时候，pv的内容是否要备份</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line">  <span class="comment"># replace with namespace where provisioner is deployed</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">strategy:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">Recreate</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/lfy_k8s_images/nfs-subdir-external-provisioner:v4.0.2</span></span><br><span class="line">          <span class="comment"># resources:</span></span><br><span class="line">          <span class="comment">#    limits:</span></span><br><span class="line">          <span class="comment">#      cpu: 10m</span></span><br><span class="line">          <span class="comment">#    requests:</span></span><br><span class="line">          <span class="comment">#      cpu: 10m</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nfs-client-root</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/persistentvolumes</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">PROVISIONER_NAME</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">k8s-sigs.io/nfs-subdir-external-provisioner</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">NFS_SERVER</span></span><br><span class="line">              <span class="attr">value:</span> <span class="number">172.31</span><span class="number">.0</span><span class="number">.4</span> <span class="comment">## 指定自己nfs服务器地址</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">NFS_PATH</span>  </span><br><span class="line">              <span class="attr">value:</span> <span class="string">/nfs/data</span>  <span class="comment">## nfs服务器共享的目录</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nfs-client-root</span></span><br><span class="line">          <span class="attr">nfs:</span></span><br><span class="line">            <span class="attr">server:</span> <span class="number">172.31</span><span class="number">.0</span><span class="number">.4</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/nfs/data</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line">  <span class="comment"># replace with namespace where provisioner is deployed</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nfs-client-provisioner-runner</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;nodes&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;persistentvolumes&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>, <span class="string">&quot;create&quot;</span>, <span class="string">&quot;delete&quot;</span>]</span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;persistentvolumeclaims&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>, <span class="string">&quot;update&quot;</span>]</span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;storage.k8s.io&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;storageclasses&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;events&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;create&quot;</span>, <span class="string">&quot;update&quot;</span>, <span class="string">&quot;patch&quot;</span>]</span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">run-nfs-client-provisioner</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line">    <span class="comment"># replace with namespace where provisioner is deployed</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nfs-client-provisioner-runner</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">leader-locking-nfs-client-provisioner</span></span><br><span class="line">  <span class="comment"># replace with namespace where provisioner is deployed</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;endpoints&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>, <span class="string">&quot;create&quot;</span>, <span class="string">&quot;update&quot;</span>, <span class="string">&quot;patch&quot;</span>]</span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">RoleBinding</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">leader-locking-nfs-client-provisioner</span></span><br><span class="line">  <span class="comment"># replace with namespace where provisioner is deployed</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line">    <span class="comment"># replace with namespace where provisioner is deployed</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">leader-locking-nfs-client-provisioner</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br></pre></td></tr></table></figure><h5 id="部署kubersphere"><a href="#部署kubersphere" class="headerlink" title="部署kubersphere"></a>部署kubersphere</h5><h6 id="kubesphere-installer-yaml"><a href="#kubesphere-installer-yaml" class="headerlink" title="kubesphere-installer.yaml"></a>kubesphere-installer.yaml</h6><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apiextensions.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">CustomResourceDefinition</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">clusterconfigurations.installer.kubesphere.io</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">group:</span> <span class="string">installer.kubesphere.io</span></span><br><span class="line">  <span class="attr">versions:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">v1alpha1</span></span><br><span class="line">      <span class="attr">served:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">storage:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">schema:</span></span><br><span class="line">        <span class="attr">openAPIV3Schema:</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">object</span></span><br><span class="line">          <span class="attr">properties:</span></span><br><span class="line">            <span class="attr">spec:</span></span><br><span class="line">              <span class="attr">type:</span> <span class="string">object</span></span><br><span class="line">              <span class="attr">x-kubernetes-preserve-unknown-fields:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">status:</span></span><br><span class="line">              <span class="attr">type:</span> <span class="string">object</span></span><br><span class="line">              <span class="attr">x-kubernetes-preserve-unknown-fields:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">scope:</span> <span class="string">Namespaced</span></span><br><span class="line">  <span class="attr">names:</span></span><br><span class="line">    <span class="attr">plural:</span> <span class="string">clusterconfigurations</span></span><br><span class="line">    <span class="attr">singular:</span> <span class="string">clusterconfiguration</span></span><br><span class="line">    <span class="attr">kind:</span> <span class="string">ClusterConfiguration</span></span><br><span class="line">    <span class="attr">shortNames:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">cc</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Namespace</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubesphere-system</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ks-installer</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubesphere-system</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ks-installer</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">apps</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">extensions</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">batch</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">apiregistration.k8s.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">apiextensions.k8s.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">tenant.kubesphere.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">certificates.k8s.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">devops.kubesphere.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">monitoring.coreos.com</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">logging.kubesphere.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">jaegertracing.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">storage.k8s.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">admissionregistration.k8s.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">policy</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">autoscaling</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">networking.istio.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">config.istio.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">iam.kubesphere.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">notification.kubesphere.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">auditing.kubesphere.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">events.kubesphere.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">core.kubefed.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">installer.kubesphere.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">storage.kubesphere.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">security.istio.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">monitoring.kiali.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">kiali.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">networking.k8s.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">kubeedge.kubesphere.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">types.kubefed.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">monitoring.kubesphere.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">application.kubesphere.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ks-installer</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ks-installer</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubesphere-system</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ks-installer</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ks-installer</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubesphere-system</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">ks-install</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">ks-install</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">ks-install</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">ks-installer</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">installer</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">kubesphere/ks-installer:v3.2.1</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">&quot;Always&quot;</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="attr">limits:</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">1Gi</span></span><br><span class="line">          <span class="attr">requests:</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">20m</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">100Mi</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/etc/localtime</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">host-time</span></span><br><span class="line">          <span class="attr">readOnly:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">hostPath:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">/etc/localtime</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">host-time</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="cluster-configuration-yaml"><a href="#cluster-configuration-yaml" class="headerlink" title="cluster-configuration.yaml"></a>cluster-configuration.yaml</h6><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">installer.kubesphere.io/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterConfiguration</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ks-installer</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubesphere-system</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">version:</span> <span class="string">v3.2.1</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">persistence:</span></span><br><span class="line">    <span class="attr">storageClass:</span> <span class="string">&quot;&quot;</span>        <span class="comment"># If there is no default StorageClass in your cluster, you need to specify an existing StorageClass here.</span></span><br><span class="line">  <span class="attr">authentication:</span></span><br><span class="line">    <span class="attr">jwtSecret:</span> <span class="string">&quot;&quot;</span>           <span class="comment"># Keep the jwtSecret consistent with the Host Cluster. Retrieve the jwtSecret by executing &quot;kubectl -n kubesphere-system get cm kubesphere-config -o yaml | grep -v &quot;apiVersion&quot; | grep jwtSecret&quot; on the Host Cluster.</span></span><br><span class="line">  <span class="attr">local_registry:</span> <span class="string">&quot;&quot;</span>        <span class="comment"># Add your private registry address if it is needed.</span></span><br><span class="line">  <span class="comment"># dev_tag: &quot;&quot;               # Add your kubesphere image tag you want to install, by default it&#x27;s same as ks-install release version.</span></span><br><span class="line">  <span class="attr">etcd:</span></span><br><span class="line">    <span class="attr">monitoring:</span> <span class="literal">true</span>       <span class="comment"># Enable or disable etcd monitoring dashboard installation. You have to create a Secret for etcd before you enable it.</span></span><br><span class="line">    <span class="attr">endpointIps:</span> <span class="number">10.21</span><span class="number">.6</span><span class="number">.11</span>  <span class="comment"># etcd cluster EndpointIps. It can be a bunch of IPs here.</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">2379</span>              <span class="comment"># etcd port.</span></span><br><span class="line">    <span class="attr">tlsEnable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">common:</span></span><br><span class="line">    <span class="attr">core:</span></span><br><span class="line">      <span class="attr">console:</span></span><br><span class="line">        <span class="attr">enableMultiLogin:</span> <span class="literal">true</span>  <span class="comment"># Enable or disable simultaneous logins. It allows different users to log in with the same account at the same time.</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">30880</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line">    <span class="comment"># apiserver:            # Enlarge the apiserver and controller manager&#x27;s resource requests and limits for the large cluster</span></span><br><span class="line">    <span class="comment">#  resources: &#123;&#125;</span></span><br><span class="line">    <span class="comment"># controllerManager:</span></span><br><span class="line">    <span class="comment">#  resources: &#123;&#125;</span></span><br><span class="line">    <span class="attr">redis:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">volumeSize:</span> <span class="string">2Gi</span> <span class="comment"># Redis PVC size.</span></span><br><span class="line">    <span class="attr">openldap:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">volumeSize:</span> <span class="string">2Gi</span>   <span class="comment"># openldap PVC size.</span></span><br><span class="line">    <span class="attr">minio:</span></span><br><span class="line">      <span class="attr">volumeSize:</span> <span class="string">20Gi</span> <span class="comment"># Minio PVC size.</span></span><br><span class="line">    <span class="attr">monitoring:</span></span><br><span class="line">      <span class="comment"># type: external   # Whether to specify the external prometheus stack, and need to modify the endpoint at the next line.</span></span><br><span class="line">      <span class="attr">endpoint:</span> <span class="string">http://prometheus-operated.kubesphere-monitoring-system.svc:9090</span> <span class="comment"># Prometheus endpoint to get metrics data.</span></span><br><span class="line">      <span class="attr">GPUMonitoring:</span>     <span class="comment"># Enable or disable the GPU-related metrics. If you enable this switch but have no GPU resources, Kubesphere will set it to zero. </span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">gpu:</span>                 <span class="comment"># Install GPUKinds. The default GPU kind is nvidia.com/gpu. Other GPU kinds can be added here according to your needs. </span></span><br><span class="line">      <span class="attr">kinds:</span>         </span><br><span class="line">      <span class="bullet">-</span> <span class="attr">resourceName:</span> <span class="string">&quot;nvidia.com/gpu&quot;</span></span><br><span class="line">        <span class="attr">resourceType:</span> <span class="string">&quot;GPU&quot;</span></span><br><span class="line">        <span class="attr">default:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">es:</span>   <span class="comment"># Storage backend for logging, events and auditing.</span></span><br><span class="line">      <span class="comment"># master:</span></span><br><span class="line">      <span class="comment">#   volumeSize: 4Gi  # The volume size of Elasticsearch master nodes.</span></span><br><span class="line">      <span class="comment">#   replicas: 1      # The total number of master nodes. Even numbers are not allowed.</span></span><br><span class="line">      <span class="comment">#   resources: &#123;&#125;</span></span><br><span class="line">      <span class="comment"># data:</span></span><br><span class="line">      <span class="comment">#   volumeSize: 20Gi  # The volume size of Elasticsearch data nodes.</span></span><br><span class="line">      <span class="comment">#   replicas: 1       # The total number of data nodes.</span></span><br><span class="line">      <span class="comment">#   resources: &#123;&#125;</span></span><br><span class="line">      <span class="attr">logMaxAge:</span> <span class="number">7</span>             <span class="comment"># Log retention time in built-in Elasticsearch. It is 7 days by default.</span></span><br><span class="line">      <span class="attr">elkPrefix:</span> <span class="string">logstash</span>      <span class="comment"># The string making up index names. The index name will be formatted as ks-&lt;elk_prefix&gt;-log.</span></span><br><span class="line">      <span class="attr">basicAuth:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">        <span class="attr">username:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="attr">password:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">      <span class="attr">externalElasticsearchUrl:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">      <span class="attr">externalElasticsearchPort:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">alerting:</span>                <span class="comment"># (CPU: 0.1 Core, Memory: 100 MiB) It enables users to customize alerting policies to send messages to receivers in time with different time intervals and alerting levels to choose from.</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span>         <span class="comment"># Enable or disable the KubeSphere Alerting System.</span></span><br><span class="line">    <span class="comment"># thanosruler:</span></span><br><span class="line">    <span class="comment">#   replicas: 1</span></span><br><span class="line">    <span class="comment">#   resources: &#123;&#125;</span></span><br><span class="line">  <span class="attr">auditing:</span>                <span class="comment"># Provide a security-relevant chronological set of records，recording the sequence of activities happening on the platform, initiated by different tenants.</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span>         <span class="comment"># Enable or disable the KubeSphere Auditing Log System.</span></span><br><span class="line">    <span class="comment"># operator:</span></span><br><span class="line">    <span class="comment">#   resources: &#123;&#125;</span></span><br><span class="line">    <span class="comment"># webhook:</span></span><br><span class="line">    <span class="comment">#   resources: &#123;&#125;</span></span><br><span class="line">  <span class="attr">devops:</span>                  <span class="comment"># (CPU: 0.47 Core, Memory: 8.6 G) Provide an out-of-the-box CI/CD system based on Jenkins, and automated workflow tools including Source-to-Image &amp; Binary-to-Image.</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span>             <span class="comment"># Enable or disable the KubeSphere DevOps System.</span></span><br><span class="line">    <span class="comment"># resources: &#123;&#125;</span></span><br><span class="line">    <span class="attr">jenkinsMemoryLim:</span> <span class="string">2Gi</span>      <span class="comment"># Jenkins memory limit.</span></span><br><span class="line">    <span class="attr">jenkinsMemoryReq:</span> <span class="string">1500Mi</span>   <span class="comment"># Jenkins memory request.</span></span><br><span class="line">    <span class="attr">jenkinsVolumeSize:</span> <span class="string">8Gi</span>     <span class="comment"># Jenkins volume size.</span></span><br><span class="line">    <span class="attr">jenkinsJavaOpts_Xms:</span> <span class="string">512m</span>  <span class="comment"># The following three fields are JVM parameters.</span></span><br><span class="line">    <span class="attr">jenkinsJavaOpts_Xmx:</span> <span class="string">512m</span></span><br><span class="line">    <span class="attr">jenkinsJavaOpts_MaxRAM:</span> <span class="string">2g</span></span><br><span class="line">  <span class="attr">events:</span>                  <span class="comment"># Provide a graphical web console for Kubernetes Events exporting, filtering and alerting in multi-tenant Kubernetes clusters.</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span>         <span class="comment"># Enable or disable the KubeSphere Events System.</span></span><br><span class="line">    <span class="comment"># operator:</span></span><br><span class="line">    <span class="comment">#   resources: &#123;&#125;</span></span><br><span class="line">    <span class="comment"># exporter:</span></span><br><span class="line">    <span class="comment">#   resources: &#123;&#125;</span></span><br><span class="line">    <span class="comment"># ruler:</span></span><br><span class="line">    <span class="comment">#   enabled: true</span></span><br><span class="line">    <span class="comment">#   replicas: 2</span></span><br><span class="line">    <span class="comment">#   resources: &#123;&#125;</span></span><br><span class="line">  <span class="attr">logging:</span>                 <span class="comment"># (CPU: 57 m, Memory: 2.76 G) Flexible logging functions are provided for log query, collection and management in a unified console. Additional log collectors can be added, such as Elasticsearch, Kafka and Fluentd.</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span>         <span class="comment"># Enable or disable the KubeSphere Logging System.</span></span><br><span class="line">    <span class="attr">containerruntime:</span> <span class="string">docker</span></span><br><span class="line">    <span class="attr">logsidecar:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">replicas:</span> <span class="number">2</span></span><br><span class="line">      <span class="comment"># resources: &#123;&#125;</span></span><br><span class="line">  <span class="attr">metrics_server:</span>                    <span class="comment"># (CPU: 56 m, Memory: 44.35 MiB) It enables HPA (Horizontal Pod Autoscaler).</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span>                   <span class="comment"># Enable or disable metrics-server.</span></span><br><span class="line">  <span class="attr">monitoring:</span></span><br><span class="line">    <span class="attr">storageClass:</span> <span class="string">&quot;&quot;</span>                 <span class="comment"># If there is an independent StorageClass you need for Prometheus, you can specify it here. The default StorageClass is used by default.</span></span><br><span class="line">    <span class="comment"># kube_rbac_proxy:</span></span><br><span class="line">    <span class="comment">#   resources: &#123;&#125;</span></span><br><span class="line">    <span class="comment"># kube_state_metrics:</span></span><br><span class="line">    <span class="comment">#   resources: &#123;&#125;</span></span><br><span class="line">    <span class="comment"># prometheus:</span></span><br><span class="line">    <span class="comment">#   replicas: 1  # Prometheus replicas are responsible for monitoring different segments of data source and providing high availability.</span></span><br><span class="line">    <span class="comment">#   volumeSize: 20Gi  # Prometheus PVC size.</span></span><br><span class="line">    <span class="comment">#   resources: &#123;&#125;</span></span><br><span class="line">    <span class="comment">#   operator:</span></span><br><span class="line">    <span class="comment">#     resources: &#123;&#125;</span></span><br><span class="line">    <span class="comment">#   adapter:</span></span><br><span class="line">    <span class="comment">#     resources: &#123;&#125;</span></span><br><span class="line">    <span class="comment"># node_exporter:</span></span><br><span class="line">    <span class="comment">#   resources: &#123;&#125;</span></span><br><span class="line">    <span class="comment"># alertmanager:</span></span><br><span class="line">    <span class="comment">#   replicas: 1          # AlertManager Replicas.</span></span><br><span class="line">    <span class="comment">#   resources: &#123;&#125;</span></span><br><span class="line">    <span class="comment"># notification_manager:</span></span><br><span class="line">    <span class="comment">#   resources: &#123;&#125;</span></span><br><span class="line">    <span class="comment">#   operator:</span></span><br><span class="line">    <span class="comment">#     resources: &#123;&#125;</span></span><br><span class="line">    <span class="comment">#   proxy:</span></span><br><span class="line">    <span class="comment">#     resources: &#123;&#125;</span></span><br><span class="line">    <span class="attr">gpu:</span>                           <span class="comment"># GPU monitoring-related plug-in installation. </span></span><br><span class="line">      <span class="attr">nvidia_dcgm_exporter:</span>        <span class="comment"># Ensure that gpu resources on your hosts can be used normally, otherwise this plug-in will not work properly.</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">false</span>             <span class="comment"># Check whether the labels on the GPU hosts contain &quot;nvidia.com/gpu.present=true&quot; to ensure that the DCGM pod is scheduled to these nodes.</span></span><br><span class="line">        <span class="comment"># resources: &#123;&#125;</span></span><br><span class="line">  <span class="attr">multicluster:</span></span><br><span class="line">    <span class="attr">clusterRole:</span> <span class="string">none</span>  <span class="comment"># host | member | none  # You can install a solo cluster, or specify it as the Host or Member Cluster.</span></span><br><span class="line">  <span class="attr">network:</span></span><br><span class="line">    <span class="attr">networkpolicy:</span> <span class="comment"># Network policies allow network isolation within the same cluster, which means firewalls can be set up between certain instances (Pods).</span></span><br><span class="line">      <span class="comment"># Make sure that the CNI network plugin used by the cluster supports NetworkPolicy. There are a number of CNI network plugins that support NetworkPolicy, including Calico, Cilium, Kube-router, Romana and Weave Net.</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span> <span class="comment"># Enable or disable network policies.</span></span><br><span class="line">    <span class="attr">ippool:</span> <span class="comment"># Use Pod IP Pools to manage the Pod network address space. Pods to be created can be assigned IP addresses from a Pod IP Pool.</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">calico</span> <span class="comment"># Specify &quot;calico&quot; for this field if Calico is used as your CNI plugin. &quot;none&quot; means that Pod IP Pools are disabled.</span></span><br><span class="line">    <span class="attr">topology:</span> <span class="comment"># Use Service Topology to view Service-to-Service communication based on Weave Scope.</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">none</span> <span class="comment"># Specify &quot;weave-scope&quot; for this field to enable Service Topology. &quot;none&quot; means that Service Topology is disabled.</span></span><br><span class="line">  <span class="attr">openpitrix:</span> <span class="comment"># An App Store that is accessible to all platform tenants. You can use it to manage apps across their entire lifecycle.</span></span><br><span class="line">    <span class="attr">store:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span> <span class="comment"># Enable or disable the KubeSphere App Store.</span></span><br><span class="line">  <span class="attr">servicemesh:</span>         <span class="comment"># (0.3 Core, 300 MiB) Provide fine-grained traffic management, observability and tracing, and visualized traffic topology.</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span>     <span class="comment"># Base component (pilot). Enable or disable KubeSphere Service Mesh (Istio-based).</span></span><br><span class="line">  <span class="attr">kubeedge:</span>          <span class="comment"># Add edge nodes to your cluster and deploy workloads on edge nodes.</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span>   <span class="comment"># Enable or disable KubeEdge.</span></span><br><span class="line">    <span class="attr">cloudCore:</span></span><br><span class="line">      <span class="attr">nodeSelector:</span> &#123;<span class="attr">&quot;node-role.kubernetes.io/worker&quot;:</span> <span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">      <span class="attr">tolerations:</span> []</span><br><span class="line">      <span class="attr">cloudhubPort:</span> <span class="string">&quot;10000&quot;</span></span><br><span class="line">      <span class="attr">cloudhubQuicPort:</span> <span class="string">&quot;10001&quot;</span></span><br><span class="line">      <span class="attr">cloudhubHttpsPort:</span> <span class="string">&quot;10002&quot;</span></span><br><span class="line">      <span class="attr">cloudstreamPort:</span> <span class="string">&quot;10003&quot;</span></span><br><span class="line">      <span class="attr">tunnelPort:</span> <span class="string">&quot;10004&quot;</span></span><br><span class="line">      <span class="attr">cloudHub:</span></span><br><span class="line">        <span class="attr">advertiseAddress:</span> <span class="comment"># At least a public IP address or an IP address which can be accessed by edge nodes must be provided.</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">&quot;&quot;</span>            <span class="comment"># Note that once KubeEdge is enabled, CloudCore will malfunction if the address is not provided.</span></span><br><span class="line">        <span class="attr">nodeLimit:</span> <span class="string">&quot;100&quot;</span></span><br><span class="line">      <span class="attr">service:</span></span><br><span class="line">        <span class="attr">cloudhubNodePort:</span> <span class="string">&quot;30000&quot;</span></span><br><span class="line">        <span class="attr">cloudhubQuicNodePort:</span> <span class="string">&quot;30001&quot;</span></span><br><span class="line">        <span class="attr">cloudhubHttpsNodePort:</span> <span class="string">&quot;30002&quot;</span></span><br><span class="line">        <span class="attr">cloudstreamNodePort:</span> <span class="string">&quot;30003&quot;</span></span><br><span class="line">        <span class="attr">tunnelNodePort:</span> <span class="string">&quot;30004&quot;</span></span><br><span class="line">    <span class="attr">edgeWatcher:</span></span><br><span class="line">      <span class="attr">nodeSelector:</span> &#123;<span class="attr">&quot;node-role.kubernetes.io/worker&quot;:</span> <span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">      <span class="attr">tolerations:</span> []</span><br><span class="line">      <span class="attr">edgeWatcherAgent:</span></span><br><span class="line">        <span class="attr">nodeSelector:</span> &#123;<span class="attr">&quot;node-role.kubernetes.io/worker&quot;:</span> <span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">        <span class="attr">tolerations:</span> []</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="执行安装"><a href="#执行安装" class="headerlink" title="执行安装"></a>执行安装</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f kubesphere-installer.yaml</span><br><span class="line"></span><br><span class="line">kubectl apply -f cluster-configuration.yaml</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="查看安装进度"><a href="#查看安装进度" class="headerlink" title="查看安装进度"></a>查看安装进度</h6><p><img src="/2021/08/23/docker/image-20220214220541659.png" alt="docker"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl logs <span class="literal">-n</span> kubesphere<span class="literal">-system</span> <span class="variable">$</span>(kubectl get pod <span class="literal">-n</span> kubesphere<span class="literal">-system</span> <span class="literal">-l</span> app=ks<span class="literal">-install</span> <span class="literal">-o</span> jsonpath=<span class="string">&#x27;&#123;.items[0].metadata.name&#125;&#x27;</span>) <span class="operator">-f</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>解决etcd监控证书找不到问题(prometheus监控)</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl <span class="literal">-n</span> kubesphere<span class="literal">-monitoring</span><span class="literal">-system</span> create secret generic kube<span class="literal">-etcd</span><span class="literal">-client</span><span class="literal">-certs</span>  -<span class="literal">-from</span><span class="operator">-file</span>=etcd<span class="literal">-client</span><span class="literal">-ca</span>.crt=/etc/kubernetes/pki/etcd/ca.crt  -<span class="literal">-from</span><span class="operator">-file</span>=etcd<span class="literal">-client</span>.crt=/etc/kubernetes/pki/apiserver<span class="literal">-etcd</span><span class="literal">-client</span>.crt  -<span class="literal">-from</span><span class="operator">-file</span>=etcd<span class="literal">-client</span>.key=/etc/kubernetes/pki/apiserver<span class="literal">-etcd</span><span class="literal">-client</span>.key</span><br></pre></td></tr></table></figure><p>报错问题</p><p><img src="/2021/08/23/docker/image-20220221101600008.png" alt="docker"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get validatingwebhookconfigurations.admissionregistration.k8s.io</span><br></pre></td></tr></table></figure><h6 id="界面"><a href="#界面" class="headerlink" title="界面"></a>界面</h6><p><img src="/2021/08/23/docker/image-20220214220713791.png" alt="docker"></p><h6 id="删除Terminating名称空间"><a href="#删除Terminating名称空间" class="headerlink" title="删除Terminating名称空间"></a>删除Terminating名称空间</h6><ul><li><img src="/2021/08/23/docker/image-20220628095140462.png" alt="docker"></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>先把proxy开起来，不然<span class="number">8001</span>端口访问不到：</span><br><span class="line"> kubectl proxy</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>生成json文件</span><br><span class="line"> kubectl get namespace kubesphere-system -o json  &gt;temp.json</span><br><span class="line"><span class="number">3.</span>vim temp.json </span><br><span class="line">    <span class="string">&quot;spec&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;finalizers&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;kubernetes&quot;</span>  <span class="comment"># 删除</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line"><span class="number">4.</span>执行删除</span><br><span class="line"> curl -k -H <span class="string">&quot;Content-Type: application/json&quot;</span> -X PUT --data-binary @temp.json <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8001</span>/api/v1/namespaces/kubesphere-system/finalize</span><br></pre></td></tr></table></figure><h6 id="kubekey安装"><a href="#kubekey安装" class="headerlink" title="kubekey安装"></a>kubekey安装</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#先执行以下命令以确保您从正确的区域下载 KubeKey。</span></span><br><span class="line">export KKZONE=cn</span><br><span class="line"><span class="comment">#执行以下命令下载 KubeKey：</span></span><br><span class="line">curl -sfL https://get-kk.kubesphere.io | VERSION=v2<span class="number">.2</span><span class="number">.1</span> sh -</span><br><span class="line">chmod +x kk</span><br><span class="line"><span class="comment">#创建包含默认配置的示例配置文件。这里使用 Kubernetes v1.22.10 作为示例。</span></span><br><span class="line">./kk create config --<span class="keyword">with</span>-kubesphere v3<span class="number">.3</span><span class="number">.0</span> --<span class="keyword">with</span>-kubernetes v1<span class="number">.22</span><span class="number">.10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#开启内置高可用模式</span></span><br><span class="line">spec:</span><br><span class="line">  controlPlaneEndpoint:</span><br><span class="line">    <span class="comment">##Internal loadbalancer for apiservers</span></span><br><span class="line">    internalLoadbalancer: haproxy</span><br><span class="line">    </span><br><span class="line">    domain: lb.kubesphere.local</span><br><span class="line">    address: <span class="string">&quot;&quot;</span></span><br><span class="line">    port: <span class="number">6443</span></span><br><span class="line"><span class="comment">#开始安装</span></span><br><span class="line">./kk create cluster -f config-sample.yaml</span><br><span class="line"><span class="comment">#暴露 KubeSphere API 服务</span></span><br><span class="line">kubectl -n kubesphere-system patch service ks-apiserver -p <span class="string">&#x27;&#123;&quot;spec&quot;:&#123;&quot;type&quot;:&quot;NodePort&quot;&#125;&#125;&#x27;</span></span><br><span class="line">kubectl -n kubesphere-system get svc</span><br><span class="line">NAME                    TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE</span><br><span class="line">ks-apiserver            NodePort    <span class="number">10.233</span><span class="number">.11</span><span class="number">.20</span>    &lt;none&gt;        <span class="number">80</span>:<span class="number">30890</span>/TCP   77m</span><br><span class="line">ks-console              NodePort    <span class="number">10.233</span><span class="number">.33</span><span class="number">.167</span>   &lt;none&gt;        <span class="number">80</span>:<span class="number">30880</span>/TCP   77m</span><br><span class="line">ks-controller-manager   ClusterIP   <span class="number">10.233</span><span class="number">.3</span><span class="number">.178</span>    &lt;none&gt;        <span class="number">443</span>/TCP        77m</span><br><span class="line"><span class="comment">#修改服务YAML</span></span><br><span class="line">kubectl edit svc ks-apiserver -n kubesphere-system</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>config-sample.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubekey.kubesphere.io/v1alpha2</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Cluster</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">sample</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">hosts:</span></span><br><span class="line">  <span class="bullet">-</span> &#123;<span class="attr">name:</span> <span class="string">master</span>, <span class="attr">address:</span> <span class="number">10.21</span><span class="number">.6</span><span class="number">.11</span>, <span class="attr">internalAddress:</span> <span class="number">10.21</span><span class="number">.6</span><span class="number">.11</span>, <span class="attr">user:</span> <span class="string">root</span>, <span class="attr">password:</span> <span class="string">FOda@2021</span>&#125;</span><br><span class="line">  <span class="bullet">-</span> &#123;<span class="attr">name:</span> <span class="string">fcy-srv03</span>, <span class="attr">address:</span> <span class="number">10.21</span><span class="number">.6</span><span class="number">.13</span>, <span class="attr">internalAddress:</span> <span class="number">10.21</span><span class="number">.6</span><span class="number">.13</span>, <span class="attr">user:</span> <span class="string">root</span>, <span class="attr">password:</span> <span class="string">FOda@2021</span>&#125;</span><br><span class="line">  <span class="bullet">-</span> &#123;<span class="attr">name:</span> <span class="string">fcy-srv04</span>, <span class="attr">address:</span> <span class="number">10.21</span><span class="number">.6</span><span class="number">.14</span>, <span class="attr">internalAddress:</span> <span class="number">10.21</span><span class="number">.6</span><span class="number">.14</span>, <span class="attr">user:</span> <span class="string">root</span>, <span class="attr">password:</span> <span class="string">FOda@2021</span>&#125;</span><br><span class="line">  <span class="attr">roleGroups:</span></span><br><span class="line">    <span class="attr">etcd:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line">    <span class="attr">control-plane:</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line">    <span class="attr">worker:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">fcy-srv03</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">fcy-srv04</span></span><br><span class="line">  <span class="attr">controlPlaneEndpoint:</span></span><br><span class="line">    <span class="comment">## Internal loadbalancer for apiservers </span></span><br><span class="line">    <span class="comment"># internalLoadbalancer: haproxy</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">domain:</span> <span class="string">lb.kubesphere.local</span></span><br><span class="line">    <span class="attr">address:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">6443</span></span><br><span class="line">  <span class="attr">kubernetes:</span></span><br><span class="line">    <span class="attr">version:</span> <span class="string">v1.23.7</span></span><br><span class="line">    <span class="attr">clusterName:</span> <span class="string">cluster.local</span></span><br><span class="line">    <span class="attr">autoRenewCerts:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">containerManager:</span> <span class="string">docker</span></span><br><span class="line">  <span class="attr">etcd:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">kubekey</span></span><br><span class="line">  <span class="attr">network:</span></span><br><span class="line">    <span class="attr">plugin:</span> <span class="string">calico</span></span><br><span class="line">    <span class="attr">kubePodsCIDR:</span> <span class="number">10.233</span><span class="number">.64</span><span class="number">.0</span><span class="string">/18</span></span><br><span class="line">    <span class="attr">kubeServiceCIDR:</span> <span class="number">10.233</span><span class="number">.0</span><span class="number">.0</span><span class="string">/18</span></span><br><span class="line">    <span class="comment">## multus support. https://github.com/k8snetworkplumbingwg/multus-cni</span></span><br><span class="line">    <span class="attr">multusCNI:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">registry:</span></span><br><span class="line">    <span class="attr">privateRegistry:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">namespaceOverride:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">registryMirrors:</span> []</span><br><span class="line">    <span class="attr">insecureRegistries:</span> []</span><br><span class="line">  <span class="attr">addons:</span> []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">installer.kubesphere.io/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterConfiguration</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ks-installer</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubesphere-system</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">version:</span> <span class="string">v3.3.0</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">persistence:</span></span><br><span class="line">    <span class="attr">storageClass:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">authentication:</span></span><br><span class="line">    <span class="attr">jwtSecret:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">zone:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">local_registry:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">namespace_override:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="comment"># dev_tag: &quot;&quot;</span></span><br><span class="line">  <span class="attr">etcd:</span></span><br><span class="line">    <span class="attr">monitoring:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">endpointIps:</span> <span class="string">localhost</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">2379</span></span><br><span class="line">    <span class="attr">tlsEnable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">common:</span></span><br><span class="line">    <span class="attr">core:</span></span><br><span class="line">      <span class="attr">console:</span></span><br><span class="line">        <span class="attr">enableMultiLogin:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">30880</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line">    <span class="comment"># apiserver:</span></span><br><span class="line">    <span class="comment">#  resources: &#123;&#125;</span></span><br><span class="line">    <span class="comment"># controllerManager:</span></span><br><span class="line">    <span class="comment">#  resources: &#123;&#125;</span></span><br><span class="line">    <span class="attr">redis:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">volumeSize:</span> <span class="string">2Gi</span></span><br><span class="line">    <span class="attr">openldap:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">volumeSize:</span> <span class="string">2Gi</span></span><br><span class="line">    <span class="attr">minio:</span></span><br><span class="line">      <span class="attr">volumeSize:</span> <span class="string">20Gi</span></span><br><span class="line">    <span class="attr">monitoring:</span></span><br><span class="line">      <span class="comment"># type: external</span></span><br><span class="line">      <span class="attr">endpoint:</span> <span class="string">http://prometheus-operated.kubesphere-monitoring-system.svc:9090</span></span><br><span class="line">      <span class="attr">GPUMonitoring:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">gpu:</span></span><br><span class="line">      <span class="attr">kinds:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">resourceName:</span> <span class="string">&quot;nvidia.com/gpu&quot;</span></span><br><span class="line">        <span class="attr">resourceType:</span> <span class="string">&quot;GPU&quot;</span></span><br><span class="line">        <span class="attr">default:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">es:</span></span><br><span class="line">      <span class="comment"># master:</span></span><br><span class="line">      <span class="comment">#   volumeSize: 4Gi</span></span><br><span class="line">      <span class="comment">#   replicas: 1</span></span><br><span class="line">      <span class="comment">#   resources: &#123;&#125;</span></span><br><span class="line">      <span class="comment"># data:</span></span><br><span class="line">      <span class="comment">#   volumeSize: 20Gi</span></span><br><span class="line">      <span class="comment">#   replicas: 1</span></span><br><span class="line">      <span class="comment">#   resources: &#123;&#125;</span></span><br><span class="line">      <span class="attr">logMaxAge:</span> <span class="number">7</span></span><br><span class="line">      <span class="attr">elkPrefix:</span> <span class="string">logstash</span></span><br><span class="line">      <span class="attr">basicAuth:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">        <span class="attr">username:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="attr">password:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">      <span class="attr">externalElasticsearchHost:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">      <span class="attr">externalElasticsearchPort:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">alerting:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># thanosruler:</span></span><br><span class="line">    <span class="comment">#   replicas: 1</span></span><br><span class="line">    <span class="comment">#   resources: &#123;&#125;</span></span><br><span class="line">  <span class="attr">auditing:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># operator:</span></span><br><span class="line">    <span class="comment">#   resources: &#123;&#125;</span></span><br><span class="line">    <span class="comment"># webhook:</span></span><br><span class="line">    <span class="comment">#   resources: &#123;&#125;</span></span><br><span class="line">  <span class="attr">devops:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># resources: &#123;&#125;</span></span><br><span class="line">    <span class="attr">jenkinsMemoryLim:</span> <span class="string">2Gi</span></span><br><span class="line">    <span class="attr">jenkinsMemoryReq:</span> <span class="string">1500Mi</span></span><br><span class="line">    <span class="attr">jenkinsVolumeSize:</span> <span class="string">8Gi</span></span><br><span class="line">    <span class="attr">jenkinsJavaOpts_Xms:</span> <span class="string">1200m</span></span><br><span class="line">    <span class="attr">jenkinsJavaOpts_Xmx:</span> <span class="string">1600m</span></span><br><span class="line">    <span class="attr">jenkinsJavaOpts_MaxRAM:</span> <span class="string">2g</span></span><br><span class="line">  <span class="attr">events:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># operator:</span></span><br><span class="line">    <span class="comment">#   resources: &#123;&#125;</span></span><br><span class="line">    <span class="comment"># exporter:</span></span><br><span class="line">    <span class="comment">#   resources: &#123;&#125;</span></span><br><span class="line">    <span class="comment"># ruler:</span></span><br><span class="line">    <span class="comment">#   enabled: true</span></span><br><span class="line">    <span class="comment">#   replicas: 2</span></span><br><span class="line">    <span class="comment">#   resources: &#123;&#125;</span></span><br><span class="line">  <span class="attr">logging:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">logsidecar:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">replicas:</span> <span class="number">2</span></span><br><span class="line">      <span class="comment"># resources: &#123;&#125;</span></span><br><span class="line">  <span class="attr">metrics_server:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">monitoring:</span></span><br><span class="line">    <span class="attr">storageClass:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">node_exporter:</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">9100</span></span><br><span class="line">      <span class="comment"># resources: &#123;&#125;</span></span><br><span class="line">    <span class="comment"># kube_rbac_proxy:</span></span><br><span class="line">    <span class="comment">#   resources: &#123;&#125;</span></span><br><span class="line">    <span class="comment"># kube_state_metrics:</span></span><br><span class="line">    <span class="comment">#   resources: &#123;&#125;</span></span><br><span class="line">    <span class="comment"># prometheus:</span></span><br><span class="line">    <span class="comment">#   replicas: 1</span></span><br><span class="line">    <span class="comment">#   volumeSize: 20Gi</span></span><br><span class="line">    <span class="comment">#   resources: &#123;&#125;</span></span><br><span class="line">    <span class="comment">#   operator:</span></span><br><span class="line">    <span class="comment">#     resources: &#123;&#125;</span></span><br><span class="line">    <span class="comment"># alertmanager:</span></span><br><span class="line">    <span class="comment">#   replicas: 1</span></span><br><span class="line">    <span class="comment">#   resources: &#123;&#125;</span></span><br><span class="line">    <span class="comment"># notification_manager:</span></span><br><span class="line">    <span class="comment">#   resources: &#123;&#125;</span></span><br><span class="line">    <span class="comment">#   operator:</span></span><br><span class="line">    <span class="comment">#     resources: &#123;&#125;</span></span><br><span class="line">    <span class="comment">#   proxy:</span></span><br><span class="line">    <span class="comment">#     resources: &#123;&#125;</span></span><br><span class="line">    <span class="attr">gpu:</span></span><br><span class="line">      <span class="attr">nvidia_dcgm_exporter:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">        <span class="comment"># resources: &#123;&#125;</span></span><br><span class="line">  <span class="attr">multicluster:</span></span><br><span class="line">    <span class="attr">clusterRole:</span> <span class="string">none</span></span><br><span class="line">  <span class="attr">network:</span></span><br><span class="line">    <span class="attr">networkpolicy:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">ippool:</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">none</span></span><br><span class="line">    <span class="attr">topology:</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">none</span></span><br><span class="line">  <span class="attr">openpitrix:</span></span><br><span class="line">    <span class="attr">store:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">servicemesh:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">istio:</span></span><br><span class="line">      <span class="attr">components:</span></span><br><span class="line">        <span class="attr">ingressGateways:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">istio-ingressgateway</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">        <span class="attr">cni:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">edgeruntime:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">kubeedge:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">cloudCore:</span></span><br><span class="line">        <span class="attr">cloudHub:</span></span><br><span class="line">          <span class="attr">advertiseAddress:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="attr">service:</span></span><br><span class="line">          <span class="attr">cloudhubNodePort:</span> <span class="string">&quot;30000&quot;</span></span><br><span class="line">          <span class="attr">cloudhubQuicNodePort:</span> <span class="string">&quot;30001&quot;</span></span><br><span class="line">          <span class="attr">cloudhubHttpsNodePort:</span> <span class="string">&quot;30002&quot;</span></span><br><span class="line">          <span class="attr">cloudstreamNodePort:</span> <span class="string">&quot;30003&quot;</span></span><br><span class="line">          <span class="attr">tunnelNodePort:</span> <span class="string">&quot;30004&quot;</span></span><br><span class="line">        <span class="comment"># resources: &#123;&#125;</span></span><br><span class="line">        <span class="comment"># hostNetWork: false</span></span><br><span class="line">      <span class="attr">iptables-manager:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">mode:</span> <span class="string">&quot;external&quot;</span></span><br><span class="line">        <span class="comment"># resources: &#123;&#125;</span></span><br><span class="line">      <span class="comment"># edgeService:</span></span><br><span class="line">      <span class="comment">#   resources: &#123;&#125;</span></span><br><span class="line">  <span class="attr">terminal:</span></span><br><span class="line">    <span class="attr">timeout:</span> <span class="number">600</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="KubeSphere离线安装"><a href="#KubeSphere离线安装" class="headerlink" title="KubeSphere离线安装"></a>KubeSphere离线安装</h6><ul><li><a href="https://kubesphere.com.cn/forum/d/2034-kubekey-kubesphere-v300">https://kubesphere.com.cn/forum/d/2034-kubekey-kubesphere-v300</a></li><li><img src="/2021/08/23/docker/image-20220303155930559.png" alt="docker"></li><li><img src="/2021/08/23/docker/docker" alt="docker"></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.安装包下载</span></span><br><span class="line"><span class="built_in">curl</span> <span class="literal">-Ok</span> https://kubesphere<span class="literal">-installer</span>.pek3b.qingstor.com/offline/v3.<span class="number">0.0</span>/kubesphere<span class="literal">-all</span><span class="literal">-v3</span>.<span class="number">0.0</span><span class="literal">-offline</span><span class="literal">-linux</span><span class="literal">-amd64</span>.tar.gz</span><br><span class="line"><span class="comment">#2.解压缩并创建集群配置文件</span></span><br><span class="line">tar zxvf kubesphere<span class="literal">-all</span><span class="literal">-v3</span>.<span class="number">0.0</span><span class="literal">-offline</span><span class="literal">-linux</span><span class="literal">-amd64</span>.tar.gz</span><br><span class="line">./kk create config -<span class="literal">-with</span><span class="literal">-kubernetes</span> v1.<span class="number">18.6</span> -<span class="literal">-with</span><span class="literal">-kubesphere</span> v3.<span class="number">0.0</span></span><br><span class="line"><span class="comment">#3.修改集群生成的配置文件</span></span><br><span class="line"><span class="comment">#私有镜像仓库地址可为harbor</span></span><br><span class="line">privateRegistry: dockerhub.kubekey.local</span><br><span class="line"><span class="comment">#4.环境初始化</span></span><br><span class="line"><span class="comment"># 执行如下命令会对配置文件中所有节点安装依赖：</span></span><br><span class="line">./kk init os <span class="operator">-f</span> config<span class="literal">-sample</span>.yaml <span class="literal">-s</span> ./dependencies/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如需使用kk创建自签名镜像仓库，可执行如下命令：</span></span><br><span class="line">./kk init os <span class="operator">-f</span> config<span class="literal">-sample</span>.yaml <span class="literal">-s</span> ./dependencies/ -<span class="literal">-add</span><span class="literal">-images</span><span class="literal">-repo</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#5.导入镜像(进入kubesphere-images)</span></span><br><span class="line">./<span class="built_in">push-images</span>.sh  dockerhub.kubekey.local</span><br><span class="line"></span><br><span class="line"><span class="comment">#6.执行安装</span></span><br><span class="line">./kk create cluster <span class="operator">-f</span> config<span class="literal">-sample</span>.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7.成功显示信息</span></span><br><span class="line"><span class="comment">#####################################################</span></span><br><span class="line"><span class="comment">###              Welcome to KubeSphere!           ###</span></span><br><span class="line"><span class="comment">#####################################################</span></span><br><span class="line"></span><br><span class="line">Console: http://<span class="number">192.168</span>.<span class="number">17.17</span>:<span class="number">30880</span></span><br><span class="line">Account: admin</span><br><span class="line">Password: P@<span class="number">88</span>w0<span class="built_in">rd</span></span><br><span class="line"></span><br><span class="line">NOTES：</span><br><span class="line">  <span class="number">1</span>. After logging into the console, please check the</span><br><span class="line">     monitoring status of service components <span class="keyword">in</span></span><br><span class="line">     the <span class="string">&quot;Cluster Management&quot;</span>. <span class="keyword">If</span> any service is not</span><br><span class="line">     ready, please wait patiently <span class="keyword">until</span> all components</span><br><span class="line">     are ready.</span><br><span class="line">  <span class="number">2</span>. Please modify the default password after login.</span><br><span class="line"></span><br><span class="line"><span class="comment">#####################################################</span></span><br><span class="line">https://kubesphere.io             <span class="number">2022</span><span class="literal">-04</span><span class="literal">-01</span> <span class="number">16</span>:<span class="number">30</span>:<span class="number">35</span></span><br><span class="line"><span class="comment">#####################################################</span></span><br><span class="line">INFO[<span class="number">16</span>:<span class="number">30</span>:<span class="number">44</span> <span class="type">CST</span>] Installation is complete.</span><br><span class="line"></span><br><span class="line">Please check the result <span class="keyword">using</span> the <span class="keyword">command</span>:</span><br><span class="line"></span><br><span class="line">       kubectl logs <span class="literal">-n</span> kubesphere<span class="literal">-system</span> <span class="variable">$</span>(kubectl get pod <span class="literal">-n</span> kubesphere<span class="literal">-system</span> <span class="literal">-l</span> app=ks<span class="literal">-install</span> <span class="literal">-o</span> jsonpath=<span class="string">&#x27;&#123;.items[0].metadata.name&#125;&#x27;</span>) <span class="operator">-f</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>镜像</code></p><ul><li><img src="/2021/08/23/docker/image-20220401163648503.png" alt="docker"></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">host</span>-<span class="number">192</span>-<span class="number">168</span>-<span class="number">17</span>-<span class="number">2</span> ~]<span class="comment"># docker images</span></span><br><span class="line">REPOSITORY                                                         TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">dockerhub.kubekey.local/kubesphere/ks<span class="literal">-controller</span><span class="literal">-manager</span>           v3.<span class="number">0.0</span>              <span class="number">85</span>bd13080839        <span class="number">19</span> months ago       <span class="number">82</span>MB</span><br><span class="line">dockerhub.kubekey.local/prom/prometheus                            v2.<span class="number">20.1</span>             b205ccdd28d3        <span class="number">20</span> months ago       <span class="number">145</span>MB</span><br><span class="line">dockerhub.kubekey.local/kubesphere/notification<span class="literal">-manager</span>            v0.<span class="number">1.0</span>              <span class="number">331</span>a0e6ece23        <span class="number">20</span> months ago       <span class="number">47.5</span>MB</span><br><span class="line">dockerhub.kubekey.local/kubesphere/notification<span class="literal">-manager</span><span class="literal">-operator</span>   v0.<span class="number">1.0</span>              c441b79e9606        <span class="number">20</span> months ago       <span class="number">44.4</span>MB</span><br><span class="line">dockerhub.kubekey.local/kubesphere/kube<span class="literal">-proxy</span>                      v1.<span class="number">18.6</span>             c3d62d6fe412        <span class="number">20</span> months ago       <span class="number">117</span>MB</span><br><span class="line">dockerhub.kubekey.local/calico/node                                v3.<span class="number">15.1</span>             <span class="number">1470783</span>b1474        <span class="number">21</span> months ago       <span class="number">262</span>MB</span><br><span class="line">dockerhub.kubekey.local/calico/pod2daemon<span class="literal">-flexvol</span>                  v3.<span class="number">15.1</span>             a696ebcb2ac7        <span class="number">21</span> months ago       <span class="number">112</span>MB</span><br><span class="line">dockerhub.kubekey.local/calico/cni                                 v3.<span class="number">15.1</span>             <span class="number">2858353</span>c1d25        <span class="number">21</span> months ago       <span class="number">217</span>MB</span><br><span class="line">dockerhub.kubekey.local/calico/kube<span class="literal">-controllers</span>                    v3.<span class="number">15.1</span>             <span class="number">8</span>ed9dbffe350        <span class="number">21</span> months ago       <span class="number">53.1</span>MB</span><br><span class="line">dockerhub.kubekey.local/kubesphere/prometheus<span class="literal">-config</span><span class="literal">-reloader</span>      v0.<span class="number">38.3</span>             <span class="number">8011</span>d6eb5bac        <span class="number">21</span> months ago       <span class="number">10.1</span>MB</span><br><span class="line">dockerhub.kubekey.local/prom/alertmanager                          v0.<span class="number">21.0</span>             c876f5897d7b        <span class="number">21</span> months ago       <span class="number">55.5</span>MB</span><br><span class="line">dockerhub.kubekey.local/kubesphere/kube<span class="literal">-state</span><span class="literal">-metrics</span>              v1.<span class="number">9.6</span>              <span class="number">092</span>e8ed1e0b3        <span class="number">22</span> months ago       <span class="number">32.8</span>MB</span><br><span class="line">dockerhub.kubekey.local/kubesphere/provisioner<span class="literal">-localpv</span>             <span class="number">1.10</span>.<span class="number">0</span>              <span class="number">6</span>b5529f464f7        <span class="number">22</span> months ago       <span class="number">68.4</span>MB</span><br><span class="line">dockerhub.kubekey.local/kubesphere/node<span class="literal">-disk</span><span class="literal">-operator</span>              <span class="number">0.5</span>.<span class="number">0</span>               <span class="number">8741</span>fafb7b21        <span class="number">22</span> months ago       <span class="number">167</span>MB</span><br><span class="line">dockerhub.kubekey.local/kubesphere/node<span class="literal">-disk</span><span class="literal">-manager</span>               <span class="number">0.5</span>.<span class="number">0</span>               dbbed43bcbdb        <span class="number">22</span> months ago       <span class="number">168</span>MB</span><br><span class="line">dockerhub.kubekey.local/kubesphere/k8s<span class="literal">-dns</span><span class="literal">-node</span><span class="literal">-cache</span>              <span class="number">1.15</span>.<span class="number">12</span>             <span class="number">5340</span>ba194ec9        <span class="number">23</span> months ago       <span class="number">107</span>MB</span><br><span class="line">dockerhub.kubekey.local/coredns/coredns                            <span class="number">1.6</span>.<span class="number">9</span>               faac9e62c0d6        <span class="number">2</span> years ago         <span class="number">43.2</span>MB</span><br><span class="line">dockerhub.kubekey.local/kubesphere/pause                           <span class="number">3.2</span>                 <span class="number">80</span>d28bedfe5d        <span class="number">2</span> years ago         <span class="number">683</span>kB</span><br><span class="line">dockerhub.kubekey.local/csiplugin/snapshot<span class="literal">-controller</span>              v2.<span class="number">0.1</span>              <span class="number">525889021849</span>        <span class="number">2</span> years ago         <span class="number">41.4</span>MB</span><br><span class="line">dockerhub.kubekey.local/kubesphere/node<span class="literal">-exporter</span>                   ks<span class="literal">-v0</span>.<span class="number">18.1</span>          cfb0175954de        <span class="number">2</span> years ago         <span class="number">23.7</span>MB</span><br><span class="line">dockerhub.kubekey.local/jimmidyson/configmap<span class="literal">-reload</span>                v0.<span class="number">3.0</span>              <span class="number">7</span>ec24a279487        <span class="number">2</span> years ago         <span class="number">9.7</span>MB</span><br><span class="line">dockerhub.kubekey.local/kubesphere/kube<span class="literal">-rbac</span><span class="literal">-proxy</span>                 v0.<span class="number">4.1</span>              <span class="number">70</span>eeaa7791f2        <span class="number">3</span> years ago         <span class="number">41.3</span>MB</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="kubesphere错误排查"><a href="#kubesphere错误排查" class="headerlink" title="kubesphere错误排查"></a>kubesphere错误排查</h6><p><img src="/2021/08/23/docker/image-20221018104310600.png" alt="docker"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl disable kubelet</span><br></pre></td></tr></table></figure><p><img src="/2021/08/23/docker/image-20221020160741638.png" alt="docker"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl edit cm coredns <span class="literal">-n</span> kube<span class="literal">-system</span></span><br><span class="line">删除 forward . /etc/resolv.conf</span><br></pre></td></tr></table></figure><h6 id="集群卸载"><a href="#集群卸载" class="headerlink" title="集群卸载"></a>集群卸载</h6><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">./kk delete cluster <span class="operator">-f</span> config<span class="literal">-sample</span>.yaml</span><br><span class="line">kubeadm reset <span class="operator">-f</span></span><br><span class="line">modprobe <span class="literal">-r</span> ipip</span><br><span class="line">lsmod</span><br><span class="line"><span class="built_in">rm</span> <span class="literal">-rf</span> ~/.kube/</span><br><span class="line"><span class="built_in">rm</span> <span class="literal">-rf</span> /etc/kubernetes/</span><br><span class="line"><span class="built_in">rm</span> <span class="literal">-rf</span> /etc/systemd/system/kubelet.service.d</span><br><span class="line"><span class="built_in">rm</span> <span class="literal">-rf</span> /etc/systemd/system/kubelet.service</span><br><span class="line"><span class="built_in">rm</span> <span class="literal">-rf</span> /usr/bin/kube*</span><br><span class="line"><span class="built_in">rm</span> <span class="literal">-rf</span> /etc/cni</span><br><span class="line"><span class="built_in">rm</span> <span class="literal">-rf</span> /opt/cni</span><br><span class="line"><span class="built_in">rm</span> <span class="literal">-rf</span> /var/lib/etcd</span><br><span class="line"><span class="built_in">rm</span> <span class="literal">-rf</span> /var/etcd</span><br><span class="line">yum clean all</span><br><span class="line">yum remove kube*</span><br></pre></td></tr></table></figure><h6 id="使用-ConfigMap-来配置-Redis"><a href="#使用-ConfigMap-来配置-Redis" class="headerlink" title="使用 ConfigMap 来配置 Redis"></a>使用 ConfigMap 来配置 Redis</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.编写redis.conf配置文件</span></span><br><span class="line">requirepass Foda.ai2021</span><br><span class="line">appendonly yes</span><br><span class="line"><span class="comment">#2.把redis.conf作为配置集</span></span><br><span class="line">kubectl create cm redis.conf --<span class="keyword">from</span>-file=./redis.conf</span><br><span class="line"><span class="comment">#3.查看配置集</span></span><br><span class="line">kubectl get cm</span><br><span class="line"><span class="comment">#4.修改配置集</span></span><br><span class="line">kubectl edit cm redis.conf</span><br></pre></td></tr></table></figure><h6 id="redis-yaml"><a href="#redis-yaml" class="headerlink" title="redis.yaml"></a>redis.yaml</h6><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">redis</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">6379</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">6379</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">redis</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">redis</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">serviceName:</span> <span class="string">&quot;redis&quot;</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">redis</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">redis</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">redis</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">6379</span></span><br><span class="line">        <span class="attr">command:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">redis-server</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">&quot;/etc/redis/redis.conf&quot;</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">requirepass</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">Foda.ai2021</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/data</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">redis-pvc</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/etc/redis/</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">config</span></span><br><span class="line">        </span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">redis-pvc</span></span><br><span class="line">          <span class="attr">persistentVolumeClaim:</span></span><br><span class="line">            <span class="attr">claimName:</span> <span class="string">redis-pvc</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">config</span></span><br><span class="line">          <span class="attr">configMap:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">redis.conf</span></span><br><span class="line">            <span class="attr">items:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">redis.conf</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">redis.conf</span></span><br></pre></td></tr></table></figure><h6 id="redis-pvc持久卷"><a href="#redis-pvc持久卷" class="headerlink" title="redis pvc持久卷"></a>redis pvc持久卷</h6><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">redis-pvc</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteOnce</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">    <span class="attr">requests:</span></span><br><span class="line">      <span class="attr">storage:</span> <span class="string">1Gi</span></span><br></pre></td></tr></table></figure><h6 id="mongodb-yaml"><a href="#mongodb-yaml" class="headerlink" title="mongodb.yaml"></a>mongodb.yaml</h6><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">mongodb</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">27017</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">27017</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">mongodb</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">mongodb</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">serviceName:</span> <span class="string">&quot;mongodb&quot;</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">mongodb</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">mongodb</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mongodb</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">mongo:5</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">27017</span></span><br><span class="line">        <span class="attr">args:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">mongod</span> </span><br><span class="line">          <span class="bullet">-</span> <span class="string">&quot;--replSet&quot;</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">rs0</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">&quot;--bind_ip&quot;</span></span><br><span class="line">          <span class="bullet">-</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">          <span class="comment">#- &quot;--smallfiles&quot;</span></span><br><span class="line">          <span class="comment">#- &quot;--noprealloc&quot;</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/data/db</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">www</span></span><br><span class="line">      <span class="comment">#volumes:</span></span><br><span class="line">        <span class="comment">#- name: mongodb-claim0</span></span><br><span class="line">        <span class="comment">#  persistentVolumeClaim:</span></span><br><span class="line">        <span class="comment">#    claimName: mongodb-claim0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="attr">volumeClaimTemplates:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">www</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">accessModes:</span> [ <span class="string">&quot;ReadWriteOnce&quot;</span> ]</span><br><span class="line">      <span class="attr">resources:</span></span><br><span class="line">        <span class="attr">requests:</span></span><br><span class="line">          <span class="attr">storage:</span> <span class="string">1Gi</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="mysql-yaml"><a href="#mysql-yaml" class="headerlink" title="mysql.yaml"></a>mysql.yaml</h6><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">mysql</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">3306</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">3306</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">mysql</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">mysql</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">serviceName:</span> <span class="string">&quot;mysql&quot;</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">mysql</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">mysql</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">args:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--character-set-server=utf8</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--collation-server=utf8_general_ci</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_DATABASE</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">algorithm</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_ROOT_PASSWORD</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">Foda.ai2021</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">mysql:5.7</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">mysql</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">3306</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/var/lib/mysql</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">mysql-pvc</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mysql-pvc</span></span><br><span class="line">          <span class="attr">persistentVolumeClaim:</span></span><br><span class="line">            <span class="attr">claimName:</span> <span class="string">mysql-pvc</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>mysql pvc持久卷</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">mysql-pvc</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteOnce</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">    <span class="attr">requests:</span></span><br><span class="line">      <span class="attr">storage:</span> <span class="string">1Gi</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="nacos-yaml"><a href="#nacos-yaml" class="headerlink" title="nacos.yaml"></a>nacos.yaml</h6><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nacos-headless</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nacos</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">service.alpha.kubernetes.io/tolerate-unready-endpoints:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">8848</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">server</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8848</span></span><br><span class="line">      <span class="attr">nodePort:</span> <span class="number">30848</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nacos</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nacos</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">serviceName:</span> <span class="string">nacos-headless</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nacos</span></span><br><span class="line">      <span class="attr">annotations:</span></span><br><span class="line">        <span class="attr">pod.alpha.kubernetes.io/initialized:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">affinity:</span></span><br><span class="line">        <span class="attr">podAntiAffinity:</span></span><br><span class="line">          <span class="attr">requiredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">labelSelector:</span></span><br><span class="line">                <span class="attr">matchExpressions:</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">&quot;app&quot;</span></span><br><span class="line">                    <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">                    <span class="attr">values:</span></span><br><span class="line">                      <span class="bullet">-</span> <span class="string">nacos-headless</span></span><br><span class="line">              <span class="attr">topologyKey:</span> <span class="string">&quot;kubernetes.io/hostname&quot;</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">k8snacos</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">Always</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">nacos/nacos-server:1.4.2</span></span><br><span class="line">          <span class="comment">#resources:</span></span><br><span class="line">          <span class="comment">#  requests:</span></span><br><span class="line">          <span class="comment">#    memory: &quot;2Gi&quot;</span></span><br><span class="line">          <span class="comment">#    cpu: &quot;500m&quot;</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8848</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">client</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">NACOS_REPLICAS</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_SERVICE_HOST</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">configMapKeyRef:</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">nacos-cm</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">mysql.host</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_SERVICE_DB_NAME</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">configMapKeyRef:</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">nacos-cm</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">mysql.db.name</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_SERVICE_PORT</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">configMapKeyRef:</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">nacos-cm</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">mysql.port</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_SERVICE_USER</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">configMapKeyRef:</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">nacos-cm</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">mysql.user</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_SERVICE_PASSWORD</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">configMapKeyRef:</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">nacos-cm</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">mysql.password</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MODE</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&quot;cluster&quot;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">NACOS_SERVER_PORT</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&quot;8848&quot;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">PREFER_HOST_MODE</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&quot;hostname&quot;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">NACOS_SERVERS</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&quot;nacos-0.nacos-headless.default.svc.cluster.local:8848 nacos-1.nacos-headless.default.svc.cluster.local:8848 nacos-2.nacos-headless.default.svc.cluster.local:8848&quot;</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nacos</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>nacos-configMap</p><ul><li>nacos-cm.yaml</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nacos-cm</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">mysql.host:</span> <span class="string">&quot;mysql-0.mysql.default.svc.cluster.local&quot;</span></span><br><span class="line">  <span class="attr">mysql.db.name:</span> <span class="string">&quot;nacos_config&quot;</span></span><br><span class="line">  <span class="attr">mysql.port:</span> <span class="string">&quot;3306&quot;</span></span><br><span class="line">  <span class="attr">mysql.user:</span> <span class="string">&quot;root&quot;</span></span><br><span class="line">  <span class="attr">mysql.password:</span> <span class="string">&quot;Foda.ai2021&quot;</span></span><br></pre></td></tr></table></figure><ul><li>nacos初始化sql</li><li>进入mysql-&gt; create database nacos_config; </li><li>use nacos_config;</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line"> * Copyright 1999-2018 Alibaba Group Holding Ltd.</span><br><span class="line"> *</span><br><span class="line"> * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span><br><span class="line"> * you may not use this file except in compliance with the License.</span><br><span class="line"> * You may obtain a copy of the License at</span><br><span class="line"> *</span><br><span class="line"> *      http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="line"> *</span><br><span class="line"> * Unless required by applicable law or agreed to in writing, software</span><br><span class="line"> * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="line"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="line"> * See the License for the specific language governing permissions and</span><br><span class="line"> * limitations under the License.</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">/******************************************/</span><br><span class="line">/*   数据库全名 = nacos_config   */</span><br><span class="line">/*   表名称 = config_info   */</span><br><span class="line">/******************************************/</span><br><span class="line">CREATE TABLE `config_info` (</span><br><span class="line">  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT &#x27;id&#x27;,</span><br><span class="line">  `data_id` varchar(255) NOT NULL COMMENT &#x27;data_id&#x27;,</span><br><span class="line">  `group_id` varchar(255) DEFAULT NULL,</span><br><span class="line">  `content` longtext NOT NULL COMMENT &#x27;content&#x27;,</span><br><span class="line">  `md5` varchar(32) DEFAULT NULL COMMENT &#x27;md5&#x27;,</span><br><span class="line">  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#x27;创建时间&#x27;,</span><br><span class="line">  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#x27;修改时间&#x27;,</span><br><span class="line">  `src_user` text COMMENT &#x27;source user&#x27;,</span><br><span class="line">  `src_ip` varchar(50) DEFAULT NULL COMMENT &#x27;source ip&#x27;,</span><br><span class="line">  `app_name` varchar(128) DEFAULT NULL,</span><br><span class="line">  `tenant_id` varchar(128) DEFAULT &#x27;&#x27; COMMENT &#x27;租户字段&#x27;,</span><br><span class="line">  `c_desc` varchar(256) DEFAULT NULL,</span><br><span class="line">  `c_use` varchar(64) DEFAULT NULL,</span><br><span class="line">  `effect` varchar(64) DEFAULT NULL,</span><br><span class="line">  `type` varchar(64) DEFAULT NULL,</span><br><span class="line">  `c_schema` text,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY `uk_configinfo_datagrouptenant` (`data_id`,`group_id`,`tenant_id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT=&#x27;config_info&#x27;;</span><br><span class="line"></span><br><span class="line">/******************************************/</span><br><span class="line">/*   数据库全名 = nacos_config   */</span><br><span class="line">/*   表名称 = config_info_aggr   */</span><br><span class="line">/******************************************/</span><br><span class="line">CREATE TABLE `config_info_aggr` (</span><br><span class="line">  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT &#x27;id&#x27;,</span><br><span class="line">  `data_id` varchar(255) NOT NULL COMMENT &#x27;data_id&#x27;,</span><br><span class="line">  `group_id` varchar(255) NOT NULL COMMENT &#x27;group_id&#x27;,</span><br><span class="line">  `datum_id` varchar(255) NOT NULL COMMENT &#x27;datum_id&#x27;,</span><br><span class="line">  `content` longtext NOT NULL COMMENT &#x27;内容&#x27;,</span><br><span class="line">  `gmt_modified` datetime NOT NULL COMMENT &#x27;修改时间&#x27;,</span><br><span class="line">  `app_name` varchar(128) DEFAULT NULL,</span><br><span class="line">  `tenant_id` varchar(128) DEFAULT &#x27;&#x27; COMMENT &#x27;租户字段&#x27;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY `uk_configinfoaggr_datagrouptenantdatum` (`data_id`,`group_id`,`tenant_id`,`datum_id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT=&#x27;增加租户字段&#x27;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/******************************************/</span><br><span class="line">/*   数据库全名 = nacos_config   */</span><br><span class="line">/*   表名称 = config_info_beta   */</span><br><span class="line">/******************************************/</span><br><span class="line">CREATE TABLE `config_info_beta` (</span><br><span class="line">  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT &#x27;id&#x27;,</span><br><span class="line">  `data_id` varchar(255) NOT NULL COMMENT &#x27;data_id&#x27;,</span><br><span class="line">  `group_id` varchar(128) NOT NULL COMMENT &#x27;group_id&#x27;,</span><br><span class="line">  `app_name` varchar(128) DEFAULT NULL COMMENT &#x27;app_name&#x27;,</span><br><span class="line">  `content` longtext NOT NULL COMMENT &#x27;content&#x27;,</span><br><span class="line">  `beta_ips` varchar(1024) DEFAULT NULL COMMENT &#x27;betaIps&#x27;,</span><br><span class="line">  `md5` varchar(32) DEFAULT NULL COMMENT &#x27;md5&#x27;,</span><br><span class="line">  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#x27;创建时间&#x27;,</span><br><span class="line">  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#x27;修改时间&#x27;,</span><br><span class="line">  `src_user` text COMMENT &#x27;source user&#x27;,</span><br><span class="line">  `src_ip` varchar(50) DEFAULT NULL COMMENT &#x27;source ip&#x27;,</span><br><span class="line">  `tenant_id` varchar(128) DEFAULT &#x27;&#x27; COMMENT &#x27;租户字段&#x27;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY `uk_configinfobeta_datagrouptenant` (`data_id`,`group_id`,`tenant_id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT=&#x27;config_info_beta&#x27;;</span><br><span class="line"></span><br><span class="line">/******************************************/</span><br><span class="line">/*   数据库全名 = nacos_config   */</span><br><span class="line">/*   表名称 = config_info_tag   */</span><br><span class="line">/******************************************/</span><br><span class="line">CREATE TABLE `config_info_tag` (</span><br><span class="line">  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT &#x27;id&#x27;,</span><br><span class="line">  `data_id` varchar(255) NOT NULL COMMENT &#x27;data_id&#x27;,</span><br><span class="line">  `group_id` varchar(128) NOT NULL COMMENT &#x27;group_id&#x27;,</span><br><span class="line">  `tenant_id` varchar(128) DEFAULT &#x27;&#x27; COMMENT &#x27;tenant_id&#x27;,</span><br><span class="line">  `tag_id` varchar(128) NOT NULL COMMENT &#x27;tag_id&#x27;,</span><br><span class="line">  `app_name` varchar(128) DEFAULT NULL COMMENT &#x27;app_name&#x27;,</span><br><span class="line">  `content` longtext NOT NULL COMMENT &#x27;content&#x27;,</span><br><span class="line">  `md5` varchar(32) DEFAULT NULL COMMENT &#x27;md5&#x27;,</span><br><span class="line">  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#x27;创建时间&#x27;,</span><br><span class="line">  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#x27;修改时间&#x27;,</span><br><span class="line">  `src_user` text COMMENT &#x27;source user&#x27;,</span><br><span class="line">  `src_ip` varchar(50) DEFAULT NULL COMMENT &#x27;source ip&#x27;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY `uk_configinfotag_datagrouptenanttag` (`data_id`,`group_id`,`tenant_id`,`tag_id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT=&#x27;config_info_tag&#x27;;</span><br><span class="line"></span><br><span class="line">/******************************************/</span><br><span class="line">/*   数据库全名 = nacos_config   */</span><br><span class="line">/*   表名称 = config_tags_relation   */</span><br><span class="line">/******************************************/</span><br><span class="line">CREATE TABLE `config_tags_relation` (</span><br><span class="line">  `id` bigint(20) NOT NULL COMMENT &#x27;id&#x27;,</span><br><span class="line">  `tag_name` varchar(128) NOT NULL COMMENT &#x27;tag_name&#x27;,</span><br><span class="line">  `tag_type` varchar(64) DEFAULT NULL COMMENT &#x27;tag_type&#x27;,</span><br><span class="line">  `data_id` varchar(255) NOT NULL COMMENT &#x27;data_id&#x27;,</span><br><span class="line">  `group_id` varchar(128) NOT NULL COMMENT &#x27;group_id&#x27;,</span><br><span class="line">  `tenant_id` varchar(128) DEFAULT &#x27;&#x27; COMMENT &#x27;tenant_id&#x27;,</span><br><span class="line">  `nid` bigint(20) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  PRIMARY KEY (`nid`),</span><br><span class="line">  UNIQUE KEY `uk_configtagrelation_configidtag` (`id`,`tag_name`,`tag_type`),</span><br><span class="line">  KEY `idx_tenant_id` (`tenant_id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT=&#x27;config_tag_relation&#x27;;</span><br><span class="line"></span><br><span class="line">/******************************************/</span><br><span class="line">/*   数据库全名 = nacos_config   */</span><br><span class="line">/*   表名称 = group_capacity   */</span><br><span class="line">/******************************************/</span><br><span class="line">CREATE TABLE `group_capacity` (</span><br><span class="line">  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT &#x27;主键ID&#x27;,</span><br><span class="line">  `group_id` varchar(128) NOT NULL DEFAULT &#x27;&#x27; COMMENT &#x27;Group ID，空字符表示整个集群&#x27;,</span><br><span class="line">  `quota` int(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;配额，0表示使用默认值&#x27;,</span><br><span class="line">  `usage` int(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;使用量&#x27;,</span><br><span class="line">  `max_size` int(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;单个配置大小上限，单位为字节，0表示使用默认值&#x27;,</span><br><span class="line">  `max_aggr_count` int(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;聚合子配置最大个数，，0表示使用默认值&#x27;,</span><br><span class="line">  `max_aggr_size` int(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值&#x27;,</span><br><span class="line">  `max_history_count` int(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;最大变更历史数量&#x27;,</span><br><span class="line">  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#x27;创建时间&#x27;,</span><br><span class="line">  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#x27;修改时间&#x27;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY `uk_group_id` (`group_id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT=&#x27;集群、各Group容量信息表&#x27;;</span><br><span class="line"></span><br><span class="line">/******************************************/</span><br><span class="line">/*   数据库全名 = nacos_config   */</span><br><span class="line">/*   表名称 = his_config_info   */</span><br><span class="line">/******************************************/</span><br><span class="line">CREATE TABLE `his_config_info` (</span><br><span class="line">  `id` bigint(64) unsigned NOT NULL,</span><br><span class="line">  `nid` bigint(20) unsigned NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `data_id` varchar(255) NOT NULL,</span><br><span class="line">  `group_id` varchar(128) NOT NULL,</span><br><span class="line">  `app_name` varchar(128) DEFAULT NULL COMMENT &#x27;app_name&#x27;,</span><br><span class="line">  `content` longtext NOT NULL,</span><br><span class="line">  `md5` varchar(32) DEFAULT NULL,</span><br><span class="line">  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,</span><br><span class="line">  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,</span><br><span class="line">  `src_user` text,</span><br><span class="line">  `src_ip` varchar(50) DEFAULT NULL,</span><br><span class="line">  `op_type` char(10) DEFAULT NULL,</span><br><span class="line">  `tenant_id` varchar(128) DEFAULT &#x27;&#x27; COMMENT &#x27;租户字段&#x27;,</span><br><span class="line">  PRIMARY KEY (`nid`),</span><br><span class="line">  KEY `idx_gmt_create` (`gmt_create`),</span><br><span class="line">  KEY `idx_gmt_modified` (`gmt_modified`),</span><br><span class="line">  KEY `idx_did` (`data_id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT=&#x27;多租户改造&#x27;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/******************************************/</span><br><span class="line">/*   数据库全名 = nacos_config   */</span><br><span class="line">/*   表名称 = tenant_capacity   */</span><br><span class="line">/******************************************/</span><br><span class="line">CREATE TABLE `tenant_capacity` (</span><br><span class="line">  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT &#x27;主键ID&#x27;,</span><br><span class="line">  `tenant_id` varchar(128) NOT NULL DEFAULT &#x27;&#x27; COMMENT &#x27;Tenant ID&#x27;,</span><br><span class="line">  `quota` int(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;配额，0表示使用默认值&#x27;,</span><br><span class="line">  `usage` int(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;使用量&#x27;,</span><br><span class="line">  `max_size` int(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;单个配置大小上限，单位为字节，0表示使用默认值&#x27;,</span><br><span class="line">  `max_aggr_count` int(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;聚合子配置最大个数&#x27;,</span><br><span class="line">  `max_aggr_size` int(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值&#x27;,</span><br><span class="line">  `max_history_count` int(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;最大变更历史数量&#x27;,</span><br><span class="line">  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#x27;创建时间&#x27;,</span><br><span class="line">  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#x27;修改时间&#x27;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY `uk_tenant_id` (`tenant_id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT=&#x27;租户容量信息表&#x27;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CREATE TABLE `tenant_info` (</span><br><span class="line">  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT &#x27;id&#x27;,</span><br><span class="line">  `kp` varchar(128) NOT NULL COMMENT &#x27;kp&#x27;,</span><br><span class="line">  `tenant_id` varchar(128) default &#x27;&#x27; COMMENT &#x27;tenant_id&#x27;,</span><br><span class="line">  `tenant_name` varchar(128) default &#x27;&#x27; COMMENT &#x27;tenant_name&#x27;,</span><br><span class="line">  `tenant_desc` varchar(256) DEFAULT NULL COMMENT &#x27;tenant_desc&#x27;,</span><br><span class="line">  `create_source` varchar(32) DEFAULT NULL COMMENT &#x27;create_source&#x27;,</span><br><span class="line">  `gmt_create` bigint(20) NOT NULL COMMENT &#x27;创建时间&#x27;,</span><br><span class="line">  `gmt_modified` bigint(20) NOT NULL COMMENT &#x27;修改时间&#x27;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY `uk_tenant_info_kptenantid` (`kp`,`tenant_id`),</span><br><span class="line">  KEY `idx_tenant_id` (`tenant_id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT=&#x27;tenant_info&#x27;;</span><br><span class="line"></span><br><span class="line">CREATE TABLE `users` (</span><br><span class="line">`username` varchar(50) NOT NULL PRIMARY KEY,</span><br><span class="line">`password` varchar(500) NOT NULL,</span><br><span class="line">`enabled` boolean NOT NULL</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">CREATE TABLE `roles` (</span><br><span class="line">`username` varchar(50) NOT NULL,</span><br><span class="line">`role` varchar(50) NOT NULL,</span><br><span class="line">UNIQUE INDEX `idx_user_role` (`username` ASC, `role` ASC) USING BTREE</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">CREATE TABLE `permissions` (</span><br><span class="line">    `role` varchar(50) NOT NULL,</span><br><span class="line">    `resource` varchar(255) NOT NULL,</span><br><span class="line">    `action` varchar(8) NOT NULL,</span><br><span class="line">    UNIQUE INDEX `uk_role_permission` (`role`,`resource`,`action`) USING BTREE</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">INSERT INTO users (username, password, enabled) VALUES (&#x27;nacos&#x27;, &#x27;$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu&#x27;, TRUE);</span><br><span class="line"></span><br><span class="line">INSERT INTO roles (username, role) VALUES (&#x27;nacos&#x27;, &#x27;ROLE_ADMIN&#x27;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="nginx-yaml"><a href="#nginx-yaml" class="headerlink" title="nginx.yaml"></a>nginx.yaml</h6><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nacos-headless</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">30080</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">30080</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">30080</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">8000</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">8000</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">30081</span></span><br><span class="line">    </span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">serviceName:</span> <span class="string">&quot;nginx&quot;</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">nginx:latest</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8000</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/etc/nginx/conf.d/</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">config</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">config</span></span><br><span class="line">          <span class="attr">configMap:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">default.conf</span></span><br><span class="line">            <span class="attr">items:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">default.conf</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">default.conf</span></span><br></pre></td></tr></table></figure><p>ngixn-ConfigMap</p><ul><li>vim default.conf</li><li>kubectl create cm default.conf  –from-file=default.conf</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># nginx配置文件</span></span><br><span class="line"></span><br><span class="line">upstream django &#123;</span><br><span class="line">    ip_hash;</span><br><span class="line">    server web:<span class="number">8000</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">upstream cluster &#123;</span><br><span class="line">    ip_hash;</span><br><span class="line">    server  nacos<span class="literal">-0</span>.nacos<span class="literal">-headless</span>.default.svc.cluster.loca:<span class="number">8848</span>;</span><br><span class="line">    server  nacos<span class="literal">-1</span>.nacos<span class="literal">-headless</span>.default.svc.cluster.loca:<span class="number">8848</span>;</span><br><span class="line">    server  nacos<span class="literal">-2</span>.nacos<span class="literal">-headless</span>.default.svc.cluster.loca:<span class="number">8848</span>;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">server &#123;</span><br><span class="line"></span><br><span class="line">    listen       <span class="number">8888</span>;</span><br><span class="line">    server_name  localhost;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line"></span><br><span class="line">        proxy_set_header X<span class="literal">-Forwarded</span><span class="literal">-For</span> <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        proxy_redirect off;</span><br><span class="line">        proxy_set_header X<span class="literal">-Real</span><span class="literal">-IP</span>  <span class="variable">$remote_addr</span>;</span><br><span class="line">        proxy_pass http://cluster;  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置http请求，80端口</span></span><br><span class="line">server &#123;</span><br><span class="line">    listen <span class="number">8000</span>; <span class="comment"># 监听80端口</span></span><br><span class="line">    server_name <span class="number">127.0</span>.<span class="number">0.1</span>; <span class="comment"># 可以是nginx容器所在ip地址或127.0.0.1，不能写宿主机外网ip地址</span></span><br><span class="line"></span><br><span class="line">    charset utf<span class="literal">-8</span>;</span><br><span class="line">    client_max_body_size <span class="number">10</span>M; <span class="comment"># 限制用户上传文件大小</span></span><br><span class="line"></span><br><span class="line">    access_log /var/log/nginx/access.log main;</span><br><span class="line">    error_log /var/log/nginx/error.log warn;</span><br><span class="line"></span><br><span class="line">    location /<span class="keyword">static</span> &#123;</span><br><span class="line">        alias /usr/share/nginx/html/<span class="keyword">static</span>; <span class="comment"># 静态资源路径</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location /media &#123;</span><br><span class="line">        alias /usr/share/nginx/html/media; <span class="comment"># 媒体资源，用户上传文件路径</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        include /etc/nginx/uwsgi_params;</span><br><span class="line">        uwsgi_pass django;</span><br><span class="line">        uwsgi_read_timeout <span class="number">600</span>;</span><br><span class="line">        uwsgi_connect_timeout <span class="number">600</span>;</span><br><span class="line">        uwsgi_send_timeout <span class="number">600</span>;</span><br><span class="line"></span><br><span class="line">        proxy_set_header X<span class="literal">-Forwarded</span><span class="literal">-For</span> <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        proxy_redirect off;</span><br><span class="line">        proxy_set_header X<span class="literal">-Real</span><span class="literal">-IP</span>  <span class="variable">$remote_addr</span>;</span><br><span class="line">       <span class="comment"># proxy_pass http://django;  # 使用uwsgi通信，而不是http，所以不使用proxy_pass。</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="web-yaml"><a href="#web-yaml" class="headerlink" title="web.yaml"></a>web.yaml</h6><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">8000</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">8000</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">web</span></span><br><span class="line">  <span class="comment">#type: NodePort</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">web</span></span><br><span class="line">  <span class="attr">strategy:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">Recreate</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">web</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">algorithmserver_web:v2</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8000</span></span><br><span class="line">          <span class="attr">resources:</span> &#123;&#125;</span><br><span class="line">          <span class="attr">stdin:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">tty:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/code</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">web-claim0</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">web-claim0</span></span><br><span class="line">          <span class="attr">persistentVolumeClaim:</span></span><br><span class="line">            <span class="attr">claimName:</span> <span class="string">web-claim0</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;docker&quot;&gt;&lt;a href=&quot;#docker&quot; class=&quot;headerlink&quot; title=&quot;docker&quot;&gt;&lt;/a&gt;docker&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;简介&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.yuque.com/leife</summary>
      
    
    
    
    
    <category term="docker" scheme="http://example.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Flask</title>
    <link href="http://example.com/2021/08/20/Flask/"/>
    <id>http://example.com/2021/08/20/Flask/</id>
    <published>2021-08-20T04:23:37.000Z</published>
    <updated>2021-09-17T02:22:24.175Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Flask"><a href="#Flask" class="headerlink" title="Flask"></a>Flask</h1><h2 id="中间件"><a href="#中间件" class="headerlink" title="中间件"></a>中间件</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello World!&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 模拟中间件</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Md</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, old_wsgi_app</span>):</span></span><br><span class="line">        self.old_wsgi_app = old_wsgi_app</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__call__</span>(<span class="params">self, environ, start_response</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;开始之前&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        ret = self.old_wsgi_app(environ, start_response)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;结束之后&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> ret</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 1我们发现当执行app.run方法的时候，最终执行run_simple，最后执行app(),也就是在执行app.__call__方法</span></span><br><span class="line">    <span class="comment"># 2 在__call__里面，执行的是self.wsgi_app().那我们希望在执行他本身的wsgi之前做点事情。</span></span><br><span class="line">    <span class="comment"># 3 所以我们先用Md类中__init__，保存之前的wsgi,然后我们用将app.wsgi转化成Md的对象。</span></span><br><span class="line">    <span class="comment"># 4 那执行新的的app.wsgi_app，就是执行Md的__call__方法。</span></span><br><span class="line">    <span class="comment"># 把原来的wsgi_app替换为自定义的，</span></span><br><span class="line">    aaa=Md(app.wsgi_app)</span><br><span class="line">    app.wsgi_app = aaa</span><br><span class="line">    app.run()</span><br><span class="line">    <span class="comment"># flask请求来了会执行，执行app()---&gt;触发：类的__call__</span></span><br><span class="line">    <span class="comment"># app.__call__----&gt;self.wsgi_app(environ, start_response)</span></span><br><span class="line">    <span class="comment"># 请求来了以后，会执行Md对象的__call__</span></span><br><span class="line">    <span class="comment"># aaa(environ, start_response)---&gt;Md类的__call__()</span></span><br></pre></td></tr></table></figure><h2 id="蓝图"><a href="#蓝图" class="headerlink" title="蓝图"></a>蓝图</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> 是一个类的对象，用来划分项目目录，为了避免使用app划分目录的时候出现循环导入问题</span><br><span class="line"><span class="number">2</span> 使用步骤</span><br><span class="line">-实例化得到一个蓝图对象</span><br><span class="line">        <span class="keyword">from</span> flask <span class="keyword">import</span> Blueprint</span><br><span class="line">        account = Blueprint(<span class="string">&#x27;account&#x27;</span>, __name__)</span><br><span class="line">    -像使用app一样使用蓝图，注册路由</span><br><span class="line"><span class="meta">    @account.route(<span class="params"><span class="string">&#x27;/login.html&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&quot;POST&quot;</span>]</span>)</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">login</span>():</span></span><br><span class="line">            <span class="keyword">return</span> render_template(<span class="string">&#x27;login.html&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">    -在app中注册蓝图</span><br><span class="line">    <span class="keyword">from</span> .views.account <span class="keyword">import</span> account</span><br><span class="line">    app.register_blueprint(account)</span><br><span class="line">        </span><br><span class="line"><span class="number">3</span> 注意点：</span><br><span class="line"><span class="number">1</span> 蓝图注册进app时，指定前缀（类似于路由分发）</span><br><span class="line">    app.register_blueprint(admin, url_prefix=<span class="string">&#x27;/admin&#x27;</span>)</span><br><span class="line">    <span class="number">2</span> 蓝图对象在实例化的时候，可以指定当前蓝图使用哪个模板文件夹和静态文件夹</span><br><span class="line">    如果不指定，默认用app的，查找顺序是先从自己里面找，找不到再找app的</span><br><span class="line">    web = Blueprint(<span class="string">&#x27;web&#x27;</span>,__name__,template_folder=<span class="string">&#x27;templates&#x27;</span>,static_folder=<span class="string">&#x27;static&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">    <span class="number">3</span> 蓝图对象有自己的请求扩展，请求扩展只属于当前蓝图</span><br><span class="line">    <span class="comment"># 只有访问当前蓝图管理的路径才会触发请求扩展</span></span><br><span class="line">    web = Blueprint(<span class="string">&#x27;web&#x27;</span>, __name__,template_folder=<span class="string">&#x27;templates&#x27;</span>,static_folder=<span class="string">&#x27;static&#x27;</span>)</span><br><span class="line"><span class="meta">    @web.before_request</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">web_request</span>():</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;web request&#x27;</span>)</span><br><span class="line"><span class="meta">    @web.after_request</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">web_after</span>(<span class="params">response</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(response)</span><br><span class="line">        <span class="keyword">return</span> response</span><br></pre></td></tr></table></figure><h2 id="flask请求上下文"><a href="#flask请求上下文" class="headerlink" title="flask请求上下文"></a>flask请求上下文</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> 当flask启动，等待客户端请求</span><br><span class="line"><span class="number">2</span> 一旦请求来了：app()---&gt;app.__call__()----&gt;app.wsgi_app()</span><br><span class="line"><span class="number">3</span> wsgi_app()源码如下：</span><br><span class="line">    <span class="comment"># environ：http请求字典</span></span><br><span class="line">    <span class="comment"># 返回一个ctx=RequestContext,对象中有Request对象，Session对象。。。</span></span><br><span class="line">    ctx = self.request_context(environ)</span><br><span class="line">    error = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">                <span class="comment"># 把ctx对象放到了全局变量_request_ctx_stack中</span></span><br><span class="line">                <span class="comment"># _request_ctx_stack全局变量是LocalStack的对象</span></span><br><span class="line">                <span class="comment"># LocalStack类的push方法</span></span><br><span class="line">                <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">                        def push(self, obj):</span></span><br><span class="line"><span class="string">                            rv = getattr(self._local, &quot;stack&quot;, None)</span></span><br><span class="line"><span class="string">                            if rv is None:</span></span><br><span class="line"><span class="string">                                self._local.stack = rv = []</span></span><br><span class="line"><span class="string">                            rv.append(obj)</span></span><br><span class="line"><span class="string">                            return rvbefore_first_request,before_request,after_request</span></span><br><span class="line"><span class="string">                        &#x27;&#x27;&#x27;</span></span><br><span class="line">                ctx.push()</span><br><span class="line">                <span class="comment"># 执行请求扩展的东西（before_first_request,before_request,after_request）</span></span><br><span class="line">                <span class="comment"># 根据路径执行视图函数</span></span><br><span class="line">                response = self.full_dispatch_request()</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                error = e</span><br><span class="line">                response = self.handle_exception(e)</span><br><span class="line">                <span class="keyword">except</span>: </span><br><span class="line">                    error = sys.exc_info()[<span class="number">1</span>]</span><br><span class="line">                    <span class="keyword">raise</span></span><br><span class="line">                    <span class="keyword">return</span> response(environ, start_response)</span><br><span class="line">            <span class="keyword">finally</span>:</span><br><span class="line">                 <span class="keyword">if</span> self.should_ignore_error(error):</span><br><span class="line">                      error = <span class="literal">None</span></span><br><span class="line">                      ctx.auto_pop(error)</span><br></pre></td></tr></table></figure><h2 id="requirements-txt"><a href="#requirements-txt" class="headerlink" title="requirements.txt"></a>requirements.txt</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> 在虚拟环境中直接导出</span><br><span class="line">pip3 freeze &gt;requirements.txt</span><br><span class="line"><span class="number">2</span> 系统环境装了很多模块，只导出当前项目依赖的模块</span><br><span class="line">-pip3 install pipreqs</span><br><span class="line">    -pipreqs ./ --encoding=utf8</span><br></pre></td></tr></table></figure><h2 id="方法和函数的区别"><a href="#方法和函数的区别" class="headerlink" title="方法和函数的区别"></a>方法和函数的区别</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> types <span class="keyword">import</span> MethodType,FunctionType</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fetch</span>(<span class="params">self</span>):</span></span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># print(isinstance(Foo.fetch,MethodType))</span></span><br><span class="line"><span class="comment"># print(isinstance(Foo.fetch,FunctionType)) # True</span></span><br><span class="line"></span><br><span class="line">obj = Foo()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">isinstance</span>(obj.fetch,MethodType)) <span class="comment"># True</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">isinstance</span>(obj.fetch,FunctionType))</span><br><span class="line"></span><br><span class="line">函数和方法的区别是在于传值</span><br></pre></td></tr></table></figure><h2 id="threading-local"><a href="#threading-local" class="headerlink" title="threading.local"></a>threading.local</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 不用local,会出现并发安全的问题</span></span><br><span class="line"><span class="comment"># from threading import Thread</span></span><br><span class="line"><span class="comment"># import time</span></span><br><span class="line"><span class="comment"># lqz = -1</span></span><br><span class="line"><span class="comment"># def task(arg):</span></span><br><span class="line"><span class="comment">#     global lqz</span></span><br><span class="line"><span class="comment">#     lqz = arg</span></span><br><span class="line"><span class="comment">#     # time.sleep(2)</span></span><br><span class="line"><span class="comment">#     print(lqz)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># for i in range(10):</span></span><br><span class="line"><span class="comment">#     t = Thread(target=task,args=(i,))</span></span><br><span class="line"><span class="comment">#     t.start()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用local</span></span><br><span class="line"><span class="comment"># from threading import Thread</span></span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> local</span><br><span class="line"><span class="comment"># import time</span></span><br><span class="line"><span class="comment"># from threading import get_ident</span></span><br><span class="line"><span class="comment"># # 特殊的对象，不同线程操作它，操作的是线程自己的，不会出现并发安全问题</span></span><br><span class="line"><span class="comment"># lqz = local()</span></span><br><span class="line"><span class="comment"># def task(arg):</span></span><br><span class="line"><span class="comment">#     # 对象.val = 1/2/3/4/5</span></span><br><span class="line"><span class="comment">#     lqz.value = arg</span></span><br><span class="line"><span class="comment">#     time.sleep(2)</span></span><br><span class="line"><span class="comment">#     print(lqz.value)</span></span><br><span class="line"><span class="comment"># for i in range(10):</span></span><br><span class="line"><span class="comment">#     t = Thread(target=task,args=(i,))</span></span><br><span class="line"><span class="comment">#     t.start()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自己写个local对象（low版本）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># from threading import get_ident,Thread</span></span><br><span class="line"><span class="comment"># import time</span></span><br><span class="line"><span class="comment"># storage = &#123;&#125;</span></span><br><span class="line"><span class="comment"># # &#123;线程id号1:&#123;key:value&#125;,线程id号2:&#123;key:value&#125;,线程id号3:&#123;key:value&#125;&#125;</span></span><br><span class="line"><span class="comment"># def set(k,v):</span></span><br><span class="line"><span class="comment">#     ident = get_ident() # 获取线程id号</span></span><br><span class="line"><span class="comment">#     if ident in storage:</span></span><br><span class="line"><span class="comment">#         storage[ident][k] = v</span></span><br><span class="line"><span class="comment">#     else:</span></span><br><span class="line"><span class="comment">#         storage[ident] = &#123;k:v&#125;</span></span><br><span class="line"><span class="comment"># def get(k):</span></span><br><span class="line"><span class="comment">#     ident = get_ident()</span></span><br><span class="line"><span class="comment">#     return storage[ident][k]</span></span><br><span class="line"><span class="comment"># def task(arg):</span></span><br><span class="line"><span class="comment">#     set(&#x27;val&#x27;,arg)</span></span><br><span class="line"><span class="comment">#     time.sleep(2)</span></span><br><span class="line"><span class="comment">#     v = get(&#x27;val&#x27;)</span></span><br><span class="line"><span class="comment">#     print(v)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># for i in range(10):</span></span><br><span class="line"><span class="comment">#     t = Thread(target=task,args=(i,))</span></span><br><span class="line"><span class="comment">#     t.start()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 面向对象版本</span></span><br><span class="line"><span class="comment"># from threading import get_ident,Thread</span></span><br><span class="line"><span class="comment"># import time</span></span><br><span class="line"><span class="comment"># class Local(object):</span></span><br><span class="line"><span class="comment">#     storage = &#123;&#125;</span></span><br><span class="line"><span class="comment">#     # &#123;线程id号1: &#123;key: value&#125;, 线程id号2: &#123;key: value&#125;, 线程id号3: &#123;key: value&#125;&#125;</span></span><br><span class="line"><span class="comment">#     def set(self, k, v):</span></span><br><span class="line"><span class="comment">#         ident = get_ident()</span></span><br><span class="line"><span class="comment">#         if ident in Local.storage:</span></span><br><span class="line"><span class="comment">#             Local.storage[ident][k] = v</span></span><br><span class="line"><span class="comment">#         else:</span></span><br><span class="line"><span class="comment">#             Local.storage[ident] = &#123;k: v&#125;</span></span><br><span class="line"><span class="comment">#     def get(self, k):</span></span><br><span class="line"><span class="comment">#         ident = get_ident()</span></span><br><span class="line"><span class="comment">#         return Local.storage[ident][k]</span></span><br><span class="line"><span class="comment"># obj = Local()</span></span><br><span class="line"><span class="comment"># def task(arg):</span></span><br><span class="line"><span class="comment">#     obj.set(&#x27;val&#x27;,arg)</span></span><br><span class="line"><span class="comment">#     v = obj.get(&#x27;val&#x27;)</span></span><br><span class="line"><span class="comment">#     print(v)</span></span><br><span class="line"><span class="comment"># for i in range(10):</span></span><br><span class="line"><span class="comment">#     t = Thread(target=task,args=(i,))</span></span><br><span class="line"><span class="comment">#     t.start()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 面向对象版本，通过.取值，赋值</span></span><br><span class="line"><span class="comment"># from threading import get_ident,Thread</span></span><br><span class="line"><span class="comment"># import time</span></span><br><span class="line"><span class="comment"># class Local(object):</span></span><br><span class="line"><span class="comment">#     storage = &#123;&#125;</span></span><br><span class="line"><span class="comment">#     ## &#123;线程id号1: &#123;key: value&#125;, 线程id号2: &#123;key: value&#125;, 线程id号3: &#123;key: value&#125;&#125;</span></span><br><span class="line"><span class="comment">#     def __setattr__(self, k, v):</span></span><br><span class="line"><span class="comment">#         ident = get_ident()</span></span><br><span class="line"><span class="comment">#         if ident in Local.storage:</span></span><br><span class="line"><span class="comment">#             Local.storage[ident][k] = v</span></span><br><span class="line"><span class="comment">#         else:</span></span><br><span class="line"><span class="comment">#             Local.storage[ident] = &#123;k: v&#125;</span></span><br><span class="line"><span class="comment">#     def __getattr__(self, k):</span></span><br><span class="line"><span class="comment">#         ident = get_ident()</span></span><br><span class="line"><span class="comment">#         return Local.storage[ident][k]</span></span><br><span class="line"><span class="comment"># obj = Local()</span></span><br><span class="line"><span class="comment"># obj2 = Local() # 所有的local对象用的是同一个字典，不好</span></span><br><span class="line"><span class="comment"># def task(arg):</span></span><br><span class="line"><span class="comment">#     obj.val = arg</span></span><br><span class="line"><span class="comment">#     print(obj.val)</span></span><br><span class="line"><span class="comment"># for i in range(10):</span></span><br><span class="line"><span class="comment">#     t = Thread(target=task,args=(i,))</span></span><br><span class="line"><span class="comment">#     t.start()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不同local对象，使用自己的字典</span></span><br><span class="line"><span class="comment"># from threading import get_ident,Thread</span></span><br><span class="line"><span class="comment"># import time</span></span><br><span class="line"><span class="comment"># class Local(object):</span></span><br><span class="line"><span class="comment">#     def __init__(self):</span></span><br><span class="line"><span class="comment">#         # self.storage=&#123;&#125;  递归</span></span><br><span class="line"><span class="comment">#         # setattr(self,&#x27;storage&#x27;,&#123;&#125;) 递归</span></span><br><span class="line"><span class="comment">#         #Local.__setattr__(self,&#x27;storage&#x27;,&#123;&#125;)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#         object.__setattr__(self,&#x27;storage&#x27;,&#123;&#125;)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     def __setattr__(self, k, v):</span></span><br><span class="line"><span class="comment">#         ident = get_ident()</span></span><br><span class="line"><span class="comment">#         if ident in self.storage:</span></span><br><span class="line"><span class="comment">#             self.storage[ident][k] = v</span></span><br><span class="line"><span class="comment">#         else:</span></span><br><span class="line"><span class="comment">#             self.storage[ident] = &#123;k: v&#125;</span></span><br><span class="line"><span class="comment">#     def __getattr__(self, k):</span></span><br><span class="line"><span class="comment">#         ident = get_ident()</span></span><br><span class="line"><span class="comment">#         return self.storage[ident][k]</span></span><br><span class="line"><span class="comment"># obj = Local()</span></span><br><span class="line"><span class="comment"># def task(arg):</span></span><br><span class="line"><span class="comment">#     obj.val = arg</span></span><br><span class="line"><span class="comment">#     # obj.xxx = arg</span></span><br><span class="line"><span class="comment">#     time.sleep(1)</span></span><br><span class="line"><span class="comment">#     print(obj.val)</span></span><br><span class="line"><span class="comment"># for i in range(10):</span></span><br><span class="line"><span class="comment">#     t = Thread(target=task,args=(i,))</span></span><br><span class="line"><span class="comment">#     t.start()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 多线程下可以使用，一旦加入协程，就不行了</span></span><br><span class="line"><span class="comment"># 自定义一个兼容线程和协程的local对象</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">from</span> greenlet <span class="keyword">import</span> getcurrent <span class="keyword">as</span> get_ident</span><br><span class="line"></span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="keyword">from</span> threading <span class="keyword">import</span> get_ident</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Local</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">object</span>.__setattr__(self,<span class="string">&#x27;storage&#x27;</span>,&#123;&#125;)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__setattr__</span>(<span class="params">self, k, v</span>):</span></span><br><span class="line">        ident = get_ident()</span><br><span class="line">        <span class="keyword">if</span> ident <span class="keyword">in</span> self.storage:</span><br><span class="line">            self.storage[ident][k] = v</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.storage[ident] = &#123;k: v&#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># try:</span></span><br><span class="line">        <span class="comment">#     storage[ident][name] = value</span></span><br><span class="line">        <span class="comment"># except KeyError:</span></span><br><span class="line">        <span class="comment">#     storage[ident] = &#123;name: value&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__getattr__</span>(<span class="params">self, k</span>):</span></span><br><span class="line">        ident = get_ident()</span><br><span class="line">        <span class="keyword">return</span> self.storage[ident][k]</span><br><span class="line">obj = Local()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">task</span>(<span class="params">arg</span>):</span></span><br><span class="line">    obj.val = arg</span><br><span class="line">    <span class="comment"># obj.xxx = arg</span></span><br><span class="line">    <span class="built_in">print</span>(obj.storage)</span><br><span class="line">    <span class="built_in">print</span>(obj.val)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    t = Thread(target=task,args=(i,))</span><br><span class="line">    t.start()</span><br></pre></td></tr></table></figure><h2 id="偏函数"><a href="#偏函数" class="headerlink" title="偏函数"></a>偏函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> partial  <span class="comment"># 偏函数</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">a,b,c</span>):</span></span><br><span class="line">    <span class="keyword">return</span> a+b+c</span><br><span class="line"></span><br><span class="line">add=partial(add,<span class="number">2</span>) <span class="comment"># add是一个偏函数了，提前传值</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(add)</span><br><span class="line"><span class="comment"># print(add(3,4))</span></span><br><span class="line"><span class="built_in">print</span>(add(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>))</span><br><span class="line"><span class="comment"># print(add(2,3,4))</span></span><br></pre></td></tr></table></figure><h2 id="flask上下文源码分析"><a href="#flask上下文源码分析" class="headerlink" title="flask上下文源码分析"></a>flask上下文源码分析</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">请求上下文执行流程（ctx）：</span><br><span class="line">-<span class="number">0</span> flask项目一启动，有<span class="number">6</span>个全局变量</span><br><span class="line">-_request_ctx_stack：LocalStack对象</span><br><span class="line">-_app_ctx_stack ：LocalStack对象</span><br><span class="line">-request ： LocalProxy对象</span><br><span class="line">-session ： LocalProxy对象</span><br><span class="line">-<span class="number">1</span> 请求来了 app.__call__()----&gt;内部执行：self.wsgi_app(environ, start_response)</span><br><span class="line">-<span class="number">2</span> wsgi_app()</span><br><span class="line">-<span class="number">2.1</span> 执行：ctx = self.request_context(environ)：返回一个RequestContext对象，并且封装了request(当次请求的request对象)，session</span><br><span class="line">-<span class="number">2.2</span> 执行： ctx.push()：RequestContext对象的push方法</span><br><span class="line">-<span class="number">2.2</span><span class="number">.1</span> push方法中中间位置有：_request_ctx_stack.push(self)，self是ctx对象</span><br><span class="line">-<span class="number">2.2</span><span class="number">.2</span> 去_request_ctx_stack对象的类中找push方法（LocalStack中找push方法）</span><br><span class="line">-<span class="number">2.2</span><span class="number">.3</span> push方法源码：</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">push</span>(<span class="params">self, obj</span>):</span></span><br><span class="line"><span class="comment">#通过反射找self._local,在init实例化的时候生成的：self._local = Local()</span></span><br><span class="line"><span class="comment">#Local()flask封装的支持线程和协程的local对象</span></span><br><span class="line"><span class="comment"># 一开始取不到stack，返回None</span></span><br><span class="line">rv = <span class="built_in">getattr</span>(self._local, <span class="string">&quot;stack&quot;</span>, <span class="literal">None</span>)</span><br><span class="line"><span class="keyword">if</span> rv <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line"><span class="comment">#走到这，self._local.stack=[],rv=self._local.stack</span></span><br><span class="line">self._local.stack = rv = []</span><br><span class="line"><span class="comment"># 把ctx放到了列表中</span></span><br><span class="line"><span class="comment">#self._local=&#123;&#x27;线程id1&#x27;:&#123;&#x27;stack&#x27;:[ctx,]&#125;,&#x27;线程id2&#x27;:&#123;&#x27;stack&#x27;:[ctx,]&#125;,&#x27;线程id3&#x27;:&#123;&#x27;stack&#x27;:[ctx,]&#125;&#125;</span></span><br><span class="line">rv.append(obj)</span><br><span class="line"><span class="keyword">return</span> rv</span><br><span class="line">-<span class="number">3</span> 如果在视图函数中使用request对象，比如：<span class="built_in">print</span>(request)</span><br><span class="line">-<span class="number">3.1</span> 会调用request对象的__str__方法，request类是：LocalProxy</span><br><span class="line">-<span class="number">3.2</span> LocalProxy中的__str__方法：<span class="keyword">lambda</span> x: <span class="built_in">str</span>(x._get_current_object())</span><br><span class="line">-<span class="number">3.2</span><span class="number">.1</span> 内部执行self._get_current_object()</span><br><span class="line">-<span class="number">3.2</span><span class="number">.2</span> _get_current_object()方法的源码如下：</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_get_current_object</span>(<span class="params">self</span>):</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">hasattr</span>(self.__local, <span class="string">&quot;__release_local__&quot;</span>):</span><br><span class="line"><span class="comment">#self.__local()  在init的时候，实例化的，在init中：object.__setattr__(self, &quot;_LocalProxy__local&quot;, local)</span></span><br><span class="line"><span class="comment"># 用了隐藏属性</span></span><br><span class="line"><span class="comment">#self.__local 实例化该类的时候传入的local（偏函数的内存地址：partial(_lookup_req_object, &quot;request&quot;)）</span></span><br><span class="line"><span class="comment">#加括号返回，就会执行偏函数，也就是执行_lookup_req_object，不需要传参数了</span></span><br><span class="line"><span class="comment">#这个地方的返回值就是request对象(当此请求的request，没有乱)</span></span><br><span class="line"><span class="keyword">return</span> self.__local()</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">getattr</span>(self.__local, self.__name__)</span><br><span class="line"><span class="keyword">except</span> AttributeError:</span><br><span class="line"><span class="keyword">raise</span> RuntimeError(<span class="string">&quot;no object bound to %s&quot;</span> % self.__name__)</span><br><span class="line">-<span class="number">3.2</span><span class="number">.3</span> _lookup_req_object函数源码如下：</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_lookup_req_object</span>(<span class="params">name</span>):</span></span><br><span class="line"><span class="comment">#name是&#x27;request&#x27;字符串</span></span><br><span class="line"><span class="comment">#top方法是把第二步中放入的ctx取出来，因为都在一个线程内，当前取到的就是当次请求的ctx对象</span></span><br><span class="line">top = _request_ctx_stack.top</span><br><span class="line"><span class="keyword">if</span> top <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line"><span class="keyword">raise</span> RuntimeError(_request_ctx_err_msg)</span><br><span class="line"><span class="comment">#通过反射，去ctx中把request对象返回</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">getattr</span>(top, name)</span><br><span class="line">-<span class="number">3.2</span><span class="number">.4</span> 所以：<span class="built_in">print</span>(request) 实质上是在打印当此请求的request对象的__str__</span><br><span class="line">-<span class="number">4</span> 如果在视图函数中使用request对象，比如：<span class="built_in">print</span>(request.method):实质上是取到当次请求的reuquest对象的method属性</span><br><span class="line"></span><br><span class="line">-<span class="number">5</span> 最终，请求结束执行： ctx.auto_pop(error)，把ctx移除掉</span><br><span class="line"></span><br><span class="line">其他的东西：</span><br><span class="line">-session:</span><br><span class="line">-请求来了opensession</span><br><span class="line">-ctx.push()----&gt;也就是RequestContext类的push方法的最后的地方：</span><br><span class="line"><span class="keyword">if</span> self.session <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line"><span class="comment">#self是ctx，ctx中有个app就是flask对象，   self.app.session_interface也就是它：SecureCookieSessionInterface()</span></span><br><span class="line">session_interface = self.app.session_interface</span><br><span class="line">self.session = session_interface.open_session(self.app, self.request)</span><br><span class="line"><span class="keyword">if</span> self.session <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line"><span class="comment">#经过上面还是None的话，生成了个空session</span></span><br><span class="line">self.session = session_interface.make_null_session(self.app)</span><br><span class="line">-请求走了savesession</span><br><span class="line">-response = self.full_dispatch_request() 方法内部：执行了before_first_request，before_request，视图函数，after_request，savesession</span><br><span class="line">-self.full_dispatch_request()----&gt;执行：self.finalize_request(rv)-----》self.process_response(response)----》最后：self.session_interface.save_session(self, ctx.session, response)</span><br><span class="line">-请求扩展相关</span><br><span class="line">before_first_request，before_request，after_request依次执行</span><br><span class="line">-flask有一个请求上下文，一个应用上下文</span><br><span class="line">-ctx:</span><br><span class="line">-是：RequestContext对象:封装了request和session</span><br><span class="line">-调用了：_request_ctx_stack.push(self)就是把：ctx放到了那个位置</span><br><span class="line">-app_ctx:</span><br><span class="line">-是：AppContext(self) 对象：封装了当前的app和g</span><br><span class="line">-调用 _app_ctx_stack.push(self) 就是把：app_ctx放到了那个位置</span><br><span class="line">-g是个什么鬼？</span><br><span class="line">专门用来存储用户信息的g对象，g的全称的为<span class="keyword">global</span> </span><br><span class="line">g对象在一次请求中的所有的代码的地方，都是可以使用的 </span><br><span class="line"></span><br><span class="line">    -g对象和session的区别</span><br><span class="line">        g对象只对当次请求有效（当此请求内有效）</span><br><span class="line">        session：可以跨请求，该用户的多次请求中都可以使用</span><br><span class="line"></span><br><span class="line">-代理模式</span><br><span class="line">-request和session就是代理对象，用的就是代理模式</span><br></pre></td></tr></table></figure><h2 id="flask-session的使用"><a href="#flask-session的使用" class="headerlink" title="flask-session的使用"></a>flask-session的使用</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> 由于原生的flask中session是加密后放到了cookie中</span><br><span class="line"><span class="number">2</span> 我们想保存到文件中，数据库中，redis（比较多）。。。</span><br><span class="line"><span class="number">3</span> 借助于第三方：flask-session</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1 第一种使用方式</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, session</span><br><span class="line"><span class="keyword">from</span> redis <span class="keyword">import</span> Redis</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask_session <span class="keyword">import</span> RedisSessionInterface</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不需要指定</span></span><br><span class="line"><span class="comment"># app.secret_key = &#x27;dafasdf&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># conn=Redis(host=&#x27;127.0.0.1&#x27;,port=6379)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># app.session_interface=RedisSessionInterface(conn,key_prefix=&#x27;lqz&#x27;)</span></span><br><span class="line"><span class="comment"># @app.route(&#x27;/set_session&#x27;)</span></span><br><span class="line"><span class="comment"># def set_session():</span></span><br><span class="line"><span class="comment">#     session[&#x27;name&#x27;]=&#x27;lqz&#x27;</span></span><br><span class="line"><span class="comment">#     return &#x27;session写入了，写了name=lqz&#x27;</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># @app.route(&#x27;/get_session&#x27;)</span></span><br><span class="line"><span class="comment"># def get_session():</span></span><br><span class="line"><span class="comment">#     # s=session[&#x27;name&#x27;]</span></span><br><span class="line"><span class="comment">#     s=session.get(&#x27;name&#x27;,&#x27;取不到&#x27;)</span></span><br><span class="line"><span class="comment">#     return &#x27;获取到的session是&#x27;+s</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方式二</span></span><br><span class="line"><span class="keyword">from</span> flask_session <span class="keyword">import</span> Session</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方式一</span></span><br><span class="line">app.config[<span class="string">&#x27;SESSION_TYPE&#x27;</span>] = <span class="string">&#x27;redis&#x27;</span></span><br><span class="line">app.config[<span class="string">&#x27;SESSION_REDIS&#x27;</span>] = Redis(host=<span class="string">&#x27;127.0.0.1&#x27;</span>, port=<span class="string">&#x27;6379&#x27;</span>)</span><br><span class="line">app.config[<span class="string">&#x27;SESSION_KEY_PREFIX&#x27;</span>] = <span class="string">&#x27;lhj&#x27;</span></span><br><span class="line">app.secret_key = <span class="string">&#x27;dafasdf&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/set_session&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_session</span>():</span></span><br><span class="line">    session[<span class="string">&#x27;name&#x27;</span>] = <span class="string">&#x27;lhj&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;session写入了，写了name=lhj&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/get_session&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_session</span>():</span></span><br><span class="line">    <span class="comment"># s=session[&#x27;name&#x27;]</span></span><br><span class="line">    s = session.get(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;取不到&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;获取到的session是&#x27;</span> + s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方式二</span></span><br><span class="line"><span class="comment"># app.config.from_object(&#x27;settings.Pro&#x27;)</span></span><br><span class="line"><span class="comment"># 使用第三方插件，是一个通用方式</span></span><br><span class="line">Session(app)  <span class="comment"># 本质跟上面一样，只不过通过配置文件来处理，好处是后期只改配置文件，即可完成配置</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="数据库连接池"><a href="#数据库连接池" class="headerlink" title="数据库连接池"></a>数据库连接池</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">https://www.cnblogs.com/liuqingzheng/articles/<span class="number">9006055.</span>html</span><br><span class="line">    </span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 第一种方案，全局使用沟通一个curser会存在效率问题，安全性问题</span></span><br><span class="line"><span class="comment"># conn = pymysql.Connect(host=&#x27;127.0.0.1&#x27;, user=&#x27;root&#x27;, password=&quot;1018&quot;, database=&#x27;luffy&#x27;, port=3306)</span></span><br><span class="line"><span class="comment"># cursor = conn.cursor()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/get_data&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_data</span>():</span></span><br><span class="line">    <span class="comment"># 第二种：不限制数据库的连接数，会导致连接数暴增</span></span><br><span class="line">    conn = pymysql.Connect(host=<span class="string">&#x27;127.0.0.1&#x27;</span>, user=<span class="string">&#x27;root&#x27;</span>, password=<span class="string">&quot;1018&quot;</span>, database=<span class="string">&#x27;luffy&#x27;</span>, port=<span class="number">3306</span>)</span><br><span class="line">    cursor = conn.cursor()</span><br><span class="line">    cursor.execute(<span class="string">&#x27;select * from luffy_banner&#x27;</span>)</span><br><span class="line">    res = cursor.fetchall()</span><br><span class="line">    <span class="built_in">print</span>(res)</span><br><span class="line">    cursor.close()</span><br><span class="line">    conn.close()</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;数据查回&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用数据库链接池</span></span><br><span class="line"><span class="number">1.</span> sql_pool.py</span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"><span class="keyword">from</span> dbutils.pooled_db <span class="keyword">import</span> PooledDB</span><br><span class="line">POOL = PooledDB(</span><br><span class="line">    creator=pymysql,  <span class="comment"># 使用链接数据库的模块</span></span><br><span class="line">    maxconnections=<span class="number">6</span>,  <span class="comment"># 连接池允许的最大连接数，0和None表示不限制连接数</span></span><br><span class="line">    mincached=<span class="number">2</span>,  <span class="comment"># 初始化时，链接池中至少创建的空闲的链接，0表示不创建</span></span><br><span class="line">    maxcached=<span class="number">5</span>,  <span class="comment"># 链接池中最多闲置的链接，0和None不限制</span></span><br><span class="line">    maxshared=<span class="number">3</span>,  <span class="comment"># 链接池中最多共享的链接数量，0和None表示全部共享。PS: 无用，因为pymysql和MySQLdb等模块的 threadsafety都为1，所有值无论设置为多少，_maxcached永远为0，所以永远是所有链接都共享。</span></span><br><span class="line">    blocking=<span class="literal">True</span>,  <span class="comment"># 连接池中如果没有可用连接后，是否阻塞等待。True，等待；False，不等待然后报错</span></span><br><span class="line">    maxusage=<span class="literal">None</span>,  <span class="comment"># 一个链接最多被重复使用的次数，None表示无限制</span></span><br><span class="line">    setsession=[],  <span class="comment"># 开始会话前执行的命令列表。</span></span><br><span class="line">    ping=<span class="number">0</span>,</span><br><span class="line">    <span class="comment"># ping MySQL服务端，检查是否服务可用。</span></span><br><span class="line">    host=<span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">    port=<span class="number">3306</span>,</span><br><span class="line">    user=<span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">    password=<span class="string">&#x27;1018&#x27;</span>,</span><br><span class="line">    database=<span class="string">&#x27;luffy&#x27;</span>,</span><br><span class="line">    charset=<span class="string">&#x27;utf8&#x27;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> </span><br><span class="line"><span class="keyword">from</span> sql_pool <span class="keyword">import</span> POOL</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/pool&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pool</span>():</span></span><br><span class="line">    conn = POOL.connection()  <span class="comment"># 从连接池种取一个链接（如果没有，阻塞在这）</span></span><br><span class="line">    cursor = conn.cursor()</span><br><span class="line">    cursor.execute(<span class="string">&#x27;select * from luffy_order&#x27;</span>)</span><br><span class="line">    res = cursor.fetchall()</span><br><span class="line">    <span class="built_in">print</span>(res)</span><br><span class="line">    cursor.close()</span><br><span class="line">    conn.close()</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;数据查回&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="flask-script"><a href="#flask-script" class="headerlink" title="flask-script"></a>flask-script</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> django 运行项目  python manage.py runserver </span><br><span class="line"><span class="number">2</span> 借助于flask-script可以子定制命令</span><br><span class="line">pip3 install flask-script</span><br><span class="line">    </span><br><span class="line"><span class="number">3</span> 使用</span><br><span class="line">-自带一个runserver</span><br><span class="line">    -自定制命令</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask_script <span class="keyword">import</span> Manager</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">manager=Manager(app)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自己定制命令</span></span><br><span class="line"><span class="meta">@manager.command</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">custom</span>(<span class="params">arg</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    自定义命令</span></span><br><span class="line"><span class="string">    python manage.py custom 123</span></span><br><span class="line"><span class="string">    :param arg:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(arg)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@manager.option(<span class="params"><span class="string">&#x27;-n&#x27;</span>, <span class="string">&#x27;--name&#x27;</span>, dest=<span class="string">&#x27;name&#x27;</span></span>)</span></span><br><span class="line"><span class="meta">@manager.option(<span class="params"><span class="string">&#x27;-u&#x27;</span>, <span class="string">&#x27;--url&#x27;</span>, dest=<span class="string">&#x27;url&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cmd</span>(<span class="params">name, url</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    自定义命令（-n也可以写成--name）</span></span><br><span class="line"><span class="string">    执行： python manage.py  cmd -n lqz -u http://www.oldboyedu.com</span></span><br><span class="line"><span class="string">    执行： python manage.py  cmd --name lqz --url http://www.oldboyedu.com</span></span><br><span class="line"><span class="string">    :param name:</span></span><br><span class="line"><span class="string">    :param url:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(name, url)</span><br><span class="line"><span class="comment">#有什么用？</span></span><br><span class="line"><span class="comment">#把excel的数据导入数据库，定制个命令，去执行</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;首页&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    manager.run()</span><br><span class="line"><span class="comment">#以后在执行，直接：python3 manage.py runserver</span></span><br><span class="line"><span class="comment">#python3 manage.py runserver --help</span></span><br></pre></td></tr></table></figure><h2 id="wtforms"><a href="#wtforms" class="headerlink" title="wtforms"></a>wtforms</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip3 install wtforms </span><br><span class="line">要使用邮箱认证，还需要装一个模块：pip3 install email-validator</span><br><span class="line">等同于django中的forms，做数据验证，模板的渲染</span><br></pre></td></tr></table></figure><ul><li>基本使用</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, request, redirect</span><br><span class="line"><span class="keyword">from</span> wtforms <span class="keyword">import</span> Form</span><br><span class="line"><span class="keyword">from</span> wtforms.fields <span class="keyword">import</span> simple</span><br><span class="line"><span class="keyword">from</span> wtforms <span class="keyword">import</span> validators</span><br><span class="line"><span class="keyword">from</span> wtforms <span class="keyword">import</span> widgets</span><br><span class="line"></span><br><span class="line">app = Flask(__name__, template_folder=<span class="string">&#x27;templates&#x27;</span>)</span><br><span class="line"></span><br><span class="line">app.debug = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LoginForm</span>(<span class="params">Form</span>):</span></span><br><span class="line">    <span class="comment"># 字段（内部包含正则表达式）</span></span><br><span class="line">    name = simple.StringField(</span><br><span class="line">        label=<span class="string">&#x27;用户名&#x27;</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            validators.DataRequired(message=<span class="string">&#x27;用户名不能为空.&#x27;</span>),</span><br><span class="line">            validators.Length(<span class="built_in">min</span>=<span class="number">6</span>, <span class="built_in">max</span>=<span class="number">18</span>, message=<span class="string">&#x27;用户名长度必须大于6且小于18&#x27;</span>)</span><br><span class="line">        ],</span><br><span class="line">        widget=widgets.TextInput(), <span class="comment"># 页面上显示的插件</span></span><br><span class="line">        render_kw=&#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;form-control&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">    )</span><br><span class="line">    <span class="comment"># 字段（内部包含正则表达式）</span></span><br><span class="line">    pwd = simple.PasswordField(</span><br><span class="line">        label=<span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            validators.DataRequired(message=<span class="string">&#x27;密码不能为空.&#x27;</span>),</span><br><span class="line">            validators.Length(<span class="built_in">min</span>=<span class="number">8</span>, message=<span class="string">&#x27;用户名长度必须大于%(min)d&#x27;</span>),</span><br><span class="line">            validators.Regexp(regex=<span class="string">&quot;^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[$@$!%*?&amp;])[A-Za-z\d$@$!%*?&amp;]&#123;8,&#125;&quot;</span>,</span><br><span class="line">                              message=<span class="string">&#x27;密码至少8个字符，至少1个大写字母，1个小写字母，1个数字和1个特殊字符&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        ],</span><br><span class="line">        widget=widgets.PasswordInput(),</span><br><span class="line">        render_kw=&#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;form-control&#x27;</span>&#125;</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/login&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span>():</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;GET&#x27;</span>:</span><br><span class="line">        form = LoginForm()</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">&#x27;login.html&#x27;</span>, form=form)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        form = LoginForm(formdata=request.form)</span><br><span class="line">        <span class="keyword">if</span> form.validate():</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;用户提交数据通过格式验证，提交的值为：&#x27;</span>, form.data)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(form.errors)</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">&#x27;login.html&#x27;</span>, form=form)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(port=<span class="number">5555</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;form.name.label&#125;&#125; &#123;&#123;form.name&#125;&#125; &#123;&#123;form.name.errors[0] &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;form.pwd.label&#125;&#125; &#123;&#123;form.pwd&#125;&#125; &#123;&#123;form.pwd.errors[0] &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>更多使用</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, request, redirect</span><br><span class="line"><span class="keyword">from</span> wtforms <span class="keyword">import</span> Form</span><br><span class="line"><span class="keyword">from</span> wtforms.fields <span class="keyword">import</span> core</span><br><span class="line"><span class="keyword">from</span> wtforms.fields <span class="keyword">import</span> html5</span><br><span class="line"><span class="keyword">from</span> wtforms.fields <span class="keyword">import</span> simple</span><br><span class="line"><span class="keyword">from</span> wtforms <span class="keyword">import</span> validators</span><br><span class="line"><span class="keyword">from</span> wtforms <span class="keyword">import</span> widgets</span><br><span class="line"></span><br><span class="line">app = Flask(__name__, template_folder=<span class="string">&#x27;templates&#x27;</span>)</span><br><span class="line">app.debug = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RegisterForm</span>(<span class="params">Form</span>):</span></span><br><span class="line">    name = simple.StringField(</span><br><span class="line">        label=<span class="string">&#x27;用户名&#x27;</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            validators.DataRequired()</span><br><span class="line">        ],</span><br><span class="line">        widget=widgets.TextInput(),</span><br><span class="line">        render_kw=&#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;form-control&#x27;</span>&#125;,</span><br><span class="line">        default=<span class="string">&#x27;xxx&#x27;</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    pwd = simple.PasswordField(</span><br><span class="line">        label=<span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            validators.DataRequired(message=<span class="string">&#x27;密码不能为空.&#x27;</span>)</span><br><span class="line">        ],</span><br><span class="line">        widget=widgets.PasswordInput(),</span><br><span class="line">        render_kw=&#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;form-control&#x27;</span>&#125;</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    pwd_confirm = simple.PasswordField(</span><br><span class="line">        label=<span class="string">&#x27;重复密码&#x27;</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            validators.DataRequired(message=<span class="string">&#x27;重复密码不能为空.&#x27;</span>),</span><br><span class="line">            validators.EqualTo(<span class="string">&#x27;pwd&#x27;</span>, message=<span class="string">&quot;两次密码输入不一致&quot;</span>)</span><br><span class="line">        ],</span><br><span class="line">        widget=widgets.PasswordInput(),</span><br><span class="line">        render_kw=&#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;form-control&#x27;</span>&#125;</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    email = html5.EmailField(</span><br><span class="line">        label=<span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            validators.DataRequired(message=<span class="string">&#x27;邮箱不能为空.&#x27;</span>),</span><br><span class="line">            validators.Email(message=<span class="string">&#x27;邮箱格式错误&#x27;</span>),</span><br><span class="line">        ],</span><br><span class="line">        widget=widgets.TextInput(input_type=<span class="string">&#x27;email&#x27;</span>),</span><br><span class="line">        render_kw=&#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;form-control&#x27;</span>&#125;</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    gender = core.RadioField(</span><br><span class="line">        label=<span class="string">&#x27;性别&#x27;</span>,</span><br><span class="line">        choices=(</span><br><span class="line">            (<span class="number">1</span>, <span class="string">&#x27;男&#x27;</span>),</span><br><span class="line">            (<span class="number">2</span>, <span class="string">&#x27;女&#x27;</span>),</span><br><span class="line">        ),</span><br><span class="line">        coerce=<span class="built_in">int</span> <span class="comment"># “1” “2”</span></span><br><span class="line">     )</span><br><span class="line">    city = core.SelectField(</span><br><span class="line">        label=<span class="string">&#x27;城市&#x27;</span>,</span><br><span class="line">        choices=(</span><br><span class="line">            (<span class="string">&#x27;bj&#x27;</span>, <span class="string">&#x27;北京&#x27;</span>),</span><br><span class="line">            (<span class="string">&#x27;sh&#x27;</span>, <span class="string">&#x27;上海&#x27;</span>),</span><br><span class="line">        )</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    hobby = core.SelectMultipleField(</span><br><span class="line">        label=<span class="string">&#x27;爱好&#x27;</span>,</span><br><span class="line">        choices=(</span><br><span class="line">            (<span class="number">1</span>, <span class="string">&#x27;篮球&#x27;</span>),</span><br><span class="line">            (<span class="number">2</span>, <span class="string">&#x27;足球&#x27;</span>),</span><br><span class="line">        ),</span><br><span class="line">        coerce=<span class="built_in">int</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    favor = core.SelectMultipleField(</span><br><span class="line">        label=<span class="string">&#x27;喜好&#x27;</span>,</span><br><span class="line">        choices=(</span><br><span class="line">            (<span class="number">1</span>, <span class="string">&#x27;篮球&#x27;</span>),</span><br><span class="line">            (<span class="number">2</span>, <span class="string">&#x27;足球&#x27;</span>),</span><br><span class="line">        ),</span><br><span class="line">        widget=widgets.ListWidget(prefix_label=<span class="literal">False</span>),</span><br><span class="line">        option_widget=widgets.CheckboxInput(),</span><br><span class="line">        coerce=<span class="built_in">int</span>,</span><br><span class="line">        default=[<span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, *args, **kwargs</span>):</span></span><br><span class="line">        <span class="built_in">super</span>(RegisterForm, self).__init__(*args, **kwargs)</span><br><span class="line">        self.favor.choices = ((<span class="number">1</span>, <span class="string">&#x27;篮球&#x27;</span>), (<span class="number">2</span>, <span class="string">&#x27;足球&#x27;</span>), (<span class="number">3</span>, <span class="string">&#x27;羽毛球&#x27;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">validate_pwd_confirm</span>(<span class="params">self, field</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        自定义pwd_confirm字段规则，例：与pwd字段是否一致</span></span><br><span class="line"><span class="string">        :param field:</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># 最开始初始化时，self.data中已经有所有的值</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> field.data != self.data[<span class="string">&#x27;pwd&#x27;</span>]:</span><br><span class="line">            <span class="comment"># raise validators.ValidationError(&quot;密码不一致&quot;) # 继续后续验证</span></span><br><span class="line">            <span class="keyword">raise</span> validators.StopValidation(<span class="string">&quot;密码不一致&quot;</span>)  <span class="comment"># 不再继续后续验证</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/register&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">register</span>():</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;GET&#x27;</span>:</span><br><span class="line">        form = RegisterForm(data=&#123;<span class="string">&#x27;gender&#x27;</span>: <span class="number">2</span>,<span class="string">&#x27;hobby&#x27;</span>:[<span class="number">1</span>,<span class="number">2</span>]&#125;) <span class="comment"># initial</span></span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">&#x27;register.html&#x27;</span>, form=form)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        form = RegisterForm(formdata=request.form)</span><br><span class="line">        <span class="keyword">if</span> form.validate():</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;用户提交数据通过格式验证，提交的值为：&#x27;</span>, form.data)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(form.errors)</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">&#x27;register.html&#x27;</span>, form=form)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(port=<span class="number">3322</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>用户注册<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">novalidate</span> <span class="attr">style</span>=<span class="string">&quot;padding:0  50px&quot;</span>&gt;</span></span><br><span class="line">    &#123;% for field in form %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;field.label&#125;&#125;: &#123;&#123;field&#125;&#125; &#123;&#123;field.errors[0] &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="信号"><a href="#信号" class="headerlink" title="信号"></a>信号</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span> pip3 install blinker</span><br><span class="line"><span class="number">1</span> 让开发者可是在请求过程中定制一些用户行为</span><br><span class="line"><span class="number">2</span> 内置信号</span><br><span class="line">内置信号：</span><br><span class="line">request_started = _signals.signal(<span class="string">&#x27;request-started&#x27;</span>)                <span class="comment"># 请求到来前执行</span></span><br><span class="line">request_finished = _signals.signal(<span class="string">&#x27;request-finished&#x27;</span>)              <span class="comment"># 请求结束后执行</span></span><br><span class="line"> </span><br><span class="line">before_render_template = _signals.signal(<span class="string">&#x27;before-render-template&#x27;</span>)  <span class="comment"># 模板渲染前执行</span></span><br><span class="line">template_rendered = _signals.signal(<span class="string">&#x27;template-rendered&#x27;</span>)            <span class="comment"># 模板渲染后执行</span></span><br><span class="line"> </span><br><span class="line">got_request_exception = _signals.signal(<span class="string">&#x27;got-request-exception&#x27;</span>)    <span class="comment"># 请求执行出现异常时执行</span></span><br><span class="line"> </span><br><span class="line">request_tearing_down = _signals.signal(<span class="string">&#x27;request-tearing-down&#x27;</span>)      <span class="comment"># 请求执行完毕后自动执行（无论成功与否）</span></span><br><span class="line">appcontext_tearing_down = _signals.signal(<span class="string">&#x27;appcontext-tearing-down&#x27;</span>)<span class="comment"># 应用上下文执行完毕后自动执行（无论成功与否）</span></span><br><span class="line"> </span><br><span class="line">appcontext_pushed = _signals.signal(<span class="string">&#x27;appcontext-pushed&#x27;</span>)            <span class="comment"># 应用上下文push时执行</span></span><br><span class="line">appcontext_popped = _signals.signal(<span class="string">&#x27;appcontext-popped&#x27;</span>)            <span class="comment"># 应用上下文pop时执行</span></span><br><span class="line">message_flashed = _signals.signal(<span class="string">&#x27;message-flashed&#x27;</span>)                <span class="comment"># 调用flask在其中添加数据时，自动触发</span></span><br><span class="line"></span><br><span class="line"><span class="number">3</span> 信号可以干什么</span><br><span class="line"><span class="number">1</span> 记录日志（某个表新增了数据，记录日志，某个表删除了数据。。。）</span><br><span class="line">    <span class="number">2</span> 更新缓存（假设给article表数据加了缓存，一旦该表插入数据，一旦触发article表新增数据的信号，删除缓存，重新生成缓存（同步的话速度稍微慢一些，结合celery，异步生成缓存））</span><br><span class="line">    </span><br><span class="line"><span class="number">4</span> 内置信号的使用</span><br><span class="line">-第一步：定义要给函数</span><br><span class="line">    -第二步：跟信号绑定</span><br><span class="line">    信号.connect(函数内存地址)</span><br><span class="line">    -第三步：触发信号（内置信号自动触发）信号.send(self)</span><br><span class="line">    </span><br><span class="line"><span class="number">5</span> 自定义信号</span><br><span class="line">-第<span class="number">0</span>步：定义一个信号</span><br><span class="line">    -第一步：定义要给函数</span><br><span class="line">    -第二步：跟信号绑定</span><br><span class="line">    信号.connect(函数内存地址)</span><br><span class="line">    -第三步：触发信号（内置信号自动触发）信号.send(self)</span><br></pre></td></tr></table></figure><h3 id="内置信号"><a href="#内置信号" class="headerlink" title="内置信号"></a>内置信号</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, signals,render_template</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 内置信号使用</span></span><br><span class="line"><span class="comment"># 内置信号request_started = _signals.signal(&#x27;request-started&#x27;)                # 请求到来前执行</span></span><br><span class="line"><span class="comment"># 给它绑定一个函数执行</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 第一步：写好函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">before_request_signal</span>(<span class="params">*args,**kwargs</span>):</span></span><br><span class="line">    <span class="comment"># print(&#x27;请求来了，触发了这个信号&#x27;)</span></span><br><span class="line">    <span class="built_in">print</span>(args)</span><br><span class="line">    <span class="built_in">print</span>(kwargs)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;模板渲染了，触发了这个信号&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 第二步：跟信号绑定</span></span><br><span class="line">signals.request_started.connect(before_request_signal)</span><br><span class="line"><span class="comment"># signals.request_finished.connect(before_request_signal)</span></span><br><span class="line"><span class="comment"># 模板渲染后</span></span><br><span class="line"><span class="comment"># signals.template_rendered.connect(before_request_signal)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 第三步：触发信号（不需要手动触发，请求走到这，就会触发）</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span>():</span></span><br><span class="line">    <span class="comment"># return &#x27;hello world&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;index.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="自定义信号"><a href="#自定义信号" class="headerlink" title="自定义信号"></a>自定义信号</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 自定义信号</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, signals, render_template</span><br><span class="line"><span class="keyword">from</span> flask.signals <span class="keyword">import</span> _signals</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第0步：定义信号（定义了一个叫lqz的信号）</span></span><br><span class="line">lqz = _signals.signal(<span class="string">&#x27;lqz&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 第一步：写好函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">before_request_signal</span>(<span class="params">*args, **kwargs</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(args)</span><br><span class="line">    <span class="built_in">print</span>(kwargs)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;触发了自定义的lqz信号&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 第二步：跟自定义的信号绑定</span></span><br><span class="line">lqz.connect(before_request_signal)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 第三步：触发信号（自定义信号，要自己触发）</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span>():</span></span><br><span class="line">    res = render_template(<span class="string">&#x27;index.html&#x27;</span>)</span><br><span class="line">    <span class="comment"># 在模板渲染之后，触发自定义的lqz信号</span></span><br><span class="line">    lqz.send(<span class="string">&#x27;sss&#x27;</span>,name=<span class="string">&#x27;lqz&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure><h2 id="多app应用（了解）"><a href="#多app应用（了解）" class="headerlink" title="多app应用（了解）"></a>多app应用（了解）</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 多app应用，在一个flask项目中，可以有多个app对象</span></span><br><span class="line"><span class="comment"># werkzeug：0.16.1 及之前版本</span></span><br><span class="line"><span class="keyword">from</span> werkzeug.wsgi <span class="keyword">import</span> DispatcherMiddleware</span><br><span class="line"><span class="keyword">from</span> werkzeug.serving <span class="keyword">import</span> run_simple</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, current_app</span><br><span class="line"></span><br><span class="line">app1 = Flask(<span class="string">&#x27;app01&#x27;</span>)</span><br><span class="line">app2 = Flask(<span class="string">&#x27;app02&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app1.route(<span class="params"><span class="string">&#x27;/index&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;app01&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app2.route(<span class="params"><span class="string">&#x27;/index2&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index2</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;app2&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dm = DispatcherMiddleware(app1, &#123;</span><br><span class="line">    <span class="string">&#x27;/pro&#x27;</span>: app2,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    run_simple(<span class="string">&#x27;localhost&#x27;</span>, <span class="number">5000</span>, dm)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 当请求来了：dm()---&gt;DispatcherMiddleware的__call__</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="SQLAlchemy"><a href="#SQLAlchemy" class="headerlink" title="SQLAlchemy"></a>SQLAlchemy</h2><h3 id="简单使用"><a href="#简单使用" class="headerlink" title="简单使用"></a>简单使用</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">SQLAlchemy是一个基于Python实现的ORM框架。该框架建立在 DB API之上，使用关系对象映射进行数据库操作，简言之便是：将类和对象转换成SQL，然后使用数据API执行SQL并获取执行结果</span><br><span class="line"></span><br><span class="line">组成部分</span><br><span class="line">    Engine，框架的引擎</span><br><span class="line">    Connection Pooling ，数据库连接池</span><br><span class="line">    Dialect，选择连接数据库的DB API种类</span><br><span class="line">    Schema/Types，架构和类型</span><br><span class="line">    SQL Exprression Language，SQL表达式语言</span><br></pre></td></tr></table></figure><p>models.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通过类，创建表</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> sessionmaker, relationship</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> create_engine</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.ext.declarative <span class="keyword">import</span> declarative_base</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Column, Integer, String, Text, ForeignKey, DateTime, UniqueConstraint, Index</span><br><span class="line"></span><br><span class="line">Base = declarative_base()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Users</span>(<span class="params">Base</span>):</span></span><br><span class="line">    __tablename__ = <span class="string">&#x27;users&#x27;</span>  <span class="comment"># 数据库表名称</span></span><br><span class="line">    <span class="built_in">id</span> = Column(Integer, primary_key=<span class="literal">True</span>)  <span class="comment"># id 主键</span></span><br><span class="line">    name = Column(String(<span class="number">32</span>), index=<span class="literal">True</span>, nullable=<span class="literal">False</span>)  <span class="comment"># name列，索引，不可为空</span></span><br><span class="line">    <span class="comment"># email = Column(String(32), unique=True)</span></span><br><span class="line">    <span class="comment"># #datetime.datetime.now不能加括号，加了括号，以后永远是当前时间</span></span><br><span class="line">    <span class="comment"># ctime = Column(DateTime, default=datetime.datetime.now)</span></span><br><span class="line">    <span class="comment"># extra = Column(Text, nullable=True)</span></span><br><span class="line"></span><br><span class="line">    __table_args__ = (</span><br><span class="line">        <span class="comment"># UniqueConstraint(&#x27;id&#x27;, &#x27;name&#x27;, name=&#x27;uix_id_name&#x27;), #联合唯一</span></span><br><span class="line">        <span class="comment"># Index(&#x27;ix_id_name&#x27;, &#x27;name&#x27;, &#x27;email&#x27;), #索引</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 一对多，一个爱好，可以有多个人喜欢，关联字段写在多的一方，写在Person中</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Hobby</span>(<span class="params">Base</span>):</span></span><br><span class="line">    __tablename__ = <span class="string">&#x27;hobby&#x27;</span></span><br><span class="line">    <span class="built_in">id</span> = Column(Integer, primary_key=<span class="literal">True</span>)</span><br><span class="line">    caption = Column(String(<span class="number">50</span>), default=<span class="string">&#x27;篮球&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>(<span class="params">Base</span>):</span></span><br><span class="line">    __tablename__ = <span class="string">&#x27;person&#x27;</span></span><br><span class="line">    nid = Column(Integer, primary_key=<span class="literal">True</span>)</span><br><span class="line">    name = Column(String(<span class="number">32</span>), index=<span class="literal">True</span>, nullable=<span class="literal">True</span>)</span><br><span class="line">    <span class="comment"># hobby指的是tablename而不是类名，uselist=False</span></span><br><span class="line">    <span class="comment"># 外键关联</span></span><br><span class="line">    <span class="comment"># hobby_id跟hobby表的id字段关联</span></span><br><span class="line">    hobby_id = Column(Integer, ForeignKey(<span class="string">&quot;hobby.id&quot;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 跟数据库无关，不会新增字段，只用于快速链表操作</span></span><br><span class="line">    <span class="comment"># 类名，backref用于反向查询</span></span><br><span class="line">    hobby = relationship(<span class="string">&#x27;Hobby&#x27;</span>, backref=<span class="string">&#x27;pers&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 把表同步到数据库</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init_db</span>():</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    根据类创建数据库表</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    engine = create_engine(</span><br><span class="line">        <span class="string">&quot;mysql+pymysql://root:1018@127.0.0.1:3306/aaa?charset=utf8&quot;</span>,</span><br><span class="line">        max_overflow=<span class="number">0</span>,  <span class="comment"># 超过连接池大小外最多创建的连接</span></span><br><span class="line">        pool_size=<span class="number">5</span>,  <span class="comment"># 连接池大小</span></span><br><span class="line">        pool_timeout=<span class="number">30</span>,  <span class="comment"># 池中没有线程最多等待的时间，否则报错</span></span><br><span class="line">        pool_recycle=-<span class="number">1</span>  <span class="comment"># 多久之后对线程池中的线程进行一次连接的回收（重置）</span></span><br><span class="line">    )</span><br><span class="line">    <span class="comment"># 把所有别Base管理的表都创建出来</span></span><br><span class="line">    Base.metadata.create_all(engine)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">drop_db</span>():</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    根据类创建数据库表</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    engine = create_engine(</span><br><span class="line">        <span class="string">&quot;mysql+pymysql://root:1018@127.0.0.1:3306/aaa?charset=utf8&quot;</span>,</span><br><span class="line">        max_overflow=<span class="number">0</span>,  <span class="comment"># 超过连接池大小外最多创建的连接</span></span><br><span class="line">        pool_size=<span class="number">5</span>,  <span class="comment"># 连接池大小</span></span><br><span class="line">        pool_timeout=<span class="number">30</span>,  <span class="comment"># 池中没有线程最多等待的时间，否则报错</span></span><br><span class="line">        pool_recycle=-<span class="number">1</span>  <span class="comment"># 多久之后对线程池中的线程进行一次连接的回收（重置）</span></span><br><span class="line">    )</span><br><span class="line">    <span class="comment"># 把所有别Base管理的表都删除</span></span><br><span class="line">    Base.metadata.drop_all(engine)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    init_db()</span><br><span class="line">    <span class="comment"># drop_db()</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>单表新增</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> sessionmaker</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> create_engine</span><br><span class="line"><span class="keyword">from</span> sqlalchemy_test.models <span class="keyword">import</span> Users</span><br><span class="line"></span><br><span class="line"><span class="comment"># &quot;mysql+pymysql://root@127.0.0.1:3306/aaa&quot;</span></span><br><span class="line">engine = create_engine(<span class="string">&quot;mysql+pymysql://root:1018@127.0.0.1:3306/aaa&quot;</span>, max_overflow=<span class="number">0</span>, pool_size=<span class="number">5</span>)</span><br><span class="line">Connection = sessionmaker(bind=engine)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每次执行数据库操作时，都需要创建一个Connection</span></span><br><span class="line">con = Connection()</span><br><span class="line"></span><br><span class="line"><span class="comment"># ############# 执行ORM操作 #############</span></span><br><span class="line">obj1 = Users(name=<span class="string">&quot;lqz&quot;</span>)</span><br><span class="line">con.add(obj1)</span><br><span class="line"><span class="comment"># 提交事务</span></span><br><span class="line">con.commit()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭session，其实是将连接放回连接池</span></span><br><span class="line">con.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> orm框，可以独立出来用</span><br><span class="line"><span class="number">2</span> orm执行原生sql</span><br><span class="line">-生成engine（连接池）</span><br><span class="line">    engine = create_engine()</span><br><span class="line">     -获取链接</span><br><span class="line">    conn=engine.raw_connection()</span><br><span class="line">     -后续就一样了</span><br><span class="line">    </span><br><span class="line"><span class="number">3</span> 创建表，删除表和生成字段（不能创建数据库）</span><br><span class="line">-写一个类</span><br><span class="line">        Base = declarative_base()</span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">Users</span>(<span class="params">Base</span>):</span></span><br><span class="line">            __tablename__ = <span class="string">&#x27;users&#x27;</span>  <span class="comment"># 数据库表名称</span></span><br><span class="line">            <span class="built_in">id</span> = Column(Integer, primary_key=<span class="literal">True</span>)  <span class="comment"># id 主键</span></span><br><span class="line">            name = Column(String(<span class="number">32</span>), index=<span class="literal">True</span>, nullable=<span class="literal">False</span>)  <span class="comment"># name列，索引，不可为空</span></span><br><span class="line">    -把被Base管理的所有表创建和删除</span><br><span class="line">    engine = create_engine()</span><br><span class="line">    Base.metadata.create_all(engine)</span><br><span class="line">         Base.metadata.drop_all(engine)</span><br><span class="line"><span class="number">4</span> 单表新增</span><br><span class="line">engine = create_engine()</span><br><span class="line">Connection = sessionmaker(bind=engine)</span><br><span class="line">    <span class="comment"># 每次执行数据库操作时，都需要创建一个Connection</span></span><br><span class="line">    conn = Connection()</span><br><span class="line">    user=User(name=<span class="string">&#x27;lqz&#x27;</span>)</span><br><span class="line">    conn.add(user)</span><br><span class="line">    conn.add_all([对象<span class="number">1</span>，对象<span class="number">2</span>])</span><br><span class="line">    <span class="comment"># 提交</span></span><br><span class="line">    conn.commit()</span><br><span class="line">    con.close()</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="number">5</span> 一对多关系建立</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Hobby</span>(<span class="params">Base</span>):</span></span><br><span class="line">        __tablename__ = <span class="string">&#x27;hobby&#x27;</span></span><br><span class="line">        <span class="built_in">id</span> = Column(Integer, primary_key=<span class="literal">True</span>)</span><br><span class="line">        caption = Column(String(<span class="number">50</span>), default=<span class="string">&#x27;篮球&#x27;</span>)</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Person</span>(<span class="params">Base</span>):</span></span><br><span class="line">        __tablename__ = <span class="string">&#x27;person&#x27;</span></span><br><span class="line">        nid = Column(Integer, primary_key=<span class="literal">True</span>)</span><br><span class="line">        name = Column(String(<span class="number">32</span>), index=<span class="literal">True</span>, nullable=<span class="literal">True</span>)</span><br><span class="line">        <span class="comment"># hobby指的是tablename而不是类名，uselist=False</span></span><br><span class="line">        hobby_id = Column(Integer, ForeignKey(<span class="string">&quot;hobby.id&quot;</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 跟数据库无关，不会新增字段，只用于快速链表操作</span></span><br><span class="line">        <span class="comment"># 类名，backref用于反向查询</span></span><br><span class="line">        hobby=relationship(<span class="string">&#x27;Hobby&#x27;</span>,backref=<span class="string">&#x27;pers&#x27;</span>)</span><br><span class="line">        </span><br><span class="line"><span class="number">5</span> 一对多新增</span><br><span class="line">engine = create_engine()</span><br><span class="line">        Connection = sessionmaker(bind=engine)</span><br><span class="line">        <span class="comment"># 每次执行数据库操作时，都需要创建一个Connection</span></span><br><span class="line">        conn = Connection()</span><br><span class="line">        hobby=Hobby(caption=<span class="string">&#x27;美女&#x27;</span>)</span><br><span class="line">        person=Person(name=<span class="string">&#x27;lqz&#x27;</span>,hobby_id=<span class="number">1</span>)</span><br><span class="line">        conn.add_all([hobby，person])</span><br><span class="line">        <span class="comment"># 第二种方式</span></span><br><span class="line">        hobby=Hobby(caption=<span class="string">&#x27;美女&#x27;</span>)</span><br><span class="line">        person=Person(name=<span class="string">&#x27;lqz&#x27;</span>,hobby=hobby) <span class="comment"># 通过对象来匹配hobby_id</span></span><br><span class="line">        conn.add_all([hobby，person])</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 提交</span></span><br><span class="line">        conn.commit()</span><br><span class="line">        con.close()</span><br></pre></td></tr></table></figure><h3 id="scoped-session-线程安全"><a href="#scoped-session-线程安全" class="headerlink" title="scoped_session 线程安全"></a>scoped_session 线程安全</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> sessionmaker</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> create_engine</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> scoped_session</span><br><span class="line"><span class="keyword">from</span> sqlalchemy_test.models <span class="keyword">import</span> Users</span><br><span class="line"></span><br><span class="line">engine = create_engine(<span class="string">&quot;mysql+pymysql://root:1018@127.0.0.1:3306/aaa&quot;</span>, max_overflow=<span class="number">0</span>, pool_size=<span class="number">5</span>)</span><br><span class="line">Session = sessionmaker(bind=engine)</span><br><span class="line"><span class="comment"># scoped_session类并没有继承Session,但是却又它的所有方法</span></span><br><span class="line">session = scoped_session(Session)</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string"># 线程安全，基于本地线程实现每个线程用同一个session</span></span><br><span class="line"><span class="string"># 特殊的：scoped_session中有原来方法的Session中的一下方法：</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">public_methods = (</span></span><br><span class="line"><span class="string">    &#x27;__contains__&#x27;, &#x27;__iter__&#x27;, &#x27;add&#x27;, &#x27;add_all&#x27;, &#x27;begin&#x27;, &#x27;begin_nested&#x27;,</span></span><br><span class="line"><span class="string">    &#x27;close&#x27;, &#x27;commit&#x27;, &#x27;connection&#x27;, &#x27;delete&#x27;, &#x27;execute&#x27;, &#x27;expire&#x27;,</span></span><br><span class="line"><span class="string">    &#x27;expire_all&#x27;, &#x27;expunge&#x27;, &#x27;expunge_all&#x27;, &#x27;flush&#x27;, &#x27;get_bind&#x27;,</span></span><br><span class="line"><span class="string">    &#x27;is_modified&#x27;, &#x27;bulk_save_objects&#x27;, &#x27;bulk_insert_mappings&#x27;,</span></span><br><span class="line"><span class="string">    &#x27;bulk_update_mappings&#x27;,</span></span><br><span class="line"><span class="string">    &#x27;merge&#x27;, &#x27;query&#x27;, &#x27;refresh&#x27;, &#x27;rollback&#x27;,</span></span><br><span class="line"><span class="string">    &#x27;scalar&#x27;</span></span><br><span class="line"><span class="string">)</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ############# 执行ORM操作 #############</span></span><br><span class="line">obj1 = Users(name=<span class="string">&quot;alex1&quot;</span>)</span><br><span class="line">session.add(obj1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交事务</span></span><br><span class="line">session.commit()</span><br><span class="line"><span class="comment"># 关闭session</span></span><br><span class="line">session.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="基本增删查改"><a href="#基本增删查改" class="headerlink" title="基本增删查改"></a>基本增删查改</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br></pre></td><td class="code"><pre><span class="line">https://www.cnblogs.com/xiaoyuanqujing/protected/articles/<span class="number">11715497.</span>html</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 基本增删查改</span></span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> sessionmaker</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> create_engine</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> scoped_session</span><br><span class="line"><span class="keyword">from</span> models <span class="keyword">import</span> Users,Person,Hobby</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.sql <span class="keyword">import</span> text</span><br><span class="line"></span><br><span class="line">engine = create_engine(<span class="string">&quot;mysql+pymysql://root:123@127.0.0.1:3306/aaa&quot;</span>, max_overflow=<span class="number">0</span>, pool_size=<span class="number">5</span>)</span><br><span class="line"><span class="comment"># 从连接池中拿一个链接</span></span><br><span class="line">conn = sessionmaker(bind=engine)</span><br><span class="line">session = scoped_session(conn)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 增 add ，add_all</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询Users表中id为1的第一条记录</span></span><br><span class="line"><span class="comment"># filter_by写等式，filter写比较</span></span><br><span class="line"><span class="comment"># res=session.query(Users).filter_by(id=1).first()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># res=session.query(Users).filter(Users.id&lt;2)</span></span><br><span class="line"><span class="comment"># for user in res:</span></span><br><span class="line"><span class="comment">#     print(user.name)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 影响的条数</span></span><br><span class="line"><span class="comment"># res=session.query(Users).filter_by(id=1).delete()</span></span><br><span class="line"><span class="comment"># res=session.query(Users).filter(Users.id&gt;1).delete()</span></span><br><span class="line"><span class="comment"># print(res)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">### 修改</span></span><br><span class="line"><span class="comment"># res是影响的行数</span></span><br><span class="line"><span class="comment"># res=session.query(Users).filter(Users.id &gt; 0).update(&#123;&quot;name&quot; : &quot;lqz&quot;&#125;)</span></span><br><span class="line"><span class="comment">#类似于django的F查询</span></span><br><span class="line"><span class="comment"># synchronize_session=False 表示加字符串</span></span><br><span class="line"><span class="comment"># res=session.query(Users).filter(Users.id &gt; 0).update(&#123;&#x27;name&#x27;: Users.name + &quot;099&quot;&#125;, synchronize_session=False)</span></span><br><span class="line"><span class="comment"># res=session.query(Users).filter(Users.id &gt; 0).update(&#123;&quot;age&quot;: Users.age + 1&#125;, synchronize_session=&quot;evaluate&quot;)</span></span><br><span class="line"><span class="comment"># res=session.query(Users).filter(Users.id &gt; 0).update(&#123;Users.age: Users.age + 1&#125;, synchronize_session=&quot;evaluate&quot;)</span></span><br><span class="line"><span class="comment"># print(res)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#查询</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># res=session.query(Users).all() # 查所有</span></span><br><span class="line"><span class="comment"># res=session.query(Users).all()[0] #取第一个</span></span><br><span class="line"><span class="comment"># res=session.query(Users).first() ##取第一个</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># select name as xx,age form User;</span></span><br><span class="line"><span class="comment"># r2 = session.query(Users.name.label(&#x27;xx&#x27;), Users.age).all()</span></span><br><span class="line"><span class="comment"># # r2 = session.query(Users.name.label(&#x27;xx&#x27;), Users.age)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># # print(r2)</span></span><br><span class="line"><span class="comment"># for user in r2:</span></span><br><span class="line"><span class="comment">#     print(user.xx)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#filter传的是表达式，filter_by传的是参数</span></span><br><span class="line"><span class="comment"># r3 = session.query(Users).filter(Users.name == &quot;lqz099&quot;).all()</span></span><br><span class="line"><span class="comment"># r3 = session.query(Users).filter(Users.id == 1).all()</span></span><br><span class="line"><span class="comment"># r4 = session.query(Users).filter_by(name=&#x27;lqz&#x27;).all()</span></span><br><span class="line"><span class="comment"># r5 = session.query(Users).filter_by(name=&#x27;lqz&#x27;).first()</span></span><br><span class="line"><span class="comment"># print(r3)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#:value 和:name 相当于占位符，用params传参数</span></span><br><span class="line"><span class="comment"># select * from user where id&lt;6 and name=lqz099 order by id;</span></span><br><span class="line"><span class="comment"># r6 = session.query(Users).filter(text(&quot;id&lt;:value and name=:name&quot;)).params(value=6, name=&#x27;lqz099&#x27;).order_by(Users.id).all()</span></span><br><span class="line"><span class="comment">#自定义查询sql</span></span><br><span class="line"><span class="comment"># r7 = session.query(Users).from_statement(text(&quot;SELECT * FROM users where name=:name&quot;)).params(name=&#x27;lqz099&#x27;).all()</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># for u in r7:</span></span><br><span class="line"><span class="comment">#     print(u.id)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">### 其它查询操作</span></span><br><span class="line"><span class="comment">#　条件</span></span><br><span class="line"><span class="comment"># ret = session.query(Users).filter_by(name=&#x27;lqz&#x27;).all()</span></span><br><span class="line"><span class="comment">#表达式，and条件连接</span></span><br><span class="line"><span class="comment"># ret = session.query(Users).filter(Users.id &gt; 1, Users.name == &#x27;lqz099&#x27;).all()</span></span><br><span class="line"><span class="comment"># ret = session.query(Users).filter(Users.id.between(5, 6), Users.name == &#x27;lqz099&#x27;).all()</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#注意下划线</span></span><br><span class="line"><span class="comment"># ret = session.query(Users).filter(Users.id.in_([1,3,4])).all()</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#~非，除。。外</span></span><br><span class="line"><span class="comment"># ret = session.query(Users).filter(~Users.id.in_([1,3,4])).all()</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#二次筛选</span></span><br><span class="line"><span class="comment"># ret = session.query(Users).filter(Users.id.in_(session.query(Users.id).filter_by(name=&#x27;lqz099&#x27;)))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> and_, or_</span><br><span class="line"><span class="comment">#or_包裹的都是or条件，and_包裹的都是and条件</span></span><br><span class="line"><span class="comment"># ret = session.query(Users).filter(and_(Users.id &gt; 3, Users.name == &#x27;eric&#x27;)).all()</span></span><br><span class="line"><span class="comment"># ret = session.query(Users).filter(Users.id &gt; 3, Users.name == &#x27;eric&#x27;).all()</span></span><br><span class="line"><span class="comment"># ret = session.query(Users).filter(or_(Users.id &lt; 5, Users.name == &#x27;lqz099&#x27;)).all()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ret = session.query(Users).filter(</span></span><br><span class="line"><span class="comment">#     or_(</span></span><br><span class="line"><span class="comment">#         Users.id &lt; 2,</span></span><br><span class="line"><span class="comment">#         and_(Users.name == &#x27;eric&#x27;, Users.id &gt; 3),</span></span><br><span class="line"><span class="comment">#         Users.age != 8</span></span><br><span class="line"><span class="comment">#     ))</span></span><br><span class="line"><span class="comment"># print(ret)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 通配符，以e开头，不以e开头</span></span><br><span class="line"><span class="comment"># ret = session.query(Users).filter(Users.name.like(&#x27;%9%&#x27;)).all()</span></span><br><span class="line"><span class="comment"># ret = session.query(Users).filter(~Users.name.like(&#x27;%9%&#x27;))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 限制，用于分页，区间</span></span><br><span class="line"><span class="comment"># select *from user limit(1:4)</span></span><br><span class="line"><span class="comment"># select * from users limit 1,4;   从第一条数据往后取4条</span></span><br><span class="line"><span class="comment"># ret = session.query(Users)[0:4]</span></span><br><span class="line"><span class="comment"># ret = session.query(Users)[2:6]</span></span><br><span class="line"><span class="comment"># print(ret[0].id)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 排序，根据name降序排列（从大到小）</span></span><br><span class="line"><span class="comment"># ret = session.query(Users).order_by(Users.name.desc()).all()</span></span><br><span class="line"><span class="comment">#第一个条件重复后，再按第二个条件升序排</span></span><br><span class="line"><span class="comment"># ret = session.query(Users).order_by(Users.name.desc(), Users.id.asc())</span></span><br><span class="line"><span class="comment"># print(ret)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">### 分组</span></span><br><span class="line"><span class="comment"># 分组</span></span><br><span class="line"><span class="keyword">from</span> sqlalchemy.sql <span class="keyword">import</span> func</span><br><span class="line"><span class="comment">#分组之后取最大id，id之和，最小id</span></span><br><span class="line"><span class="comment"># select max(id),sum(id),min(id) from user group by name;</span></span><br><span class="line"><span class="comment"># ret = session.query(</span></span><br><span class="line"><span class="comment">#     func.max(Users.id),</span></span><br><span class="line"><span class="comment">#     func.sum(Users.id),</span></span><br><span class="line"><span class="comment">#     func.min(Users.id)).group_by(Users.name).all()</span></span><br><span class="line"><span class="comment">#haviing筛选</span></span><br><span class="line"><span class="comment"># select max(id),sum(id),min(id) from user group by name having min(id)&gt;2;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Users.objects.value(Users.name).filter().annotate(a=max(User.id),b=min(User.id)).filter(b__gt=2)</span></span><br><span class="line"><span class="comment"># ret = session.query(</span></span><br><span class="line"><span class="comment">#     func.max(Users.id),</span></span><br><span class="line"><span class="comment">#     func.sum(Users.id),</span></span><br><span class="line"><span class="comment">#     func.min(Users.id)).group_by(Users.name).having(func.min(Users.id) &gt;2).all()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 连表（默认用forinkey关联）</span></span><br><span class="line"><span class="comment"># select * from person,hobby where person.hobby_id=hobby.id;</span></span><br><span class="line"><span class="comment"># ret = session.query(Person, Hobby).filter(Person.hobby_id == Hobby.id).all()</span></span><br><span class="line"><span class="comment"># # print(ret)[(person,hobby),(person,hobby)]</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># for p in ret:</span></span><br><span class="line"><span class="comment">#     print(p[0])</span></span><br><span class="line"><span class="comment">#     print(p[1].caption)</span></span><br><span class="line"><span class="comment">#     print(&#x27;-----&#x27;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#join表，默认是inner join,没有指定on的字段，默认用外键关联</span></span><br><span class="line"><span class="comment"># select * from Person inner join Hobby on  person.hobby_id =hobby.id;</span></span><br><span class="line"><span class="comment"># ret = session.query(Person).join(Hobby)</span></span><br><span class="line"><span class="comment"># print(ret)</span></span><br><span class="line"><span class="comment"># #isouter=True 外连，表示Person left join Favor，没有右连接，反过来即可</span></span><br><span class="line"><span class="comment"># ret = session.query(Person).join(Hobby, isouter=True)</span></span><br><span class="line">ret = session.query(Hobby).join(Person, isouter=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># print(ret)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自己指定on条件（连表条件）,第二个参数，支持on多个条件，用and_,同上</span></span><br><span class="line"><span class="comment"># select * from Person left join Hobby on person.id=hobby.id</span></span><br><span class="line"><span class="comment"># ret = session.query(Person).join(Hobby,Person.hobby_id==Hobby.id, isouter=True)</span></span><br><span class="line"><span class="comment"># print(ret)</span></span><br><span class="line"><span class="comment"># select * from Person inner join Hobby on Person.hobby_id=Hobby.id where person.id&gt;1 and hobby.caption=&#x27;篮球&#x27;</span></span><br><span class="line"><span class="comment"># ret = session.query(Person).join(Hobby).filter(Person.id&gt;1,Hobby.caption==&#x27;篮球&#x27;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># # 组合（了解）UNION 操作符用于合并两个或多个 SELECT 语句的结果集</span></span><br><span class="line"><span class="comment"># #union和union all的区别？</span></span><br><span class="line">q1 = session.query(Person.name).<span class="built_in">filter</span>(Person.nid &gt; <span class="number">2</span>)</span><br><span class="line"><span class="comment"># q1 = session.query(Person.name).filter(Person.nid &gt; 2).all()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># q2 = session.query(Hobby.caption).filter(Hobby.id &lt; 2)</span></span><br><span class="line"><span class="comment"># ret = q1.union(q2).all()</span></span><br><span class="line"><span class="comment"># print(ret)</span></span><br><span class="line"></span><br><span class="line">q1 = session.query(Person.name).<span class="built_in">filter</span>(Person.nid &gt; <span class="number">2</span>)</span><br><span class="line">q2 = session.query(Hobby.caption).<span class="built_in">filter</span>(Hobby.<span class="built_in">id</span> &lt; <span class="number">2</span>)</span><br><span class="line">ret = q1.union_all(q2).<span class="built_in">all</span>()</span><br><span class="line"><span class="built_in">print</span>(ret)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">session.commit()</span><br><span class="line">session.close()</span><br></pre></td></tr></table></figure><h3 id="多对多关系建立和操作"><a href="#多对多关系建立和操作" class="headerlink" title="多对多关系建立和操作"></a>多对多关系建立和操作</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> create_engine</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.ext.declarative <span class="keyword">import</span> declarative_base</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> relationship</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Column, Integer, String, Text, ForeignKey, DateTime, UniqueConstraint, Index</span><br><span class="line">Base = declarative_base()</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Boy2Girl</span>(<span class="params">Base</span>):</span></span><br><span class="line">    __tablename__ = <span class="string">&#x27;boy2girl&#x27;</span></span><br><span class="line">    <span class="built_in">id</span> = Column(Integer, primary_key=<span class="literal">True</span>, autoincrement=<span class="literal">True</span>)</span><br><span class="line">    girl_id = Column(Integer, ForeignKey(<span class="string">&#x27;girl.id&#x27;</span>))</span><br><span class="line">    boy_id = Column(Integer, ForeignKey(<span class="string">&#x27;boy.id&#x27;</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Girl</span>(<span class="params">Base</span>):</span></span><br><span class="line">    __tablename__ = <span class="string">&#x27;girl&#x27;</span></span><br><span class="line">    <span class="built_in">id</span> = Column(Integer, primary_key=<span class="literal">True</span>)</span><br><span class="line">    name = Column(String(<span class="number">64</span>), unique=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Boy</span>(<span class="params">Base</span>):</span></span><br><span class="line">    __tablename__ = <span class="string">&#x27;boy&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">id</span> = Column(Integer, primary_key=<span class="literal">True</span>, autoincrement=<span class="literal">True</span>)</span><br><span class="line">    name = Column(String(<span class="number">64</span>), unique=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 与生成表结构无关，仅用于查询方便,放在哪个单表中都可以</span></span><br><span class="line">    girls = relationship(<span class="string">&#x27;Girl&#x27;</span>, secondary=<span class="string">&#x27;boy2girl&#x27;</span>, backref=<span class="string">&#x27;boys&#x27;</span>)</span><br><span class="line">    </span><br><span class="line"><span class="comment"># engine = create_engine(</span></span><br><span class="line"><span class="comment">#         &quot;mysql+pymysql://root:1018@127.0.0.1:3306/aaa?charset=utf8&quot;,</span></span><br><span class="line"><span class="comment">#         max_overflow=0,  # 超过连接池大小外最多创建的连接</span></span><br><span class="line"><span class="comment">#         pool_size=5,  # 连接池大小</span></span><br><span class="line"><span class="comment">#         pool_timeout=30,  # 池中没有线程最多等待的时间，否则报错</span></span><br><span class="line"><span class="comment">#         pool_recycle=-1  # 多久之后对线程池中的线程进行一次连接的回收（重置）</span></span><br><span class="line"><span class="comment">#     )</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Base.metadata.create_all(engine)</span></span><br></pre></td></tr></table></figure><h3 id="多对多基本使用"><a href="#多对多基本使用" class="headerlink" title="多对多基本使用"></a>多对多基本使用</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 基本增删查改</span></span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> sessionmaker</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> create_engine</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> scoped_session</span><br><span class="line"><span class="keyword">from</span> sqlalchemy_test.models <span class="keyword">import</span> Boy, Girl, Boy2Girl</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.sql <span class="keyword">import</span> text</span><br><span class="line"></span><br><span class="line">engine = create_engine(<span class="string">&quot;mysql+pymysql://root:1018@127.0.0.1:3306/aaa&quot;</span>, max_overflow=<span class="number">0</span>, pool_size=<span class="number">5</span>)</span><br><span class="line"><span class="comment"># 从连接池中拿一个链接</span></span><br><span class="line">conn = sessionmaker(bind=engine)</span><br><span class="line">session = scoped_session(conn)</span><br><span class="line"></span><br><span class="line"><span class="comment"># boy = Boy(name=&#x27;lqz&#x27;)</span></span><br><span class="line"><span class="comment"># boy2 = Boy(name=&#x27;egon&#x27;)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># girl = Girl(name=&#x27;刘亦菲&#x27;)</span></span><br><span class="line"><span class="comment"># girl2 = Girl(name=&#x27;迪丽热巴&#x27;)</span></span><br><span class="line"><span class="comment"># session.add_all([boy,boy2,girl,girl2])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立关系</span></span><br><span class="line"><span class="comment"># b=Boy2Girl(girl_id=1,boy_id=1)</span></span><br><span class="line"><span class="comment"># # b=Boy2Girl(girl=对象,boy=对象)</span></span><br><span class="line"><span class="comment"># session.add(b)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># lqz=session.query(Boy).filter(Boy.id==1).first()</span></span><br><span class="line"><span class="comment"># # dlrb=session.query(Girl).filter(Girl.id==2).first()</span></span><br><span class="line"><span class="comment"># lyf=session.query(Girl).filter(Girl.id==1).first()</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># # lqz.girls=[dlrb,]</span></span><br><span class="line"><span class="comment"># lqz.girls.append(lyf)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># egon=session.query(Boy).filter(Boy.id==2).first()</span></span><br><span class="line"><span class="comment"># lyf=session.query(Girl).filter(Girl.id==1).first()</span></span><br><span class="line"><span class="comment"># lyf.boys.append(egon)</span></span><br><span class="line"><span class="comment"># session.add(lyf)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># lqz=session.query(Boy).filter(Boy.id==1).first()</span></span><br><span class="line"><span class="comment"># lyf=session.query(Girl).filter(Girl.id==1).first()</span></span><br><span class="line"><span class="comment"># print(lyf.boys)</span></span><br><span class="line"></span><br><span class="line">session.commit()</span><br><span class="line">session.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="flask-sqlalchemy的使用"><a href="#flask-sqlalchemy的使用" class="headerlink" title="flask-sqlalchemy的使用"></a>flask-sqlalchemy的使用</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask_sqlalchemy <span class="keyword">import</span> SQLAlchemy</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config[<span class="string">&quot;SQLALCHEMY_DATABASE_URI&quot;</span>] = <span class="string">&quot;sqlite:///example.sqlite&quot;</span></span><br><span class="line">db = SQLAlchemy(app)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span>(<span class="params">db.Model</span>):</span></span><br><span class="line">    <span class="built_in">id</span> = db.Column(db.Integer, primary_key=<span class="literal">True</span>)</span><br><span class="line">    username = db.Column(db.String, unique=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    email = db.Column(db.String, unique=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">db.session.add(User(username=<span class="string">&quot;Flask&quot;</span>, email=<span class="string">&quot;example@example.com&quot;</span>))</span><br><span class="line">db.session.commit()</span><br><span class="line"></span><br><span class="line">users = User.query.<span class="built_in">all</span>()</span><br></pre></td></tr></table></figure><h3 id="项目分文件使用sqlalchemy-flask-migrate"><a href="#项目分文件使用sqlalchemy-flask-migrate" class="headerlink" title="项目分文件使用sqlalchemy+flask-migrate"></a>项目分文件使用sqlalchemy+flask-migrate</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 详见sansa项目</span></span><br><span class="line"><span class="comment"># flask和SQLAchemy的管理者，通过他把他们做连接</span></span><br><span class="line">db = SQLAlchemy()</span><br><span class="line">- 包含配置</span><br><span class="line">- 包含ORM基类</span><br><span class="line">- 包含create_all</span><br><span class="line">- engine</span><br><span class="line">- 创建连接</span><br><span class="line"><span class="comment"># flask-migrate</span></span><br><span class="line">python3 manage.py db init 初始化：只执行一次</span><br><span class="line">python3 manage.py db migrate 等同于 makemigartions</span><br><span class="line">python3 manage.py db upgrade 等同于migrate</span><br></pre></td></tr></table></figure><h3 id="django多数据库"><a href="#django多数据库" class="headerlink" title="django多数据库"></a>django多数据库</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line">python manage.py makemigraions</span><br><span class="line"></span><br><span class="line">python manage.py migrate app名称 --databse=配置文件数据名称的别名</span><br><span class="line"></span><br><span class="line">手动操作：</span><br><span class="line">models.UserType.objects.using(<span class="string">&#x27;db1&#x27;</span>).create(title=<span class="string">&#x27;普通用户&#x27;</span>)</span><br><span class="line">result = models.UserType.objects.<span class="built_in">all</span>().using(<span class="string">&#x27;default&#x27;</span>)</span><br><span class="line"></span><br><span class="line">自动操作：</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Router1</span>:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">db_for_read</span>(<span class="params">self, model, **hints</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Attempts to read auth models go to auth_db.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;db1&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">db_for_write</span>(<span class="params">self, model, **hints</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Attempts to write auth models go to auth_db.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;default&#x27;</span></span><br><span class="line"></span><br><span class="line">配置：</span><br><span class="line">DATABASES = &#123;</span><br><span class="line"><span class="string">&#x27;default&#x27;</span>: &#123;</span><br><span class="line"><span class="string">&#x27;ENGINE&#x27;</span>: <span class="string">&#x27;django.db.backends.sqlite3&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;NAME&#x27;</span>: os.path.join(BASE_DIR, <span class="string">&#x27;db.sqlite3&#x27;</span>),</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">&#x27;db1&#x27;</span>: &#123;</span><br><span class="line"><span class="string">&#x27;ENGINE&#x27;</span>: <span class="string">&#x27;django.db.backends.sqlite3&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;NAME&#x27;</span>: os.path.join(BASE_DIR, <span class="string">&#x27;db1.sqlite3&#x27;</span>),</span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br><span class="line">DATABASE_ROUTERS = [<span class="string">&#x27;db_router.Router1&#x27;</span>,]</span><br><span class="line"></span><br><span class="line">使用：</span><br><span class="line">models.UserType.objects.create(title=<span class="string">&#x27;VVIP&#x27;</span>)</span><br><span class="line"></span><br><span class="line">result = models.UserType.objects.<span class="built_in">all</span>()</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line">补充：粒度更细</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Router1</span>:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">db_for_read</span>(<span class="params">self, model, **hints</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Attempts to read auth models go to auth_db.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">if</span> model._meta.model_name == <span class="string">&#x27;usertype&#x27;</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;db1&#x27;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;default&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">db_for_write</span>(<span class="params">self, model, **hints</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Attempts to write auth models go to auth_db.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;default&#x27;</span></span><br><span class="line">问题： </span><br><span class="line">app01中的表在default数据库创建</span><br><span class="line">app02中的表在db1数据库创建</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第一步：</span></span><br><span class="line">python manage.py makemigraions </span><br><span class="line"></span><br><span class="line"><span class="comment"># 第二步：</span></span><br><span class="line">app01中的表在default数据库创建</span><br><span class="line">python manage.py migrate app01 --database=default</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第三步：</span></span><br><span class="line">app02中的表在db1数据库创建</span><br><span class="line">python manage.py migrate app02 --database=db1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 手动操作：</span></span><br><span class="line">m1.UserType.objects.using(<span class="string">&#x27;default&#x27;</span>).create(title=<span class="string">&#x27;VVIP&#x27;</span>)</span><br><span class="line">m2.Users.objects.using(<span class="string">&#x27;db1&#x27;</span>).create(name=<span class="string">&#x27;VVIP&#x27;</span>,email=<span class="string">&#x27;xxx&#x27;</span>)</span><br><span class="line"><span class="comment"># 自动操作：</span></span><br><span class="line">配置： </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Router1</span>:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">db_for_read</span>(<span class="params">self, model, **hints</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Attempts to read auth models go to auth_db.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">if</span> model._meta.app_label == <span class="string">&#x27;app01&#x27;</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;default&#x27;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;db1&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">db_for_write</span>(<span class="params">self, model, **hints</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Attempts to write auth models go to auth_db.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">if</span> model._meta.app_label == <span class="string">&#x27;app01&#x27;</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;default&#x27;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;db1&#x27;</span></span><br><span class="line"></span><br><span class="line">DATABASE_ROUTERS = [<span class="string">&#x27;db_router.Router1&#x27;</span>,]</span><br><span class="line"></span><br><span class="line">使用： </span><br><span class="line">m1.UserType.objects.using(<span class="string">&#x27;default&#x27;</span>).create(title=<span class="string">&#x27;VVIP&#x27;</span>)</span><br><span class="line">m2.Users.objects.using(<span class="string">&#x27;db1&#x27;</span>).create(name=<span class="string">&#x27;VVIP&#x27;</span>,email=<span class="string">&#x27;xxx&#x27;</span>)</span><br><span class="line">其他：</span><br><span class="line">数据库迁移时进行约束：</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Router1</span>:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">allow_migrate</span>(<span class="params">self, db, app_label, model_name=<span class="literal">None</span>, **hints</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">All non-auth models end up in this pool.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">if</span> db==<span class="string">&#x27;db1&#x27;</span> <span class="keyword">and</span> app_label == <span class="string">&#x27;app02&#x27;</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"><span class="keyword">elif</span> db == <span class="string">&#x27;default&#x27;</span> <span class="keyword">and</span> app_label == <span class="string">&#x27;app01&#x27;</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果返回None，那么表示交给后续的router，如果后续没有router，则相当于返回True</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">db_for_read</span>(<span class="params">self, model, **hints</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Attempts to read auth models go to auth_db.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">if</span> model._meta.app_label == <span class="string">&#x27;app01&#x27;</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;default&#x27;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;db1&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">db_for_write</span>(<span class="params">self, model, **hints</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Attempts to write auth models go to auth_db.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">if</span> model._meta.app_label == <span class="string">&#x27;app01&#x27;</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;default&#x27;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;db1&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Flask&quot;&gt;&lt;a href=&quot;#Flask&quot; class=&quot;headerlink&quot; title=&quot;Flask&quot;&gt;&lt;/a&gt;Flask&lt;/h1&gt;&lt;h2 id=&quot;中间件&quot;&gt;&lt;a href=&quot;#中间件&quot; class=&quot;headerlink&quot; title=&quot;中间件&quot;&gt;&lt;/</summary>
      
    
    
    
    
    <category term="Flask" scheme="http://example.com/tags/Flask/"/>
    
  </entry>
  
  <entry>
    <title>redis</title>
    <link href="http://example.com/2021/08/10/redis/"/>
    <id>http://example.com/2021/08/10/redis/</id>
    <published>2021-08-10T09:35:22.000Z</published>
    <updated>2022-06-27T07:52:52.910Z</updated>
    
    <content type="html"><![CDATA[<h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mkdir redis</span><br><span class="line">cd redis</span><br><span class="line">wget http://download.redis.io/releases/redis-<span class="number">3.0</span><span class="number">.6</span>.tar.gz</span><br><span class="line">tar xzf redis-<span class="number">3.0</span><span class="number">.6</span>.tar.gz</span><br><span class="line">ln -s redis-<span class="number">3.0</span><span class="number">.6</span> redis </span><br><span class="line">cd redis-<span class="number">3.0</span><span class="number">.6</span></span><br><span class="line">make</span><br><span class="line"><span class="comment">#在src目录下可以看到</span></span><br><span class="line"><span class="comment">#redis-server---&gt;redis服务器</span></span><br><span class="line"><span class="comment">#redis-cli---》redis命令行客户端</span></span><br><span class="line"><span class="comment">#redis-benchmark---》redis性能测试工具</span></span><br><span class="line"><span class="comment">#redis-check-aof---&gt;aof文件修复工具</span></span><br><span class="line"><span class="comment">#redis-check-dump---》rdb文件检查工具</span></span><br><span class="line"><span class="comment">#redis-sentinel---》sentinel服务器，哨兵</span></span><br><span class="line"><span class="comment">#redis作者对windows维护不好，window自己有安装包</span></span><br></pre></td></tr></table></figure><h4 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h4><p><img src="/2021/08/10/redis/image-20210811120243249.png" alt="redis"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost redis]# vim ~/.bash_profile</span><br><span class="line">- export PATH=$PATH:/root/redis/redis-3.0.6/src</span><br><span class="line">[root@localhost redis]# source ~/.bash_profile</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ln -s a b 中的 a 就是源文件，b是链接文件名,其作用是当进入b目录，实际上是链接进入了a目录</span></span><br><span class="line">[root@localhost redis]# ln -s redis-3.0.6 redis </span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 动态参数启动服务</span></span><br><span class="line">redis-server --port 6379</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 客户端链接</span></span><br><span class="line">redis-cli -h ip -p port</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 带密码</span></span><br><span class="line">redis-cli -h 127.0.0.1  -p 6379 -a 123456</span><br></pre></td></tr></table></figure><h4 id="启动服务端"><a href="#启动服务端" class="headerlink" title="启动服务端"></a>启动服务端</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost redis-3.0.6]# cd src/</span><br><span class="line">[root@localhost src]# ./redis-server</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="启动客户端"><a href="#启动客户端" class="headerlink" title="启动客户端"></a>启动客户端</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost src]<span class="comment"># ./redis-cli </span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; <span class="built_in">set</span> name ddd</span><br><span class="line">OK</span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; get name</span><br><span class="line"><span class="string">&quot;ddd&quot;</span></span><br></pre></td></tr></table></figure><h4 id="关闭服务"><a href="#关闭服务" class="headerlink" title="关闭服务"></a>关闭服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost src]# ./redis-cli shutdown</span><br><span class="line">[root@localhost src]# netstat -lanp | grep &quot;6379&quot;</span><br></pre></td></tr></table></figure><h4 id="本地连接"><a href="#本地连接" class="headerlink" title="本地连接"></a>本地连接</h4><ul><li>需要放行防火墙端口号</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost src]# firewall-cmd --zone=public --add-port=6379/tcp --permanent</span><br><span class="line">success</span><br><span class="line">[root@localhost src]# firewall-cmd --reload</span><br><span class="line">success</span><br><span class="line">[root@localhost src]# firewall-cmd --list-ports</span><br><span class="line">27017/tcp 6379/tcp</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="指定配置文件启动服务"><a href="#指定配置文件启动服务" class="headerlink" title="指定配置文件启动服务"></a>指定配置文件启动服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost redis-3.0.6]# cp redis.conf ./redisdemo.conf</span><br><span class="line">[root@localhost redis-3.0.6]# vim redisdemo.conf </span><br><span class="line">- bind 0.0.0.0</span><br><span class="line">[root@localhost redis-3.0.6]# cd src</span><br><span class="line">[root@localhost src]# ./redis-server /root/redis/redis-3.0.6/redisdemo.conf</span><br></pre></td></tr></table></figure><h4 id="redis-配置文件详解"><a href="#redis-配置文件详解" class="headerlink" title="redis 配置文件详解"></a>redis 配置文件详解</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># redis 配置文件示例</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 当你需要为某个配置项指定内存大小的时候，必须要带上单位，</span></span><br><span class="line"><span class="comment"># 通常的格式就是 1k 5gb 4m 等酱紫：</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 1k  =&gt; 1000 bytes</span></span><br><span class="line"><span class="comment"># 1kb =&gt; 1024 bytes</span></span><br><span class="line"><span class="comment"># 1m  =&gt; 1000000 bytes</span></span><br><span class="line"><span class="comment"># 1mb =&gt; 1024*1024 bytes</span></span><br><span class="line"><span class="comment"># 1g  =&gt; 1000000000 bytes</span></span><br><span class="line"><span class="comment"># 1gb =&gt; 1024*1024*1024 bytes</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 单位是不区分大小写的，你写 1K 5GB 4M 也行</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">################################## INCLUDES ###################################</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 假如说你有一个可用于所有的 redis server 的标准配置模板，</span></span><br><span class="line"><span class="comment"># 但针对某些 server 又需要一些个性化的设置，</span></span><br><span class="line"><span class="comment"># 你可以使用 include 来包含一些其他的配置文件，这对你来说是非常有用的。</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 但是要注意哦，include 是不能被 config rewrite 命令改写的</span></span><br><span class="line"><span class="comment"># 由于 redis 总是以最后的加工线作为一个配置指令值，所以你最好是把 include 放在这个文件的最前面，</span></span><br><span class="line"><span class="comment"># 以避免在运行时覆盖配置的改变，相反，你就把它放在后面（外国人真啰嗦）。</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># include /path/to/local.conf</span></span><br><span class="line"><span class="comment"># include /path/to/other.conf</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">################################ 常用 #####################################</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 默认情况下 redis 不是作为守护进程运行的，如果你想让它在后台运行，你就把它改成 yes。</span></span><br><span class="line"><span class="comment"># 当redis作为守护进程运行的时候，它会写一个 pid 到 /var/run/redis.pid 文件里面。</span></span><br><span class="line">daemonize no</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 当redis作为守护进程运行的时候，它会把 pid 默认写到 /var/run/redis.pid 文件里面，</span></span><br><span class="line"><span class="comment"># 但是你可以在这里自己制定它的文件位置。</span></span><br><span class="line">pidfile /var/run/redis.pid</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 监听端口号，默认为 6379，如果你设为 0 ，redis 将不在 socket 上监听任何客户端连接。</span></span><br><span class="line">port <span class="number">6379</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># TCP 监听的最大容纳数量</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 在高并发的环境下，你需要把这个值调高以避免客户端连接缓慢的问题。</span></span><br><span class="line"><span class="comment"># Linux 内核会一声不响的把这个值缩小成 /proc/sys/net/core/somaxconn 对应的值，</span></span><br><span class="line"><span class="comment"># 所以你要修改这两个值才能达到你的预期。</span></span><br><span class="line">tcp<span class="literal">-backlog</span> <span class="number">511</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 默认情况下，redis 在 server 上所有有效的网络接口上监听客户端连接。</span></span><br><span class="line"><span class="comment"># 你如果只想让它在一个网络接口上监听，那你就绑定一个IP或者多个IP。</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 示例，多个IP用空格隔开:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># bind 192.168.1.100 10.0.0.1</span></span><br><span class="line"><span class="comment"># bind 127.0.0.1</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 指定 unix socket 的路径。</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># unixsocket /tmp/redis.sock</span></span><br><span class="line"><span class="comment"># unixsocketperm 755</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 指定在一个 client 空闲多少秒之后关闭连接（0 就是不管它）</span></span><br><span class="line">timeout <span class="number">0</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># tcp 心跳包。</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 如果设置为非零，则在与客户端缺乏通讯的时候使用 SO_KEEPALIVE 发送 tcp acks 给客户端。</span></span><br><span class="line"><span class="comment"># 这个之所有有用，主要由两个原因：</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 1) 防止死的 peers</span></span><br><span class="line"><span class="comment"># 2) Take the connection alive from the point of view of network</span></span><br><span class="line"><span class="comment">#    equipment in the middle.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># On Linux, the specified value (in seconds) is the period used to send ACKs.</span></span><br><span class="line"><span class="comment"># Note that to close the connection the double of the time is needed.</span></span><br><span class="line"><span class="comment"># On other kernels the period depends on the kernel configuration.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># A reasonable value for this option is 60 seconds.</span></span><br><span class="line"><span class="comment"># 推荐一个合理的值就是60秒</span></span><br><span class="line">tcp<span class="literal">-keepalive</span> <span class="number">0</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 定义日志级别。</span></span><br><span class="line"><span class="comment"># 可以是下面的这些值：</span></span><br><span class="line"><span class="comment"># debug (适用于开发或测试阶段)</span></span><br><span class="line"><span class="comment"># verbose (many rarely useful info, but not a mess like the debug level)</span></span><br><span class="line"><span class="comment"># notice (适用于生产环境)</span></span><br><span class="line"><span class="comment"># warning (仅仅一些重要的消息被记录)</span></span><br><span class="line">loglevel notice</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 指定日志文件的位置</span></span><br><span class="line">logfile <span class="string">&quot;&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 要想把日志记录到系统日志，就把它改成 yes，</span></span><br><span class="line"><span class="comment"># 也可以可选择性的更新其他的syslog 参数以达到你的要求</span></span><br><span class="line"><span class="comment"># syslog-enabled no</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 设置 syslog 的 identity。</span></span><br><span class="line"><span class="comment"># syslog-ident redis</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 设置 syslog 的 facility，必须是 USER 或者是 LOCAL0-LOCAL7 之间的值。</span></span><br><span class="line"><span class="comment"># syslog-facility local0</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 设置数据库的数目。</span></span><br><span class="line"><span class="comment"># 默认数据库是 DB 0，你可以在每个连接上使用 select &lt;dbid&gt; 命令选择一个不同的数据库，</span></span><br><span class="line"><span class="comment"># 但是 dbid 必须是一个介于 0 到 databasees - 1 之间的值</span></span><br><span class="line">databases <span class="number">16</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">################################ 快照 ################################</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 存 DB 到磁盘：</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   格式：save &lt;间隔时间（秒）&gt; &lt;写入次数&gt;</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   根据给定的时间间隔和写入次数将数据保存到磁盘</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   下面的例子的意思是：</span></span><br><span class="line"><span class="comment">#   900 秒内如果至少有 1 个 key 的值变化，则保存</span></span><br><span class="line"><span class="comment">#   300 秒内如果至少有 10 个 key 的值变化，则保存</span></span><br><span class="line"><span class="comment">#   60 秒内如果至少有 10000 个 key 的值变化，则保存</span></span><br><span class="line"><span class="comment">#　　</span></span><br><span class="line"><span class="comment">#   注意：你可以注释掉所有的 save 行来停用保存功能。</span></span><br><span class="line"><span class="comment">#   也可以直接一个空字符串来实现停用：</span></span><br><span class="line"><span class="comment">#   save &quot;&quot;</span></span><br><span class="line"> </span><br><span class="line">save <span class="number">900</span> <span class="number">1</span></span><br><span class="line">save <span class="number">300</span> <span class="number">10</span></span><br><span class="line">save <span class="number">60</span> <span class="number">10000</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 默认情况下，如果 redis 最后一次的后台保存失败，redis 将停止接受写操作，</span></span><br><span class="line"><span class="comment"># 这样以一种强硬的方式让用户知道数据不能正确的持久化到磁盘，</span></span><br><span class="line"><span class="comment"># 否则就会没人注意到灾难的发生。</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 如果后台保存进程重新启动工作了，redis 也将自动的允许写操作。</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 然而你要是安装了靠谱的监控，你可能不希望 redis 这样做，那你就改成 no 好了。</span></span><br><span class="line"><span class="built_in">stop-writes</span><span class="literal">-on</span><span class="literal">-bgsave</span><span class="literal">-error</span> yes</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 是否在 dump .rdb 数据库的时候使用 LZF 压缩字符串</span></span><br><span class="line"><span class="comment"># 默认都设为 yes</span></span><br><span class="line"><span class="comment"># 如果你希望保存子进程节省点 cpu ，你就设置它为 no ，</span></span><br><span class="line"><span class="comment"># 不过这个数据集可能就会比较大</span></span><br><span class="line">rdbcompression yes</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 是否校验rdb文件</span></span><br><span class="line">rdbchecksum yes</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 设置 dump 的文件位置</span></span><br><span class="line">dbfilename dump.rdb</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 工作目录</span></span><br><span class="line"><span class="comment"># 例如上面的 dbfilename 只指定了文件名，</span></span><br><span class="line"><span class="comment"># 但是它会写入到这个目录下。这个配置项一定是个目录，而不能是文件名。</span></span><br><span class="line"><span class="built_in">dir</span> ./</span><br><span class="line"> </span><br><span class="line"><span class="comment">################################# 主从复制 #################################</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 主从复制。使用 slaveof 来让一个 redis 实例成为另一个reids 实例的副本。</span></span><br><span class="line"><span class="comment"># 注意这个只需要在 slave 上配置。</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># slaveof &lt;masterip&gt; &lt;masterport&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 如果 master 需要密码认证，就在这里设置</span></span><br><span class="line"><span class="comment"># masterauth &lt;master-password&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 当一个 slave 与 master 失去联系，或者复制正在进行的时候，</span></span><br><span class="line"><span class="comment"># slave 可能会有两种表现：</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 1) 如果为 yes ，slave 仍然会应答客户端请求，但返回的数据可能是过时，</span></span><br><span class="line"><span class="comment">#    或者数据可能是空的在第一次同步的时候</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 2) 如果为 no ，在你执行除了 info he salveof 之外的其他命令时，</span></span><br><span class="line"><span class="comment">#    slave 都将返回一个 &quot;SYNC with master in progress&quot; 的错误，</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">slave<span class="literal">-serve</span><span class="literal">-stale</span><span class="literal">-data</span> yes</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 你可以配置一个 slave 实体是否接受写入操作。</span></span><br><span class="line"><span class="comment"># 通过写入操作来存储一些短暂的数据对于一个 slave 实例来说可能是有用的，</span></span><br><span class="line"><span class="comment"># 因为相对从 master 重新同步数而言，据数据写入到 slave 会更容易被删除。</span></span><br><span class="line"><span class="comment"># 但是如果客户端因为一个错误的配置写入，也可能会导致一些问题。</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 从 redis 2.6 版起，默认 slaves 都是只读的。</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Note: read only slaves are not designed to be exposed to untrusted clients</span></span><br><span class="line"><span class="comment"># on the internet. It&#x27;s just a protection layer against misuse of the instance.</span></span><br><span class="line"><span class="comment"># Still a read only slave exports by default all the administrative commands</span></span><br><span class="line"><span class="comment"># such as CONFIG, DEBUG, and so forth. To a limited extent you can improve</span></span><br><span class="line"><span class="comment"># security of read only slaves using &#x27;rename-command&#x27; to shadow all the</span></span><br><span class="line"><span class="comment"># administrative / dangerous commands.</span></span><br><span class="line"><span class="comment"># 注意：只读的 slaves 没有被设计成在 internet 上暴露给不受信任的客户端。</span></span><br><span class="line"><span class="comment"># 它仅仅是一个针对误用实例的一个保护层。</span></span><br><span class="line">slave<span class="literal">-read</span><span class="literal">-only</span> yes</span><br><span class="line"> </span><br><span class="line"><span class="comment"># Slaves 在一个预定义的时间间隔内发送 ping 命令到 server 。</span></span><br><span class="line"><span class="comment"># 你可以改变这个时间间隔。默认为 10 秒。</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># repl-ping-slave-period 10</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># The following option sets the replication timeout for:</span></span><br><span class="line"><span class="comment"># 设置主从复制过期时间</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 1) Bulk transfer I/O during SYNC, from the point of view of slave.</span></span><br><span class="line"><span class="comment"># 2) Master timeout from the point of view of slaves (data, pings).</span></span><br><span class="line"><span class="comment"># 3) Slave timeout from the point of view of masters (REPLCONF ACK pings).</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># It is important to make sure that this value is greater than the value</span></span><br><span class="line"><span class="comment"># specified for repl-ping-slave-period otherwise a timeout will be detected</span></span><br><span class="line"><span class="comment"># every time there is low traffic between the master and the slave.</span></span><br><span class="line"><span class="comment"># 这个值一定要比 repl-ping-slave-period 大</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># repl-timeout 60</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Disable TCP_NODELAY on the slave socket after SYNC?</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># If you select &quot;yes&quot; Redis will use a smaller number of TCP packets and</span></span><br><span class="line"><span class="comment"># less bandwidth to send data to slaves. But this can add a delay for</span></span><br><span class="line"><span class="comment"># the data to appear on the slave side, up to 40 milliseconds with</span></span><br><span class="line"><span class="comment"># Linux kernels using a default configuration.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># If you select &quot;no&quot; the delay for data to appear on the slave side will</span></span><br><span class="line"><span class="comment"># be reduced but more bandwidth will be used for replication.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># By default we optimize for low latency, but in very high traffic conditions</span></span><br><span class="line"><span class="comment"># or when the master and slaves are many hops away, turning this to &quot;yes&quot; may</span></span><br><span class="line"><span class="comment"># be a good idea.</span></span><br><span class="line">repl<span class="literal">-disable</span><span class="literal">-tcp</span><span class="literal">-nodelay</span> no</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 设置主从复制容量大小。这个 backlog 是一个用来在 slaves 被断开连接时</span></span><br><span class="line"><span class="comment"># 存放 slave 数据的 buffer，所以当一个 slave 想要重新连接，通常不希望全部重新同步，</span></span><br><span class="line"><span class="comment"># 只是部分同步就够了，仅仅传递 slave 在断开连接时丢失的这部分数据。</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The biggest the replication backlog, the longer the time the slave can be</span></span><br><span class="line"><span class="comment"># disconnected and later be able to perform a partial resynchronization.</span></span><br><span class="line"><span class="comment"># 这个值越大，salve 可以断开连接的时间就越长。</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The backlog is only allocated once there is at least a slave connected.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># repl-backlog-size 1mb</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># After a master has no longer connected slaves for some time, the backlog</span></span><br><span class="line"><span class="comment"># will be freed. The following option configures the amount of seconds that</span></span><br><span class="line"><span class="comment"># need to elapse, starting from the time the last slave disconnected, for</span></span><br><span class="line"><span class="comment"># the backlog buffer to be freed.</span></span><br><span class="line"><span class="comment"># 在某些时候，master 不再连接 slaves，backlog 将被释放。</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># A value of 0 means to never release the backlog.</span></span><br><span class="line"><span class="comment"># 如果设置为 0 ，意味着绝不释放 backlog 。</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># repl-backlog-ttl 3600</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 当 master 不能正常工作的时候，Redis Sentinel 会从 slaves 中选出一个新的 master，</span></span><br><span class="line"><span class="comment"># 这个值越小，就越会被优先选中，但是如果是 0 ， 那是意味着这个 slave 不可能被选中。</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 默认优先级为 100。</span></span><br><span class="line">slave<span class="literal">-priority</span> <span class="number">100</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># It is possible for a master to stop accepting writes if there are less than</span></span><br><span class="line"><span class="comment"># N slaves connected, having a lag less or equal than M seconds.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The N slaves need to be in &quot;online&quot; state.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The lag in seconds, that must be &lt;= the specified value, is calculated from</span></span><br><span class="line"><span class="comment"># the last ping received from the slave, that is usually sent every second.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This option does not GUARANTEES that N replicas will accept the write, but</span></span><br><span class="line"><span class="comment"># will limit the window of exposure for lost writes in case not enough slaves</span></span><br><span class="line"><span class="comment"># are available, to the specified number of seconds.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># For example to require at least 3 slaves with a lag &lt;= 10 seconds use:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># min-slaves-to-write 3</span></span><br><span class="line"><span class="comment"># min-slaves-max-lag 10</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Setting one or the other to 0 disables the feature.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># By default min-slaves-to-write is set to 0 (feature disabled) and</span></span><br><span class="line"><span class="comment"># min-slaves-max-lag is set to 10.</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">################################## 安全 ###################################</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Require clients to issue AUTH &lt;PASSWORD&gt; before processing any other</span></span><br><span class="line"><span class="comment"># commands.  This might be useful in environments in which you do not trust</span></span><br><span class="line"><span class="comment"># others with access to the host running redis-server.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This should stay commented out for backward compatibility and because most</span></span><br><span class="line"><span class="comment"># people do not need auth (e.g. they run their own servers).</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># Warning: since Redis is pretty fast an outside user can try up to</span></span><br><span class="line"><span class="comment"># 150k passwords per second against a good box. This means that you should</span></span><br><span class="line"><span class="comment"># use a very strong password otherwise it will be very easy to break.</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># 设置认证密码</span></span><br><span class="line"><span class="comment"># requirepass foobared</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Command renaming.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># It is possible to change the name of dangerous commands in a shared</span></span><br><span class="line"><span class="comment"># environment. For instance the CONFIG command may be renamed into something</span></span><br><span class="line"><span class="comment"># hard to guess so that it will still be available for internal-use tools</span></span><br><span class="line"><span class="comment"># but not available for general clients.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Example:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># rename-command CONFIG b840fc02d524045429941cc15f59e41cb7be6c52</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># It is also possible to completely kill a command by renaming it into</span></span><br><span class="line"><span class="comment"># an empty string:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># rename-command CONFIG &quot;&quot;</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Please note that changing the name of commands that are logged into the</span></span><br><span class="line"><span class="comment"># AOF file or transmitted to slaves may cause problems.</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">################################### 限制 ####################################</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Set the max number of connected clients at the same time. By default</span></span><br><span class="line"><span class="comment"># this limit is set to 10000 clients, however if the Redis server is not</span></span><br><span class="line"><span class="comment"># able to configure the process file limit to allow for the specified limit</span></span><br><span class="line"><span class="comment"># the max number of allowed clients is set to the current file limit</span></span><br><span class="line"><span class="comment"># minus 32 (as Redis reserves a few file descriptors for internal uses).</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 一旦达到最大限制，redis 将关闭所有的新连接</span></span><br><span class="line"><span class="comment"># 并发送一个‘max number of clients reached’的错误。</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># maxclients 10000</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 如果你设置了这个值，当缓存的数据容量达到这个值， redis 将根据你选择的</span></span><br><span class="line"><span class="comment"># eviction 策略来移除一些 keys。</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 如果 redis 不能根据策略移除 keys ，或者是策略被设置为 ‘noeviction’，</span></span><br><span class="line"><span class="comment"># redis 将开始响应错误给命令，如 set，lpush 等等，</span></span><br><span class="line"><span class="comment"># 并继续响应只读的命令，如 get</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This option is usually useful when using Redis as an LRU cache, or to set</span></span><br><span class="line"><span class="comment"># a hard memory limit for an instance (using the &#x27;noeviction&#x27; policy).</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># WARNING: If you have slaves attached to an instance with maxmemory on,</span></span><br><span class="line"><span class="comment"># the size of the output buffers needed to feed the slaves are subtracted</span></span><br><span class="line"><span class="comment"># from the used memory count, so that network problems / resyncs will</span></span><br><span class="line"><span class="comment"># not trigger a loop where keys are evicted, and in turn the output</span></span><br><span class="line"><span class="comment"># buffer of slaves is full with DELs of keys evicted triggering the deletion</span></span><br><span class="line"><span class="comment"># of more keys, and so forth until the database is completely emptied.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># In short... if you have slaves attached it is suggested that you set a lower</span></span><br><span class="line"><span class="comment"># limit for maxmemory so that there is some free RAM on the system for slave</span></span><br><span class="line"><span class="comment"># output buffers (but this is not needed if the policy is &#x27;noeviction&#x27;).</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 最大使用内存</span></span><br><span class="line"><span class="comment"># maxmemory &lt;bytes&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 最大内存策略，你有 5 个选择。</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># volatile-lru -&gt; remove the key with an expire set using an LRU algorithm</span></span><br><span class="line"><span class="comment"># volatile-lru -&gt; 使用 LRU 算法移除包含过期设置的 key 。</span></span><br><span class="line"><span class="comment"># allkeys-lru -&gt; remove any key accordingly to the LRU algorithm</span></span><br><span class="line"><span class="comment"># allkeys-lru -&gt; 根据 LRU 算法移除所有的 key 。</span></span><br><span class="line"><span class="comment"># volatile-random -&gt; remove a random key with an expire set</span></span><br><span class="line"><span class="comment"># allkeys-random -&gt; remove a random key, any key</span></span><br><span class="line"><span class="comment"># volatile-ttl -&gt; remove the key with the nearest expire time (minor TTL)</span></span><br><span class="line"><span class="comment"># noeviction -&gt; don&#x27;t expire at all, just return an error on write operations</span></span><br><span class="line"><span class="comment"># noeviction -&gt; 不让任何 key 过期，只是给写入操作返回一个错误</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># Note: with any of the above policies, Redis will return an error on write</span></span><br><span class="line"><span class="comment">#       operations, when there are not suitable keys for eviction.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#       At the date of writing this commands are: set setnx setex append</span></span><br><span class="line"><span class="comment">#       incr decr rpush lpush rpushx lpushx linsert lset rpoplpush sadd</span></span><br><span class="line"><span class="comment">#       sinter sinterstore sunion sunionstore sdiff sdiffstore zadd zincrby</span></span><br><span class="line"><span class="comment">#       zunionstore zinterstore hset hsetnx hmset hincrby incrby decrby</span></span><br><span class="line"><span class="comment">#       getset mset msetnx exec sort</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The default is:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># maxmemory-policy noeviction</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># LRU and minimal TTL algorithms are not precise algorithms but approximated</span></span><br><span class="line"><span class="comment"># algorithms (in order to save memory), so you can tune it for speed or</span></span><br><span class="line"><span class="comment"># accuracy. For default Redis will check five keys and pick the one that was</span></span><br><span class="line"><span class="comment"># used less recently, you can change the sample size using the following</span></span><br><span class="line"><span class="comment"># configuration directive.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The default of 5 produces good enough results. 10 Approximates very closely</span></span><br><span class="line"><span class="comment"># true LRU but costs a bit more CPU. 3 is very fast but not very accurate.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># maxmemory-samples 5</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">############################## APPEND ONLY MODE ###############################</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># By default Redis asynchronously dumps the dataset on disk. This mode is</span></span><br><span class="line"><span class="comment"># good enough in many applications, but an issue with the Redis process or</span></span><br><span class="line"><span class="comment"># a power outage may result into a few minutes of writes lost (depending on</span></span><br><span class="line"><span class="comment"># the configured save points).</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The Append Only File is an alternative persistence mode that provides</span></span><br><span class="line"><span class="comment"># much better durability. For instance using the default data fsync policy</span></span><br><span class="line"><span class="comment"># (see later in the config file) Redis can lose just one second of writes in a</span></span><br><span class="line"><span class="comment"># dramatic event like a server power outage, or a single write if something</span></span><br><span class="line"><span class="comment"># wrong with the Redis process itself happens, but the operating system is</span></span><br><span class="line"><span class="comment"># still running correctly.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># AOF and RDB persistence can be enabled at the same time without problems.</span></span><br><span class="line"><span class="comment"># If the AOF is enabled on startup Redis will load the AOF, that is the file</span></span><br><span class="line"><span class="comment"># with the better durability guarantees.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Please check http://redis.io/topics/persistence for more information.</span></span><br><span class="line"> </span><br><span class="line">appendonly no</span><br><span class="line"> </span><br><span class="line"><span class="comment"># The name of the append only file (default: &quot;appendonly.aof&quot;)</span></span><br><span class="line"> </span><br><span class="line">appendfilename <span class="string">&quot;appendonly.aof&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># The fsync() call tells the Operating System to actually write data on disk</span></span><br><span class="line"><span class="comment"># instead to wait for more data in the output buffer. Some OS will really flush </span></span><br><span class="line"><span class="comment"># data on disk, some other OS will just try to do it ASAP.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Redis supports three different modes:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># no: don&#x27;t fsync, just let the OS flush the data when it wants. Faster.</span></span><br><span class="line"><span class="comment"># always: fsync after every write to the append only log . Slow, Safest.</span></span><br><span class="line"><span class="comment"># everysec: fsync only one time every second. Compromise.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The default is &quot;everysec&quot;, as that&#x27;s usually the right compromise between</span></span><br><span class="line"><span class="comment"># speed and data safety. It&#x27;s up to you to understand if you can relax this to</span></span><br><span class="line"><span class="comment"># &quot;no&quot; that will let the operating system flush the output buffer when</span></span><br><span class="line"><span class="comment"># it wants, for better performances (but if you can live with the idea of</span></span><br><span class="line"><span class="comment"># some data loss consider the default persistence mode that&#x27;s snapshotting),</span></span><br><span class="line"><span class="comment"># or on the contrary, use &quot;always&quot; that&#x27;s very slow but a bit safer than</span></span><br><span class="line"><span class="comment"># everysec.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># More details please check the following article:</span></span><br><span class="line"><span class="comment"># http://antirez.com/post/redis-persistence-demystified.html</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># If unsure, use &quot;everysec&quot;.</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># appendfsync always</span></span><br><span class="line">appendfsync everysec</span><br><span class="line"><span class="comment"># appendfsync no</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># When the AOF fsync policy is set to always or everysec, and a background</span></span><br><span class="line"><span class="comment"># saving process (a background save or AOF log background rewriting) is</span></span><br><span class="line"><span class="comment"># performing a lot of I/O against the disk, in some Linux configurations</span></span><br><span class="line"><span class="comment"># Redis may block too long on the fsync() call. Note that there is no fix for</span></span><br><span class="line"><span class="comment"># this currently, as even performing fsync in a different thread will block</span></span><br><span class="line"><span class="comment"># our synchronous write(2) call.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># In order to mitigate this problem it&#x27;s possible to use the following option</span></span><br><span class="line"><span class="comment"># that will prevent fsync() from being called in the main process while a</span></span><br><span class="line"><span class="comment"># BGSAVE or BGREWRITEAOF is in progress.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This means that while another child is saving, the durability of Redis is</span></span><br><span class="line"><span class="comment"># the same as &quot;appendfsync none&quot;. In practical terms, this means that it is</span></span><br><span class="line"><span class="comment"># possible to lose up to 30 seconds of log in the worst scenario (with the</span></span><br><span class="line"><span class="comment"># default Linux settings).</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># If you have latency problems turn this to &quot;yes&quot;. Otherwise leave it as</span></span><br><span class="line"><span class="comment"># &quot;no&quot; that is the safest pick from the point of view of durability.</span></span><br><span class="line"> </span><br><span class="line">no<span class="literal">-appendfsync</span><span class="literal">-on</span><span class="literal">-rewrite</span> no</span><br><span class="line"> </span><br><span class="line"><span class="comment"># Automatic rewrite of the append only file.</span></span><br><span class="line"><span class="comment"># Redis is able to automatically rewrite the log file implicitly calling</span></span><br><span class="line"><span class="comment"># BGREWRITEAOF when the AOF log size grows by the specified percentage.</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># This is how it works: Redis remembers the size of the AOF file after the</span></span><br><span class="line"><span class="comment"># latest rewrite (if no rewrite has happened since the restart, the size of</span></span><br><span class="line"><span class="comment"># the AOF at startup is used).</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This base size is compared to the current size. If the current size is</span></span><br><span class="line"><span class="comment"># bigger than the specified percentage, the rewrite is triggered. Also</span></span><br><span class="line"><span class="comment"># you need to specify a minimal size for the AOF file to be rewritten, this</span></span><br><span class="line"><span class="comment"># is useful to avoid rewriting the AOF file even if the percentage increase</span></span><br><span class="line"><span class="comment"># is reached but it is still pretty small.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Specify a percentage of zero in order to disable the automatic AOF</span></span><br><span class="line"><span class="comment"># rewrite feature.</span></span><br><span class="line"> </span><br><span class="line">auto<span class="literal">-aof</span><span class="literal">-rewrite</span><span class="literal">-percentage</span> <span class="number">100</span></span><br><span class="line">auto<span class="literal">-aof</span><span class="literal">-rewrite</span><span class="literal">-min</span><span class="literal">-size</span> <span class="number">64</span>mb</span><br><span class="line"> </span><br><span class="line"><span class="comment">################################ LUA SCRIPTING  ###############################</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Max execution time of a Lua script in milliseconds.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># If the maximum execution time is reached Redis will log that a script is</span></span><br><span class="line"><span class="comment"># still in execution after the maximum allowed time and will start to</span></span><br><span class="line"><span class="comment"># reply to queries with an error.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># When a long running script exceed the maximum execution time only the</span></span><br><span class="line"><span class="comment"># SCRIPT KILL and SHUTDOWN NOSAVE commands are available. The first can be</span></span><br><span class="line"><span class="comment"># used to stop a script that did not yet called write commands. The second</span></span><br><span class="line"><span class="comment"># is the only way to shut down the server in the case a write commands was</span></span><br><span class="line"><span class="comment"># already issue by the script but the user don&#x27;t want to wait for the natural</span></span><br><span class="line"><span class="comment"># termination of the script.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Set it to 0 or a negative value for unlimited execution without warnings.</span></span><br><span class="line">lua<span class="literal">-time</span><span class="literal">-limit</span> <span class="number">5000</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">################################ REDIS 集群  ###############################</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 启用或停用集群</span></span><br><span class="line"><span class="comment"># cluster-enabled yes</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Every cluster node has a cluster configuration file. This file is not</span></span><br><span class="line"><span class="comment"># intended to be edited by hand. It is created and updated by Redis nodes.</span></span><br><span class="line"><span class="comment"># Every Redis Cluster node requires a different cluster configuration file.</span></span><br><span class="line"><span class="comment"># Make sure that instances running in the same system does not have</span></span><br><span class="line"><span class="comment"># overlapping cluster configuration file names.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># cluster-config-file nodes-6379.conf</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Cluster node timeout is the amount of milliseconds a node must be unreachable </span></span><br><span class="line"><span class="comment"># for it to be considered in failure state.</span></span><br><span class="line"><span class="comment"># Most other internal time limits are multiple of the node timeout.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># cluster-node-timeout 15000</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># A slave of a failing master will avoid to start a failover if its data</span></span><br><span class="line"><span class="comment"># looks too old.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># There is no simple way for a slave to actually have a exact measure of</span></span><br><span class="line"><span class="comment"># its &quot;data age&quot;, so the following two checks are performed:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 1) If there are multiple slaves able to failover, they exchange messages</span></span><br><span class="line"><span class="comment">#    in order to try to give an advantage to the slave with the best</span></span><br><span class="line"><span class="comment">#    replication offset (more data from the master processed).</span></span><br><span class="line"><span class="comment">#    Slaves will try to get their rank by offset, and apply to the start</span></span><br><span class="line"><span class="comment">#    of the failover a delay proportional to their rank.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 2) Every single slave computes the time of the last interaction with</span></span><br><span class="line"><span class="comment">#    its master. This can be the last ping or command received (if the master</span></span><br><span class="line"><span class="comment">#    is still in the &quot;connected&quot; state), or the time that elapsed since the</span></span><br><span class="line"><span class="comment">#    disconnection with the master (if the replication link is currently down).</span></span><br><span class="line"><span class="comment">#    If the last interaction is too old, the slave will not try to failover</span></span><br><span class="line"><span class="comment">#    at all.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The point &quot;2&quot; can be tuned by user. Specifically a slave will not perform</span></span><br><span class="line"><span class="comment"># the failover if, since the last interaction with the master, the time</span></span><br><span class="line"><span class="comment"># elapsed is greater than:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   (node-timeout * slave-validity-factor) + repl-ping-slave-period</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># So for example if node-timeout is 30 seconds, and the slave-validity-factor</span></span><br><span class="line"><span class="comment"># is 10, and assuming a default repl-ping-slave-period of 10 seconds, the</span></span><br><span class="line"><span class="comment"># slave will not try to failover if it was not able to talk with the master</span></span><br><span class="line"><span class="comment"># for longer than 310 seconds.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># A large slave-validity-factor may allow slaves with too old data to failover</span></span><br><span class="line"><span class="comment"># a master, while a too small value may prevent the cluster from being able to</span></span><br><span class="line"><span class="comment"># elect a slave at all.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># For maximum availability, it is possible to set the slave-validity-factor</span></span><br><span class="line"><span class="comment"># to a value of 0, which means, that slaves will always try to failover the</span></span><br><span class="line"><span class="comment"># master regardless of the last time they interacted with the master.</span></span><br><span class="line"><span class="comment"># (However they&#x27;ll always try to apply a delay proportional to their</span></span><br><span class="line"><span class="comment"># offset rank).</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Zero is the only value able to guarantee that when all the partitions heal</span></span><br><span class="line"><span class="comment"># the cluster will always be able to continue.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># cluster-slave-validity-factor 10</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Cluster slaves are able to migrate to orphaned masters, that are masters</span></span><br><span class="line"><span class="comment"># that are left without working slaves. This improves the cluster ability</span></span><br><span class="line"><span class="comment"># to resist to failures as otherwise an orphaned master can&#x27;t be failed over</span></span><br><span class="line"><span class="comment"># in case of failure if it has no working slaves.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Slaves migrate to orphaned masters only if there are still at least a</span></span><br><span class="line"><span class="comment"># given number of other working slaves for their old master. This number</span></span><br><span class="line"><span class="comment"># is the &quot;migration barrier&quot;. A migration barrier of 1 means that a slave</span></span><br><span class="line"><span class="comment"># will migrate only if there is at least 1 other working slave for its master</span></span><br><span class="line"><span class="comment"># and so forth. It usually reflects the number of slaves you want for every</span></span><br><span class="line"><span class="comment"># master in your cluster.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Default is 1 (slaves migrate only if their masters remain with at least</span></span><br><span class="line"><span class="comment"># one slave). To disable migration just set it to a very large value.</span></span><br><span class="line"><span class="comment"># A value of 0 can be set but is useful only for debugging and dangerous</span></span><br><span class="line"><span class="comment"># in production.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># cluster-migration-barrier 1</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># In order to setup your cluster make sure to read the documentation</span></span><br><span class="line"><span class="comment"># available at http://redis.io web site.</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">################################## SLOW LOG ###################################</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># The Redis Slow Log is a system to log queries that exceeded a specified</span></span><br><span class="line"><span class="comment"># execution time. The execution time does not include the I/O operations</span></span><br><span class="line"><span class="comment"># like talking with the client, sending the reply and so forth,</span></span><br><span class="line"><span class="comment"># but just the time needed to actually execute the command (this is the only</span></span><br><span class="line"><span class="comment"># stage of command execution where the thread is blocked and can not serve</span></span><br><span class="line"><span class="comment"># other requests in the meantime).</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># You can configure the slow log with two parameters: one tells Redis</span></span><br><span class="line"><span class="comment"># what is the execution time, in microseconds, to exceed in order for the</span></span><br><span class="line"><span class="comment"># command to get logged, and the other parameter is the length of the</span></span><br><span class="line"><span class="comment"># slow log. When a new command is logged the oldest one is removed from the</span></span><br><span class="line"><span class="comment"># queue of logged commands.</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># The following time is expressed in microseconds, so 1000000 is equivalent</span></span><br><span class="line"><span class="comment"># to one second. Note that a negative number disables the slow log, while</span></span><br><span class="line"><span class="comment"># a value of zero forces the logging of every command.</span></span><br><span class="line">slowlog<span class="literal">-log</span><span class="literal">-slower</span><span class="literal">-than</span> <span class="number">10000</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># There is no limit to this length. Just be aware that it will consume memory.</span></span><br><span class="line"><span class="comment"># You can reclaim memory used by the slow log with SLOWLOG RESET.</span></span><br><span class="line">slowlog<span class="literal">-max</span><span class="literal">-len</span> <span class="number">128</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">############################# Event notification ##############################</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Redis can notify Pub/Sub clients about events happening in the key space.</span></span><br><span class="line"><span class="comment"># This feature is documented at http://redis.io/topics/keyspace-events</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># For instance if keyspace events notification is enabled, and a client</span></span><br><span class="line"><span class="comment"># performs a DEL operation on key &quot;foo&quot; stored in the Database 0, two</span></span><br><span class="line"><span class="comment"># messages will be published via Pub/Sub:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># PUBLISH __keyspace@0__:foo del</span></span><br><span class="line"><span class="comment"># PUBLISH __keyevent@0__:del foo</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># It is possible to select the events that Redis will notify among a set</span></span><br><span class="line"><span class="comment"># of classes. Every class is identified by a single character:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#  K     Keyspace events, published with __keyspace@&lt;db&gt;__ prefix.</span></span><br><span class="line"><span class="comment">#  E     Keyevent events, published with __keyevent@&lt;db&gt;__ prefix.</span></span><br><span class="line"><span class="comment">#  g     Generic commands (non-type specific) like DEL, EXPIRE, RENAME, ...</span></span><br><span class="line"><span class="comment">#  $     String commands</span></span><br><span class="line"><span class="comment">#  l     List commands</span></span><br><span class="line"><span class="comment">#  s     Set commands</span></span><br><span class="line"><span class="comment">#  h     Hash commands</span></span><br><span class="line"><span class="comment">#  z     Sorted set commands</span></span><br><span class="line"><span class="comment">#  x     Expired events (events generated every time a key expires)</span></span><br><span class="line"><span class="comment">#  e     Evicted events (events generated when a key is evicted for maxmemory)</span></span><br><span class="line"><span class="comment">#  A     Alias for g$lshzxe, so that the &quot;AKE&quot; string means all the events.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#  The &quot;notify-keyspace-events&quot; takes as argument a string that is composed</span></span><br><span class="line"><span class="comment">#  by zero or multiple characters. The empty string means that notifications</span></span><br><span class="line"><span class="comment">#  are disabled at all.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#  Example: to enable list and generic events, from the point of view of the</span></span><br><span class="line"><span class="comment">#           event name, use:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#  notify-keyspace-events Elg</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#  Example 2: to get the stream of the expired keys subscribing to channel</span></span><br><span class="line"><span class="comment">#             name __keyevent@0__:expired use:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#  notify-keyspace-events Ex</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#  By default all notifications are disabled because most users don&#x27;t need</span></span><br><span class="line"><span class="comment">#  this feature and the feature has some overhead. Note that if you don&#x27;t</span></span><br><span class="line"><span class="comment">#  specify at least one of K or E, no events will be delivered.</span></span><br><span class="line">notify<span class="literal">-keyspace</span><span class="literal">-events</span> <span class="string">&quot;&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">############################### ADVANCED CONFIG ###############################</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Hashes are encoded using a memory efficient data structure when they have a</span></span><br><span class="line"><span class="comment"># small number of entries, and the biggest entry does not exceed a given</span></span><br><span class="line"><span class="comment"># threshold. These thresholds can be configured using the following directives.</span></span><br><span class="line">hash<span class="literal">-max</span><span class="literal">-ziplist</span><span class="literal">-entries</span> <span class="number">512</span></span><br><span class="line">hash<span class="literal">-max</span><span class="literal">-ziplist</span><span class="literal">-value</span> <span class="number">64</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Similarly to hashes, small lists are also encoded in a special way in order</span></span><br><span class="line"><span class="comment"># to save a lot of space. The special representation is only used when</span></span><br><span class="line"><span class="comment"># you are under the following limits:</span></span><br><span class="line">list<span class="literal">-max</span><span class="literal">-ziplist</span><span class="literal">-entries</span> <span class="number">512</span></span><br><span class="line">list<span class="literal">-max</span><span class="literal">-ziplist</span><span class="literal">-value</span> <span class="number">64</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Sets have a special encoding in just one case: when a set is composed</span></span><br><span class="line"><span class="comment"># of just strings that happens to be integers in radix 10 in the range</span></span><br><span class="line"><span class="comment"># of 64 bit signed integers.</span></span><br><span class="line"><span class="comment"># The following configuration setting sets the limit in the size of the</span></span><br><span class="line"><span class="comment"># set in order to use this special memory saving encoding.</span></span><br><span class="line"><span class="built_in">set-max</span><span class="literal">-intset</span><span class="literal">-entries</span> <span class="number">512</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Similarly to hashes and lists, sorted sets are also specially encoded in</span></span><br><span class="line"><span class="comment"># order to save a lot of space. This encoding is only used when the length and</span></span><br><span class="line"><span class="comment"># elements of a sorted set are below the following limits:</span></span><br><span class="line">z<span class="built_in">set-max</span><span class="literal">-ziplist</span><span class="literal">-entries</span> <span class="number">128</span></span><br><span class="line">z<span class="built_in">set-max</span><span class="literal">-ziplist</span><span class="literal">-value</span> <span class="number">64</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># HyperLogLog sparse representation bytes limit. The limit includes the</span></span><br><span class="line"><span class="comment"># 16 bytes header. When an HyperLogLog using the sparse representation crosses</span></span><br><span class="line"><span class="comment"># this limit, it is converted into the dense representation.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># A value greater than 16000 is totally useless, since at that point the</span></span><br><span class="line"><span class="comment"># dense representation is more memory efficient.</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># The suggested value is ~ 3000 in order to have the benefits of</span></span><br><span class="line"><span class="comment"># the space efficient encoding without slowing down too much PFADD,</span></span><br><span class="line"><span class="comment"># which is O(N) with the sparse encoding. The value can be raised to</span></span><br><span class="line"><span class="comment"># ~ 10000 when CPU is not a concern, but space is, and the data set is</span></span><br><span class="line"><span class="comment"># composed of many HyperLogLogs with cardinality in the 0 - 15000 range.</span></span><br><span class="line">hll<span class="literal">-sparse</span><span class="literal">-max</span><span class="literal">-bytes</span> <span class="number">3000</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Active rehashing uses 1 millisecond every 100 milliseconds of CPU time in</span></span><br><span class="line"><span class="comment"># order to help rehashing the main Redis hash table (the one mapping top-level</span></span><br><span class="line"><span class="comment"># keys to values). The hash table implementation Redis uses (see dict.c)</span></span><br><span class="line"><span class="comment"># performs a lazy rehashing: the more operation you run into a hash table</span></span><br><span class="line"><span class="comment"># that is rehashing, the more rehashing &quot;steps&quot; are performed, so if the</span></span><br><span class="line"><span class="comment"># server is idle the rehashing is never complete and some more memory is used</span></span><br><span class="line"><span class="comment"># by the hash table.</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># The default is to use this millisecond 10 times every second in order to</span></span><br><span class="line"><span class="comment"># active rehashing the main dictionaries, freeing memory when possible.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># If unsure:</span></span><br><span class="line"><span class="comment"># use &quot;activerehashing no&quot; if you have hard latency requirements and it is</span></span><br><span class="line"><span class="comment"># not a good thing in your environment that Redis can reply form time to time</span></span><br><span class="line"><span class="comment"># to queries with 2 milliseconds delay.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># use &quot;activerehashing yes&quot; if you don&#x27;t have such hard requirements but</span></span><br><span class="line"><span class="comment"># want to free memory asap when possible.</span></span><br><span class="line">activerehashing yes</span><br><span class="line"> </span><br><span class="line"><span class="comment"># The client output buffer limits can be used to force disconnection of clients</span></span><br><span class="line"><span class="comment"># that are not reading data from the server fast enough for some reason (a</span></span><br><span class="line"><span class="comment"># common reason is that a Pub/Sub client can&#x27;t consume messages as fast as the</span></span><br><span class="line"><span class="comment"># publisher can produce them).</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The limit can be set differently for the three different classes of clients:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># normal -&gt; normal clients</span></span><br><span class="line"><span class="comment"># slave  -&gt; slave clients and MONITOR clients</span></span><br><span class="line"><span class="comment"># pubsub -&gt; clients subscribed to at least one pubsub channel or pattern</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The syntax of every client-output-buffer-limit directive is the following:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># client-output-buffer-limit &lt;class&gt; &lt;hard limit&gt; &lt;soft limit&gt; &lt;soft seconds&gt;</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># A client is immediately disconnected once the hard limit is reached, or if</span></span><br><span class="line"><span class="comment"># the soft limit is reached and remains reached for the specified number of</span></span><br><span class="line"><span class="comment"># seconds (continuously).</span></span><br><span class="line"><span class="comment"># So for instance if the hard limit is 32 megabytes and the soft limit is</span></span><br><span class="line"><span class="comment"># 16 megabytes / 10 seconds, the client will get disconnected immediately</span></span><br><span class="line"><span class="comment"># if the size of the output buffers reach 32 megabytes, but will also get</span></span><br><span class="line"><span class="comment"># disconnected if the client reaches 16 megabytes and continuously overcomes</span></span><br><span class="line"><span class="comment"># the limit for 10 seconds.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># By default normal clients are not limited because they don&#x27;t receive data</span></span><br><span class="line"><span class="comment"># without asking (in a push way), but just after a request, so only</span></span><br><span class="line"><span class="comment"># asynchronous clients may create a scenario where data is requested faster</span></span><br><span class="line"><span class="comment"># than it can read.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Instead there is a default limit for pubsub and slave clients, since</span></span><br><span class="line"><span class="comment"># subscribers and slaves receive data in a push fashion.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Both the hard or the soft limit can be disabled by setting them to zero.</span></span><br><span class="line">client<span class="literal">-output</span><span class="literal">-buffer</span><span class="literal">-limit</span> normal <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line">client<span class="literal">-output</span><span class="literal">-buffer</span><span class="literal">-limit</span> slave <span class="number">256</span>mb <span class="number">64</span>mb <span class="number">60</span></span><br><span class="line">client<span class="literal">-output</span><span class="literal">-buffer</span><span class="literal">-limit</span> pubsub <span class="number">32</span>mb <span class="number">8</span>mb <span class="number">60</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Redis calls an internal function to perform many background tasks, like</span></span><br><span class="line"><span class="comment"># closing connections of clients in timeout, purging expired keys that are</span></span><br><span class="line"><span class="comment"># never requested, and so forth.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Not all tasks are performed with the same frequency, but Redis checks for</span></span><br><span class="line"><span class="comment"># tasks to perform accordingly to the specified &quot;hz&quot; value.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># By default &quot;hz&quot; is set to 10. Raising the value will use more CPU when</span></span><br><span class="line"><span class="comment"># Redis is idle, but at the same time will make Redis more responsive when</span></span><br><span class="line"><span class="comment"># there are many keys expiring at the same time, and timeouts may be</span></span><br><span class="line"><span class="comment"># handled with more precision.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The range is between 1 and 500, however a value over 100 is usually not</span></span><br><span class="line"><span class="comment"># a good idea. Most users should use the default of 10 and raise this up to</span></span><br><span class="line"><span class="comment"># 100 only in environments where very low latency is required.</span></span><br><span class="line">hz <span class="number">10</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># When a child rewrites the AOF file, if the following option is enabled</span></span><br><span class="line"><span class="comment"># the file will be fsync-ed every 32 MB of data generated. This is useful</span></span><br><span class="line"><span class="comment"># in order to commit the file to the disk more incrementally and avoid</span></span><br><span class="line"><span class="comment"># big latency spikes.</span></span><br><span class="line">aof<span class="literal">-rewrite</span><span class="literal">-incremental</span><span class="literal">-fsync</span> yes</span><br></pre></td></tr></table></figure><h4 id="Redis持久化"><a href="#Redis持久化" class="headerlink" title="Redis持久化"></a>Redis持久化</h4><h5 id="RDB"><a href="#RDB" class="headerlink" title="RDB"></a>RDB</h5><p><img src="/2021/08/10/redis/image-20220323135334468.png" alt="./redis"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.docker 启动redis镜像</span></span><br><span class="line">mkdir <span class="literal">-p</span> /myredis/<span class="keyword">data</span>/</span><br><span class="line">mkdir <span class="literal">-p</span> /myredis/conf/</span><br><span class="line">vim redis.conf <span class="comment"># 写入redis配置文件</span></span><br><span class="line">docker run <span class="literal">-p</span> <span class="number">6379</span>:<span class="number">6379</span> -<span class="literal">-name</span> redis <span class="literal">-v</span> /myredis/<span class="keyword">data</span>:/<span class="keyword">data</span> <span class="literal">-v</span> /myredis/conf/redis.conf:/usr/local/etc/redis/redis.conf <span class="literal">-d</span> redis:<span class="number">6.0</span> redis<span class="literal">-server</span> /usr/local/etc/redis/redis.conf </span><br><span class="line">docker exec <span class="literal">-it</span> redis sh</span><br><span class="line">redis<span class="literal">-cli</span></span><br><span class="line">auth Foda2022</span><br><span class="line"><span class="comment">#2.redis.conf 中rdb保存机制</span></span><br><span class="line">save <span class="number">20</span> <span class="number">3</span> <span class="comment"># 20秒之内保证有3个key发生变化就做持久化操作</span></span><br><span class="line"><span class="comment">#3.rdb恢复</span></span><br><span class="line"><span class="comment"># 关闭redis服务</span></span><br><span class="line"><span class="comment"># 备份文件拷贝到工作目录下改名为dump.rdb</span></span><br><span class="line"><span class="comment"># 启动redis，备份数据会直接加载</span></span><br><span class="line"><span class="comment">#4 rdb优势</span></span><br><span class="line">  <span class="comment"># 适合大规模的数据恢复</span></span><br><span class="line">  <span class="comment"># 对数据完整性和一致性要求不高更适合使用</span></span><br><span class="line">  <span class="comment"># 节省磁盘空间</span></span><br><span class="line">  <span class="comment"># 恢复速度更快</span></span><br><span class="line"><span class="comment">#5 rdb劣势</span></span><br><span class="line"> <span class="comment"># fork的时候使用（写时拷贝技术），内存中的数据被克隆了一份，会导致2倍的膨胀，如果数据庞大是比较消耗性能</span></span><br><span class="line"> <span class="comment"># 在备份周期间隔时间内做一次备份，但在服务宕机的时候可能最后一次数据会丢失</span></span><br></pre></td></tr></table></figure><h5 id="AOF"><a href="#AOF" class="headerlink" title="AOF"></a>AOF</h5><p><img src="/2021/08/10/redis/image-20220323164438938.png" alt="./redis"></p><ul><li>AOF默认不开启，如果同时开启AOF和RDB，系统默认取AOF数据</li><li>AOF的备份机制和性能虽然和RDB不同，但是备份和恢复的操作同RDB一样，都是拷贝备份文件，需要恢复的时候拷贝到工作目录，启动系统加载（config get dir 可查看工作目录）</li><li>redis-check-aof –fix appendonly.aof (修复AOF文件)</li><li>AOF同步频率设置</li><li><img src="/2021/08/10/redis/image-20220323170118182.png" alt="redis"></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">AOF持久化流程</span><br><span class="line"><span class="number">1</span>) 客户端的请求写命令会被append追加到AOF缓存区内</span><br><span class="line"><span class="number">2</span>) AOF缓存区会根据AOF持久化策略【always、everysec、no】将操作sync同步到磁盘的AOF文件中</span><br><span class="line"><span class="number">3</span>) AOF文件大小超过重写策略或手动重写时，会将AOF文件rewrite重写，压缩AOF文件容量</span><br><span class="line"><span class="number">4</span>）redis服务重启时，会重新load加载AOF文件中的写操作达到数据恢复目的</span><br><span class="line"></span><br><span class="line"><span class="comment"># 优势</span></span><br><span class="line"><span class="number">1</span>) 备份机制更稳健,丢失数据概率很低</span><br><span class="line"><span class="number">2</span>) 可读的日志文本，通过操作AOF文件，可以处理误操作</span><br><span class="line"><span class="comment"># 劣势</span></span><br><span class="line"><span class="number">1</span>) 比起RDB更占用磁盘空间</span><br><span class="line"><span class="number">2</span>) 恢复速度要慢</span><br><span class="line"><span class="number">3</span>) 每次读写同步的话，有性能压力</span><br></pre></td></tr></table></figure><h4 id="主从复制"><a href="#主从复制" class="headerlink" title="主从复制"></a>主从复制</h4><ul><li>读写分离，性能扩展</li><li>容灾的快速恢复</li></ul><p><img src="/2021/08/10/redis/image-20220323171518500.png" alt="redis"></p><p><code>过程原理</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 当从库和主库建立MS关系后，会向主数据库发送SYNC命令</span><br><span class="line"><span class="number">2.</span> 主库接收到SYNC命令后会开始在后台保存快照(RDB持久化过程)，并将期间接收到的写命令缓存起来</span><br><span class="line"><span class="number">3.</span> 当快照完成后，主Redis会将快照文件和所有缓存的写命令发送给从Redis</span><br><span class="line"><span class="number">4.</span> 从Redis接收到后，会载入快照文件并且执行收到的缓存的命令</span><br><span class="line"><span class="number">5.</span> 之后，主Redis每当接收到写命令时就会将命令发送从Redis，从而保证数据的一致</span><br></pre></td></tr></table></figure><p><code>redis1.conf</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#允许远程连接</span></span><br><span class="line">bind <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">port <span class="number">6379</span></span><br><span class="line"><span class="comment"># 关闭保护模式</span></span><br><span class="line">protected-mode no</span><br><span class="line"><span class="comment"># 让redis服务后台运行(因为使用docker启动时使用了-d参数，所以需要设置为no, 非docker设置为yes)</span></span><br><span class="line">daemonize no</span><br><span class="line"><span class="comment"># 设定密码(可选，如果这里开启了密码要求，slave的配置里masterauth就要加这个密码)</span></span><br><span class="line">requirepass Foda2022</span><br><span class="line">logfile <span class="string">&quot;/var/tmp/redis.log&quot;</span></span><br><span class="line"><span class="comment"># 从机需要设置该参数 (redis2.conf和redis3.conf需要将masterip设置为#主机的公网或者局域网ip，port)</span></span><br><span class="line"><span class="comment">#replicaof &lt;masterip&gt; &lt;masterport&gt;</span></span><br><span class="line"><span class="comment"># masterauth &lt;master-password&gt;</span></span><br></pre></td></tr></table></figure><p><code>redis2.conf</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">bind <span class="number">0.0</span>.<span class="number">0.0</span></span><br><span class="line">port <span class="number">6380</span></span><br><span class="line">protected<span class="literal">-mode</span> no</span><br><span class="line">daemonize no</span><br><span class="line">requirepass Foda2022</span><br><span class="line">logfile <span class="string">&quot;/var/tmp/redis.log&quot;</span></span><br><span class="line">replicaof <span class="number">192.168</span>.<span class="number">17.6</span> <span class="number">6379</span></span><br><span class="line">masterauth Foda2022</span><br></pre></td></tr></table></figure><p><code>redis3.conf</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">bind <span class="number">0.0</span>.<span class="number">0.0</span></span><br><span class="line">port <span class="number">6381</span></span><br><span class="line">protected<span class="literal">-mode</span> no</span><br><span class="line">daemonize no</span><br><span class="line">requirepass Foda2022</span><br><span class="line">logfile <span class="string">&quot;/var/tmp/redis.log&quot;</span></span><br><span class="line">replicaof <span class="number">192.168</span>.<span class="number">17.6</span> <span class="number">6379</span></span><br><span class="line">masterauth Foda2022</span><br></pre></td></tr></table></figure><p><code>启动服务</code></p><ul><li><p><img src="/2021/08/10/redis/image-20220324113126161.png" alt="redis"></p></li><li><p>进入redis2容器查看主从复制信息如下</p></li><li><p><img src="/2021/08/10/redis/image-20220324113222881.png" alt="redis"></p></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run <span class="literal">-p</span> <span class="number">6379</span>:<span class="number">6379</span> -<span class="literal">-name</span> redis1  <span class="literal">-v</span> /myredis/conf/redis1.conf:/usr/local/etc/redis/redis.conf <span class="literal">-d</span> redis:<span class="number">6.0</span> redis<span class="literal">-server</span>  /usr/local/etc/redis/redis.conf</span><br><span class="line"></span><br><span class="line">docker run <span class="literal">-p</span> <span class="number">6380</span>:<span class="number">6380</span> -<span class="literal">-name</span> redis2  <span class="literal">-v</span> /myredis/conf/redis2.conf:/usr/local/etc/redis/redis.conf <span class="literal">-d</span> redis:<span class="number">6.0</span> redis<span class="literal">-server</span>  /usr/local/etc/redis/redis.conf</span><br><span class="line"></span><br><span class="line">docker run <span class="literal">-p</span> <span class="number">6381</span>:<span class="number">6381</span> -<span class="literal">-name</span> redis3  <span class="literal">-v</span> /myredis/conf/redis3.conf:/usr/local/etc/redis/redis.conf <span class="literal">-d</span> redis:<span class="number">6.0</span> redis<span class="literal">-server</span>  /usr/local/etc/redis/redis.conf</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="哨兵"><a href="#哨兵" class="headerlink" title="哨兵"></a>哨兵</h4><p><img src="/2021/08/10/redis/007S8ZIlgy1gixi1z4m1uj30nj0j9dps.jpg" alt="redis"></p><ul><li>集群监控：负责监控 redis master 和 slave 进程是否正常工作。</li><li>消息通知：如果某个 redis 实例有故障，那么哨兵负责发送消息作为报警通知给管理员</li><li>故障转移：如果 master node 挂掉了，会自动转移到 slave node 上</li><li>配置中心：如果故障转移发生了，通知 client 客户端新的 master 地址。</li></ul><p><code>配置哨兵</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget http://download.redis.io/redis-stable/sentinel.conf</span><br><span class="line">cp sentinel.conf sentinel1.conf</span><br><span class="line">cp sentinel.conf sentinel2.conf</span><br><span class="line">cp sentinel.conf sentinel3.conf</span><br></pre></td></tr></table></figure><p><code>修改配置内容</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主端口为(26379,两个从设置为26380，26381)</span></span><br><span class="line">port <span class="number">26379</span></span><br><span class="line"><span class="comment"># 让sentinel服务后台运行</span></span><br><span class="line">daemonize no </span><br><span class="line">pidfile /var/run/redis<span class="literal">-sentinel</span>.pid</span><br><span class="line"><span class="comment"># 修改日志文件的路径</span></span><br><span class="line">logfile <span class="string">&quot;/var/tmp/sentinel.log&quot;</span></span><br><span class="line"><span class="comment"># 修改监控的主redis服务器</span></span><br><span class="line"><span class="comment"># 最后一个2表示，两台机器判定主被动下线后，就进行failover(故障转移)</span></span><br><span class="line">sentinel monitor mymaster <span class="number">192.168</span>.<span class="number">17.6</span> <span class="number">6379</span> <span class="number">2</span></span><br><span class="line">sentinel auth<span class="literal">-pass</span> mymaster Foda2022</span><br><span class="line"><span class="comment"># Default is 30 seconds.(30秒没连接maste视为宕机)</span></span><br><span class="line">sentinel down<span class="literal">-after</span><span class="literal">-milliseconds</span> mymaster <span class="number">30000</span></span><br><span class="line"><span class="comment">#SENTINEL resolve-hostnames no</span></span><br><span class="line"><span class="comment">#SENTINEL announce-hostnames no</span></span><br></pre></td></tr></table></figure><p><code>启动三个哨兵</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run -<span class="literal">-name</span> sentinel1  <span class="literal">-v</span> /myredis/conf/sentinel1.conf:/usr/local/etc/redis/sentinel.conf <span class="literal">-d</span> redis:<span class="number">6.0</span> redis<span class="literal">-sentinel</span>  /usr/local/etc/redis/sentinel.conf</span><br><span class="line"></span><br><span class="line">docker run -<span class="literal">-name</span> sentinel2  <span class="literal">-v</span> /myredis/conf/sentinel2.conf:/usr/local/etc/redis/sentinel.conf <span class="literal">-d</span> redis:<span class="number">6.0</span> redis<span class="literal">-sentinel</span>  /usr/local/etc/redis/sentinel.conf</span><br><span class="line"></span><br><span class="line">docker run -<span class="literal">-name</span> sentinel3  <span class="literal">-v</span> /myredis/conf/sentinel3.conf:/usr/local/etc/redis/sentinel.conf <span class="literal">-d</span> redis:<span class="number">6.0</span> redis<span class="literal">-sentinel</span>  /usr/local/etc/redis/sentinel.conf</span><br></pre></td></tr></table></figure><p><code>模拟主redis服务宕机</code></p><ul><li>主服务宕机故障转移，redis3变为主</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker stop redis1</span><br><span class="line">[<span class="type">root</span>@<span class="type">localhost</span> ~]<span class="comment"># docker exec -it sentinel1 sh</span></span><br><span class="line"><span class="comment"># redis-cli -p 26379</span></span><br><span class="line"><span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">26379</span>&gt; info sentinel</span><br><span class="line"><span class="comment"># Sentinel</span></span><br><span class="line">sentinel_masters:<span class="number">1</span></span><br><span class="line">sentinel_tilt:<span class="number">0</span></span><br><span class="line">sentinel_running_scripts:<span class="number">0</span></span><br><span class="line">sentinel_scripts_queue_length:<span class="number">0</span></span><br><span class="line">sentinel_simulate_failure_flags:<span class="number">0</span></span><br><span class="line">master0:name=mymaster,status=ok,address=<span class="number">172.17</span>.<span class="number">0.1</span>:<span class="number">6381</span>,slaves=<span class="number">2</span>,sentinels=<span class="number">3</span></span><br></pre></td></tr></table></figure><p><code>master redis3详情</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">6381</span>&gt; <span class="built_in">set</span> name sentinel</span><br><span class="line">OK</span><br><span class="line"><span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">6381</span>&gt; info replication</span><br><span class="line"><span class="comment"># Replication</span></span><br><span class="line">role:master</span><br><span class="line">connected_slaves:<span class="number">1</span></span><br><span class="line">slave0:ip=<span class="number">172.17</span>.<span class="number">0.1</span>,port=<span class="number">6380</span>,state=online,offset=<span class="number">1348727</span>,lag=<span class="number">1</span></span><br><span class="line">master_replid:<span class="number">2</span>e3cecb5d932bd40113017cdf480fc7cdbd5278f</span><br><span class="line">master_replid2:d7460d1bc769e2622b98f1793c22caa096800803</span><br><span class="line">master_repl_offset:<span class="number">1348997</span></span><br><span class="line">second_repl_offset:<span class="number">98086</span></span><br><span class="line">repl_backlog_active:<span class="number">1</span></span><br><span class="line">repl_backlog_size:<span class="number">1048576</span></span><br><span class="line">repl_backlog_first_byte_offset:<span class="number">300422</span></span><br><span class="line">repl_backlog_histlen:<span class="number">1048576</span></span><br><span class="line"><span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">6381</span>&gt;</span><br><span class="line"><span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">6381</span>&gt;</span><br><span class="line"><span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">6381</span>&gt; info replication</span><br><span class="line"><span class="comment"># Replication</span></span><br><span class="line">role:master</span><br><span class="line">connected_slaves:<span class="number">2</span></span><br><span class="line">slave0:ip=<span class="number">172.17</span>.<span class="number">0.1</span>,port=<span class="number">6380</span>,state=online,offset=<span class="number">1419575</span>,lag=<span class="number">1</span></span><br><span class="line">slave1:ip=<span class="number">172.17</span>.<span class="number">0.1</span>,port=<span class="number">6379</span>,state=online,offset=<span class="number">1419170</span>,lag=<span class="number">1</span></span><br><span class="line">master_replid:<span class="number">2</span>e3cecb5d932bd40113017cdf480fc7cdbd5278f</span><br><span class="line">master_replid2:d7460d1bc769e2622b98f1793c22caa096800803</span><br><span class="line">master_repl_offset:<span class="number">1419575</span></span><br><span class="line">second_repl_offset:<span class="number">98086</span></span><br><span class="line">repl_backlog_active:<span class="number">1</span></span><br><span class="line">repl_backlog_size:<span class="number">1048576</span></span><br><span class="line">repl_backlog_first_byte_offset:<span class="number">371000</span></span><br><span class="line">repl_backlog_histlen:<span class="number">1048576</span></span><br><span class="line"><span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">6381</span>&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>重新启动redis1</code></p><ul><li>由于之前redis主从设置的有登录认证密码，所以需要在redis1配置文件中打开masterauth </li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">localhost</span> ~]<span class="comment"># docker exec -it redis1 sh</span></span><br><span class="line"><span class="comment"># redis-cli</span></span><br><span class="line"><span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">6379</span>&gt; auth Foda2022</span><br><span class="line">OK</span><br><span class="line"><span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">6379</span>&gt; keys *</span><br><span class="line"><span class="number">1</span>) <span class="string">&quot;k2&quot;</span></span><br><span class="line"><span class="number">2</span>) <span class="string">&quot;k1&quot;</span></span><br><span class="line"><span class="number">3</span>) <span class="string">&quot;k3&quot;</span></span><br><span class="line"><span class="number">4</span>) <span class="string">&quot;name&quot;</span></span><br><span class="line"><span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">6379</span>&gt; info replication</span><br><span class="line"><span class="comment"># Replication</span></span><br><span class="line">role:slave</span><br><span class="line">master_host:<span class="number">172.17</span>.<span class="number">0.1</span></span><br><span class="line">master_port:<span class="number">6381</span></span><br><span class="line">master_link_status:up</span><br><span class="line">master_last_io_seconds_ago:<span class="number">1</span></span><br><span class="line">master_sync_in_progress:<span class="number">0</span></span><br><span class="line">slave_repl_offset:<span class="number">1415902</span></span><br><span class="line">slave_priority:<span class="number">100</span></span><br><span class="line">slave_read_only:<span class="number">1</span></span><br><span class="line">connected_slaves:<span class="number">0</span></span><br><span class="line">master_replid:<span class="number">2</span>e3cecb5d932bd40113017cdf480fc7cdbd5278f</span><br><span class="line">master_replid2:<span class="number">0000000000000000000000000000000000000000</span></span><br><span class="line">master_repl_offset:<span class="number">1415902</span></span><br><span class="line">second_repl_offset:<span class="literal">-1</span></span><br><span class="line">repl_backlog_active:<span class="number">1</span></span><br><span class="line">repl_backlog_size:<span class="number">1048576</span></span><br><span class="line">repl_backlog_first_byte_offset:<span class="number">1410168</span></span><br><span class="line">repl_backlog_histlen:<span class="number">5735</span></span><br><span class="line"><span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">6379</span>&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="缓存穿透"><a href="#缓存穿透" class="headerlink" title="缓存穿透"></a>缓存穿透</h4><ul><li><p><strong>缓存穿透</strong>是指缓存和数据库中都没有的数据，导致所有的请求都落到数据库上，造成数据库短时间内承受大量请求而崩掉</p></li><li><p><img src="/2021/08/10/redis/image-20220627153455984.png" alt="redis"></p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 解决方案</span></span><br><span class="line"><span class="number">1.</span> 接口层增加校验，如用户鉴权校验，<span class="built_in">id</span>做基础校验，<span class="built_in">id</span>&lt;=<span class="number">0</span>的直接拦截；</span><br><span class="line"><span class="number">2.</span> 从缓存取不到的数据，在数据库中也没有取到，这时也可以将key-value对写为key-null，缓存有效时间可以设置短点，如<span class="number">30</span>秒（设置太长会导致正常情况也没法使用）。这样可以防止攻击用户反复用同一个<span class="built_in">id</span>暴力攻击</span><br><span class="line"><span class="number">3.</span> 采用布隆过滤器，将所有可能存在的数据哈希到一个足够大的 bitmap 中，一个一定不存在的数据会被这个 bitmap 拦截掉，从而避免了对底层存储系统的查询压力</span><br></pre></td></tr></table></figure><h4 id="缓存击穿"><a href="#缓存击穿" class="headerlink" title="缓存击穿"></a>缓存击穿</h4><ul><li><p><strong>缓存击穿</strong>是指缓存中没有但数据库中有的数据（一般是缓存时间到期），这时由于并发用户特别多，同时读缓存没读到数据，又同时去数据库去取数据，引起数据库压力瞬间增大，造成过大压力。和缓存雪崩不同的是，缓存击穿指并发查同一条数据，缓存雪崩是不同数据都过期了，很多数据都查不到从而查数据库</p></li><li><p><img src="/2021/08/10/redis/image-20220627154843413.png" alt="redis"></p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 解决方案</span></span><br><span class="line"><span class="number">1.</span> 设置热点数据永远不过期。</span><br><span class="line"><span class="number">2.</span> 加互斥锁，互斥锁</span><br></pre></td></tr></table></figure><h4 id="缓存雪崩"><a href="#缓存雪崩" class="headerlink" title="缓存雪崩"></a>缓存雪崩</h4><ul><li><strong>缓存雪崩</strong>是指缓存同一时间大面积的失效，所以，后面的请求都会落到数据库上，造成数据库短时间内承受大量请求而崩掉</li><li> <img src="/2021/08/10/redis/image-20220627155212515.png" alt="redis"></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 解决方案</span></span><br><span class="line"><span class="number">1.</span> 缓存数据的过期时间设置随机，防止同一时间大量数据过期现象发生。</span><br><span class="line"><span class="number">2.</span> 一般并发量不是特别多的时候，使用最多的解决方案是加锁排队。</span><br><span class="line"><span class="number">3.</span> 给每一个缓存数据增加相应的缓存标记，记录缓存的是否失效，如果缓存标记失效，则更新数据缓存。</span><br></pre></td></tr></table></figure><h4 id="管道"><a href="#管道" class="headerlink" title="管道"></a>管道</h4><ul><li>redis-py默认在执行每次请求都会创建（连接池申请连接）和断开（归还连接池）一次连接操作，如果想要在一次请求中指定多个命令，则可以使用pipline实现一次请求指定多个命令，并且默认情况下一次pipline 是原子性操作</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> redis</span><br><span class="line"></span><br><span class="line">pool = redis.ConnectionPool(host=<span class="string">&#x27;192.168.17.210&#x27;</span>, port=<span class="number">6379</span>)</span><br><span class="line"></span><br><span class="line">r = redis.Redis(connection_pool=pool)</span><br><span class="line"></span><br><span class="line"><span class="comment"># pipe = r.pipeline(transaction=False)</span></span><br><span class="line">pipe = r.pipeline(transaction=<span class="literal">True</span>)</span><br><span class="line">pipe.multi()</span><br><span class="line">pipe.<span class="built_in">set</span>(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;xxx&#x27;</span>)</span><br><span class="line">pipe.<span class="built_in">set</span>(<span class="string">&#x27;role&#x27;</span>, <span class="string">&#x27;sb&#x27;</span>)</span><br><span class="line"></span><br><span class="line">pipe.execute()</span><br></pre></td></tr></table></figure><h4 id="diango中使用"><a href="#diango中使用" class="headerlink" title="diango中使用"></a>diango中使用</h4><p><strong>utils文件夹下的redis_pool.py</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> redis</span><br><span class="line"></span><br><span class="line">POOL = redis.ConnectionPool(host=<span class="string">&#x27;192.168.17.210&#x27;</span>, port=<span class="number">6379</span>, max_connections=<span class="number">1000</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>views.py</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render, HttpResponse</span><br><span class="line"><span class="keyword">from</span> utils.redis_pool <span class="keyword">import</span> POOL</span><br><span class="line"><span class="keyword">import</span> redis</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>(<span class="params">request</span>):</span></span><br><span class="line">    conn = redis.Redis(connection_pool=POOL)</span><br><span class="line">    conn.hset(<span class="string">&#x27;kkk&#x27;</span>, <span class="string">&#x27;age&#x27;</span>, <span class="number">18</span>)</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;设置成功&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">order</span>(<span class="params">request</span>):</span></span><br><span class="line">    conn = redis.Redis(connection_pool=POOL)</span><br><span class="line">    conn.hget(<span class="string">&#x27;kkk&#x27;</span>, <span class="string">&#x27;age&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;获取成功&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>方式二</strong></p><ul><li>安装django-redis</li><li>settings.py配置</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># redis配置</span></span><br><span class="line">CACHES = &#123;</span><br><span class="line">    <span class="string">&quot;default&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;BACKEND&quot;</span>: <span class="string">&quot;django_redis.cache.RedisCache&quot;</span>,</span><br><span class="line">        <span class="string">&quot;LOCATION&quot;</span>: <span class="string">&quot;redis://127.0.0.1:6379&quot;</span>,</span><br><span class="line">        <span class="string">&quot;OPTIONS&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;CLIENT_CLASS&quot;</span>: <span class="string">&quot;django_redis.client.DefaultClient&quot;</span>,</span><br><span class="line">            <span class="string">&quot;CONNECTION_POOL_KWARGS&quot;</span>: &#123;<span class="string">&quot;max_connections&quot;</span>: <span class="number">100</span>&#125;</span><br><span class="line">            <span class="comment"># &quot;PASSWORD&quot;: &quot;123&quot;,</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>views.py</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django_redis <span class="keyword">import</span> get_redis_connection</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get</span>(<span class="params">request</span>):</span></span><br><span class="line">    conn = get_redis_connection(<span class="string">&#x27;default&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(conn.hgetall(<span class="string">&#x27;kkk&#x27;</span>))</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;ok&#x27;</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h4&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span</summary>
      
    
    
    
    
    <category term="Redis" scheme="http://example.com/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>linux部署mongodb</title>
    <link href="http://example.com/2021/08/09/Linux%E9%83%A8%E7%BD%B2mongodb/"/>
    <id>http://example.com/2021/08/09/Linux%E9%83%A8%E7%BD%B2mongodb/</id>
    <published>2021-08-09T08:00:31.000Z</published>
    <updated>2022-08-23T03:34:50.915Z</updated>
    
    <content type="html"><![CDATA[<h4 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">打开网站 https://www.mongodb.com/download-center/community查找与Linux版本一致的MongoDB安装包</span><br><span class="line">可用 wget + 下载地址下载</span><br></pre></td></tr></table></figure><h4 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- 解压</span><br><span class="line">tar -zxvf mongodb-linux-x86_64-rhel70-<span class="number">4.2</span><span class="number">.3</span>.tgz</span><br><span class="line"></span><br><span class="line">- 将解压后的目录剪切到一个新目录 mongodb</span><br><span class="line">mv mongodb-linux-x86_64-rhel70-<span class="number">4.2</span><span class="number">.3</span> mongodb</span><br></pre></td></tr></table></figure><h4 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">- 创建数据库目录</span><br><span class="line">cd mongodb</span><br><span class="line">mkdir -p data/db</span><br><span class="line"></span><br><span class="line">- 创建日志目录</span><br><span class="line">mkdir log</span><br><span class="line"></span><br><span class="line">- 创建配置文件目录</span><br><span class="line">mkdir etc</span><br><span class="line">vim ./etc/mongodb.conf</span><br><span class="line"></span><br><span class="line">- 在新建的mongodb.conf输入下面内容</span><br><span class="line">dbpath=/root/mongodb/data/db  <span class="comment">#数据文件存放目录</span></span><br><span class="line">logpath=/root/mongodb/log/mongodb.log   <span class="comment">#日志文件</span></span><br><span class="line">logappend=true  <span class="comment">#错误日志采用追加模式</span></span><br><span class="line">port=<span class="number">27017</span>   <span class="comment">#端口</span></span><br><span class="line">fork=true    <span class="comment">#以守护程序的方式启用，即在后台运行</span></span><br><span class="line">journal=true  <span class="comment">#启用日志文件，默认启用</span></span><br><span class="line">quiet=true  <span class="comment">#这个选项可以过滤掉一些无用的日志信息，若需要调试使用请设置为false</span></span><br><span class="line"><span class="comment">#auth=true #需要认证。如果放开注释，就必须创建MongoDB的账号，使用账号与密码才可远程访问，第一次安装建议注释</span></span><br><span class="line"><span class="comment">#bind_ip=0.0.0.0 #允许远程访问，或者直接注释，127.0.0.1是只允许本地访问</span></span><br></pre></td></tr></table></figure><h4 id="启动MongoDB"><a href="#启动MongoDB" class="headerlink" title="启动MongoDB"></a>启动MongoDB</h4><p><img src="/2021/08/09/Linux%E9%83%A8%E7%BD%B2mongodb/image-20210809155244709.png" alt="linux部署mongodb"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- 在/root/mongodb/<span class="built_in">bin</span>工作目录下执行下面命令开始启动Mongodb</span><br><span class="line">cd <span class="built_in">bin</span></span><br><span class="line">pwd</span><br><span class="line">./mongod --config /root/mongodb/etc/mongodb.conf</span><br><span class="line">netstat -lanp | grep <span class="string">&quot;27017&quot;</span></span><br><span class="line">ps -ef | grep mongo</span><br><span class="line"></span><br><span class="line">- 关闭服务</span><br><span class="line">[root@localhost <span class="built_in">bin</span>]<span class="comment"># ./mongod -f ../etc/mongodb.conf --shutdown</span></span><br></pre></td></tr></table></figure><h4 id="创建MongoDB账号"><a href="#创建MongoDB账号" class="headerlink" title="创建MongoDB账号"></a>创建MongoDB账号</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost mongodb]<span class="comment"># cd bin</span></span><br><span class="line">[root@localhost <span class="built_in">bin</span>]<span class="comment"># ./mongo   # 启动服务</span></span><br><span class="line">&gt; show dbs</span><br><span class="line">admin   <span class="number">0.000</span>GB</span><br><span class="line">config  <span class="number">0.000</span>GB</span><br><span class="line">local   <span class="number">0.000</span>GB</span><br><span class="line">&gt; use admin</span><br><span class="line">switched to db admin</span><br><span class="line"></span><br><span class="line">&gt; db.createUser(&#123; user: <span class="string">&#x27;root&#x27;</span>, pwd: <span class="string">&#x27;1018&#x27;</span>,roles: [ &#123; role: <span class="string">&quot;root&quot;</span>, db: <span class="string">&quot;admin&quot;</span> &#125;] &#125;)</span><br><span class="line">Successfully added user: &#123;</span><br><span class="line"><span class="string">&quot;user&quot;</span> : <span class="string">&quot;root&quot;</span>,</span><br><span class="line"><span class="string">&quot;roles&quot;</span> : [</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;role&quot;</span> : <span class="string">&quot;root&quot;</span>,</span><br><span class="line"><span class="string">&quot;db&quot;</span> : <span class="string">&quot;admin&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用auth=true认证(需要在配置文件中添加auth=true，然后停止服务重启服务)</span></span><br><span class="line">&gt; db.auth(<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;1018&#x27;</span>)</span><br><span class="line"><span class="number">1</span></span><br><span class="line">&gt; show dbs</span><br><span class="line">&gt; db</span><br><span class="line">admin</span><br><span class="line">&gt; use test</span><br><span class="line">switched to db test</span><br><span class="line">&gt; db.firstCollection.save(&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;lhj&quot;</span>,<span class="string">&quot;age&quot;</span>:<span class="string">&quot;25&quot;</span>&#125;)</span><br><span class="line">WriteResult(&#123; <span class="string">&quot;nInserted&quot;</span> : <span class="number">1</span> &#125;)</span><br><span class="line">&gt; db.firstCollection.find(&#123;name:<span class="string">&quot;lhj&quot;</span>&#125;)</span><br><span class="line">&#123; <span class="string">&quot;_id&quot;</span> : ObjectId(<span class="string">&quot;611223f00e0a6be033a22c84&quot;</span>), <span class="string">&quot;name&quot;</span> : <span class="string">&quot;lhj&quot;</span>, <span class="string">&quot;age&quot;</span> : <span class="string">&quot;25&quot;</span> &#125;</span><br><span class="line">&gt; </span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">- 关闭mongo服务  </span><br><span class="line">&gt; db.shutdownServer()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建用户</span></span><br><span class="line">&gt; use admin</span><br><span class="line"></span><br><span class="line">db.createUser(</span><br><span class="line">&#123;</span><br><span class="line">user:<span class="string">&quot;root&quot;</span>,</span><br><span class="line">pwd:<span class="string">&quot;1018&quot;</span>,</span><br><span class="line">roles:[&#123;role:<span class="string">&quot;root&quot;</span>,db:<span class="string">&quot;admin&quot;</span>&#125;]</span><br><span class="line">&#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改密码</span></span><br><span class="line">方法<span class="number">1</span>：db.changeUserPassword(<span class="string">&quot;usertest&quot;</span>,<span class="string">&quot;changepass&quot;</span>);</span><br><span class="line"></span><br><span class="line">方法<span class="number">2</span>：db.updateUser(<span class="string">&quot;usertest&quot;</span>,&#123;pwd:<span class="string">&quot;changepass1&quot;</span>&#125;)；</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改用户权限</span></span><br><span class="line">db.updateUser(<span class="string">&quot;root&quot;</span>,&#123;roles:[ &#123;role:<span class="string">&quot;root&quot;</span>,db:<span class="string">&quot;admin&quot;</span>&#125; ]&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除用户</span></span><br><span class="line">db.dropUser(<span class="string">&#x27;xxx&#x27;</span>)</span><br><span class="line"></span><br><span class="line">- 这时候MongoDB的admin数据库就有了账号，启用auth=true，重启后，再连接就需要账号密码授权了</span><br><span class="line"></span><br><span class="line">数据库用户角色：read、readWrite;</span><br><span class="line">数据库管理角色：dbAdmin、dbOwner、userAdmin；</span><br><span class="line">集群管理角色：clusterAdmin、clusterManager、clusterMonitor、hostManager；</span><br><span class="line">备份恢复角色：backup、restore；</span><br><span class="line">所有数据库角色：readAnyDatabase、readWriteAnyDatabase、userAdminAnyDatabase、dbAdminAnyDatabase</span><br><span class="line">超级用户角色：root；这里还有几个角色间接或直接提供了系统超级用户的访问（dbOwner 、userAdmin、userAdminAnyDatabase）</span><br><span class="line">内部角色：__system</span><br><span class="line"></span><br><span class="line">Read：允许用户读取指定数据库</span><br><span class="line">readWrite：允许用户读写指定数据库</span><br><span class="line">dbAdmin：允许用户在指定数据库中执行管理函数，如索引创建、删除，查看统计或访问system.profile</span><br><span class="line">userAdmin：允许用户向system.users集合写入，可以找指定数据库里创建、删除和管理用户</span><br><span class="line">clusterAdmin：只在admin数据库中可用，赋予用户所有分片和复制集相关函数的管理权限。</span><br><span class="line">readAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的读权限</span><br><span class="line">readWriteAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的读写权限</span><br><span class="line">userAdminAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的userAdmin权限</span><br><span class="line">dbAdminAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的dbAdmin权限。</span><br><span class="line">root：只在admin数据库中可用。超级账号，超级权限</span><br><span class="line">dbOwner:代表数据库所有者角色，拥有最高该数据库最高权限</span><br></pre></td></tr></table></figure><h4 id="防火墙端口开放"><a href="#防火墙端口开放" class="headerlink" title="防火墙端口开放"></a>防火墙端口开放</h4><ul><li><strong>如果外网ip不能访问、也就是客户端无法连接，可能是需要放行防火墙端口</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">systemctl start firewalld  <span class="comment"># 开启防火墙</span></span><br><span class="line"></span><br><span class="line">systemctl status firewalld <span class="comment"># 防火墙状态</span></span><br><span class="line"></span><br><span class="line">firewall-cmd --zone=public --add-port=<span class="number">27017</span>/tcp --permanent <span class="comment"># 设置防火墙mongo放行端口(–permanent代表永久开启)</span></span><br><span class="line"></span><br><span class="line">firewall-cmd --reload <span class="comment"># 重启防火墙</span></span><br><span class="line"></span><br><span class="line">firewall-cmd --<span class="built_in">list</span>-ports <span class="comment"># 查看防火墙放行端口</span></span><br><span class="line"></span><br><span class="line">firewall-cmd --zone=public --remove-port=<span class="number">27017</span>/tcp --permanent  <span class="comment"># 关闭防火墙端口</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启设置防火墙</span></span><br><span class="line">（<span class="number">1</span>）设置开机启用防火墙：systemctl enable firewalld.service</span><br><span class="line"></span><br><span class="line">（<span class="number">2</span>）设置开机禁用防火墙：systemctl disable firewalld.service</span><br><span class="line"></span><br><span class="line">–zone <span class="comment">#作用域</span></span><br><span class="line">–add-port=<span class="number">9200</span>/tcp <span class="comment">#添加端口，格式为：端口/通讯协议</span></span><br><span class="line">–permanent <span class="comment">#永久生效，没有此参数重启后失效</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加端口后，必须用命令firewall-cmd --reload重新加载一遍才会生效</span></span><br></pre></td></tr></table></figure><h4 id="本地配置MongoDB服务"><a href="#本地配置MongoDB服务" class="headerlink" title="本地配置MongoDB服务"></a>本地配置MongoDB服务</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">- 本地MongoDB路径：D:\MongoDB\Server\<span class="number">3.4</span></span><br><span class="line">- 创建data文件夹</span><br><span class="line">    - 创建mongo.config(config文件可以先创建txt保存全部类型后更改为config)</span><br><span class="line">    - 进入data文件夹</span><br><span class="line">    - 创建log -&gt; mongo.log</span><br><span class="line">    - 创建db</span><br><span class="line">    - mongo.config 文件内容如下</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    dbpath=D:\MongoDB\Server\3.4\data\db</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">logpath=D:\MongoDB\Server\3.4\data\log\mongo.log</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    - cmd以管理员身份进入 d:</span><br><span class="line">    - cd D:\MongoDB\Server\<span class="number">3.4</span>\<span class="built_in">bin</span></span><br><span class="line">    - mongod.exe --config D:\MongoDB\Server\<span class="number">3.4</span>\mongo.config --install --serviceName <span class="string">&quot;MongoDB&quot;</span></span><br><span class="line">    </span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="测试本地连接"><a href="#测试本地连接" class="headerlink" title="测试本地连接"></a>测试本地连接</h4><p><strong>新建连接</strong></p><ul><li><a href="https://www.nosqlbooster.com/downloads">https://www.nosqlbooster.com/downloads</a></li></ul><p><img src="/2021/08/09/Linux%E9%83%A8%E7%BD%B2mongodb/image-20210810151512618.png" alt="linux部署mongodb"></p><p><strong>开启认证</strong></p><p><img src="/2021/08/09/Linux%E9%83%A8%E7%BD%B2mongodb/image-20210810151601249.png" alt="linux部署mongodb"></p><p><strong>默认的库</strong></p><p><img src="/2021/08/09/Linux%E9%83%A8%E7%BD%B2mongodb/image-20210810151724375.png" alt="linux部署mongodb"></p><p><strong>查看数据</strong></p><p><img src="/2021/08/09/Linux%E9%83%A8%E7%BD%B2mongodb/image-20210810152113408.png" alt="linux部署mongodb"></p><h4 id="python连接"><a href="#python连接" class="headerlink" title="python连接"></a>python连接</h4><ul><li><p>pip3 install pymongo</p></li><li><p>无密码</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pymongo <span class="keyword">import</span> MongoClient</span><br><span class="line">client = MongoClient(<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">27017</span>)  <span class="comment"># 建立客户端对象</span></span><br><span class="line">db = client.mydb  <span class="comment"># 连接mydb数据库，没有则自动创建</span></span><br><span class="line">collection = db.testset   <span class="comment"># 使用mydb下的testset集合，没有则自动创建</span></span><br><span class="line">collection.insert_one(&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;lxx&quot;</span>,<span class="string">&quot;age&quot;</span>:<span class="number">18</span>&#125;)   <span class="comment"># 插入一条数据，如果没出错那么说明连接成功</span></span><br><span class="line"><span class="comment"># 下面是遍历查询数据</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> collection.find():</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure><ul><li>有密码</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pymongo <span class="keyword">import</span> MongoClient</span><br><span class="line"></span><br><span class="line">client = MongoClient(<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">27017</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接mydb数据库,账号密码认证</span></span><br><span class="line">db = client.admin  </span><br><span class="line">db.authenticate(<span class="string">&quot;root&quot;</span>, <span class="string">&#x27;1018&#x27;</span>, mechanism=<span class="string">&#x27;SCRAM-SHA-1&#x27;</span>)</span><br><span class="line"></span><br><span class="line">collection = db.myset  <span class="comment"># admin下的myset，没有则新建</span></span><br><span class="line">collection.insert_one(&#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;lxx&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">18</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> collection.find():</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="pymongo简单使用"><a href="#pymongo简单使用" class="headerlink" title="pymongo简单使用"></a>pymongo简单使用</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pymongo <span class="keyword">import</span> MongoClient</span><br><span class="line"></span><br><span class="line">client = MongoClient(<span class="string">&#x27;192.168.17.210&#x27;</span>, <span class="number">27017</span>)</span><br><span class="line"></span><br><span class="line">db = client.admin</span><br><span class="line">db.authenticate(<span class="string">&quot;root&quot;</span>, <span class="string">&#x27;1018&#x27;</span>, mechanism=<span class="string">&#x27;SCRAM-SHA-1&#x27;</span>)</span><br><span class="line"></span><br><span class="line">collection = db[<span class="string">&#x27;test&#x27;</span>]</span><br></pre></td></tr></table></figure><p><strong>查看全部聚集名称</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(db.collection_names())</span><br><span class="line"><span class="string">&quot;&quot;&quot;[&#x27;system.users&#x27;, &#x27;test&#x27;, &#x27;system.version&#x27;]&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><p><strong>查看聚集的一条记录</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(collection.find_one())</span><br><span class="line"><span class="built_in">print</span>(collection.find_one(&#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;xxx&quot;</span>&#125;))</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;&#123;&#x27;_id&#x27;: ObjectId(&#x27;61138186c729b21c58113dce&#x27;), &#x27;name&#x27;: &#x27;lxx&#x27;, &#x27;age&#x27;: 18&#125;</span></span><br><span class="line"><span class="string">&#123;&#x27;_id&#x27;: ObjectId(&#x27;611383bfc729b207f4c4570d&#x27;), &#x27;name&#x27;: &#x27;xxx&#x27;, &#x27;age&#x27;: 18&#125;&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><p><strong>查看聚集的多条记录</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> collection.find():</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure><p><strong>查看聚集的记录统计</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">collection.find().count()</span><br></pre></td></tr></table></figure><p><strong>聚集查询结果排序</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">collection.find().sort(<span class="string">&#x27;name&#x27;</span>, pymongo.ASCENDING) <span class="comment"># 升序</span></span><br><span class="line">collection.find().sort(<span class="string">&#x27;name&#x27;</span>, pymongo.DESCENDING) <span class="comment"># 降序</span></span><br><span class="line">collection.find().sort([(<span class="string">&quot;name&quot;</span>,pymongo.ASCENDING),(<span class="string">&quot;age&quot;</span>,pymongo.DESCENDING)]) <span class="comment"># 多列排序</span></span><br></pre></td></tr></table></figure><p><strong>添加记录</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 增加一条数据</span></span><br><span class="line">collection.insert_one(&#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;xxx&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">18</span>&#125;)</span><br><span class="line"></span><br><span class="line">data = [&#123;<span class="string">&quot;name&quot;</span>: <span class="string">&#x27;test%s&#x27;</span> % i, <span class="string">&#x27;age&#x27;</span>: i&#125; <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>)]  <span class="comment"># 批量插入多条数据</span></span><br><span class="line">res = collection.insert_many(data, ordered=<span class="literal">False</span>)</span><br><span class="line"><span class="built_in">print</span>(res.inserted_ids)</span><br></pre></td></tr></table></figure><p><strong>修改记录</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">collection.update_one(&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;lxx&quot;</span>&#125;, &#123;<span class="string">&quot;$set&quot;</span>:&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;lll&quot;</span>,<span class="string">&quot;age&quot;</span>:<span class="string">&quot;11&quot;</span>&#125;&#125;)</span><br></pre></td></tr></table></figure><p><strong>删除记录</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除一条数据</span></span><br><span class="line">collection.delete_one(&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;lll&#x27;</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除全部数据</span></span><br><span class="line">ret = collection.delete_many(&#123;&#125;)</span><br><span class="line"><span class="built_in">print</span>(ret.deleted_count, <span class="string">&#x27;个数据已删除&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="mongodb-sql简单使用"><a href="#mongodb-sql简单使用" class="headerlink" title="mongodb sql简单使用"></a>mongodb sql简单使用</h4><p><img src="/2021/08/09/Linux%E9%83%A8%E7%BD%B2mongodb/image-20210811224656467.png" alt="linux部署mongodb"></p><p><img src="/2021/08/09/Linux%E9%83%A8%E7%BD%B2mongodb/image-20210811230220996.png" alt="linux部署mongodb"></p><h4 id="单机部署mongodb集群"><a href="#单机部署mongodb集群" class="headerlink" title="单机部署mongodb集群"></a>单机部署mongodb集群</h4><ul><li>把原有的mongodb安装目录复制到/usr/local/bin/</li></ul><p><strong>master.conf配置文件（主）</strong></p><ul><li>配置文件放在/usr/local/bin/mongodb/etc/ 目录下</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> master.conf</span></span><br><span class="line">dbpath=/usr/local/bin/mongodb/data/master</span><br><span class="line">logpath=/usr/local/bin/mongodb/log/master.log</span><br><span class="line">pidfilepath=/usr/local/bin/mongodb/master.pid</span><br><span class="line">directoryperdb=true</span><br><span class="line">logappend=true</span><br><span class="line">replSet=testrs</span><br><span class="line">bind_ip=192.168.17.210</span><br><span class="line">port=27017</span><br><span class="line">oplogSize=10000</span><br><span class="line">fork=true</span><br><span class="line">noprealloc=true</span><br></pre></td></tr></table></figure><p><strong>slaver.conf配置文件（副本）</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> slaver.conf</span></span><br><span class="line">dbpath=/usr/local/bin/mongodb/data/slaver</span><br><span class="line">logpath=/usr/local/bin/mongodb/log/slaver.log</span><br><span class="line">pidfilepath=/usr/local/bin/mongodb/slaver.pid</span><br><span class="line">directoryperdb=true</span><br><span class="line">logappend=true</span><br><span class="line">replSet=testrs</span><br><span class="line">bind_ip=192.168.17.210</span><br><span class="line">port=27018</span><br><span class="line">oplogSize=10000</span><br><span class="line">fork=true</span><br><span class="line">noprealloc=true</span><br></pre></td></tr></table></figure><p><strong>arbiter.conf配置文件（仲裁）</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> arbiter.conf</span></span><br><span class="line">dbpath=/usr/local/bin/mongodb/data/arbiter</span><br><span class="line">logpath=/usr/local/bin/mongodb/log/arbiter.log</span><br><span class="line">pidfilepath=/usr/local/bin/mongodb/arbiter.pid</span><br><span class="line">directoryperdb=true</span><br><span class="line">logappend=true</span><br><span class="line">replSet=testrs</span><br><span class="line">bind_ip=192.168.17.210</span><br><span class="line">port=27019</span><br><span class="line">oplogSize=10000</span><br><span class="line">fork=true</span><br><span class="line">noprealloc=true</span><br></pre></td></tr></table></figure><p><strong>启动mongodb</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> cd /usr/local/bin/mongodb/bin</span><br><span class="line">./mongod --config /usr/local/bin/mongodb/etc/master.conf </span><br><span class="line">./mongod --config /usr/local/bin/mongodb/etc/slaver.conf </span><br><span class="line">./mongod --config /usr/local/bin/mongodb/etc/arbiter.conf</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 连接服务</span></span><br><span class="line">./mongo 192.168.17.210:27017</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>配置主备仲裁节点</strong></p><p><img src="/2021/08/09/Linux%E9%83%A8%E7%BD%B2mongodb/image-20210812134215452.png" alt="linux部署mongodb"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cfg=&#123;</span><br><span class="line">   _id:&#x27;testrs&#x27;,</span><br><span class="line">   members:[</span><br><span class="line">       &#123;_id:0,host:&#x27;192.168.17.210:27017&#x27;&#125;,</span><br><span class="line">     &#123;_id:1,host:&#x27;192.168.17.210:27018&#x27;&#125;,</span><br><span class="line">        &#123;_id:2,host:&#x27;192.168.17.210:27019&#x27;,arbiterOnly:true&#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">rs.initiate(cfg)</span><br></pre></td></tr></table></figure><p><strong>查看集群信息rs.status()</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line">testrs:SECONDARY&gt; rs.status()</span><br><span class="line">&#123;</span><br><span class="line">&quot;set&quot; : &quot;testrs&quot;,</span><br><span class="line">&quot;date&quot; : ISODate(&quot;2021-08-12T05:43:39.110Z&quot;),</span><br><span class="line">&quot;myState&quot; : 1,</span><br><span class="line">&quot;term&quot; : NumberLong(1),</span><br><span class="line">&quot;syncingTo&quot; : &quot;&quot;,</span><br><span class="line">&quot;syncSourceHost&quot; : &quot;&quot;,</span><br><span class="line">&quot;syncSourceId&quot; : -1,</span><br><span class="line">&quot;heartbeatIntervalMillis&quot; : NumberLong(2000),</span><br><span class="line">&quot;optimes&quot; : &#123;</span><br><span class="line">&quot;lastCommittedOpTime&quot; : &#123;</span><br><span class="line">&quot;ts&quot; : Timestamp(1628747015, 1),</span><br><span class="line">&quot;t&quot; : NumberLong(1)</span><br><span class="line">&#125;,</span><br><span class="line">&quot;readConcernMajorityOpTime&quot; : &#123;</span><br><span class="line">&quot;ts&quot; : Timestamp(1628747015, 1),</span><br><span class="line">&quot;t&quot; : NumberLong(1)</span><br><span class="line">&#125;,</span><br><span class="line">&quot;appliedOpTime&quot; : &#123;</span><br><span class="line">&quot;ts&quot; : Timestamp(1628747015, 1),</span><br><span class="line">&quot;t&quot; : NumberLong(1)</span><br><span class="line">&#125;,</span><br><span class="line">&quot;durableOpTime&quot; : &#123;</span><br><span class="line">&quot;ts&quot; : Timestamp(1628747015, 1),</span><br><span class="line">&quot;t&quot; : NumberLong(1)</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;lastStableCheckpointTimestamp&quot; : Timestamp(1628747005, 1),</span><br><span class="line">&quot;members&quot; : [</span><br><span class="line">&#123;</span><br><span class="line">&quot;_id&quot; : 0,</span><br><span class="line">&quot;name&quot; : &quot;192.168.17.210:27017&quot;,</span><br><span class="line">&quot;health&quot; : 1,</span><br><span class="line">&quot;state&quot; : 1,</span><br><span class="line">&quot;stateStr&quot; : &quot;PRIMARY&quot;,</span><br><span class="line">&quot;uptime&quot; : 7702,</span><br><span class="line">&quot;optime&quot; : &#123;</span><br><span class="line">&quot;ts&quot; : Timestamp(1628747015, 1),</span><br><span class="line">&quot;t&quot; : NumberLong(1)</span><br><span class="line">&#125;,</span><br><span class="line">&quot;optimeDate&quot; : ISODate(&quot;2021-08-12T05:43:35Z&quot;),</span><br><span class="line">&quot;syncingTo&quot; : &quot;&quot;,</span><br><span class="line">&quot;syncSourceHost&quot; : &quot;&quot;,</span><br><span class="line">&quot;syncSourceId&quot; : -1,</span><br><span class="line">&quot;infoMessage&quot; : &quot;&quot;,</span><br><span class="line">&quot;electionTime&quot; : Timestamp(1628746884, 1),</span><br><span class="line">&quot;electionDate&quot; : ISODate(&quot;2021-08-12T05:41:24Z&quot;),</span><br><span class="line">&quot;configVersion&quot; : 1,</span><br><span class="line">&quot;self&quot; : true,</span><br><span class="line">&quot;lastHeartbeatMessage&quot; : &quot;&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;_id&quot; : 1,</span><br><span class="line">&quot;name&quot; : &quot;192.168.17.210:27018&quot;,</span><br><span class="line">&quot;health&quot; : 1,</span><br><span class="line">&quot;state&quot; : 2,</span><br><span class="line">&quot;stateStr&quot; : &quot;SECONDARY&quot;,</span><br><span class="line">&quot;uptime&quot; : 145,</span><br><span class="line">&quot;optime&quot; : &#123;</span><br><span class="line">&quot;ts&quot; : Timestamp(1628747015, 1),</span><br><span class="line">&quot;t&quot; : NumberLong(1)</span><br><span class="line">&#125;,</span><br><span class="line">&quot;optimeDurable&quot; : &#123;</span><br><span class="line">&quot;ts&quot; : Timestamp(1628747015, 1),</span><br><span class="line">&quot;t&quot; : NumberLong(1)</span><br><span class="line">&#125;,</span><br><span class="line">&quot;optimeDate&quot; : ISODate(&quot;2021-08-12T05:43:35Z&quot;),</span><br><span class="line">&quot;optimeDurableDate&quot; : ISODate(&quot;2021-08-12T05:43:35Z&quot;),</span><br><span class="line">&quot;lastHeartbeat&quot; : ISODate(&quot;2021-08-12T05:43:38.275Z&quot;),</span><br><span class="line">&quot;lastHeartbeatRecv&quot; : ISODate(&quot;2021-08-12T05:43:38.477Z&quot;),</span><br><span class="line">&quot;pingMs&quot; : NumberLong(0),</span><br><span class="line">&quot;lastHeartbeatMessage&quot; : &quot;&quot;,</span><br><span class="line">&quot;syncingTo&quot; : &quot;192.168.17.210:27017&quot;,</span><br><span class="line">&quot;syncSourceHost&quot; : &quot;192.168.17.210:27017&quot;,</span><br><span class="line">&quot;syncSourceId&quot; : 0,</span><br><span class="line">&quot;infoMessage&quot; : &quot;&quot;,</span><br><span class="line">&quot;configVersion&quot; : 1</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;_id&quot; : 2,</span><br><span class="line">&quot;name&quot; : &quot;192.168.17.210:27019&quot;,</span><br><span class="line">&quot;health&quot; : 1,</span><br><span class="line">&quot;state&quot; : 7,</span><br><span class="line">&quot;stateStr&quot; : &quot;ARBITER&quot;,</span><br><span class="line">&quot;uptime&quot; : 145,</span><br><span class="line">&quot;lastHeartbeat&quot; : ISODate(&quot;2021-08-12T05:43:38.275Z&quot;),</span><br><span class="line">&quot;lastHeartbeatRecv&quot; : ISODate(&quot;2021-08-12T05:43:37.388Z&quot;),</span><br><span class="line">&quot;pingMs&quot; : NumberLong(0),</span><br><span class="line">&quot;lastHeartbeatMessage&quot; : &quot;&quot;,</span><br><span class="line">&quot;syncingTo&quot; : &quot;&quot;,</span><br><span class="line">&quot;syncSourceHost&quot; : &quot;&quot;,</span><br><span class="line">&quot;syncSourceId&quot; : -1,</span><br><span class="line">&quot;infoMessage&quot; : &quot;&quot;,</span><br><span class="line">&quot;configVersion&quot; : 1</span><br><span class="line">&#125;</span><br><span class="line">],</span><br><span class="line">&quot;ok&quot; : 1,</span><br><span class="line">&quot;operationTime&quot; : Timestamp(1628747015, 1),</span><br><span class="line">&quot;$clusterTime&quot; : &#123;</span><br><span class="line">&quot;clusterTime&quot; : Timestamp(1628747015, 1),</span><br><span class="line">&quot;signature&quot; : &#123;</span><br><span class="line">&quot;hash&quot; : BinData(0,&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAA=&quot;),</span><br><span class="line">&quot;keyId&quot; : NumberLong(0)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">testrs:PRIMARY&gt; </span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>主节点新增记录</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">testrs:PRIMARY&gt; show dbs</span><br><span class="line">admin   0.000GB</span><br><span class="line">config  0.000GB</span><br><span class="line">local   0.000GB</span><br><span class="line"></span><br><span class="line">db.mydb.test.insert(&#123;&#x27;name&#x27;:&#x27;lxx&#x27;,&#x27;age&#x27;:18&#125;)</span><br><span class="line"></span><br><span class="line">db.mydb.test.find(&#123;&#125;)</span><br><span class="line"></span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;6114baf5c6cc6f16d0db38a1&quot;), &quot;name&quot; : &quot;lxx&quot;, &quot;age&quot; : 18 &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>副节点查看</strong></p><ul><li>当前不能读取集合的数据，当前节点只是一个备份，无非读取数据，需要为其设置</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">./mongo 192.168.17.210:27018 # 登录副节点</span><br><span class="line"></span><br><span class="line">testrs:SECONDARY&gt; show dbs  # 查看不到数据库</span><br><span class="line">2021-08-12T14:11:30.161+0800 E QUERY    [js] Error: listDatabases failed:&#123;</span><br><span class="line">&quot;operationTime&quot; : Timestamp(1628748686, 1),</span><br><span class="line">&quot;ok&quot; : 0,</span><br><span class="line">&quot;errmsg&quot; : &quot;not master and slaveOk=false&quot;,</span><br><span class="line">&quot;code&quot; : 13435,</span><br><span class="line">&quot;codeName&quot; : &quot;NotMasterNoSlaveOk&quot;,</span><br><span class="line">&quot;$clusterTime&quot; : &#123;</span><br><span class="line">&quot;clusterTime&quot; : Timestamp(1628748686, 1),</span><br><span class="line">&quot;signature&quot; : &#123;</span><br><span class="line">&quot;hash&quot; : BinData(0,&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAA=&quot;),</span><br><span class="line">&quot;keyId&quot; : NumberLong(0)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; :</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>设置读取操作</strong></p><ul><li>设置为奴隶节点，允许在从节点上进行读取操作</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">rs.secondaryOk() </span><br><span class="line">或</span><br><span class="line">rs.secondaryOk(true)</span><br><span class="line">rs.secondaryOk(false) # 取消读权限 </span><br><span class="line"><span class="meta">#</span><span class="bash"> 可以查看到数据</span></span><br><span class="line">testrs:SECONDARY&gt; rs.slaveOk()</span><br><span class="line">testrs:SECONDARY&gt; show dbs</span><br><span class="line">admin   0.000GB</span><br><span class="line">config  0.000GB</span><br><span class="line">local   0.000GB</span><br><span class="line">test    0.000GB</span><br><span class="line">testrs:SECONDARY&gt; db.mydb.test.find(&#123;&#125;)</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;6114baf5c6cc6f16d0db38a1&quot;), &quot;name&quot; : &quot;lhj&quot;, &quot;age&quot; : 18  </span><br></pre></td></tr></table></figure><p><strong>仲裁节点</strong></p><ul><li>不存放任何业务数据，可以登录查看</li><li>只能查看local数据库</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">./mongo 192.168.17.210:27019</span><br><span class="line">rs.slaveOk() </span><br><span class="line"></span><br><span class="line">testrs:ARBITER&gt; show dbs</span><br><span class="line">2021-08-12T14:31:52.134+0800 E QUERY    [js] Error: listDatabases failed:&#123;</span><br><span class="line">&quot;ok&quot; : 0,</span><br><span class="line">&quot;errmsg&quot; : &quot;not master and slaveOk=false&quot;,</span><br><span class="line">&quot;code&quot; : 13435,</span><br><span class="line">&quot;codeName&quot; : &quot;NotMasterNoSlaveOk&quot;</span><br><span class="line">&#125; :</span><br><span class="line">_getErrorWithCode@src/mongo/shell/utils.js:25:13</span><br><span class="line">Mongo.prototype.getDBs@src/mongo/shell/mongo.js:139:1</span><br><span class="line">shellHelper.show@src/mongo/shell/utils.js:882:13</span><br><span class="line">shellHelper@src/mongo/shell/utils.js:766:15</span><br><span class="line">@(shellhelp2):1:1</span><br><span class="line">testrs:ARBITER&gt; rs.secondaryOk() </span><br><span class="line">testrs:ARBITER&gt; show dbs</span><br><span class="line">local  0.000GB</span><br><span class="line">testrs:ARBITER&gt; </span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="多台虚拟机搭建集群"><a href="#多台虚拟机搭建集群" class="headerlink" title="多台虚拟机搭建集群"></a>多台虚拟机搭建集群</h4><p><strong>安装mongodb环境</strong></p><ul><li>三台虚拟机一样的操作</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">yum install lrzsz -y</span><br><span class="line">tar -xvf mongodb-linux-x86_64-4.1.3.tgz</span><br><span class="line">mv mongodb-linux-x86_64-4.0.13 /usr/local/bin/mongodb</span><br><span class="line">cd mongodb/</span><br><span class="line">mkdir -p data/db</span><br><span class="line">mkdir log</span><br><span class="line">mkdir etc</span><br><span class="line">vim ./etc/mongodb.conf</span><br></pre></td></tr></table></figure><p><strong>配置文件</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 192.168.17.6 配置文件</span></span><br><span class="line">dbpath=/usr/local/bin/mongodb/data/db  #数据文件存放目录       </span><br><span class="line">logpath=/usr/local/bin/mongodb/log/mongodb.log   #日志文件</span><br><span class="line">logappend=true  #错误日志采用追加模式</span><br><span class="line">port=27017   #端口</span><br><span class="line">fork=true    #以守护程序的方式启用，即在后台运行</span><br><span class="line">journal=true  #启用日志文件，默认启用</span><br><span class="line">quiet=true  #这个选项可以过滤掉一些无用的日志信息，若需要调试使用请设置为false</span><br><span class="line"><span class="meta">#</span><span class="bash">auth=<span class="literal">true</span> <span class="comment">#需要认证。如果放开注释，就必须创建MongoDB的账号，使用账号与密码才可远程访问，第一次安装建议注释</span></span></span><br><span class="line">bind_ip=0.0.0.0 #允许远程访问，或者直接注释，127.0.0.1是只允许本地访问 </span><br><span class="line">replSet=testrs # 集群名称</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 192.168.17.7配置文件</span></span><br><span class="line">dbpath=/usr/local/bin/mongodb/data/db  #数据文件存放目录</span><br><span class="line">logpath=/usr/local/bin/mongodb/log/mongodb.log   #日志文件</span><br><span class="line">logappend=true  #错误日志采用追加模式</span><br><span class="line">port=27017   #端口</span><br><span class="line">fork=true    #以守护程序的方式启用，即在后台运行</span><br><span class="line">journal=true  #启用日志文件，默认启用</span><br><span class="line">quiet=true  #这个选项可以过滤掉一些无用的日志信息，若需要调试使用请设置为false</span><br><span class="line"><span class="meta">#</span><span class="bash">auth=<span class="literal">true</span> <span class="comment">#需要认证。如果放开注释，就必须创建MongoDB的账号，使用账号与密码才可远程访问，第一次安装建议注释</span></span></span><br><span class="line">bind_ip=0.0.0.0 #允许远程访问，或者直接注释，127.0.0.1是只允许本地访问</span><br><span class="line">replSet=testrs  #集群名称</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 192.168.17.210配置文件</span></span><br><span class="line">dbpath=/usr/local/bin/mongodb/data/db  #数据文件存放目录</span><br><span class="line">logpath=/usr/local/bin/mongodb/log/mongodb.log   #日志文件</span><br><span class="line">logappend=true  #错误日志采用追加模式</span><br><span class="line">port=27017   #端口</span><br><span class="line">fork=true    #以守护程序的方式启用，即在后台运行</span><br><span class="line">journal=true  #启用日志文件，默认启用</span><br><span class="line">quiet=true  #这个选项可以过滤掉一些无用的日志信息，若需要调试使用请设置为false</span><br><span class="line"><span class="meta">#</span><span class="bash">auth=<span class="literal">true</span> <span class="comment">#需要认证。如果放开注释，就必须创建MongoDB的账号，使用账号与密码才可远程访问，第一次安装建议注释</span></span></span><br><span class="line">bind_ip=0.0.0.0 #允许远程访问，或者直接注释，127.0.0.1是只允许本地访问</span><br><span class="line">replSet=testrs  #集群名称</span><br></pre></td></tr></table></figure><p><strong>启动服务</strong></p><ul><li>分别启动三台虚拟机mongodb服务</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">./mongod --config ../etc/mongodb.conf</span><br><span class="line"></span><br><span class="line">yum -y install net-tools</span><br><span class="line">netstat -lanp |grep &#x27;27017&#x27;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装完之后可以使用killall 命令 快速关闭多个进程</span></span><br><span class="line">yum install -y psmisc</span><br><span class="line">killall mongod</span><br><span class="line">killall mongos</span><br></pre></td></tr></table></figure><p><strong>添加集群</strong></p><ul><li><p>注意：必须使用admin操作</p></li><li><p>对于仲裁点一定要加上arbiterOnly:true，否则主备模式不生效</p></li><li><p><img src="/2021/08/09/Linux%E9%83%A8%E7%BD%B2mongodb/image-20210812164615833.png" alt="linux部署mongodb"></p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost bin]# ./mongo</span><br><span class="line">MongoDB shell version v4.0.13 </span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> use admin</span></span><br><span class="line">switched to db admin</span><br><span class="line"></span><br><span class="line">cfg =&#123;&quot;_id&quot;:&quot;testrs&quot;,</span><br><span class="line">&quot;members&quot;:[</span><br><span class="line">&#123;&quot;_id&quot;:1,&quot;host&quot;:&quot;192.168.17.6:27017&quot;,priority:2&#125;,</span><br><span class="line">&#123;&quot;_id&quot;:2,&quot;host&quot;:&quot;192.168.17.7:27017&quot;,priority:1&#125;,</span><br><span class="line">&#123;&quot;_id&quot;:3,&quot;host&quot;:&quot;192.168.17.210:27017&quot;,arbiterOnly:true&#125;]</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">rs.initiate(cfg)</span><br><span class="line"></span><br><span class="line">db.printSlaveReplicationInfo() # 查看副本同步状态</span><br></pre></td></tr></table></figure><p><strong>测试数据</strong></p><ul><li>主</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">testrs:PRIMARY&gt; db.cluster.test.insert(&#123;&#x27;name&#x27;:&#x27;cluster&#x27;&#125;)</span><br><span class="line">WriteResult(&#123; &quot;nInserted&quot; : 1 &#125;)</span><br><span class="line">testrs:PRIMARY&gt; db.cluster.test.find()</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;611552a1bc61b02ccd503f79&quot;), &quot;name&quot; : &quot;cluster&quot; &#125;</span><br></pre></td></tr></table></figure><ul><li>从</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">./mongo </span><br><span class="line">rs.secondaryOk() # 添加为从，成功后可以有读权限</span><br><span class="line">testrs:SECONDARY&gt; db.cluster.test.find()</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;611552a1bc61b02ccd503f79&quot;), &quot;name&quot; : &quot;cluster&quot; &#125;</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;611553dfbc61b02ccd503f7a&quot;), &quot;name&quot; : &quot;test&quot; &#125;</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;61155f70bc61b02ccd503f7b&quot;), &quot;name&quot; : &quot;xxx&quot; &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>测试主从</strong></p><ul><li>关闭主服务</li><li>从变成主</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./mongod -f ../etc/mongodb.conf --shutdown # 关闭服务</span><br><span class="line">testrs:SECONDARY&gt; rs.status()  # 查看主从节点状态</span><br></pre></td></tr></table></figure><p><strong>从库永久设置rs.slaveOk</strong></p><ul><li>重新连接服务，查询会发现从库没有权限读取。需要永久设置rs.slaveOk</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo find / -name .mongorc.js</span><br><span class="line">/root/.mongorc.js # 查询到的路径</span><br><span class="line">vim /root/.mongorc.js</span><br><span class="line">rs.secondaryOk()  # 增加命令保存</span><br><span class="line">./mongo # 重新启动服务</span><br><span class="line">show dbs # 可以查到数据库</span><br></pre></td></tr></table></figure><h4 id="修改主从优先级"><a href="#修改主从优先级" class="headerlink" title="修改主从优先级"></a><strong>修改主从优先级</strong></h4><ul><li><a href="https://www.mongodb.com/docs/manual/tutorial/change-hostnames-in-a-replica-set/">https://www.mongodb.com/docs/manual/tutorial/change-hostnames-in-a-replica-set/</a></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">在主节点运行如下命令：</span><br><span class="line"><span class="meta">1)PRIMARY&gt;</span><span class="bash"> rscfg=rs.conf()</span></span><br><span class="line"><span class="meta">2)PRIMARY&gt;</span><span class="bash">rscfg.members[0].priority = 3</span></span><br><span class="line"><span class="meta">3)PRIMARY&gt;</span><span class="bash"> rs.reconfig(rscfg)</span></span><br><span class="line"></span><br><span class="line">修改集群ip</span><br><span class="line">cfg = rs.conf()</span><br><span class="line">cfg.members[1].host = &quot;10.143.16.xx:27017&quot;</span><br><span class="line">rs.reconfig(cfg)</span><br><span class="line"></span><br><span class="line">cfg = rs.conf()</span><br><span class="line">cfg.members[2].host = &quot;10.143.16.xx:27017&quot;</span><br><span class="line">rs.reconfig(cfg)</span><br><span class="line"></span><br><span class="line">初始化集群</span><br><span class="line">rs0:PRIMARY&gt; cfg = &#123;</span><br><span class="line">...  _id: &quot;rs0&quot;,</span><br><span class="line">...  members: [</span><br><span class="line">...    &#123;_id: 0, host: &quot;mongodb-v1-0.mongodb.airport-ai.svc.cluster.local&quot;,priority:5&#125;,</span><br><span class="line">...    &#123;_id: 1, host: &quot;mongodb-v1-1.mongodb.airport-ai.svc.cluster.local&quot;,priority:3&#125;,</span><br><span class="line">... ]</span><br><span class="line">... &#125;</span><br><span class="line"></span><br><span class="line">rs0:PRIMARY&gt; rs.reconfig(cfg)</span><br></pre></td></tr></table></figure><p><strong>pymongo测试连接</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pymongo <span class="keyword">import</span> MongoClient, ReadPreference</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">client = MongoClient(<span class="string">&#x27;x.x.x.x:27017&#x27;</span>, replicaSet=<span class="string">&#x27;google&#x27;</span>)  <span class="comment"># 连接副本集</span></span><br><span class="line"><span class="comment"># client = MongoClient(&#x27;mongodb://x.x.x.x, x.x.x.x, x.x.x.x, x.x.x.x&#x27;, replicaSet=&#x27;google&#x27;)  # 连接副本集</span></span><br><span class="line">db = client.get_database(<span class="string">&#x27;tes&#x27;</span>, read_preference=ReadPreference.SECONDARY)  <span class="comment"># 手动切换到SECONDARY备份的数据库</span></span><br><span class="line">collection = db.student  <span class="comment"># db下的student集合</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># print(client.address)</span></span><br><span class="line"><span class="comment"># print(client.list_database_names())</span></span><br><span class="line"><span class="comment"># serverStatus = db.command(&#x27;serverStatus&#x27;)  # 获取mongodb的serverStatus状态信息</span></span><br><span class="line"><span class="comment"># print(serverStatus)</span></span><br><span class="line"><span class="comment"># print(serverStatus[&#x27;connections&#x27;])  # 连接信息</span></span><br><span class="line"><span class="comment"># print(serverStatus[&#x27;network&#x27;])  # 流量信息</span></span><br><span class="line"><span class="comment"># print(serverStatus[&#x27;opcounters&#x27;])  # 增删改查信息</span></span><br><span class="line"><span class="comment"># print(db.read_preference)</span></span><br><span class="line"></span><br><span class="line">collection.insert_one(&#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;lxx&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">18</span>&#125;)  <span class="comment"># 插入一条数据，如果没出错那么说明连接成功</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># data = [&#123;&quot;name&quot;: &#x27;test%s&#x27; % i, &#x27;age&#x27;: i&#125; for i in range(1, 101)]  # 批量插入数据</span></span><br><span class="line"><span class="comment"># res = collection.insert_many(data, ordered=False)</span></span><br><span class="line"><span class="comment"># print(res.inserted_ids)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># # 删除所有数据</span></span><br><span class="line"><span class="comment"># ret = collection.delete_many(&#123;&#125;)</span></span><br><span class="line"><span class="comment"># print(ret.deleted_count, &#x27;个数据已删除&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># # 下面是遍历查询数据</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> collection.find():</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="GridFS"><a href="#GridFS" class="headerlink" title="GridFS"></a>GridFS</h4><ul><li>GridFS是mongoDB自带的文件系统他用二进制的形式存储文件，大型文件系统的绝大多是特性GridFS全可以完成。GridFS 用于存储和恢复那些超过16M（BSON文件限制）的文件(如：图片、音频、视频等)</li></ul><p><strong>上传文件</strong></p><ul><li>cmd终端使用mongodb自带的mongofiles</li><li>mongofiles.exe -d  数据库名称 put 文件路径</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\MongoDB\Server\3.4\bin&gt; mongofiles.exe -d gridfs put C:\Users\Desktop\foda\yolov5\weights\yolov5s.pt</span><br></pre></td></tr></table></figure><p><strong>查看文件存储状态</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> db.fs.files.find().pretty()</span></span><br><span class="line">&#123;</span><br><span class="line">        &quot;_id&quot; : ObjectId(&quot;611db8b4c729b23d84aaaf9b&quot;),</span><br><span class="line">        &quot;chunkSize&quot; : 261120,</span><br><span class="line">        &quot;uploadDate&quot; : ISODate(&quot;2021-08-19T01:49:40.682Z&quot;),</span><br><span class="line">        &quot;length&quot; : 14796495,</span><br><span class="line">        &quot;md5&quot; : &quot;aa2199af684193e4e93dd14bf2075893&quot;,</span><br><span class="line">        &quot;filename&quot; : &quot;xxxxx&quot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">db.fs.chunks.find(&#123;files_id:ObjectId(<span class="string">&quot;611db8b4c729b23d84aaaf9b&quot;</span>)&#125;)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>python上传读取</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> gridfs <span class="keyword">import</span> GridFS</span><br><span class="line"><span class="keyword">from</span> pymongo <span class="keyword">import</span> MongoClient</span><br><span class="line"><span class="keyword">from</span> bson.objectid <span class="keyword">import</span> ObjectId</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MongoGridFS</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    dbUrl = <span class="string">&#x27;127.0.0.1:27017&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, db, collection</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :param db: 数据库名称</span></span><br><span class="line"><span class="string">        :param collection: 集合名称</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        self.db = db</span><br><span class="line">        self.collection = collection</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">connect_db</span>(<span class="params">self</span>):</span></span><br><span class="line">        client = MongoClient(self.dbUrl)</span><br><span class="line">        db = client[self.db]</span><br><span class="line">        <span class="comment"># db.authenticate()</span></span><br><span class="line">        collection = db[self.collection]</span><br><span class="line">        <span class="keyword">return</span> db</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">upload_file</span>(<span class="params">self, db, filepath</span>):</span></span><br><span class="line"></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        上传文件</span></span><br><span class="line"><span class="string">        :param filePath:   文件路径</span></span><br><span class="line"><span class="string">        :return:  返回files_id</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        fs = GridFS(db, collection=self.collection)</span><br><span class="line">        filename = filepath.split(<span class="string">&#x27;\\&#x27;</span>)[-<span class="number">1</span>]</span><br><span class="line">        dic = &#123;<span class="string">&#x27;filename&#x27;</span>: filename, <span class="string">&#x27;url&#x27;</span>: filepath&#125;</span><br><span class="line">        <span class="keyword">if</span> fs.find_one(&#123;<span class="string">&#x27;filename&#x27;</span>: filename&#125;):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;模型已存在&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(filepath, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">                data = fp.read()</span><br><span class="line">                files_id = fs.put(data=data, **dic)</span><br><span class="line">            <span class="keyword">return</span> files_id</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_id</span>(<span class="params">self, db, filepath</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">         通过filename查询条件获取id</span></span><br><span class="line"><span class="string">        :param filepath: 查询条件</span></span><br><span class="line"><span class="string">        :return: files_id</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            filename = filepath.split(<span class="string">&#x27;\\&#x27;</span>)[-<span class="number">1</span>]</span><br><span class="line">            fs = GridFS(db, collection=self.collection)</span><br><span class="line">            files_id = fs.find_one(&#123;<span class="string">&quot;filename&quot;</span>: filename&#125;)._<span class="built_in">id</span></span><br><span class="line">            <span class="comment"># print(type(files_id))</span></span><br><span class="line">            <span class="keyword">return</span> files_id</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(<span class="built_in">str</span>(e))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_file</span>(<span class="params">self,db</span>):</span> <span class="comment">#列出所有文件名</span></span><br><span class="line">        fs = GridFS(db, self.collection)</span><br><span class="line">        gf = fs.<span class="built_in">list</span>()</span><br><span class="line">        <span class="built_in">print</span>(gf)</span><br><span class="line">        <span class="keyword">return</span> gf</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getfile</span>(<span class="params">self, db, _id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        通过id查询获取数据库中模型</span></span><br><span class="line"><span class="string">        :param _id: 文件id</span></span><br><span class="line"><span class="string">        :return: file：二进制数据</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        fs = GridFS(db, collection=self.collection)</span><br><span class="line">        object_id = ObjectId(_<span class="built_in">id</span>)</span><br><span class="line">        gf = fs.get(object_id)</span><br><span class="line">        file = gf.read()</span><br><span class="line">        <span class="keyword">return</span> file</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">download_file</span>(<span class="params">self, db, _id, name</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        通过文件_id获取文件</span></span><br><span class="line"><span class="string">        :param id:  文件id---&gt; files_id</span></span><br><span class="line"><span class="string">        :return: filename</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            fs = GridFS(db, collection=self.collection)</span><br><span class="line">            object_id = ObjectId(_<span class="built_in">id</span>)</span><br><span class="line">            gf = fs.get(object_id)</span><br><span class="line">            file_data = gf.read()</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">&#x27;./img&#x27;</span>):</span><br><span class="line">                os.mkdir(<span class="string">&#x27;./img&#x27;</span>)</span><br><span class="line">            img_path = <span class="string">&#x27;img/&#x27;</span> + name</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(img_path, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">                fp.write(file_data)</span><br><span class="line">                <span class="built_in">print</span>(gf.filename)</span><br><span class="line">            <span class="keyword">return</span> gf.filename</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(<span class="built_in">str</span>(e))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove_file</span>(<span class="params">self, db, _id</span>):</span></span><br><span class="line">        fs = GridFS(db, collection=self.collection)</span><br><span class="line">        fs.delete(_<span class="built_in">id</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">gfs = MongoGridFS(<span class="string">&#x27;fs&#x27;</span>, <span class="string">&#x27;test&#x27;</span>)</span><br><span class="line">db = gfs.connect_db()</span><br></pre></td></tr></table></figure><h4 id="Django中使用"><a href="#Django中使用" class="headerlink" title="Django中使用"></a>Django中使用</h4><ul><li><p><a href="http://docs.mongoengine.org/tutorial.html">http://docs.mongoengine.org/tutorial.html</a></p></li><li><p>pip3 install mongoengine</p></li></ul><p><strong>setting.py</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">&#x27;rest_framework&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;rest_framework_mongoengine&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django_filters&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;corsheaders&#x27;</span>,</span><br><span class="line">]</span><br><span class="line"><span class="comment"># Custom settings</span></span><br><span class="line">DATETIME_FORMAT = <span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span></span><br><span class="line">DATE_FORMAT = <span class="string">&#x27;%Y-%m-%d&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Django Rest Framework settings</span></span><br><span class="line">REST_FRAMEWORK = &#123;</span><br><span class="line">    <span class="comment"># Use Django&#x27;s standard `django.contrib.auth` permissions,</span></span><br><span class="line">    <span class="comment"># or allow read-only access for unauthenticated users.</span></span><br><span class="line">    <span class="string">&#x27;DEFAULT_PERMISSION_CLASSES&#x27;</span>: [</span><br><span class="line">        <span class="string">&#x27;rest_framework.permissions.AllowAny&#x27;</span>,</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&#x27;DEFAULT_AUTHENTICATION_CLASSES&#x27;</span>: [</span><br><span class="line">        <span class="string">&#x27;rest_framework.authentication.BasicAuthentication&#x27;</span>,</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&#x27;DEFAULT_SCHEMA_CLASS&#x27;</span>: <span class="string">&#x27;drf_spectacular.openapi.AutoSchema&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;DATETIME_FORMAT&#x27;</span>: DATETIME_FORMAT,</span><br><span class="line">    <span class="string">&#x27;DATETIME_INPUT_FORMATS&#x27;</span>: [DATETIME_FORMAT],</span><br><span class="line">    <span class="string">&#x27;DATE_FORMAT&#x27;</span>: DATE_FORMAT,</span><br><span class="line">    <span class="string">&#x27;DATE_INPUT_FORMATS&#x27;</span>: [DATE_FORMAT],</span><br><span class="line">    <span class="string">&#x27;DEFAULT_FILTER_BACKENDS&#x27;</span>: [<span class="string">&#x27;django_filters.rest_framework.DjangoFilterBackend&#x27;</span>],</span><br><span class="line">    <span class="string">&#x27;DEFAULT_PAGINATION_CLASS&#x27;</span>: <span class="string">&#x27;rest_framework.pagination.PageNumberPagination&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;PAGE_SIZE&#x27;</span>: <span class="number">10</span>,</span><br><span class="line">    <span class="comment"># &#x27;DEFAULT_RENDERER_CLASSES&#x27;: [&#x27;utils.renderers.MyJSONRender&#x27;],</span></span><br><span class="line">    <span class="string">&#x27;EXCEPTION_HANDLER&#x27;</span>: <span class="string">&#x27;utils.exception_handler.custom_exception_handler&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>models.py</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> mongoengine</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mongoengine.connect(<span class="string">&quot;model&quot;</span>, host=<span class="string">&quot;10.21.6.14&quot;</span>, port=<span class="number">30707</span>)</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AlgorithmModel</span>(<span class="params">mongoengine.Document</span>):</span></span><br><span class="line">    meta = &#123;</span><br><span class="line">        <span class="string">&quot;collection&quot;</span>: <span class="string">&quot;model&quot;</span>,</span><br><span class="line">        <span class="string">&quot;ordering&quot;</span>: [<span class="string">&#x27;-id&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    BASIC = <span class="string">&#x27;basic&#x27;</span></span><br><span class="line">    CUSTOM = <span class="string">&#x27;custom&#x27;</span></span><br><span class="line">    TYPE_CHOICES = [</span><br><span class="line">        (BASIC, <span class="string">&#x27;基础模型&#x27;</span>),</span><br><span class="line">        (CUSTOM, <span class="string">&#x27;定制化模型&#x27;</span>),</span><br><span class="line">    ]</span><br><span class="line">    MSG_CHOICES = [</span><br><span class="line">        (<span class="string">&quot;used&quot;</span>, <span class="string">&quot;已使用&quot;</span>),</span><br><span class="line">        (<span class="string">&quot;unused&quot;</span>, <span class="string">&quot;未使用&quot;</span>),</span><br><span class="line">    ]</span><br><span class="line">    <span class="built_in">id</span> = mongoengine.SequenceField(required=<span class="literal">True</span>, primary_key=<span class="literal">True</span>)</span><br><span class="line">    name = mongoengine.StringField(max_length=<span class="number">50</span>, unique=<span class="literal">True</span>)</span><br><span class="line">    desc = mongoengine.StringField(max_length=<span class="number">50</span>)</span><br><span class="line">    <span class="built_in">type</span> = mongoengine.StringField(max_length=<span class="number">50</span>, choices=TYPE_CHOICES, default=BASIC)</span><br><span class="line">    model = mongoengine.FileField()</span><br><span class="line">    tag = mongoengine.StringField(choices=MSG_CHOICES, default=<span class="string">&quot;used&quot;</span>)</span><br><span class="line">    uploadDate = mongoengine.DateTimeField()</span><br><span class="line">    </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AlgorithmSliceModel</span>(<span class="params">mongoengine.Document</span>):</span></span><br><span class="line">    meta = &#123;</span><br><span class="line">        <span class="string">&quot;collection&quot;</span>: <span class="string">&quot;demo&quot;</span>,</span><br><span class="line">        <span class="string">&quot;ordering&quot;</span>: [<span class="string">&#x27;-id&#x27;</span>],</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">id</span> = mongoengine.SequenceField(required=<span class="literal">True</span>, primary_key=<span class="literal">True</span>)</span><br><span class="line">    algorithm = mongoengine.StringField(required=<span class="literal">True</span>)</span><br><span class="line">    filename = mongoengine.StringField(required=<span class="literal">True</span>)</span><br><span class="line">    event_started = mongoengine.DateTimeField(default=datetime.datetime.utcnow)</span><br><span class="line">    event_started_addr = mongoengine.StringField(required=<span class="literal">True</span>)</span><br><span class="line">    event_addr_type = mongoengine.StringField(required=<span class="literal">True</span>)</span><br><span class="line">    event_name = mongoengine.StringField(required=<span class="literal">True</span>, max_length=<span class="number">50</span>)</span><br><span class="line">    slice_video = mongoengine.FileField(required=<span class="literal">True</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>serializer.py</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework_mongoengine <span class="keyword">import</span> serializers</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> AlgorithmModel, AlgorithmSliceModel</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AlgorithmModelSerializer</span>(<span class="params">serializers.DocumentSerializer</span>):</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        model = AlgorithmModel</span><br><span class="line">        fields = <span class="string">&#x27;__all__&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create</span>(<span class="params">self, validated_data</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;&gt;&gt;&#x27;</span>, validated_data)</span><br><span class="line">        model_data = validated_data.get(<span class="string">&quot;model&quot;</span>)</span><br><span class="line">        filename = validated_data.get(<span class="string">&quot;name&quot;</span>)</span><br><span class="line">        validated_data.pop(<span class="string">&quot;model&quot;</span>)</span><br><span class="line">        ret = AlgorithmModel(**validated_data, uploadDate=datetime.datetime.utcnow())</span><br><span class="line">        ret.model.put(model_data, **&#123;<span class="string">&quot;filename&quot;</span>: filename&#125;)</span><br><span class="line">        ret.save()</span><br><span class="line">        <span class="keyword">return</span> ret</span><br><span class="line"></span><br><span class="line"> <span class="class"><span class="keyword">class</span> <span class="title">AlgorithmSliceModelModelSerializer</span>(<span class="params">serializers.DocumentSerializer</span>):</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        model = AlgorithmSliceModel</span><br><span class="line">        fields = <span class="string">&#x27;__all__&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create</span>(<span class="params">self, validated_data</span>):</span></span><br><span class="line">        slice_video = validated_data.get(<span class="string">&quot;slice_video&quot;</span>)</span><br><span class="line">        name = validated_data.get(<span class="string">&quot;filename&quot;</span>)</span><br><span class="line">        validated_data.pop(<span class="string">&quot;slice_video&quot;</span>)</span><br><span class="line">        model = AlgorithmSliceModel(**validated_data)</span><br><span class="line">        model.slice_video.put(slice_video, content_type=<span class="string">&#x27;video/mp4&#x27;</span>, filename=name)</span><br><span class="line">        model.save()</span><br><span class="line">        <span class="keyword">return</span> model</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>views.py</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> .serializers <span class="keyword">import</span> AlgorithmModelSerializer,AlgorithmSliceModelModelSerializer</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> AlgorithmModel,AlgorithmSliceModel</span><br><span class="line"><span class="keyword">from</span> rest_framework_mongoengine <span class="keyword">import</span> viewsets</span><br><span class="line"><span class="keyword">from</span> rest_framework.decorators <span class="keyword">import</span> action</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AlgorithmViewSet</span>(<span class="params">viewsets.ModelViewSet</span>):</span></span><br><span class="line">    queryset = AlgorithmModel.objects.<span class="built_in">all</span>()</span><br><span class="line">    serializer_class = AlgorithmModelSerializer</span><br><span class="line">    my_filter_fields = [<span class="string">&#x27;type&#x27;</span>] <span class="comment"># 定义过滤字段type</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_kwargs_for_filtering</span>(<span class="params">self</span>):</span></span><br><span class="line">        filtering_kwargs = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> field <span class="keyword">in</span> self.my_filter_fields:</span><br><span class="line">            field_value = self.request.query_params.get(field)</span><br><span class="line">            <span class="built_in">print</span>(field_value)</span><br><span class="line">            <span class="keyword">if</span> field_value:</span><br><span class="line">                filtering_kwargs[field] = field_value</span><br><span class="line">        <span class="keyword">return</span> filtering_kwargs</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_queryset</span>(<span class="params">self</span>):</span></span><br><span class="line">        queryset = AlgorithmModel.objects.<span class="built_in">all</span>()</span><br><span class="line">        filtering_kwargs = self.get_kwargs_for_filtering()</span><br><span class="line">        <span class="keyword">if</span> filtering_kwargs:</span><br><span class="line">            queryset = AlgorithmModel.objects.<span class="built_in">filter</span>(**filtering_kwargs)</span><br><span class="line">        <span class="keyword">return</span> queryset</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">VideoViewSet</span>(<span class="params">viewsets.ModelViewSet</span>):</span></span><br><span class="line">    queryset = AlgorithmSliceModel.objects</span><br><span class="line">    serializer_class = VideoSerializer</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_kwargs_for_filtering</span>(<span class="params">self</span>):</span></span><br><span class="line">        filtering_kwargs = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> field <span class="keyword">in</span> self.my_filter_fields:</span><br><span class="line">            field_value = self.request.query_params.get(field)</span><br><span class="line">            <span class="keyword">if</span> field_value:</span><br><span class="line">                filtering_kwargs[field] = field_value</span><br><span class="line">        <span class="keyword">return</span> filtering_kwargs</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_queryset</span>(<span class="params">self</span>):</span></span><br><span class="line">        queryset = AlgorithmSliceModel.objects.<span class="built_in">all</span>()</span><br><span class="line">        filtering_kwargs = self.get_kwargs_for_filtering()</span><br><span class="line">        <span class="keyword">if</span> filtering_kwargs:</span><br><span class="line">            queryset = AlgorithmSliceModel.objects.<span class="built_in">filter</span>(**filtering_kwargs)</span><br><span class="line">        <span class="keyword">return</span> queryset</span><br><span class="line"></span><br><span class="line">    <span class="comment"># def get_kwargs_for_filtering(self):</span></span><br><span class="line">    <span class="comment">#     self.algorithm = self.request.query_params.get(&quot;algorithm&quot;)</span></span><br><span class="line">    <span class="comment">#     self.start_time = self.request.query_params.get(&quot;start_time&quot;)</span></span><br><span class="line">    <span class="comment">#     self.end_time = self.request.query_params.get(&quot;end_time&quot;)</span></span><br><span class="line">    <span class="comment">#     self.event_name = self.request.query_params.get(&quot;event_name&quot;)</span></span><br><span class="line">    <span class="comment">#     if self.algorithm and self.start_time and self.end_time and self.event_name:</span></span><br><span class="line">    <span class="comment">#         return True</span></span><br><span class="line">    <span class="comment">#     return False</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># def get_queryset(self):</span></span><br><span class="line">    <span class="comment">#     queryset = AlgorithmSliceModel.objects.all()</span></span><br><span class="line">    <span class="comment">#     filtering = self.get_kwargs_for_filtering()</span></span><br><span class="line">    <span class="comment">#     if filtering:</span></span><br><span class="line">    <span class="comment">#         queryset = AlgorithmSliceModel.objects.filter(event_started__gte=self.start_time,</span></span><br><span class="line">    <span class="comment">#                                                       event_started__lte=self.end_time,</span></span><br><span class="line">    <span class="comment">#                                                       algorithm=self.algorithm, event_name=self.event_name)</span></span><br><span class="line">    <span class="comment">#     return queryset</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @action(<span class="params">methods=[<span class="string">&#x27;GET&#x27;</span>], detail=<span class="literal">True</span></span>)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">download</span>(<span class="params">self, request, *args, **kwargs</span>):</span></span><br><span class="line">        video = self.get_object()</span><br><span class="line">        file = video.slice_video.read()</span><br><span class="line">        <span class="keyword">return</span> HttpResponse(file, content_type=<span class="string">&#x27;video/mp4&#x27;</span>)</span><br><span class="line">  </span><br></pre></td></tr></table></figure><ul><li><a href="http://127.0.0.1:8000/api/algorithm/?type=custom">http://127.0.0.1:8000/api/algorithm/?type=custom</a></li></ul><img src="/2021/08/09/Linux%E9%83%A8%E7%BD%B2mongodb/image-20220117163017436.png" alt="Linux部署mongodb" style="zoom:150%;">]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;下载安装包&quot;&gt;&lt;a href=&quot;#下载安装包&quot; class=&quot;headerlink&quot; title=&quot;下载安装包&quot;&gt;&lt;/a&gt;下载安装包&lt;/h4&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter</summary>
      
    
    
    
    
    <category term="mongodb" scheme="http://example.com/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>Nginx</title>
    <link href="http://example.com/2021/07/31/Nginx/"/>
    <id>http://example.com/2021/07/31/Nginx/</id>
    <published>2021-07-30T16:49:31.000Z</published>
    <updated>2021-10-14T02:11:33.580Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Linux安装"><a href="#Linux安装" class="headerlink" title="Linux安装"></a>Linux安装</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>下载 </span><br><span class="line">cd /usr/local/ </span><br><span class="line">mkdir nginx</span><br><span class="line">yum -y install gcc pcre-devel zlib-devel openssl openssl-devel</span><br><span class="line">wget http://nginx.org/download/nginx-<span class="number">1.18</span><span class="number">.0</span>.tar.gz</span><br><span class="line">    tar xf nginx-<span class="number">1.18</span><span class="number">.0</span>.tar.gz</span><br><span class="line">    cd nginx-<span class="number">1.18</span><span class="number">.0</span></span><br><span class="line">    ./configure --<span class="built_in">help</span></span><br><span class="line">    ./configure --prefix=/usr/local/nginx --<span class="keyword">with</span>-http_ssl_module --<span class="keyword">with</span>-http_stub_status_module</span><br><span class="line">    make &amp;&amp; make install <span class="comment"># 编译安装</span></span><br></pre></td></tr></table></figure><h4 id="放行防火墙端口"><a href="#放行防火墙端口" class="headerlink" title="放行防火墙端口"></a>放行防火墙端口</h4><ul><li>本地浏览器访问</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --query-port=80/tcp  # 查询</span><br><span class="line">firewall-cmd --add-port=80/tcp --permanent # permanent永久生效</span><br><span class="line">systemctl restart firewalld</span><br></pre></td></tr></table></figure><h4 id="配置开机自启动"><a href="#配置开机自启动" class="headerlink" title="配置开机自启动"></a>配置开机自启动</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/rc.d/rc.local</span><br><span class="line">/usr/local/nginx/sbin/nginx  # 开机自启动</span><br></pre></td></tr></table></figure><h4 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h4><p><img src="/2021/07/31/Nginx/image-20211011171238176.png" alt="Nginx"></p><p><strong>创建文件目录</strong></p><ul><li><p>conf 和conf.d分别用于保存配置文件</p></li><li><p>html用于放置静态文件</p></li><li><p>logs用于保存日志</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /nginx/conf/conf.d</span><br><span class="line">mkdir -p /nginx/html</span><br><span class="line">mkdir -p /nginx/logs</span><br></pre></td></tr></table></figure><p><strong>拷贝默认配置</strong></p><ul><li>1.启动nginx镜像获取容器id</li><li>2.拷贝容器中默认的配置文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run --name my-nginx -p 80:80 -d nginx</span><br><span class="line">docker cp 5e0199f88769:/etc/nginx/nginx.conf /nginx/conf/nginx.conf</span><br><span class="line">docker cp 5e0199f88769:/etc/nginx/conf.d /nginx/conf</span><br><span class="line">docker cp 5e0199f88769:/usr/share/nginx/html /nginx/</span><br><span class="line"><span class="meta">#</span><span class="bash"> 拷贝完之后停止删除容器</span></span><br><span class="line">docker stop nginx</span><br><span class="line">docker rm 5e0199f88769</span><br></pre></td></tr></table></figure><p><strong>用数据卷启动nginx</strong></p><ul><li>-p 端口映射</li><li>–name 启动容器的名字</li><li>-v 宿主机与容器的映射关系</li><li>-d 以守护进程后台运行</li><li>–restart=always 一直保持运行，自动启动</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 80:80 --name nginx -v /nginx/conf/nginx.conf:/etc/nginx/nginx.conf -v /nginx/conf/conf.d:/etc/nginx/conf.d -v /nginx/html:/usr/share/nginx/html -v /nginx/logs/:/var/log/nginx  -d nginx</span><br></pre></td></tr></table></figure><p><strong>进入容器</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it 容器id /bin/bash</span><br><span class="line"><span class="meta">#</span><span class="bash"> 容器重启重新加载</span></span><br><span class="line">docker exec -t 容器id nginx -t</span><br><span class="line">docker exec -t 容器id nginx -s reload</span><br></pre></td></tr></table></figure><h4 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost nginx]<span class="comment"># ls</span></span><br><span class="line">conf  配置文件</span><br><span class="line">html  存放静态文件 <span class="comment"># index.html是默认的静态文件</span></span><br><span class="line">logs  日志目录</span><br><span class="line">sbin  二进制文件</span><br><span class="line">启动以后会生成一个配置文件，根据配置文件的选项生成子进程（工作进程），主进程不负责处理用户的请求，用来转发用户的请求，真正负责处理用户请求的是子进程</span><br></pre></td></tr></table></figure><h4 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost nginx]<span class="comment">#  ./sbin/nginx -h</span></span><br><span class="line">nginx version: nginx/<span class="number">1.18</span><span class="number">.0</span></span><br><span class="line">Usage: nginx [-?hvVtTq] [-s signal] [-c filename] [-p prefix] [-g directives]</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -?,-h         : this <span class="built_in">help</span></span><br><span class="line">  -v            : show version <span class="keyword">and</span> exit</span><br><span class="line">  -V            : show version <span class="keyword">and</span> configure options then exit <span class="comment"># 显示版本加编译时选项</span></span><br><span class="line">  -t            : test configuration <span class="keyword">and</span> exit  <span class="comment"># 测试配置文件</span></span><br><span class="line">  -T            : test configuration, dump it <span class="keyword">and</span> exit</span><br><span class="line">  -q            : suppress non-error messages during configuration testing</span><br><span class="line">  -s signal     : send signal to a master process: stop, quit, reopen, reload  <span class="comment"># </span></span><br><span class="line">  -p prefix     : <span class="built_in">set</span> prefix path (default: /opt/nginx/)</span><br><span class="line">  -c filename   : <span class="built_in">set</span> configuration file (default: conf/nginx.conf)</span><br><span class="line">  -g directives : <span class="built_in">set</span> <span class="keyword">global</span> directives out of configuration file</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost nginx]<span class="comment"># vim ./conf/nginx.conf</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#user  nobody;  # 使用哪个用户启动子进程</span></span><br><span class="line">worker_processes  <span class="number">1</span>; <span class="comment"># 工作进程的个数（一般配置cpu的核心数-1或2）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#error_log  logs/error.log;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  notice;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  info;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#pid        logs/nginx.pid;  </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    <span class="comment"># worker_processes * worker_connections 理论上是nginx的并发</span></span><br><span class="line">    <span class="comment"># use[epoll|select|poll] </span></span><br><span class="line">    worker_connections  <span class="number">1024</span>;  <span class="comment"># 每一个子进程可以处理的连接数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;  <span class="comment"># 导入</span></span><br><span class="line">    default_type  application/octet-stream; <span class="comment"># 默认的请求方式</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 用来定义日志并定义日志格式     </span></span><br><span class="line">    <span class="comment">#log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">    <span class="comment">#                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">    <span class="comment">#                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#access_log  logs/access.log  main;</span></span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#keepalive_timeout  0;</span></span><br><span class="line">    keepalive_timeout  <span class="number">65</span>; <span class="comment"># 保持长链接的超时时间</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       <span class="number">80</span>;  <span class="comment"># 监听端口</span></span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            root   html; <span class="comment"># 指定静态文件地址</span></span><br><span class="line">            index  index.html index.htm; <span class="comment"># 指定默认的index页面</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"># 错误页面，客户端</span></span><br><span class="line">        <span class="comment">#error_page  404              /404.html;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">        <span class="comment"># 错误页面 服务端错误</span></span><br><span class="line">        error_page   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">        <span class="comment">#    proxy_pass   http://127.0.0.1;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">        <span class="comment">#    root           html;</span></span><br><span class="line">        <span class="comment">#    fastcgi_pass   127.0.0.1:9000;</span></span><br><span class="line">        <span class="comment">#    fastcgi_index  index.php;</span></span><br><span class="line">        <span class="comment">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span></span><br><span class="line">        <span class="comment">#    include        fastcgi_params;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># deny access to .htaccess files, if Apache&#x27;s document root</span></span><br><span class="line">        <span class="comment"># concurs with nginx&#x27;s one</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ /\.ht &#123;</span></span><br><span class="line">        <span class="comment">#    deny  all;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># another virtual host using mix of IP-, name-, and port-based configuration</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#server &#123;</span></span><br><span class="line">    <span class="comment">#    listen       8000;</span></span><br><span class="line">    <span class="comment">#    listen       somename:8080;</span></span><br><span class="line">    <span class="comment">#    server_name  somename  alias  another.alias;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    location / &#123;</span></span><br><span class="line">    <span class="comment">#        root   html;</span></span><br><span class="line">    <span class="comment">#        index  index.html index.htm;</span></span><br><span class="line">    <span class="comment">#    &#125;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># HTTPS server</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#server &#123;</span></span><br><span class="line">    <span class="comment">#    listen       443 ssl;</span></span><br><span class="line">    <span class="comment">#    server_name  localhost;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    ssl_certificate      cert.pem;</span></span><br><span class="line">    <span class="comment">#    ssl_certificate_key  cert.key;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    ssl_session_cache    shared:SSL:1m;</span></span><br><span class="line">    <span class="comment">#    ssl_session_timeout  5m;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    ssl_ciphers  HIGH:!aNULL:!MD5;</span></span><br><span class="line">    <span class="comment">#    ssl_prefer_server_ciphers  on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    location / &#123;</span></span><br><span class="line">    <span class="comment">#        root   html;</span></span><br><span class="line">    <span class="comment">#        index  index.html index.htm;</span></span><br><span class="line">    <span class="comment">#    &#125;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">  </span><br></pre></td></tr></table></figure><h4 id="404页面"><a href="#404页面" class="headerlink" title="404页面"></a>404页面</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#error_page  404              /404.html; # 配置文件解开即可</span></span><br></pre></td></tr></table></figure><h4 id="root和alias的区别"><a href="#root和alias的区别" class="headerlink" title="root和alias的区别"></a>root和alias的区别</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">location /img&#123;</span><br><span class="line">root /data/img;</span><br><span class="line">&#125;</span><br><span class="line">root /data/img 里面必须有/img</span><br><span class="line"></span><br><span class="line">location /img&#123;</span><br><span class="line">alias /data/img;</span><br><span class="line">&#125;</span><br><span class="line">root /data/img 里面不需要有/img</span><br></pre></td></tr></table></figure><h4 id="nginx多域名"><a href="#nginx多域名" class="headerlink" title="nginx多域名"></a>nginx多域名</h4><ul><li>基于ip地址</li><li>基于端口</li><li>基于域名</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">配置文件中： server_name  localhost;</span><br><span class="line">需要在本地： C:\Windows\System32\drivers\etc\hosts 中把ip 改为域名</span><br><span class="line">    <span class="number">192.168</span><span class="number">.17</span><span class="number">.6</span>  <span class="number">1995.</span>haojie.com <span class="number">19951018.</span>yuhang.com</span><br><span class="line"><span class="number">192.168</span><span class="number">.17</span><span class="number">.6</span>   www.taobao.com taobao.com</span><br><span class="line"><span class="number">192.168</span><span class="number">.17</span><span class="number">.6</span>   www.jd.com  jd.com</span><br><span class="line">[root@localhost nginx]<span class="comment"># vim conf/nginx.conf </span></span><br><span class="line">        server  &#123;</span><br><span class="line"></span><br><span class="line">            listen <span class="number">80</span>;</span><br><span class="line">            server_name www.taobao.com taobao.com;</span><br><span class="line"></span><br><span class="line">            location /  &#123;</span><br><span class="line">                    root /data/taobao;</span><br><span class="line">                    index index.html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        server  &#123;</span><br><span class="line"></span><br><span class="line">            listen <span class="number">80</span>;</span><br><span class="line">            server_name www.jd.com jd.com;</span><br><span class="line"></span><br><span class="line">            location /  &#123;</span><br><span class="line">                    root /data/jd;</span><br><span class="line">                    index index.html;</span><br><span class="line">        &#125;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="日志文件"><a href="#日志文件" class="headerlink" title="日志文件"></a>日志文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">配置文件中解开注释</span><br><span class="line">    </span><br><span class="line">    log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br><span class="line">                      &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br><span class="line">                      &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><span class="line"></span><br><span class="line">    access_log  logs/access.log  main;</span><br><span class="line">    </span><br><span class="line">[root@localhost nginx]# tail -f logs/access.log  # 查看日志信息</span><br><span class="line"></span><br><span class="line">192.168.17.1 - - [10/Mar/2021:10:56:56 +0800] &quot;GET / HTTP/1.1&quot; 304 0 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.82 Safari/537.36 Edg/89.0.774.48&quot;</span><br><span class="line">remote_addr:访问ip地址</span><br><span class="line">remote_user：访问的用户</span><br><span class="line"><span class="meta">$</span><span class="bash">time_local：本地时间</span></span><br><span class="line"><span class="meta">$</span><span class="bash">request：包括请求方式、请求地址、请求协议版本号</span></span><br><span class="line"><span class="meta">$</span><span class="bash">status：状态码</span></span><br><span class="line"><span class="meta">$</span><span class="bash">body_bytes_sent：发送大小</span></span><br><span class="line"><span class="meta">$</span><span class="bash">http_user_agent：</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="禁止访问"><a href="#禁止访问" class="headerlink" title="禁止访问"></a>禁止访问</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost nginx]<span class="comment"># vim conf/nginx.conf </span></span><br><span class="line">        server  &#123;</span><br><span class="line"></span><br><span class="line">            listen <span class="number">80</span>;</span><br><span class="line">            server_name www.taobao.com taobao.com;</span><br><span class="line"></span><br><span class="line">            location /  &#123;</span><br><span class="line">                    deny <span class="number">192.168</span><span class="number">.17</span><span class="number">.6</span>; <span class="comment"># 禁止这个ip访问 </span></span><br><span class="line">                deny <span class="number">192.168</span><span class="number">.17</span><span class="number">.0</span>/<span class="number">24</span>; <span class="comment"># 禁止这个网段访问</span></span><br><span class="line">                allow <span class="number">192.168</span><span class="number">.17</span><span class="number">.11</span>; <span class="comment"># 运行这个ip访问</span></span><br><span class="line">                    root /data/taobao;</span><br><span class="line">                    index index.html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h4 id="正向代理"><a href="#正向代理" class="headerlink" title="正向代理"></a>正向代理</h4><ul><li>在客户端（浏览器）配置代理服务器，通过代理服务器进行互联网访问</li></ul><p><img src="/2021/07/31/Nginx/image-20211011154257645.png" alt="Nginx"></p><h4 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h4><ul><li><img src="/2021/07/31/Nginx/image-20211011154830984.png" alt="Nginx"></li></ul><p><strong>作用</strong></p><ul><li>起到保护网站安全的作用</li><li>可以缓存静态文件</li><li>实现负载均衡 F5 A10 lvs haproxy nginx</li></ul><p><img src="/2021/07/31/Nginx/image-20210310155903794.png" alt="Nginx"></p><p><img src="/2021/07/31/Nginx/image-20210310160247202.png" alt="Nginx"></p><ul><li>先代理到21.128 –》 刷新访问自己的21.131 实现轮询</li></ul><h4 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h4><ul><li>单个服务器解决不了高并发，增加服务器的数量，将请求分发到不同的服务器上，将负载分发到不同的服务器上就是负载均衡</li></ul><p><img src="/2021/07/31/Nginx/image-20211011155418804.png" alt="Nginx"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> nginx.conf</span></span><br><span class="line">upstream server &#123;</span><br><span class="line">server 192.168.17.6:8001;</span><br><span class="line">server 192.168.17.6:8002;</span><br><span class="line">server 192.168.17.6:8003;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">listen 9001;</span><br><span class="line">server_name 192.168.17.6;</span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">proxy_pass http://server;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 即访问192.168.17.6:9001 可把请求负载均衡到上面三个server</span></span><br></pre></td></tr></table></figure><h4 id="权重"><a href="#权重" class="headerlink" title="权重"></a>权重</h4><ul><li>weight代表权重，默认为1，权重越高被分配的客户端越多</li></ul><p><img src="/2021/07/31/Nginx/image-20210310160636067.png" alt="Nginx"></p><h4 id="ip-hash"><a href="#ip-hash" class="headerlink" title="ip_hash"></a>ip_hash</h4><p><img src="/2021/07/31/Nginx/image-20210310160916702.png" alt="Nginx"></p><h4 id="buckup"><a href="#buckup" class="headerlink" title="buckup"></a>buckup</h4><p><img src="/2021/07/31/Nginx/image-20210310161423167.png" alt="Nginx"></p><h4 id="nginx-location匹配规则"><a href="#nginx-location匹配规则" class="headerlink" title="nginx location匹配规则"></a>nginx location匹配规则</h4><p><img src="/2021/07/31/Nginx/image-20210310162604231.png" alt="Nginx"></p><p><img src="/2021/07/31/Nginx/image-20210310162614587.png" alt="Nginx"></p><h4 id="location分离"><a href="#location分离" class="headerlink" title="location分离"></a>location分离</h4><p><img src="/2021/07/31/Nginx/image-20210310162959728.png" alt="Nginx"></p><h4 id="status分类"><a href="#status分类" class="headerlink" title="status分类"></a>status分类</h4><p><img src="/2021/07/31/Nginx/image-20210310164409622.png" alt="Nginx"></p><h4 id="WSGI"><a href="#WSGI" class="headerlink" title="WSGI"></a>WSGI</h4><p><img src="/2021/07/31/Nginx/image-20210310164900812.png" alt="Nginx"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">yum install -y epel-*</span><br><span class="line">yum install -y python3 python3-pip python3-devel</span><br><span class="line">pip3 install uwsgi -i https://pypi.douban.com/simple</span><br><span class="line">pip3 install django==<span class="number">1.11</span> -i https://pypi.douban.com/simple</span><br><span class="line">cd /data/</span><br><span class="line">django-admin startproject site</span><br><span class="line">django-admin startproject mysite</span><br><span class="line">cd mysite/</span><br><span class="line">python3 manage.py runserver <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">8080</span></span><br><span class="line"></span><br><span class="line">   [root@localhost mysite]<span class="comment"># ls</span></span><br><span class="line">db.sqlite3  manage.py  mysite</span><br><span class="line">[root@localhost mysite]<span class="comment"># uwsgi --http :8080 --module mysite.wsgi  # 用uwsgi启动django项目中 的wsgi.py文件</span></span><br><span class="line">       </span><br></pre></td></tr></table></figure><h4 id="uwsgi配置文件启动"><a href="#uwsgi配置文件启动" class="headerlink" title="uwsgi配置文件启动"></a>uwsgi配置文件启动</h4><p><img src="/2021/07/31/Nginx/image-20210310194134328.png" alt="Nginx"></p><p><img src="/2021/07/31/Nginx/image-20210310193403278.png" alt="Nginx"></p><p><img src="/2021/07/31/Nginx/image-20210310210920660.png" alt="Nginx"></p><p><img src="/2021/07/31/Nginx/image-20210310211206218.png" alt="Nginx"> </p><p><img src="/2021/07/31/Nginx/image-20210310210241468.png" alt="Nginx"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">在django项目的settings 开启</span><br><span class="line">STATIC_ROOT= os.path.join(BASE_DIR,<span class="string">&#x27;static/&#x27;</span>)</span><br><span class="line">执行命令</span><br><span class="line">python3 manage.py collectstatic <span class="comment"># 用来收集静态文件</span></span><br></pre></td></tr></table></figure><h4 id="使用问题"><a href="#使用问题" class="headerlink" title="使用问题"></a>使用问题</h4><p><img src="/2021/07/31/Nginx/image-20210310211329270.png" alt="Nginx"></p><h4 id="动静分离"><a href="#动静分离" class="headerlink" title="动静分离"></a>动静分离</h4><ul><li>因为uwsgi不能收集静态文件，所以需要用到nginx做动静分离</li></ul><p><img src="/2021/07/31/Nginx/image-20210310210026285.png" alt="Nginx"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;Linux安装&quot;&gt;&lt;a href=&quot;#Linux安装&quot; class=&quot;headerlink&quot; title=&quot;Linux安装&quot;&gt;&lt;/a&gt;Linux安装&lt;/h4&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class</summary>
      
    
    
    
    
    <category term="Nginx" scheme="http://example.com/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2021/07/26/%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    <id>http://example.com/2021/07/26/%E8%87%AA%E5%8A%A8%E5%8C%96/</id>
    <published>2021-07-26T05:39:36.617Z</published>
    <updated>2021-10-19T03:14:09.030Z</updated>
    
    <content type="html"><![CDATA[<h1 id="自动化测试"><a href="#自动化测试" class="headerlink" title="自动化测试"></a>自动化测试</h1><h2 id="冒烟测试"><a href="#冒烟测试" class="headerlink" title="冒烟测试"></a>冒烟测试</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">冒烟测试是测试根据自己的测试用例抽离出比较核心的流程的case</span><br><span class="line">开展冒烟测试工作有助于尽早发现软件代码存在的问题，提高软件代码的质量和开发效率</span><br></pre></td></tr></table></figure><h2 id="UI测试流程"><a href="#UI测试流程" class="headerlink" title="UI测试流程"></a>UI测试流程</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- 看需求文档</span><br><span class="line">- 分析业务逻辑，便些测试用例</span><br><span class="line">- 根据测试用例进行手工测试</span><br></pre></td></tr></table></figure><h2 id="接口自动化测试流程"><a href="#接口自动化测试流程" class="headerlink" title="接口自动化测试流程"></a>接口自动化测试流程</h2><p><img src="/2021/07/26/%E8%87%AA%E5%8A%A8%E5%8C%96/C:%5CUsers%5C%E5%88%98%E4%B8%80%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210726133614496.png" alt="image-20210726133614496"></p><h2 id="token机制"><a href="#token机制" class="headerlink" title="token机制"></a>token机制</h2><p><img src="/2021/07/26/%E8%87%AA%E5%8A%A8%E5%8C%96/C:%5CUsers%5C%E5%88%98%E4%B8%80%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210726133646910.png" alt="image-20210726133646910"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">token：令牌的意思，账号密码可以获取，提供给后续接口作为身份校验</span><br><span class="line">问题：假如redis服务挂了，用户登录就不会成功,token写入不到redis当中了</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="yaml配置文件"><a href="#yaml配置文件" class="headerlink" title="yaml配置文件"></a>yaml配置文件</h2><ul><li>格式：层级关系： <code>-</code>  代码不能用 <code>Tab</code> 缩进，只能用<code>空格</code> 注释 <code>#</code> </li><li><img src="/2021/07/26/%E8%87%AA%E5%8A%A8%E5%8C%96/C:%5CUsers%5C%E5%88%98%E4%B8%80%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210726133805669.png" alt="image-20210726133805669"></li></ul><h2 id="pytest模块-allure生成测试报告"><a href="#pytest模块-allure生成测试报告" class="headerlink" title="pytest模块+allure生成测试报告"></a>pytest模块+allure生成测试报告</h2><p><img src="/2021/07/26/%E8%87%AA%E5%8A%A8%E5%8C%96/C:%5CUsers%5C%E5%88%98%E4%B8%80%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210726133839600.png" alt="image-20210726133839600"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="性能测试"><a href="#性能测试" class="headerlink" title="性能测试"></a>性能测试</h2><ul><li>多-并发量（多用户的访问）</li><li>快-延时、响应时间：客户感知的感应时间，是端到端（对于web系统2秒响应时间是非常好的，5秒用户可以接受，8秒勉强）</li><li>好-稳定性（长时间运行）</li><li>省-资源使用率</li></ul><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210726134157891.png" alt="image-20210726134157891"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210726134724702.png" alt="image-20210726134724702"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210726140015238.png" alt="image-20210726140015238"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210726140109777.png" alt="image-20210726140109777"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210726140236875.png" alt="image-20210726140236875"></p><h2 id="Jmeter性能测试工具简介"><a href="#Jmeter性能测试工具简介" class="headerlink" title="Jmeter性能测试工具简介"></a>Jmeter性能测试工具简介</h2><ul><li>简介</li></ul><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210726141103855.png" alt="image-20210726141103855"></p><ul><li>环境搭建</li></ul><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210726141318971.png" alt="image-20210726141318971"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210726141851412.png" alt="image-20210726141851412"></p><ul><li>线程组</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> steup线程组（初始化）</span><br><span class="line">  第一个运行的与位置无关</span><br><span class="line"><span class="number">2</span> 线程组</span><br><span class="line"><span class="number">3</span> teardown线程组：环境剔除</span><br></pre></td></tr></table></figure><ul><li>Jmeter代理服务器</li><li>可以录制脚本-》Http代理服务器（非测试元件）也可以用Fiddler抓包工具抓到请求信息Export导出拉到Jmeter中即可</li><li><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210726145800618.png" alt="image-20210726145800618"></li><li>代理服务器过滤</li><li><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210726162818239.png"></li><li>发送接口请求</li><li>测试计划-》线程组-》http请求（取样器）-》Http请求头信息（配置元件，要注意作用域，放在测试的Http请求中）-》查看结果数（监听器）</li><li><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210726164000856.png" alt="image-20210726164000856"></li><li>默认端口</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">80</span> 默认Http端口</span><br><span class="line"><span class="number">8080</span> tomcat端口</span><br><span class="line"><span class="number">8888</span>  代理服务器</span><br><span class="line"><span class="number">443</span>  https</span><br></pre></td></tr></table></figure><ul><li>http请求默认值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http请求默认值(配置元件) 所有的请求都会默认使用此配置中的请求地址</span><br></pre></td></tr></table></figure><p><strong>监听器元件</strong></p><ul><li>1 察看结果树</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> 分析察看具体某一个请求的详细信息</span><br><span class="line"> - 请求头、请求体</span><br><span class="line"> - 响应头、响应体</span><br><span class="line"><span class="number">2</span> 再做性能场景的时候</span><br><span class="line"> - 分析错误请求的原因</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>断言</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">接口请求下增加断言，从返回结果中检查有没有预期的值-对比</span><br></pre></td></tr></table></figure><ul><li>2 聚合报告</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">汇总统计</span><br><span class="line"> - 请求数、响应时间、单位是ms</span><br><span class="line"> - 错误率越低越好</span><br><span class="line"> - 吞吐量越高越好</span><br><span class="line"> -  发送/接收 代宽</span><br></pre></td></tr></table></figure><ul><li>3 表格察看结果</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">请求的响应信息，没有聚合报告详细</span><br></pre></td></tr></table></figure><ul><li><p>4 图形结果</p></li><li><p>其他常用元件</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> 前置处理器：请求之前发出去之前执行的控制器</span><br><span class="line">比如 加密、md5</span><br><span class="line"><span class="number">2</span> 后置处理器：请求之前发出去之前执行的控制器</span><br><span class="line">比如 提取数据</span><br><span class="line"><span class="number">3</span> 定时器</span><br><span class="line">思考时间-固定定时器</span><br><span class="line">同步定时器-集合点</span><br><span class="line">随时定时器</span><br><span class="line">吞吐量定时器</span><br></pre></td></tr></table></figure><p>**参数化与关联 **</p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210726173455387.png" alt="image-20210726173455387"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210726172748554.png" alt="image-20210726172748554"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210726173733405.png" alt="image-20210726173733405"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210726174449386.png" alt="image-20210726174449386"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210726174659174.png" alt="image-20210726174659174"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210726174752665.png" alt="image-20210726174752665"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210726174938096.png" alt="image-20210726174938096"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210726175155945.png" alt="image-20210726175155945"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210726175304753.png" alt="image-20210726175304753"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210726175401727.png" alt="image-20210726175401727"></p><p><strong>Jmeter中的并发</strong></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210726204056310.png" alt="image-20210726204056310"></p><p><strong>Jmeter集合点</strong></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210726204230726.png" alt="image-20210726204230726"></p><p><strong>创建</strong></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210726204246074.png" alt="image-20210726204246074"></p><p><strong>参数设置</strong></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210726205101063.png" alt="image-20210726205101063"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210726205541544.png" alt="image-20210726205541544"></p><p><strong>接口测试</strong></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210726210425266.png" alt="image-20210726210425266"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210726210453438.png" alt="image-20210726210453438"></p><p><strong>Jmeter接口流程</strong></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210726211646607.png" alt="image-20210726211646607"></p><h2 id="性能测试-1"><a href="#性能测试-1" class="headerlink" title="性能测试"></a>性能测试</h2><p><strong>性能测试指标分析</strong></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210726214758648.png" alt="image-20210726214758648"></p><p><strong>项目性能场景提取</strong></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210726215053994.png" alt="image-20210726215053994"></p><p><strong>服务器架构流程图</strong></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210726215215830.png" alt="image-20210726215215830"></p><p><strong>性能指标</strong></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210726235412718.png" alt="image-20210726235412718"></p><p><strong>多个线程组配置</strong></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210726224744816.png" alt="image-20210726224744816"></p><p><strong>数据库开启慢查询日志</strong></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210727001925751.png" alt="image-20210727001925751"></p><p><strong>慢查询日志结果（需在指开启前设置超出阈值）</strong></p><p>​    <img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210727002241417.png" alt="image-20210727002241417"></p><p><strong>JMeter导出测试报告</strong></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210727004808364.png" alt="image-20210727004808364"></p><p><strong>导出Excle报告乱码解决</strong></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210727005539905.png" alt="image-20210727005539905"></p><p><strong>微服务简介</strong></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210727010521314.png" alt="image-20210727010521314"></p><p><strong>微服务项目架构流程图</strong></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210727010750196.png" alt="image-20210727010750196"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;自动化测试&quot;&gt;&lt;a href=&quot;#自动化测试&quot; class=&quot;headerlink&quot; title=&quot;自动化测试&quot;&gt;&lt;/a&gt;自动化测试&lt;/h1&gt;&lt;h2 id=&quot;冒烟测试&quot;&gt;&lt;a href=&quot;#冒烟测试&quot; class=&quot;headerlink&quot; title=&quot;冒烟测试&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2021/03/09/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    <id>http://example.com/2021/03/09/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/</id>
    <published>2021-03-09T14:21:31.165Z</published>
    <updated>2022-06-15T10:25:38.381Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据分析"><a href="#数据分析" class="headerlink" title="数据分析"></a>数据分析</h1><p><img src="/2021/03/09/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/C:%5CUsers%5C%E5%88%98%E4%B8%80%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210309222116444.png" alt="image-20210309222116444"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210309225655120.png" alt="image-20210309225655120"></p><h1 id="numpy"><a href="#numpy" class="headerlink" title="numpy"></a>numpy</h1><h2 id="matplotlib"><a href="#matplotlib" class="headerlink" title="matplotlib"></a>matplotlib</h2><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210410221649977.png" alt="image-20210410221649977"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210310214734420.png" alt="image-20210310214734420"></p><h2 id="reshape"><a href="#reshape" class="headerlink" title="reshape"></a>reshape</h2><ul><li><p>参数是一个元组</p></li><li><p>基本使用</p></li><li><p> 将一维数组变形成多维数组</p></li></ul>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">arr_1.reshape(<span class="number">6</span>,<span class="number">5</span>)</span><br><span class="line">array([[<span class="number">76</span>, <span class="number">67</span>, <span class="number">58</span>, <span class="number">69</span>, <span class="number">53</span>],</span><br><span class="line">       [<span class="number">62</span>, <span class="number">63</span>, <span class="number">70</span>, <span class="number">96</span>, <span class="number">51</span>],</span><br><span class="line">       [<span class="number">68</span>, <span class="number">50</span>, <span class="number">64</span>, <span class="number">49</span>, <span class="number">55</span>],</span><br><span class="line">       [<span class="number">58</span>, <span class="number">56</span>, <span class="number">94</span>, <span class="number">47</span>, <span class="number">64</span>],</span><br><span class="line">       [<span class="number">51</span>, <span class="number">57</span>, <span class="number">86</span>, <span class="number">47</span>, <span class="number">51</span>],</span><br><span class="line">       [<span class="number">68</span>, <span class="number">73</span>, <span class="number">60</span>, <span class="number">98</span>, <span class="number">72</span>]])</span><br></pre></td></tr></table></figure><ul><li> 将多维数组变形成一维数组</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">arr_1 = arr.reshape(<span class="number">30</span>,)</span><br><span class="line">array([<span class="number">76</span>, <span class="number">67</span>, <span class="number">58</span>, <span class="number">69</span>, <span class="number">53</span>, <span class="number">62</span>, <span class="number">63</span>, <span class="number">70</span>, <span class="number">96</span>, <span class="number">51</span>, <span class="number">68</span>, <span class="number">50</span>, <span class="number">64</span>, <span class="number">49</span>, <span class="number">55</span>, <span class="number">58</span>, <span class="number">56</span>,</span><br><span class="line">       <span class="number">94</span>, <span class="number">47</span>, <span class="number">64</span>, <span class="number">51</span>, <span class="number">57</span>, <span class="number">86</span>, <span class="number">47</span>, <span class="number">51</span>, <span class="number">68</span>, <span class="number">73</span>, <span class="number">60</span>, <span class="number">98</span>, <span class="number">72</span>])</span><br></pre></td></tr></table></figure><h2 id="级联"><a href="#级联" class="headerlink" title="级联"></a>级联</h2><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210310221610345.png" alt="image-20210310221610345"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210310221652493.png" alt="image-20210310221652493"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210310222022296.png" alt="image-20210310222022296"></p><h2 id="sum-求和"><a href="#sum-求和" class="headerlink" title="sum 求和"></a>sum 求和</h2><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210310222428538.png" alt="image-20210310222428538"></p><h2 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h2><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210310223045111.png" alt="image-20210310223045111"></p><h2 id="图片裁剪"><a href="#图片裁剪" class="headerlink" title="图片裁剪"></a>图片裁剪</h2><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210310223530010.png" alt="image-20210310223530010"></p><h1 id="pandas"><a href="#pandas" class="headerlink" title="pandas"></a>pandas</h1><h2 id="Series"><a href="#Series" class="headerlink" title="Series"></a>Series</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> Series,DataFrame</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></table></figure><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210310224827824.png" alt="image-20210310224827824"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210310225134453.png" alt="image-20210310225134453"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210310225251987.png" alt="image-20210310225251987"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210310225545965.png" alt="image-20210310225545965"></p><h2 id="DataFrame"><a href="#DataFrame" class="headerlink" title="DataFrame"></a>DataFrame</h2><h3 id="axis-0-表示行-axis-1-表示列"><a href="#axis-0-表示行-axis-1-表示列" class="headerlink" title="axis=0 表示行 axis=1 表示列"></a>axis=0 表示行 axis=1 表示列</h3><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210310225705544.png" alt="image-20210310225705544"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210310230112460.png" alt="image-20210310230112460"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210310230337934.png" alt="image-20210310230337934"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210310230823086.png" alt="image-20210310230823086"></p><h3 id="loc和iloc"><a href="#loc和iloc" class="headerlink" title="loc和iloc"></a>loc和iloc</h3><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210310231111937.png" alt="image-20210310231111937"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210310231435235.png" alt="image-20210310231435235"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210310231602338.png" alt="image-20210310231602338"></p><h3 id="isnull-notnull-drop-fillna"><a href="#isnull-notnull-drop-fillna" class="headerlink" title="isnull notnull drop fillna"></a>isnull notnull drop fillna</h3><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210322012604296.png" alt="image-20210322012604296"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210322012651501.png" alt="image-20210322012651501"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210322013006805.png" alt="image-20210322013006805"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210322013306341.png" alt="image-20210322013306341"></p><h3 id="级联-1"><a href="#级联-1" class="headerlink" title="级联"></a>级联</h3><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210409235112931.png" alt="image-20210409235112931"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210409235236935.png" alt="image-20210409235236935"></p><h3 id="merge合并"><a href="#merge合并" class="headerlink" title="merge合并"></a>merge合并</h3><h4 id="一对一"><a href="#一对一" class="headerlink" title="一对一"></a>一对一</h4><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210409234844969.png" alt="image-20210409234844969"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210409234757664.png" alt="image-20210409234757664"></p><h4 id="多对一"><a href="#多对一" class="headerlink" title="多对一"></a>多对一</h4><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210409235537536.png" alt="image-20210409235537536"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210410000131738.png" alt="image-20210410000131738"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210410000216491.png" alt="image-20210410000216491"></p><h4 id="多对多"><a href="#多对多" class="headerlink" title="多对多"></a>多对多</h4><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210410001355473.png" alt="image-20210410001355473"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210410001416272.png" alt="image-20210410001416272"> </p><h3 id="人口分析案例"><a href="#人口分析案例" class="headerlink" title="人口分析案例"></a>人口分析案例</h3><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210410001935406.png" alt="image-20210410001935406"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210410002011613.png" alt="image-20210410002011613"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210410002107256.png" alt="image-20210410002107256"></p><h4 id="人口数据与各州的数据合并"><a href="#人口数据与各州的数据合并" class="headerlink" title="人口数据与各州的数据合并"></a>人口数据与各州的数据合并</h4><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210410002212496.png" alt="image-20210410002212496"></p><h4 id="将合并后重复的列删除"><a href="#将合并后重复的列删除" class="headerlink" title="将合并后重复的列删除"></a>将合并后重复的列删除</h4><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210410002301294.png" alt="image-20210410002301294"></p><h4 id="查看存在缺失数据的列"><a href="#查看存在缺失数据的列" class="headerlink" title="查看存在缺失数据的列"></a>查看存在缺失数据的列</h4><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210410002354026.png" alt="image-20210410002354026"></p><h4 id="去重操作"><a href="#去重操作" class="headerlink" title="去重操作"></a>去重操作</h4><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210410002824438.png" alt="image-20210410002824438"></p><h4 id="合并各州数据areas"><a href="#合并各州数据areas" class="headerlink" title="合并各州数据areas"></a>合并各州数据areas</h4><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210410135514257.png" alt="image-20210410135514257"></p><h4 id="area缺失数据找出是哪一行"><a href="#area缺失数据找出是哪一行" class="headerlink" title="area缺失数据找出是哪一行"></a>area缺失数据找出是哪一行</h4><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210410135355144.png" alt="image-20210410135355144"></p><h4 id="找出2010年的全民人口数量"><a href="#找出2010年的全民人口数量" class="headerlink" title="找出2010年的全民人口数量"></a>找出2010年的全民人口数量</h4><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210410153416211.png" alt="image-20210410153416211"></p><h4 id="计算各州的人口密度"><a href="#计算各州的人口密度" class="headerlink" title="计算各州的人口密度"></a>计算各州的人口密度</h4><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210410153651766.png" alt="image-20210410153651766"></p><h4 id="排序，并找出密度最高的五个州"><a href="#排序，并找出密度最高的五个州" class="headerlink" title="排序，并找出密度最高的五个州"></a>排序，并找出密度最高的五个州</h4><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210410153858119.png" alt="image-20210410153858119"></p><h3 id="pandas-删除重复的行"><a href="#pandas-删除重复的行" class="headerlink" title="pandas 删除重复的行"></a>pandas 删除重复的行</h3><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210410160138726.png" alt="image-20210410160138726"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210410160259855.png" alt="image-20210410160259855"></p><h3 id="pandas-映射（重点）"><a href="#pandas-映射（重点）" class="headerlink" title="pandas 映射（重点）"></a>pandas 映射（重点）</h3><h4 id="替换"><a href="#替换" class="headerlink" title="替换"></a>替换</h4><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210410160346826.png" alt="image-20210410160346826"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210410160541781.png" alt="image-20210410160541781"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210410161154080.png" alt="image-20210410161154080"></p><h4 id="映射"><a href="#映射" class="headerlink" title="映射"></a>映射</h4><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210410161312461.png" alt="image-20210410161312461"></p><h5 id="关系映射表"><a href="#关系映射表" class="headerlink" title="关系映射表"></a>关系映射表</h5><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210410164606939.png" alt="image-20210410164606939"></p><h5 id="运算工具"><a href="#运算工具" class="headerlink" title="运算工具"></a>运算工具</h5><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210410165745182.png" alt="image-20210410165745182"></p><h4 id="聚合进行数据异常检测和过滤"><a href="#聚合进行数据异常检测和过滤" class="headerlink" title="聚合进行数据异常检测和过滤"></a>聚合进行数据异常检测和过滤</h4><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210410170204207.png" alt="image-20210410170204207"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210410170527448.png" alt="image-20210410170527448"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210410172229330.png" alt="image-20210410172229330"></p><h4 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h4><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210410172314505.png" alt="image-20210410172314505"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210410173753172.png" alt="image-20210410173753172"></p><h4 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h4><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210410173840040.png" alt="image-20210410173840040"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210410174805418.png" alt="image-20210410174805418"></p><h4 id="高级聚合"><a href="#高级聚合" class="headerlink" title="高级聚合"></a>高级聚合</h4><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210410174904137.png" alt="image-20210410174904137"></p><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210410214429953.png" alt="image-20210410214429953"></p><h4 id="日期格式的更换"><a href="#日期格式的更换" class="headerlink" title="日期格式的更换"></a>日期格式的更换</h4><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210410215611580.png" alt="image-20210410215611580"></p><h4 id="查看捐赠"><a href="#查看捐赠" class="headerlink" title="查看捐赠"></a>查看捐赠</h4><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210410215920006.png" alt="image-20210410215920006"></p><h4 id="金额最大"><a href="#金额最大" class="headerlink" title="金额最大"></a>金额最大</h4><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210410220551070.png" alt="image-20210410220551070">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;数据分析&quot;&gt;&lt;a href=&quot;#数据分析&quot; class=&quot;headerlink&quot; title=&quot;数据分析&quot;&gt;&lt;/a&gt;数据分析&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2021/03/09/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/C:%</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Vue</title>
    <link href="http://example.com/2021/01/16/Vue/"/>
    <id>http://example.com/2021/01/16/Vue/</id>
    <published>2021-01-16T02:23:37.000Z</published>
    <updated>2022-06-15T16:03:19.555Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h1><h2 id="1-vue介绍和使用"><a href="#1-vue介绍和使用" class="headerlink" title="1 vue介绍和使用"></a>1 vue介绍和使用</h2><ul><li>开发版本：vue.js :<a href="https://vuejs.org/js/vue.js">https://vuejs.org/js/vue.js</a></li><li>生产版本：vue.min.js :<a href="https://vuejs.org/js/vue.min.js">https://vuejs.org/js/vue.min.js</a></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">dist: 打包的项目目录(打包后会生成)</span><br><span class="line">node_modules: 项目依赖(删掉，不上传git，使用npm install重新安装)</span><br><span class="line">public: 共用资源</span><br><span class="line">--favicon.ico</span><br><span class="line">--index.html:项目入口页面，单页面</span><br><span class="line">src: 项目目标,书写代码的地方</span><br><span class="line">-- assets:资源</span><br><span class="line">-- components:组件</span><br><span class="line">-- views:视图组件</span><br><span class="line">-- App.vue:根组件</span><br><span class="line">-- main.js: 入口js</span><br><span class="line">-- router.js: 路由文件</span><br><span class="line">-- store.js: 状态库文件</span><br><span class="line">vue.config.js: 项目配置文件(没有可以自己新建)</span><br><span class="line">package.json：项目配置依赖（等同于python项目的reqirement.txt）</span><br></pre></td></tr></table></figure><h3 id="浏览器自动打开"><a href="#浏览器自动打开" class="headerlink" title="浏览器自动打开"></a>浏览器自动打开</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">config.json 加上 --<span class="built_in">open</span></span><br><span class="line">   <span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">   <span class="string">&quot;serve&quot;</span>: <span class="string">&quot;vue-cli-service serve --open&quot;</span>,</span><br><span class="line">   <span class="string">&quot;build&quot;</span>: <span class="string">&quot;vue-cli-service build&quot;</span>,</span><br><span class="line">   <span class="string">&quot;lint&quot;</span>: <span class="string">&quot;vue-cli-service lint&quot;</span></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h3 id="关闭eslink校验"><a href="#关闭eslink校验" class="headerlink" title="关闭eslink校验"></a>关闭eslink校验</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">在根目录下创建 vue.config.js</span><br><span class="line">module.exports = &#123;</span><br><span class="line">    lintOnSave:false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-模板语法"><a href="#2-模板语法" class="headerlink" title="2 模板语法"></a>2 模板语法</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.4.1/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/js/bootstrap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    &#123;&#123;name&#125;&#125;</span><br><span class="line">    &#123;&#123;ll&#125;&#125;</span><br><span class="line">    &#123;&#123;obj&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#box&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">name</span>: <span class="string">&#x27;hello world&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">ll</span>:[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>],</span></span><br><span class="line"><span class="javascript">            <span class="attr">obj</span>:&#123;<span class="attr">name</span>:<span class="string">&#x27;lhj&#x27;</span>,<span class="attr">age</span>:<span class="number">18</span>&#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-指令"><a href="#3-指令" class="headerlink" title="3 指令"></a>3 指令</h2><h3 id="3-1-v-html，v-text-v-show-v-if"><a href="#3-1-v-html，v-text-v-show-v-if" class="headerlink" title="3.1 v-html，v-text,v-show,v-if"></a>3.1 v-html，v-text,v-show,v-if</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> 标签属性为 v-xx的形式，是vue的指令</span><br><span class="line"><span class="number">2</span> 常用指令</span><br><span class="line">v-html：让html渲染成页面</span><br><span class="line">    v-text:标签内容显示js变量对应的值</span><br><span class="line">    v-show:放一个布尔值，为真，标签就显示，为假标签就不显示</span><br><span class="line">    v-<span class="keyword">if</span>：放一个布尔值，为真，标签就显示，为假标签就不显示</span><br><span class="line"><span class="number">3</span> v-show  和v-<span class="keyword">if</span> 区别：v-show标签还在，不显示了，v-<span class="keyword">if</span>之间操作的dom把标签删除和加入</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.4.1/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/js/bootstrap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-html</span>=<span class="string">&quot;s&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-text</span>=<span class="string">&quot;obj&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-show</span>=<span class="string">&quot;isShow&quot;</span>&gt;</span>v-show true显示 <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>小案例，控件通过按钮控制显示和消失<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;handleClick&quot;</span>&gt;</span>点我控制显示<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-show</span>=<span class="string">&quot;isShow&quot;</span>&gt;</span>v-show true显示 <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">&quot;isShow&quot;</span>&gt;</span>v-if true显示<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#box&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">name</span>: <span class="string">&#x27;hello world&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">ll</span>: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>],</span></span><br><span class="line"><span class="javascript">            <span class="attr">obj</span>: &#123;<span class="attr">name</span>: <span class="string">&#x27;lhj&#x27;</span>, <span class="attr">age</span>: <span class="number">18</span>&#125;,</span></span><br><span class="line"><span class="javascript">            <span class="attr">s</span>: <span class="string">&#x27;&lt;a href=&quot;http://www.baidu.com&quot;&gt;点我&lt;/a&gt;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">isShow</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">handleClick</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// this指的是当前vue对象</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.isShow = !<span class="built_in">this</span>.isShow</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-2-事件指令"><a href="#3-2-事件指令" class="headerlink" title="3.2 事件指令"></a>3.2 事件指令</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">1 点击事件 给标签（控件）绑定函数，点击执行函数</span><br><span class="line">2 v-on:click  缩写成 @click</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.4.1/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/js/bootstrap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;handleClick&quot;</span>&gt;</span>v-on 点我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    用的多--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;handleClick2&quot;</span>&gt;</span>@click 点我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    加括号--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;handleClick3()&quot;</span>&gt;</span>@click() 点我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    可以传参--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;handleClick4(1,2)&quot;</span>&gt;</span>@click传参 点我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    传入事件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;handleClick5($event)&quot;</span>&gt;</span>@click 点我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#box&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">handleClick</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;111&#x27;</span>)</span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">handleClick2</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;222&#x27;</span>)</span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">handleClick3</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;333&#x27;</span>)</span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">handleClick4</span>(<span class="params">a,b</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(a)</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(b)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">handleClick5</span>(<span class="params">ev</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(ev)</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-3-属性指令"><a href="#3-3-属性指令" class="headerlink" title="3.3  属性指令"></a>3.3  属性指令</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.4.1/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/js/bootstrap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.red</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: red;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.green</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: green;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--有个按钮，有个div，点击按钮，div变色--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;handleClick&quot;</span>&gt;</span>点我变色<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">&quot;isActive?&#x27;red&#x27;:&#x27;green&#x27;&quot;</span>&gt;</span>div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#box&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">isActive</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">handleClick</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.isActive=!<span class="built_in">this</span>.isActive</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-style和class的控制"><a href="#4-style和class的控制" class="headerlink" title="4 style和class的控制"></a>4 style和class的控制</h2><p>class 三种控制方式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 样式</span></span><br><span class="line">&lt;h1&gt;<span class="class"><span class="keyword">class</span>的三种写法&lt;/<span class="title">h1</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> :</span><span class="class"><span class="keyword">class</span>=&quot;<span class="title">isActive</span>?&#x27;<span class="title">red</span>&#x27;:</span><span class="string">&#x27;green&#x27;</span><span class="string">&quot;&gt;class三目写法&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;p :class=&quot;</span>classObj<span class="string">&quot;&gt;class对象写法&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p :class=&quot;</span>classar<span class="string">r&quot;&gt;class数组写法&lt;/p&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 数据</span></span><br><span class="line"><span class="string">isActive: true,</span></span><br><span class="line"><span class="string">// classObj:&#x27;red&#x27;,</span></span><br><span class="line"><span class="string">classObj: &#123;red: true, green: false, font: true&#125;,</span></span><br><span class="line"><span class="string">classarr: [&#x27;red&#x27;, &#x27;green&#x27;],</span></span><br></pre></td></tr></table></figure><p>style的三种控制方式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 样式</span></span><br><span class="line">&lt;h1&gt;style的三种写法&lt;/h1&gt;</span><br><span class="line">&lt;div style=<span class="string">&quot;background:red&quot;</span>&gt;style三目写法&lt;/div&gt;</span><br><span class="line">&lt;div :style=<span class="string">&quot;&#x27;background:red&#x27;&quot;</span>&gt;style三目写法&lt;/div&gt;</span><br><span class="line">&lt;div :style=<span class="string">&quot;&#x27;background:&#x27;+&#x27;red&#x27;&quot;</span>&gt;style三目写法&lt;/div&gt;</span><br><span class="line">&lt;div :style=<span class="string">&quot;&#x27;background:&#x27;+(isActive?&#x27;red&#x27;:&#x27;green&#x27;)&quot;</span>&gt;style三目写法&lt;/div&gt;</span><br><span class="line">&lt;p :style=<span class="string">&quot;styleobj&quot;</span>&gt;style对象写法&lt;/p&gt;</span><br><span class="line">&lt;p :style=<span class="string">&quot;styleattr&quot;</span>&gt;style数组写法&lt;/p&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据</span></span><br><span class="line">isActive: true,</span><br><span class="line">styleobj:&#123;background:<span class="string">&#x27;yellow&#x27;</span>,fontSize:<span class="string">&#x27;60px&#x27;</span>&#125;,</span><br><span class="line">styleattr:[&#123;background:<span class="string">&#x27;red&#x27;</span>&#125;,]</span><br></pre></td></tr></table></figure><h2 id="5-条件渲染"><a href="#5-条件渲染" class="headerlink" title="5 条件渲染"></a>5 条件渲染</h2><h3 id="通过v-if和v-for实现购物车"><a href="#通过v-if和v-for实现购物车" class="headerlink" title="通过v-if和v-for实现购物车"></a>通过v-if和v-for实现购物车</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.4.1/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/js/bootstrap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    土办法--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123;shopping[0]&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123;shopping[1]&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123;shopping[2]&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    for循环--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">v-if</span>=<span class="string">&quot;shopping.length&gt;0&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;data in shopping&quot;</span>&gt;</span>&#123;&#123;data&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else</span>&gt;</span>购物车空空如也<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#box&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">shopping</span>: [<span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;car&#x27;</span>, <span class="string">&#x27;mobile&#x27;</span></span></span><br><span class="line"><span class="javascript">            ]</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="v-if-v-else-if-v-else"><a href="#v-if-v-else-if-v-else" class="headerlink" title="v-if/v-else-if/v-else"></a>v-if/v-else-if/v-else</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;which==1&quot;</span>&gt;</span>1111<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else-if</span>=<span class="string">&quot;which==2&quot;</span>&gt;</span>2222<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else</span>&gt;</span>3333<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#box&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">which</span>:<span class="number">1</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="6-列表渲染"><a href="#6-列表渲染" class="headerlink" title="6 列表渲染"></a>6 列表渲染</h2><h3 id="for循环数组，对象"><a href="#for循环数组，对象" class="headerlink" title="for循环数组，对象"></a>for循环数组，对象</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.redclass</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: red;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.yellowclass</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: yellow;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(value,index) in arr&quot;</span>&gt;</span>&#123;&#123;value&#125;&#125;---&#123;&#123;index&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(value,key) in obj&quot;</span>&gt;</span>&#123;&#123;value&#125;&#125;---&#123;&#123;key&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(value,key) of obj&quot;</span>&gt;</span>&#123;&#123;value&#125;&#125;---&#123;&#123;key&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#box&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">arr</span>: [<span class="string">&#x27;11&#x27;</span>, <span class="string">&#x27;22&#x27;</span>, <span class="string">&#x27;33&#x27;</span>],</span></span><br><span class="line"><span class="javascript">            <span class="attr">obj</span>: &#123;<span class="attr">name</span>: <span class="string">&#x27;lqz&#x27;</span>, <span class="attr">age</span>: <span class="number">18</span>, <span class="attr">sex</span>: <span class="string">&#x27;男&#x27;</span>&#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="key值的解释"><a href="#key值的解释" class="headerlink" title="key值的解释"></a>key值的解释</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> v-<span class="keyword">for</span>循环数组，对象时，建议在控件（组件，标签）写一个key属性，属性值唯一</span><br><span class="line"><span class="number">2</span> 页面更新以后，加速dom的替换（渲染）,虚拟dom的替换diff算法</span><br><span class="line"><span class="number">3</span> :key=<span class="string">&quot;变量&quot;</span></span><br></pre></td></tr></table></figure><h3 id="数组更新与检测"><a href="#数组更新与检测" class="headerlink" title="数组更新与检测"></a>数组更新与检测</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span> 数据双向绑定，数据变化，页面变，页面变化数据变</span><br><span class="line"><span class="number">1</span> 使用以下方法操作数组，可以检测变动：push，pop，shift，unshift,splice,sort,reverse</span><br><span class="line"><span class="number">2</span> 不会检测变动<span class="built_in">filter</span>(),concat(),<span class="built_in">slice</span>(),<span class="built_in">map</span>()，新数组替换旧数组</span><br><span class="line">-页面不会更改：vm.arr.concat([<span class="string">&#x27;44&#x27;</span>,<span class="string">&#x27;55&#x27;</span>])</span><br><span class="line">-解决vm.arr=vm.arr.concat([<span class="string">&#x27;44&#x27;</span>,<span class="string">&#x27;55&#x27;</span>])</span><br><span class="line"><span class="number">3</span> 页面不会更改：通过索引值更新数组</span><br><span class="line">-解决方案一：</span><br><span class="line">    vm.arr[<span class="number">0</span>]</span><br><span class="line">    <span class="string">&quot;11&quot;</span></span><br><span class="line">    vm.arr[<span class="number">0</span>]=<span class="string">&#x27;99&#x27;</span></span><br><span class="line">    <span class="string">&quot;99&quot;</span></span><br><span class="line">    vm.arr.splice(<span class="number">0</span>,<span class="number">1</span>,<span class="string">&#x27;88&#x27;</span>)</span><br><span class="line">    [<span class="string">&quot;99&quot;</span>]</span><br><span class="line">-解决方案二</span><br><span class="line">Vue.<span class="built_in">set</span>(vm.arr,<span class="number">0</span>,<span class="string">&#x27;lqz&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="7-事件处理"><a href="#7-事件处理" class="headerlink" title="7 事件处理"></a>7 事件处理</h2><h3 id="input过滤案例"><a href="#input过滤案例" class="headerlink" title="input过滤案例"></a>input过滤案例</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.4.1/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/js/bootstrap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">       blur:失去焦点触发</span></span><br><span class="line"><span class="comment">       change：失去焦点触发，跟blur一样</span></span><br><span class="line"><span class="comment">       input:数据发生变化，就会触发</span></span><br><span class="line"><span class="comment">       --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    &lt;p&gt;&lt;input type=&quot;text&quot; v-model=&quot;text&quot; @blur=&quot;handleChange&quot;&gt;&#123;&#123;text&#125;&#125;&lt;/p&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;p&gt;&lt;input type=&quot;text&quot; v-model=&quot;text&quot; @change=&quot;handleChange&quot;&gt;&#123;&#123;text&#125;&#125;&lt;/p&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;text&quot;</span> @<span class="attr">input</span>=<span class="string">&quot;handleChange&quot;</span>&gt;</span>&#123;&#123;text&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;data in newlist&quot;</span>&gt;</span>&#123;&#123;data&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#box&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">text</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">datalist</span>: [<span class="string">&#x27;aaa&#x27;</span>, <span class="string">&#x27;abc&#x27;</span>, <span class="string">&#x27;abcde&#x27;</span>, <span class="string">&#x27;abcdef&#x27;</span>, <span class="string">&#x27;bbb&#x27;</span>, <span class="string">&#x27;bac&#x27;</span>],</span></span><br><span class="line"><span class="javascript">            <span class="attr">newlist</span>: [<span class="string">&#x27;aaa&#x27;</span>, <span class="string">&#x27;abc&#x27;</span>, <span class="string">&#x27;abcde&#x27;</span>, <span class="string">&#x27;abcdef&#x27;</span>, <span class="string">&#x27;bbb&#x27;</span>, <span class="string">&#x27;bac&#x27;</span>],</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">handleChange</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.newlist = <span class="built_in">this</span>.datalist.filter(<span class="function"><span class="params">data</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> data.indexOf(<span class="built_in">this</span>.text) &gt; -<span class="number">1</span></span></span><br><span class="line"><span class="javascript">                &#125;)</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="简单事件"><a href="#简单事件" class="headerlink" title="简单事件"></a>简单事件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;isShow=!isShow&quot;</span>&gt;</span>点我折叠，展开<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;handleClick&quot;</span>&gt;</span>点我折叠，展开2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    &lt;button @click=&quot;handleClick($event)&quot;&gt;点我折叠，展开2,传递event事件&lt;/button&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;handleClick&quot;</span>&gt;</span>点我折叠，展开2,传递event事件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-show</span>=<span class="string">&quot;isShow&quot;</span>&gt;</span></span><br><span class="line">        我很好看</span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        你也很好看呢</span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        大家都好看</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#box&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">isShow</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">handleClick</span>(<span class="params">ev</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(ev)</span></span><br><span class="line"><span class="javascript">                <span class="comment">// this.isShow = !this.isShow</span></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="事件修饰符"><a href="#事件修饰符" class="headerlink" title="事件修饰符"></a>事件修饰符</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.stop 阻止事件冒泡</span><br><span class="line">.self 只处理自己的事件，子控件冒泡的事件不处理</span><br><span class="line"></span><br><span class="line">.prevent 阻止a链接跳转</span><br><span class="line">.once 只处理一次就解绑(抽奖页面)</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.4.1/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/js/bootstrap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> @<span class="attr">click.self</span>=<span class="string">&quot;handleUl&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        &lt;li v-for=&quot;data in datalist&quot; @click=&quot;handleLi($event)&quot;&gt;&#123;&#123;data&#125;&#125;&lt;/li&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        &lt;li v-for=&quot;data in datalist&quot; @click.stop=&quot;handleLi&quot;&gt;&#123;&#123;data&#125;&#125;&lt;/li&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;data in datalist&quot;</span> @<span class="attr">click.once</span>=<span class="string">&quot;handleLi&quot;</span>&gt;</span>&#123;&#123;data&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.baidu.com&quot;</span> @<span class="attr">click.prevent</span>=<span class="string">&quot;handleA&quot;</span>&gt;</span>点我看美女<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#box&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">datalist</span>: [<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>, <span class="number">55</span>],</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">handleUl</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;ul被点击了&#x27;</span>)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     handleLi(ev)&#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//         console.log(&#x27;li被点击了&#x27;)</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//         ev.stopPropagation()  //点击事件停止向父组件传递</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     &#125;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// &#125;,</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">handleLi</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;li被点击了&#x27;</span>)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// handleA() &#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     console.log(&#x27;a标签被点击了&#x27;)</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// &#125;,</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">handleA</span>(<span class="params">ev</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;a标签被点击了&#x27;</span>)</span></span><br><span class="line"><span class="javascript">                 ev.preventDefault() <span class="comment">//event事件阻止a标签的跳转</span></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="数据双向绑定"><a href="#数据双向绑定" class="headerlink" title="数据双向绑定"></a>数据双向绑定</h3><p>v-model使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;myinput&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    &#123;&#123;myinput&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;30&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    &#123;&#123;text&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#box&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">myinput</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">text</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="8-表单控制"><a href="#8-表单控制" class="headerlink" title="8 表单控制"></a>8 表单控制</h2><h3 id="checkbox选中"><a href="#checkbox选中" class="headerlink" title="checkbox选中"></a>checkbox选中</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;myinput&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    &#123;&#123;myinput&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;30&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    &#123;&#123;text&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;check&quot;</span>&gt;</span>记住密码</span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    &#123;&#123;check&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#box&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">myinput</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">text</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">check</span>:<span class="literal">true</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br></pre></td></tr></table></figure><h3 id="单选"><a href="#单选" class="headerlink" title="单选"></a>单选</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>你最喜欢的编程语言<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Python&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;radio&quot;</span>&gt;</span>Python</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Java&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;radio&quot;</span>&gt;</span>Java</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;c++&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;radio&quot;</span>&gt;</span>C++</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#box&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="attr">radio</span>:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="多选"><a href="#多选" class="headerlink" title="多选"></a>多选</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span>    </span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>你喜欢的运动<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;checkgroup&quot;</span> <span class="attr">value</span>=<span class="string">&quot;抽烟&quot;</span>&gt;</span>抽烟</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;checkgroup&quot;</span> <span class="attr">value</span>=<span class="string">&quot;喝酒&quot;</span>&gt;</span>喝酒</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;checkgroup&quot;</span> <span class="attr">value</span>=<span class="string">&quot;烫头&quot;</span>&gt;</span>烫头</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#box&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">            <span class="attr">checkgroup</span>:[],</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="购物车案例"><a href="#购物车案例" class="headerlink" title="购物车案例"></a>购物车案例</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.4.1/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/js/bootstrap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> @<span class="attr">change</span>=<span class="string">&quot;handleChange&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;isAll&quot;</span>&gt;</span>全选/全不选</span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;data in datalist&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">:value</span>=<span class="string">&quot;data&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;checkgroup&quot;</span> @<span class="attr">change</span>=<span class="string">&quot;handleLi&quot;</span>&gt;</span></span><br><span class="line">            &#123;&#123;data&#125;&#125;</span><br><span class="line"><span class="comment">&lt;!--            控制购物车商品个数加减--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;data.number++&quot;</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            &#123;&#123;data.number&#125;&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;handleClick(data)&quot;</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    &#123;&#123;checkgroup&#125;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--要加括号，函数返回什么，该位置就写什么--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>总金额是：&#123;&#123;sum()&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#box&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">datalist</span>: [</span></span><br><span class="line"><span class="javascript">                &#123;<span class="attr">name</span>: <span class="string">&#x27;特斯拉&#x27;</span>, <span class="attr">price</span>: <span class="number">10</span>, <span class="attr">number</span>: <span class="number">1</span>, <span class="attr">id</span>: <span class="string">&#x27;1&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">                &#123;<span class="attr">name</span>: <span class="string">&#x27;充气&#x27;</span>, <span class="attr">price</span>: <span class="number">20</span>, <span class="attr">number</span>: <span class="number">3</span>, <span class="attr">id</span>: <span class="string">&#x27;2&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">                &#123;<span class="attr">name</span>: <span class="string">&#x27;娃娃&#x27;</span>, <span class="attr">price</span>: <span class="number">30</span>, <span class="attr">number</span>: <span class="number">2</span>, <span class="attr">id</span>: <span class="string">&#x27;3&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">            ],</span></span><br><span class="line"><span class="javascript">            <span class="attr">checkgroup</span>: [],</span></span><br><span class="line"><span class="javascript">            <span class="attr">isAll</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">sum</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> sum = <span class="number">0</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">for</span> (<span class="keyword">var</span> item <span class="keyword">in</span> <span class="built_in">this</span>.checkgroup) &#123;</span></span><br><span class="line"><span class="javascript">                    sum += <span class="built_in">this</span>.checkgroup[item][<span class="string">&#x27;number&#x27;</span>] * <span class="built_in">this</span>.checkgroup[item][<span class="string">&#x27;price&#x27;</span>]</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> sum</span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">handleChange</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.isAll)</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (<span class="built_in">this</span>.isAll) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.checkgroup = <span class="built_in">this</span>.datalist</span></span><br><span class="line"><span class="javascript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.checkgroup = []</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">handleLi</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (<span class="built_in">this</span>.checkgroup.length &lt; <span class="number">3</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.isAll = <span class="literal">false</span></span></span><br><span class="line"><span class="javascript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.isAll = <span class="literal">true</span></span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">handleClick</span>(<span class="params">data</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (data.number == <span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    data.number = <span class="number">1</span></span></span><br><span class="line"><span class="javascript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                    data.number--</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="9-v-model之lazy-number-trim"><a href="#9-v-model之lazy-number-trim" class="headerlink" title="9 v-model之lazy,number,trim"></a>9 v-model之lazy,number,trim</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    v-model.lazy 当光标移除输入框显示文本内容--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model.lazy</span>=<span class="string">&quot;mytext&quot;</span>&gt;</span> &#123;&#123;mytext&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    以数字开头时只显示数字内容--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model.number</span>=<span class="string">&quot;mytext&quot;</span>&gt;</span> &#123;&#123;mytext&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    去除左右两边的空格--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model.trim</span>=<span class="string">&quot;mytext&quot;</span>&gt;</span> &#123;&#123;mytext&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#box&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">mytext</span>:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="10-fetche使用"><a href="#10-fetche使用" class="headerlink" title="10 fetche使用"></a>10 fetche使用</h2><h3 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, make_response</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;请求来了&#x27;</span>)</span><br><span class="line">    <span class="comment"># 这两行代码处理跨域</span></span><br><span class="line">    res = make_response(<span class="string">&#x27;hello world&#x27;</span>)</span><br><span class="line">    res.headers[<span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>] = <span class="string">&#x27;*&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="通过ajax实现后端发送请求"><a href="#通过ajax实现后端发送请求" class="headerlink" title="通过ajax实现后端发送请求"></a>通过ajax实现后端发送请求</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.4.1/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/js/bootstrap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;handleClick&quot;</span>&gt;</span>点我加载数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    数据:&#123;&#123;text&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#box&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">text</span>:<span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">handleClick</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                $.ajax(&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="attr">url</span>:<span class="string">&#x27;http://127.0.0.1:5000/&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="attr">type</span>:<span class="string">&#x27;get&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="attr">success</span>:<span class="function"><span class="params">data</span>=&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="comment">// console.log(data)</span></span></span><br><span class="line"><span class="javascript">                        <span class="built_in">this</span>.text=data</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">                    &#125;</span></span><br><span class="line"><span class="javascript">                &#125;)</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="fetch向后端发送请求"><a href="#fetch向后端发送请求" class="headerlink" title="fetch向后端发送请求"></a>fetch向后端发送请求</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.4.1/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/js/bootstrap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;handleClick&quot;</span>&gt;</span>获取影片数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;data in datalist&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>电影名:&#123;&#123;data.name&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>电影简介:&#123;&#123;data.synopsis&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;data.poster&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#box&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">datalist</span>: [],</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">handleClick</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                fetch(<span class="string">&#x27;json/test.json&#x27;</span>).then(<span class="function"><span class="params">res</span> =&gt;</span> res.json()).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(res.data.films)</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.datalist = res.data.films</span></span><br><span class="line"><span class="javascript">                &#125;)</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="axios向后端发送请求"><a href="#axios向后端发送请求" class="headerlink" title="axios向后端发送请求"></a>axios向后端发送请求</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, make_response, jsonify</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/film&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">film</span>():</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./json/test.json&#x27;</span>,<span class="string">&#x27;rt&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        dic = json.load(f)</span><br><span class="line">        <span class="comment"># 这两行代码处理跨域</span></span><br><span class="line">        res = jsonify(dic)</span><br><span class="line">        res.headers[<span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>] = <span class="string">&#x27;*&#x27;</span></span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.4.1/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/js/bootstrap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/axios/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;handleClick&quot;</span>&gt;</span>获取影片数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;data in datalist&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>电影名:&#123;&#123;data.name&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>电影简介:&#123;&#123;data.synopsis&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;data.poster&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#box&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">datalist</span>: [],</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">handleClick</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                axios.get(<span class="string">&#x27;http://127.0.0.1:5000/film&#x27;</span>).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(res.data.data.films) <span class="comment">// axios 自动包装data属性 res.data</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span> (res.data.status == <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">this</span>.datalist = res.data.data.films</span></span><br><span class="line"><span class="javascript">                    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">                &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="11-计算属性"><a href="#11-计算属性" class="headerlink" title="11 计算属性"></a>11 计算属性</h2><h3 id="通过计算属性来实现人名首字母大写"><a href="#通过计算属性来实现人名首字母大写" class="headerlink" title="通过计算属性来实现人名首字母大写"></a>通过计算属性来实现人名首字母大写</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--大段的代码写在这里不好，使用计算属性--&gt;</span></span><br><span class="line">    &#123;&#123;mytext.substring(0,1).toUpperCase()+mytext.substring(1)&#125;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>计算属性：&#123;&#123;getName&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>计算属性：&#123;&#123;getName&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>计算属性：&#123;&#123;getName&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--普通方法要加括号--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>普通方法：&#123;&#123;getNameMethod()&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>普通方法：&#123;&#123;getNameMethod()&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>普通方法：&#123;&#123;getNameMethod()&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--区别是在同一个页面中使用多次计算属性，不会多次执行--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#box&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">mytext</span>: <span class="string">&#x27;lhj&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">computed</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">getName</span>(<span class="params"></span>)</span> &#123; <span class="comment">//依赖的状态改变了，会重新计算</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;计算属性&#x27;</span>)</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="built_in">this</span>.mytext.substring(<span class="number">0</span>, <span class="number">1</span>).toUpperCase() + <span class="built_in">this</span>.mytext.substring(<span class="number">1</span>)</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">getNameMethod</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;普通方法&#x27;</span>)</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="built_in">this</span>.mytext.substring(<span class="number">0</span>, <span class="number">1</span>).toUpperCase() + <span class="built_in">this</span>.mytext.substring(<span class="number">1</span>)</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="通过计算属性重写过滤小案例"><a href="#通过计算属性重写过滤小案例" class="headerlink" title="通过计算属性重写过滤小案例"></a>通过计算属性重写过滤小案例</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.4.1/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/js/bootstrap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;text&quot;</span> @<span class="attr">input</span>=<span class="string">&quot;handleChange&quot;</span>&gt;</span>&#123;&#123;text&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;data in newlist&quot;</span>&gt;</span>&#123;&#123;data&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#box&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">text</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">datalist</span>: [<span class="string">&#x27;aaa&#x27;</span>, <span class="string">&#x27;abc&#x27;</span>, <span class="string">&#x27;abcde&#x27;</span>, <span class="string">&#x27;abcdef&#x27;</span>, <span class="string">&#x27;bbb&#x27;</span>, <span class="string">&#x27;bac&#x27;</span>],</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">computed</span>:&#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">newlist</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span>  <span class="built_in">this</span>.datalist.filter(<span class="function"><span class="params">data</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> data.indexOf(<span class="built_in">this</span>.text) &gt; -<span class="number">1</span></span></span><br><span class="line"><span class="javascript">                &#125;)</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="12-组件化开发基础"><a href="#12-组件化开发基础" class="headerlink" title="12 组件化开发基础"></a>12 组件化开发基础</h2><h3 id="组件是什么？有什么用"><a href="#组件是什么？有什么用" class="headerlink" title="组件是什么？有什么用"></a>组件是什么？有什么用</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">扩展 HTML 元素，封装可重用的代码，目的是复用</span><br><span class="line">-例如：有一个轮播，可以在很多页面中使用，一个轮播有js，css，html</span><br><span class="line">-组件把js，css，html放到一起，有逻辑，有样式，有html</span><br></pre></td></tr></table></figure><h3 id="组件注册方式"><a href="#组件注册方式" class="headerlink" title="组件注册方式"></a>组件注册方式</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 全局组件</span><br><span class="line">Vue.component</span><br><span class="line">2 局部组件</span><br></pre></td></tr></table></figure><h3 id="定义全局组件，绑定事件，编写样式"><a href="#定义全局组件，绑定事件，编写样式" class="headerlink" title="定义全局组件，绑定事件，编写样式"></a>定义全局组件，绑定事件，编写样式</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.4.1/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/js/bootstrap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> @<span class="attr">click</span>=<span class="string">&quot;handleClick&quot;</span>&gt;</span>我是根组件的div</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> &gt;</span>显示消失<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">child</span>&gt;</span><span class="tag">&lt;/<span class="name">child</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;i in 4&quot;</span>&gt;</span>&#123;&#123;i&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">child</span>&gt;</span><span class="tag">&lt;/<span class="name">child</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">// 定义全局组件</span></span></span><br><span class="line"><span class="javascript">    Vue.component(<span class="string">&#x27;child&#x27;</span>, &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">template</span>: <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="javascript">            &lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">                &lt;div style=&quot;background: #ff0000&quot; @click=&quot;handleClick&quot;&gt;我是头部&lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">                &lt;div v-if=&quot;isShow&quot;&gt;显示消失&lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">            &lt;/div&gt;`</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">handleClick</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;nav nav &#x27;</span>)</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.isShow=!<span class="built_in">this</span>.isShow</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">isShow</span>:<span class="literal">true</span></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#box&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">isShow</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">handleClick</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;根组件被我点击了&#x27;</span>)</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.isShow=!<span class="built_in">this</span>.isShow</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="局部组件"><a href="#局部组件" class="headerlink" title="局部组件"></a>局部组件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.4.1/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/js/bootstrap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    局部组件只能用在被vue管理的根下或全局组件中定义局部组件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">child</span>&gt;</span><span class="tag">&lt;/<span class="name">child</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">son</span>&gt;</span><span class="tag">&lt;/<span class="name">son</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    Vue.component(<span class="string">&#x27;son&#x27;</span>, &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">template</span>: <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="javascript">            &lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">                &lt;button @click=&quot;handleClick&quot;&gt;全局组件&lt;/button&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">                &lt;child&gt;&lt;/child&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">            &lt;/div&gt;`</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">handleClick</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;全局组件 &#x27;</span>)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="attr">components</span>: &#123; <span class="comment">// 局部组件</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="attr">child</span>: &#123;  <span class="comment">// 组件名</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// 组件的模板</span></span></span><br><span class="line"><span class="javascript">                <span class="attr">template</span>: <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="javascript">                    &lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">                        &lt;button @click=&quot;handleClick&quot;&gt;&#123;&#123;name&#125;&#125;&lt;/button&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">                    &lt;/div&gt;`</span>,</span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="attr">name</span>:<span class="string">&#x27;lyh&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">                &#125;,</span></span><br><span class="line"><span class="javascript">                <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="function"><span class="title">handleClick</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(<span class="string">&#x27;全局下的局组组件被点了&#x27;</span>)</span></span><br><span class="line"><span class="javascript">                    &#125;</span></span><br><span class="line"><span class="javascript">                &#125;,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#box&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">isShow</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">handleClick</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.isShow = !<span class="built_in">this</span>.isShow</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="attr">components</span>: &#123; <span class="comment">// 局部组件</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="attr">child</span>: &#123;  <span class="comment">// 组件名</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// 组件的模板</span></span></span><br><span class="line"><span class="javascript">                <span class="attr">template</span>: <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="javascript">                    &lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">                        &lt;button @click=&quot;handleClick&quot;&gt;&#123;&#123;name&#125;&#125;&lt;/button&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">                    &lt;/div&gt;`</span>,</span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="attr">name</span>:<span class="string">&#x27;lhj&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">                &#125;,</span></span><br><span class="line"><span class="javascript">                <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="function"><span class="title">handleClick</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(<span class="string">&#x27;根下的局部组件被点了&#x27;</span>)</span></span><br><span class="line"><span class="javascript">                    &#125;</span></span><br><span class="line"><span class="javascript">                &#125;,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="13-组件编写方式与Vue实例的区别"><a href="#13-组件编写方式与Vue实例的区别" class="headerlink" title="13 组件编写方式与Vue实例的区别"></a>13 组件编写方式与Vue实例的区别</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> 自定义组件需要有一个root element，一般包裹在一个div中,跟vue实例一样</span><br><span class="line"><span class="number">2</span> 父子组件的data是无法共享</span><br><span class="line"><span class="number">3</span> 组件可以有data，methods,computed....,但是data 必须是一个函数</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    局部组件只能用在被vue管理的根下或全局组件中定义局部组件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">son</span>&gt;</span><span class="tag">&lt;/<span class="name">son</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    Vue.component(<span class="string">&#x27;son&#x27;</span>, &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">template</span>: <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="javascript">            &lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">                &lt;button @click=&quot;handleClick&quot;&gt;全局组件&lt;/button&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">                son:&#123;&#123;aa&#125;&#125;</span></span></span><br><span class="line"><span class="string"><span class="javascript">                &lt;button style=&quot;background: red&quot;&gt;主页&lt;/button&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript"></span></span></span><br><span class="line"><span class="string"><span class="javascript">                &lt;child&gt;&lt;/child&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">            &lt;/div&gt;`</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">handleClick</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;全局组件 &#x27;</span>)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">aa</span>: <span class="string">&#x27;全局组件下的data&#x27;</span></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="attr">components</span>: &#123; <span class="comment">// 局部组件</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="attr">child</span>: &#123;  <span class="comment">// 组件名</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// 组件的模板</span></span></span><br><span class="line"><span class="javascript">                <span class="attr">template</span>: <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="javascript">                    &lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">                        &lt;button @click=&quot;handleClick&quot;&gt;全局组件下的局部组件&#123;&#123;name&#125;&#125;&lt;/button&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">                    &lt;/div&gt;`</span>,</span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="attr">name</span>: <span class="string">&#x27;lyh&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">                &#125;,</span></span><br><span class="line"><span class="javascript">                <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="function"><span class="title">handleClick</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(<span class="string">&#x27;全局下的局组组件被点了&#x27;</span>)</span></span><br><span class="line"><span class="javascript">                    &#125;</span></span><br><span class="line"><span class="javascript">                &#125;,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#box&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">isShow</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">handleClick</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.isShow = !<span class="built_in">this</span>.isShow</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="14-组件通信之父传子通信"><a href="#14-组件通信之父传子通信" class="headerlink" title="14 组件通信之父传子通信"></a>14 组件通信之父传子通信</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--保证属性名和props中的属性名和变量名一致即可--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">navbar</span> <span class="attr">name</span>=<span class="string">&quot;lhj&quot;</span> <span class="attr">age</span>=<span class="string">&quot;18&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">navbar</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--注意数据绑定--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">navbar</span> <span class="attr">:name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">:age</span>=<span class="string">&quot;age&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">navbar</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--数据绑定后要写js变量，加上引号后就是普通的字符串--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">navbar</span> <span class="attr">:name</span>=<span class="string">&quot;&#x27;lhj&#x27;&quot;</span> <span class="attr">:age</span>=<span class="string">&quot;&#x27;18&#x27;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">navbar</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    Vue.component(<span class="string">&#x27;navbar&#x27;</span>, &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">template</span>: <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="javascript">            &lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">                &lt;button&gt;返回&lt;/button&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">                父组件传递的内容是:&#123;&#123;name&#125;&#125;  &#123;&#123;age&#125;&#125;</span></span></span><br><span class="line"><span class="string"><span class="javascript">                &lt;button&gt;主页&lt;/button&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">                &lt;br&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">            &lt;/div&gt;`</span>,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="attr">props</span>: [<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;age&#x27;</span>]</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#box&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">isShow</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">name</span>: <span class="string">&#x27;lhj&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">age</span>: <span class="number">18</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">handleClick</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.isShow = !<span class="built_in">this</span>.isShow</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="15-数据属性"><a href="#15-数据属性" class="headerlink" title="15 数据属性"></a>15 数据属性</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> 限制父传子的变量类型</span><br><span class="line">   props: &#123;</span><br><span class="line">           name:String,</span><br><span class="line">           show:Boolean</span><br><span class="line">       &#125;</span><br><span class="line"><span class="number">2</span> 父传子时注意以下的区别</span><br><span class="line">&lt;navbar name=<span class="string">&quot;lhj&quot;</span> :show=<span class="string">&quot;show&quot;</span>&gt;&lt;/navbar&gt;</span><br><span class="line">   &lt;navbar :name=<span class="string">&quot;name&quot;</span> :show=<span class="string">&quot;true&quot;</span>&gt;&lt;/navbar&gt;</span><br><span class="line">   &lt;navbar name=<span class="string">&quot;lhj&quot;</span> :show=<span class="string">&quot;false&quot;</span>&gt;&lt;/navbar&gt;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">navbar</span> <span class="attr">name</span>=<span class="string">&quot;lhj&quot;</span> <span class="attr">:show</span>=<span class="string">&quot;show&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">navbar</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">navbar</span> <span class="attr">:name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">:show</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">navbar</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">navbar</span> <span class="attr">name</span>=<span class="string">&quot;lhj&quot;</span> <span class="attr">:show</span>=<span class="string">&quot;false&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">navbar</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="handlebars"><span class="xml"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    Vue.component(&#x27;navbar&#x27;, &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        template: `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                <span class="tag">&lt;<span class="name">button</span>&gt;</span>返回<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                父组件传递的内容是:</span><span class="template-variable">&#123;&#123;<span class="name">name</span>&#125;&#125;</span><span class="xml">  </span><span class="template-variable">&#123;&#123;<span class="name">show</span>&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                <span class="tag">&lt;<span class="name">button</span>&gt;</span>主页<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                <span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span>`,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        // props: [&#x27;name&#x27;, &#x27;age&#x27;]</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         props: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            name:String,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            show:Boolean</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    &#125;)</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    var vm = new Vue(&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        el: &#x27;#box&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        data: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            show: true,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            name: &#x27;lhj&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">           </span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    &#125;)</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="16-组件通信之子传父通信-通过事件"><a href="#16-组件通信之子传父通信-通过事件" class="headerlink" title="16 组件通信之子传父通信(通过事件)"></a>16 组件通信之子传父通信(通过事件)</h2><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20201217200703287.png" alt="image-20201217200703287" style="zoom: 50%;"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">navbar</span> @<span class="attr">event</span>=<span class="string">&quot;handleClick&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">navbar</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    Vue.component(<span class="string">&#x27;navbar&#x27;</span>, &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">template</span>: <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="javascript">            &lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">                &lt;button @click=&quot;handleNav&quot;&gt;点击触发父组件函数的执行&lt;/button&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">                &lt;br&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">            &lt;/div&gt;`</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">handleNav</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;我是nav组件的函数&#x27;</span>)</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 传参在后面加参数 </span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.$emit(<span class="string">&#x27;event&#x27;</span>,<span class="built_in">this</span>.name)</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">name</span>:<span class="string">&#x27;lhj&#x27;</span></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#box&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;&#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 要传参的话需要通过事件</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">handleClick</span>(<span class="params">ev</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;我是父组件的函数&#x27;</span>)</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(ev)</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(name)</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="17-子传父小案例"><a href="#17-子传父小案例" class="headerlink" title="17 子传父小案例"></a>17 子传父小案例</h2><p>子组件有一个按钮，有一个输入框，当输入完内容，点击按钮，数据在父组件中展示</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">child</span> @<span class="attr">event</span>=<span class="string">&quot;handleClick&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">child</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>传滴到父组件的内容：&#123;&#123;content&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    Vue.component(<span class="string">&#x27;child&#x27;</span>, &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">template</span>: <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="javascript">            &lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">                &lt;input type=&quot;text&quot; v-model=&quot;text&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">                &lt;button @click=&quot;handleNav&quot;&gt;点击数据在父组件中显示&lt;/button&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">                &lt;br&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">            &lt;/div&gt;`</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">handleNav</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;我是nav组件的函数&#x27;</span>)</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.$emit(<span class="string">&#x27;event&#x27;</span>,<span class="built_in">this</span>.text)</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">text</span>:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#box&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">content</span>:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 要传参的话需要通过事件</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">handleClick</span>(<span class="params">text</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.content=text</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="18-ref属性（也可实现组件间通信-子父，父子都可以使用）"><a href="#18-ref属性（也可实现组件间通信-子父，父子都可以使用）" class="headerlink" title="18 ref属性（也可实现组件间通信,子父，父子都可以使用）"></a>18 ref属性（也可实现组件间通信,子父，父子都可以使用）</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ref放在标签上，拿到的是原生节点</span><br><span class="line">ref放在组件上，拿到的是组件对象,</span><br><span class="line">通过这种方式实现子传父（this.$refs.mychild.text）</span><br><span class="line">  通过这种方式实现父传子（调用子组件方法传参数）</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;isRef&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;handleClick&quot;</span>&gt;</span>点我返回父组件dom节点<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">child</span> <span class="attr">ref</span>=<span class="string">&quot;child&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">child</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;handleButton&quot;</span>&gt;</span>点我拿到组件对象<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    Vue.component(<span class="string">&#x27;child&#x27;</span>, &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">template</span>: <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="javascript">            &lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">                &lt;input type=&quot;text&quot; v-model=&quot;text&quot;&gt;子组件的input方法</span></span></span><br><span class="line"><span class="string"><span class="javascript">                &lt;button @click=&quot;add()&quot;&gt;显示消失&lt;/button&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">                &lt;div v-if=&quot;isShow&quot; style=&quot;background: red&quot;&gt;111&lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">                &lt;br&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">            &lt;/div&gt;`</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">add</span>(<span class="params">name</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.isShow=!<span class="built_in">this</span>.isShow</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;子组件的add方法&#x27;</span>)</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(name)</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="string">&#x27;返回&#x27;</span></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">isShow</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">                <span class="attr">text</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#box&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="javascript">          <span class="attr">name</span>:<span class="string">&#x27;lhj&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">handleClick</span>(<span class="params"></span>)</span> &#123; <span class="comment">// 拿到父节点的dom节点</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.$refs.isRef.value)</span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">handleButton</span>(<span class="params"></span>)</span>&#123; <span class="comment">// 可以拿到组件对象</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.$refs.child.text)</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.$refs.child.add(<span class="built_in">this</span>.name))</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="19-事件总线"><a href="#19-事件总线" class="headerlink" title="19 事件总线"></a>19 事件总线</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">child1</span>&gt;</span><span class="tag">&lt;/<span class="name">child1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">child2</span>&gt;</span><span class="tag">&lt;/<span class="name">child2</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//定义一个事件总线</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> bus = <span class="keyword">new</span> Vue()</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    Vue.component(<span class="string">&#x27;child1&#x27;</span>, &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">template</span>: <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="javascript">            &lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">                &lt;input type=&quot;text&quot; v-model=&quot;text&quot;&gt;子组件的input方法</span></span></span><br><span class="line"><span class="string"><span class="javascript">                &lt;button @click=&quot;handleClick&quot;&gt;点击传递数据到另一个组件&lt;/button&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">                &lt;br&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">            &lt;/div&gt;`</span>,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">text</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">handleClick</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.text)</span></span><br><span class="line"><span class="javascript">                bus.$emit(<span class="string">&#x27;suibian&#x27;</span>,<span class="built_in">this</span>.text) <span class="comment">//通过事件总线发送</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    Vue.component(<span class="string">&#x27;child2&#x27;</span>, &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">template</span>: <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="javascript">            &lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">                收到的消息是：&#123;&#123;content&#125;&#125;</span></span></span><br><span class="line"><span class="string"><span class="javascript">            &lt;/div&gt;`</span>,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">content</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;<span class="comment">//组件挂载（生命周期钩子函数中的一个），开始监听事件总线上的随便</span></span></span><br><span class="line"><span class="javascript">            bus.$on(<span class="string">&#x27;suibian&#x27;</span>, <span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;收到了&#x27;</span>, item)</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.content = item</span></span><br><span class="line"><span class="javascript">            &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>:<span class="string">&#x27;#box&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>:&#123;&#125;,</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="20-动态组件和的使用"><a href="#20-动态组件和的使用" class="headerlink" title="20 动态组件和的使用"></a>20 动态组件和<keep-alive>的使用</keep-alive></h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> @<span class="attr">click</span>=<span class="string">&quot;who=&#x27;child1&#x27;&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> @<span class="attr">click</span>=<span class="string">&quot;who=&#x27;child2&#x27;&quot;</span>&gt;</span>商品<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> @<span class="attr">click</span>=<span class="string">&quot;who=&#x27;child3&#x27;&quot;</span>&gt;</span>订单<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        保留文本输入框的内容--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">keep-alive</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">component</span> <span class="attr">:is</span>=<span class="string">&quot;who&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">component</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">keep-alive</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="handlebars"><span class="xml"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    var vm = new Vue(&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        el: &#x27;#box&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        data: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            who: &#x27;child1&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        components: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            child1: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                template: `<span class="tag">&lt;<span class="name">div</span>&gt;</span>我是首页</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">`,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            &#125;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            child2: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                template: `<span class="tag">&lt;<span class="name">div</span>&gt;</span>我是商品<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">`,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            &#125;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            child3: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                template: `<span class="tag">&lt;<span class="name">div</span>&gt;</span>我是订单<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">`,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    &#125;)</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="21-slot插槽"><a href="#21-slot插槽" class="headerlink" title="21 slot插槽"></a>21 slot插槽</h2><h3 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h3><p>可以使组件增加内容</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">child1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;i in 5&quot;</span>&gt;</span>&#123;&#123;i&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">child1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">child2</span>&gt;</span><span class="tag">&lt;/<span class="name">child2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">child3</span>&gt;</span><span class="tag">&lt;/<span class="name">child3</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="handlebars"><span class="xml"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    var vm = new Vue(&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        el: &#x27;#box&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        data: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            who: &#x27;child1&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        components: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            child1: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                template: `<span class="tag">&lt;<span class="name">div</span>&gt;</span>我是首页</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                    <span class="tag">&lt;<span class="name">slot</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                    我是插槽</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">`,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            &#125;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            child2: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                template: `<span class="tag">&lt;<span class="name">div</span>&gt;</span>我是商品<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">`,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            &#125;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            child3: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                template: `<span class="tag">&lt;<span class="name">div</span>&gt;</span>我是订单<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">`,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    &#125;)</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="控制隐藏"><a href="#控制隐藏" class="headerlink" title="控制隐藏"></a>控制隐藏</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">child1</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        1.插槽的基本使用--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        &lt;ul&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--            &lt;li v-for=&quot;i in 5&quot;&gt;&#123;&#123;i&#125;&#125;&lt;/li&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        &lt;/ul&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        2.控制另一个组件的隐藏--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;button @click=&quot;isShow=!isShow&quot;&gt;点我隐藏child2组件&lt;/button&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;handleClick&quot;</span>&gt;</span>点我隐藏child2组件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">child1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">child2</span> <span class="attr">v-if</span>=<span class="string">&quot;isShow&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">child2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">child3</span>&gt;</span><span class="tag">&lt;/<span class="name">child3</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="handlebars"><span class="xml"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    var vm = new Vue(&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        el: &#x27;#box&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        data: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            who: &#x27;child1&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            isShow:true</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        methods:&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            handleClick()&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                this.isShow=!this.isShow</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        components: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            child1: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                template: `<span class="tag">&lt;<span class="name">div</span>&gt;</span>我是首页</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                    <span class="tag">&lt;<span class="name">slot</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                    我是插槽</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">`,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            &#125;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            child2: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                template: `<span class="tag">&lt;<span class="name">div</span>&gt;</span>我是商品</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                                <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;i in 5&quot;</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">i</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">`,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            &#125;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            child3: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                template: `<span class="tag">&lt;<span class="name">div</span>&gt;</span>我是订单<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">`,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    &#125;)</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="具名插槽"><a href="#具名插槽" class="headerlink" title="具名插槽"></a>具名插槽</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">child1</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        1.插槽的基本使用--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        &lt;ul&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--            &lt;li v-for=&quot;i in 5&quot;&gt;&#123;&#123;i&#125;&#125;&lt;/li&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        &lt;/ul&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        2.控制另一个组件的隐藏--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        &lt;button @click=&quot;isShow=!isShow&quot;&gt;点我隐藏child2组件&lt;/button&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        &lt;button @click=&quot;handleClick&quot;&gt;点我隐藏child2组件&lt;/button&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--        3.具名插槽--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;handleClick&quot;</span> <span class="attr">slot</span>=<span class="string">&quot;button1&quot;</span>&gt;</span>点我隐藏child2组件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">slot</span>=<span class="string">&quot;div1&quot;</span>&gt;</span>我是div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">child1</span>&gt;</span></span><br><span class="line">components: &#123;</span><br><span class="line">            child1: &#123;</span><br><span class="line">                template: `<span class="tag">&lt;<span class="name">div</span>&gt;</span>我是首页</span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;div1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;button1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">`,</span><br><span class="line">            &#125;,</span><br><span class="line">            child2: &#123;</span><br><span class="line">                template: `<span class="tag">&lt;<span class="name">div</span>&gt;</span>我是商品</span><br><span class="line">                                <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;i in 5&quot;</span>&gt;</span>&#123;&#123;i&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">`,</span><br><span class="line">            &#125;,</span><br><span class="line">            child3: &#123;</span><br><span class="line">                template: `<span class="tag">&lt;<span class="name">div</span>&gt;</span>我是订单<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">`,</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="22-生命周期"><a href="#22-生命周期" class="headerlink" title="22 生命周期"></a>22 生命周期</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> mounted用的最多：向后端发送请求，定时器初始化</span><br><span class="line"><span class="number">2</span> destroyed：组件销毁---&gt;给组件写一个定时器--&gt;组件销毁，定时器清除</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">child</span> <span class="attr">v-if</span>=<span class="string">&quot;isShow&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">child</span>&gt;</span></span><br><span class="line">&#123;&#123;name&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    Vue.component(<span class="string">&#x27;child&#x27;</span>,&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">template</span>:<span class="string">`&lt;div&gt;我是组件的div&lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript"> `</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">t</span>:<span class="literal">null</span></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">beforeCreate</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;beforeCreate&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">created</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;created&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">beforeMount</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;beforeMount&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//用的最多，向后端加载数据，创建定时器等</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&quot;页面已被vue实例渲染, data, methods已更新&quot;</span>);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;mounted&#x27;</span>)</span></span><br><span class="line"><span class="javascript">            <span class="comment">//起一个定时器，每隔三秒，打印一行</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.t = <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;daada&#x27;</span>)</span></span><br><span class="line"><span class="javascript">            &#125;, <span class="number">3000</span>)</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">beforeUpdate</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;beforeUpdate&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">updated</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;updated&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">beforeDestroy</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;beforeDestroy&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">destroyed</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//组件销毁，清理定时器</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">clearInterval</span>(<span class="built_in">this</span>.t)</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.t = <span class="literal">null</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;destroyed&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#box&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">name</span>:<span class="string">&#x27;lhj&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">isShow</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="comment">// vm.name=‘lxx’更改姓名后会触发下面的打印</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">beforeUpdate</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;根的----beforeUpdate&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">updated</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;根的updated&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="补充定时任务和延迟任务"><a href="#补充定时任务和延迟任务" class="headerlink" title="补充定时任务和延迟任务"></a>补充定时任务和延迟任务</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">setTimeout(function () &#123;</span><br><span class="line">        alert(33333)</span><br><span class="line">    &#125;,3000) //延迟3s钟干什么事</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    setInterval(</span><br><span class="line">        function () &#123;</span><br><span class="line">            alert(444)</span><br><span class="line"></span><br><span class="line">        &#125;,3000</span><br><span class="line">    )//每隔3s钟干什么事</span><br></pre></td></tr></table></figure><h2 id="23-swiper学习"><a href="#23-swiper学习" class="headerlink" title="23 swiper学习"></a>23 swiper学习</h2><p>使用方法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://unpkg.com/swiper/swiper-bundle.min.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/swiper/swiper-bundle.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>HTML内容</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-container&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-wrapper&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-slide&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;data in datalist&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;data&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 如果需要分页器 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-pagination&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 如果需要导航按钮 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-button-prev&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-button-next&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 如果需要滚动条 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        &lt;div class=&quot;swiper-scrollbar&quot;&gt;&lt;/div&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>给Swiper定义一个大小，当然不要也行</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">    <span class="selector-class">.swiper-container</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">1200px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>初始化Swiper</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">        </span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> mySwiper = <span class="keyword">new</span> Swiper (<span class="string">&#x27;.swiper-container&#x27;</span>, &#123;</span></span><br><span class="line"><span class="javascript">    <span class="attr">direction</span>: <span class="string">&#x27;vertical&#x27;</span>, <span class="comment">// 垂直切换选项</span></span></span><br><span class="line"><span class="javascript">    <span class="attr">loop</span>: <span class="literal">true</span>, <span class="comment">// 循环模式选项</span></span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript">    <span class="comment">// 如果需要分页器</span></span></span><br><span class="line"><span class="javascript">    <span class="attr">pagination</span>: &#123;</span></span><br><span class="line"><span class="javascript">      <span class="attr">el</span>: <span class="string">&#x27;.swiper-pagination&#x27;</span>,</span></span><br><span class="line"><span class="javascript">    &#125;,</span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript">    <span class="comment">// 如果需要前进后退按钮</span></span></span><br><span class="line"><span class="javascript">    <span class="attr">navigation</span>: &#123;</span></span><br><span class="line"><span class="javascript">      <span class="attr">nextEl</span>: <span class="string">&#x27;.swiper-button-next&#x27;</span>,</span></span><br><span class="line"><span class="javascript">      <span class="attr">prevEl</span>: <span class="string">&#x27;.swiper-button-prev&#x27;</span>,</span></span><br><span class="line"><span class="javascript">    &#125;,</span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript">    <span class="comment">// 如果需要滚动条</span></span></span><br><span class="line"><span class="javascript">    <span class="attr">scrollbar</span>: &#123;</span></span><br><span class="line"><span class="javascript">      <span class="attr">el</span>: <span class="string">&#x27;.swiper-scrollbar&#x27;</span>,</span></span><br><span class="line"><span class="javascript">    &#125;,</span></span><br><span class="line"><span class="javascript">  &#125;)        </span></span><br><span class="line"><span class="javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="swiper案例"><a href="#swiper案例" class="headerlink" title="swiper案例"></a>swiper案例</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.4.1/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/js/bootstrap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://unpkg.com/swiper/swiper-bundle.min.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/swiper/swiper-bundle.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.swiper-container</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">1200px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-container&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-wrapper&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-slide&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;data in datalist&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;data&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 如果需要分页器 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-pagination&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 如果需要导航按钮 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-button-prev&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-button-next&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 如果需要滚动条 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        &lt;div class=&quot;swiper-scrollbar&quot;&gt;&lt;/div&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#box&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">datalist</span>: [],</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//this指的是function这个函数</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//使用了箭头函数以后，this指的是上一层</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.datalist = [<span class="string">&#x27;https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1608145297276&amp;di=dd396caeaa0bb6a2a50609a109cd3120&amp;imgtype=0&amp;src=http%3A%2F%2Fattachments.gfan.com%2Fforum%2Fattachments2%2Fday_110915%2F1109151356c0717d7e6a91e985.jpg&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="string">&#x27;https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1608145297276&amp;di=dd396caeaa0bb6a2a50609a109cd3120&amp;imgtype=0&amp;src=http%3A%2F%2Fattachments.gfan.com%2Fforum%2Fattachments2%2Fday_110915%2F1109151356c0717d7e6a91e985.jpg&#x27;</span>,]</span></span><br><span class="line"><span class="javascript">            &#125;, <span class="number">3000</span>)</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">updated</span>(<span class="params"></span>)</span> &#123; <span class="comment">//只要js数据发生变化，组件就会执行updated方法，轮播图又会重新创建</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> mySwiper = <span class="keyword">new</span> Swiper(<span class="string">&#x27;.swiper-container&#x27;</span>, &#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// direction: &#x27;vertical&#x27;, // 垂直切换选项</span></span></span><br><span class="line"><span class="javascript">                <span class="attr">loop</span>: <span class="literal">true</span>, <span class="comment">// 循环模式选项</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">                <span class="comment">// 如果需要分页器</span></span></span><br><span class="line"><span class="javascript">                <span class="attr">pagination</span>: &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="attr">el</span>: <span class="string">&#x27;.swiper-pagination&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                &#125;,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">                <span class="comment">// 如果需要前进后退按钮</span></span></span><br><span class="line"><span class="javascript">                <span class="attr">navigation</span>: &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="attr">nextEl</span>: <span class="string">&#x27;.swiper-button-next&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="attr">prevEl</span>: <span class="string">&#x27;.swiper-button-prev&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                &#125;,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">                <span class="comment">// 如果需要滚动条</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// scrollbar: &#123;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//     el: &#x27;.swiper-scrollbar&#x27;,</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// &#125;,</span></span></span><br><span class="line"><span class="javascript">            &#125;)</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="24-swiper定义成组件"><a href="#24-swiper定义成组件" class="headerlink" title="24 swiper定义成组件"></a>24 swiper定义成组件</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.4.1/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/js/bootstrap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://unpkg.com/swiper/swiper-bundle.min.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/swiper/swiper-bundle.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.swiper-container</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">1200px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">swiper</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-wrapper&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-slide&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;data in datalist&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;data&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">swiper</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">swiper</span> <span class="attr">:key</span>=<span class="string">&quot;datalist2.length&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-wrapper&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-slide&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;data in datalist2&quot;</span>&gt;</span></span><br><span class="line">                &#123;&#123;data&#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">swiper</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    Vue.component(<span class="string">&#x27;swiper&#x27;</span>, &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">template</span>: <span class="string">` &lt;div class=&quot;swiper-container&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">            &lt;slot&gt;&lt;/slot&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript"></span></span></span><br><span class="line"><span class="string"><span class="javascript">        &lt;div class=&quot;swiper-pagination&quot;&gt;&lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript"></span></span></span><br><span class="line"><span class="string"><span class="javascript">        &lt;div class=&quot;swiper-button-prev&quot;&gt;&lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">        &lt;div class=&quot;swiper-button-next&quot;&gt;&lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">     &lt;/div&gt;`</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> mySwiper = <span class="keyword">new</span> Swiper(<span class="string">&#x27;.swiper-container&#x27;</span>, &#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// direction: &#x27;vertical&#x27;, // 垂直切换选项</span></span></span><br><span class="line"><span class="javascript">                <span class="attr">loop</span>: <span class="literal">true</span>, <span class="comment">// 循环模式选项</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">                <span class="comment">// 如果需要分页器</span></span></span><br><span class="line"><span class="javascript">                <span class="attr">pagination</span>: &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="attr">el</span>: <span class="string">&#x27;.swiper-pagination&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                &#125;,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">                <span class="comment">// 如果需要前进后退按钮</span></span></span><br><span class="line"><span class="javascript">                <span class="attr">navigation</span>: &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="attr">nextEl</span>: <span class="string">&#x27;.swiper-button-next&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="attr">prevEl</span>: <span class="string">&#x27;.swiper-button-prev&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                &#125;,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#box&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">datalist</span>: [],</span></span><br><span class="line"><span class="javascript">            <span class="attr">datalist2</span>: [],</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//this指的是function这个函数</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//使用了箭头函数以后，this指的是上一层</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.datalist = [<span class="string">&#x27;https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1608145297276&amp;di=dd396caeaa0bb6a2a50609a109cd3120&amp;imgtype=0&amp;src=http%3A%2F%2Fattachments.gfan.com%2Fforum%2Fattachments2%2Fday_110915%2F1109151356c0717d7e6a91e985.jpg&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="string">&#x27;https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1608145297276&amp;di=dd396caeaa0bb6a2a50609a109cd3120&amp;imgtype=0&amp;src=http%3A%2F%2Fattachments.gfan.com%2Fforum%2Fattachments2%2Fday_110915%2F1109151356c0717d7e6a91e985.jpg&#x27;</span>,]</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.datalist2 = [<span class="number">111</span>, <span class="number">222</span>, <span class="number">333</span>]</span></span><br><span class="line"><span class="javascript">            &#125;, <span class="number">3000</span>)</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">updated</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="25-自定义指令"><a href="#25-自定义指令" class="headerlink" title="25 自定义指令"></a>25 自定义指令</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-style</span>=<span class="string">&quot;&#x27;red&#x27;&quot;</span>&gt;</span>div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-style</span>=<span class="string">&quot;color&quot;</span>&gt;</span> 我是div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//自定义指令,不需要写v使用的时候，加上v-名字</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// Vue.directive(&#x27;style&#x27;, &#123;</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//     inserted() &#123;  //在标签上使用这个指令，就会触发inserted的执行</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//         console.log(&#x27;我执行了&#x27;)</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//     &#125;,</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// &#125;)</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//只要使用了我的指令，背景就变红色</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// Vue.directive(&#x27;style&#x27;, &#123;</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//     inserted(ev) &#123;  //ev就是dom对象</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//         ev.style.background=&#x27;red&#x27;</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//     &#125;,</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// &#125;)</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    Vue.directive(<span class="string">&#x27;style&#x27;</span>,&#123;</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">inserted</span>(<span class="params">ev,color</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(ev)</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(color.value)</span></span><br><span class="line"><span class="javascript">            ev.style.backgroundColor=color.value</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">update</span>(<span class="params">ev,color</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            ev.style.backgroundColor=color.value</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm=<span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#box&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">color</span>:<span class="string">&#x27;green&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="26-过滤器"><a href="#26-过滤器" class="headerlink" title="26 过滤器"></a>26 过滤器</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;img :src=<span class="string">&quot;data.img | repUrl &quot;</span> alt=<span class="string">&quot;&quot;</span>&gt;</span><br><span class="line">    </span><br><span class="line"> Vue.<span class="built_in">filter</span>(<span class="string">&#x27;repUrl&#x27;</span>,url=&gt;&#123;</span><br><span class="line">        <span class="keyword">return</span> url.replace(<span class="string">&#x27;w.h&#x27;</span>,<span class="string">&#x27;220.330&#x27;</span>)</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;data in datalist&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>电影名:&#123;&#123;data.nm&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>演员:&#123;&#123;data.star&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            图片显示不出来--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;img :src=&quot;data.img&quot; alt=&quot;&quot;&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--            1.写个函数--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;img :src=&quot;getUrl(data.img)&quot; alt=&quot;&quot;&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            2.写个过滤器--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;data.img | repUrl &quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    Vue.filter(<span class="string">&#x27;repUrl&#x27;</span>,<span class="function"><span class="params">url</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> url.replace(<span class="string">&#x27;w.h&#x27;</span>,<span class="string">&#x27;220.330&#x27;</span>)</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#box&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">datalist</span>: [],</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// getUrl(url)&#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     return url.replace(&#x27;w.h&#x27;, &#x27;200.300&#x27;)</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            axios.get(<span class="string">&#x27;http://127.0.0.1:5000/film&#x27;</span>).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(res.data) <span class="comment">// axios 自动包装data属性 res.data</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.datalist = res.data.coming</span></span><br><span class="line"><span class="javascript">            &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="27-单文件组件"><a href="#27-单文件组件" class="headerlink" title="27 单文件组件"></a>27 单文件组件</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 原来写的组件存在的问题</span></span><br><span class="line">    全局定义 (Global definitions) 强制要求每个 component 中的命名不得重复</span><br><span class="line">    字符串模板 (String templates) 缺乏语法高亮，在 HTML 有多行的时候，需要用到丑陋的 \</span><br><span class="line">    不支持 CSS (No CSS support) 意味着当 HTML 和 JavaScript 组件化时，CSS 明显被遗漏</span><br><span class="line">    没有构建步骤 (No build step) 限制只能使用 HTML 和 ES5 JavaScript，而不能使用预处理器，如 Pug (formerly Jade) 和 Babel</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 以后每个组件就是一个 xx.vue-----最终-----&gt;html,css,js</span></span><br><span class="line">并且还可以使用 webpack 构建工具</span><br><span class="line"><span class="comment"># CLI 会为你搞定大多数工具的配置问题</span></span><br></pre></td></tr></table></figure><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20201218225717631.png" alt="image-20201218225717631" style="zoom:67%;"><h2 id="28-vue-cli"><a href="#28-vue-cli" class="headerlink" title="28 vue-cli"></a>28 vue-cli</h2><h3 id="1-环境搭建"><a href="#1-环境搭建" class="headerlink" title="1 环境搭建"></a>1 环境搭建</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">- 安装node</span><br><span class="line"></span><br><span class="line">官网下载安装包，傻瓜式安装：https://nodejs.org/zh-cn/</span><br><span class="line"></span><br><span class="line">- 安装cnpm</span><br><span class="line"></span><br><span class="line">npm install -g cnpm -- registry=https://registry.npm.taobao.org</span><br><span class="line"></span><br><span class="line">- 安装脚手架</span><br><span class="line"></span><br><span class="line">cnpm install -g @vue/cli  <span class="comment"># -g 全局安装</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- 清空缓存处理</span><br><span class="line"></span><br><span class="line">npm cache clean --force</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">vue create 项目名（命令行下创建项目）</span><br><span class="line">    </span><br><span class="line">vue ui (图形化界面，点点点创建项目)</span><br></pre></td></tr></table></figure><h3 id="2-项目创建"><a href="#2-项目创建" class="headerlink" title="2 项目创建"></a>2 项目创建</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vue create 项目名</span><br><span class="line">// 要提前进入目标目录(项目应该创建在哪个目录下)</span><br><span class="line">// 选择自定义方式创建项目，选取Router, Vuex插件</span><br><span class="line">//标准eslint，自动修复（ESlint+Standard config--》lint on save+Lint <span class="keyword">and</span> fix on commit）</span><br><span class="line">vue ui 使用图形界面创建项目</span><br></pre></td></tr></table></figure><h3 id="3-启动-停止项目"><a href="#3-启动-停止项目" class="headerlink" title="3 启动/停止项目"></a>3 启动/停止项目</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm run serve / ctrl+c</span><br><span class="line">// 要提前进入项目根目录</span><br></pre></td></tr></table></figure><h3 id="4-打包项目"><a href="#4-打包项目" class="headerlink" title="4 打包项目"></a>4 打包项目</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm run serve / ctrl+c</span><br><span class="line">// 要提前进入项目根目录</span><br></pre></td></tr></table></figure><h3 id="5-package-json中"><a href="#5-package-json中" class="headerlink" title="5 package.json中"></a>5 package.json中</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;serve&quot;</span>: <span class="string">&quot;vue-cli-service serve&quot;</span>,  <span class="comment"># 运行项目</span></span><br><span class="line">    <span class="string">&quot;build&quot;</span>: <span class="string">&quot;vue-cli-service build&quot;</span>,  <span class="comment"># 编译项目成html，css，js</span></span><br><span class="line">    <span class="string">&quot;lint&quot;</span>: <span class="string">&quot;vue-cli-service lint&quot;</span>     <span class="comment"># 代码格式化</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h3 id="6-项目目录"><a href="#6-项目目录" class="headerlink" title="6 项目目录"></a>6 项目目录</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">dist: 打包的项目目录(打包后会生成)</span><br><span class="line">node_modules: 项目依赖(删掉，不上传git，使用npm install重新安装)</span><br><span class="line">public: 共用资源</span><br><span class="line">--favicon.ico</span><br><span class="line">--index.html:项目入口页面，单页面</span><br><span class="line">src: 项目目标,书写代码的地方</span><br><span class="line">-- assets:资源</span><br><span class="line">-- components:组件</span><br><span class="line">-- views:视图组件</span><br><span class="line">-- App.vue:根组件</span><br><span class="line">-- main.js: 入口js</span><br><span class="line">-- router.js: 路由文件</span><br><span class="line">-- store.js: 状态库文件</span><br><span class="line">vue.config.js: 项目配置文件(没有可以自己新建)</span><br><span class="line">package.json：项目配置依赖（等同于python项目的reqirement.txt）</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Vue&quot;&gt;&lt;a href=&quot;#Vue&quot; class=&quot;headerlink&quot; title=&quot;Vue&quot;&gt;&lt;/a&gt;Vue&lt;/h1&gt;&lt;h2 id=&quot;1-vue介绍和使用&quot;&gt;&lt;a href=&quot;#1-vue介绍和使用&quot; class=&quot;headerlink&quot; title=&quot;1</summary>
      
    
    
    
    
    <category term="Vue" scheme="http://example.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2020/12/23/%E7%88%AC%E8%99%AB/"/>
    <id>http://example.com/2020/12/23/%E7%88%AC%E8%99%AB/</id>
    <published>2020-12-23T05:33:37.000Z</published>
    <updated>2022-07-01T07:37:15.532Z</updated>
    
    <content type="html"><![CDATA[<h1 id="异步爬虫"><a href="#异步爬虫" class="headerlink" title="异步爬虫"></a>异步爬虫</h1><p><strong><img src="/2020/12/23/%E7%88%AC%E8%99%AB/image-20201130160241433.png" alt="爬虫"></strong></p><h2 id="1-asyncio"><a href="#1-asyncio" class="headerlink" title="1 asyncio"></a>1 asyncio</h2><p><code>事件循环</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成一个事件循环</span></span><br><span class="line">loop = asyncio.get_event_loop()</span><br><span class="line">loop.run_untile_complete(任务)</span><br><span class="line"></span><br><span class="line">asyncio <span class="function"><span class="keyword">def</span> <span class="title">func</span>():</span> <span class="comment"># 协程函数</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">res = func() <span class="comment"># 协程对象</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行协程函数创建协程对象，函数内部代码不会被执行，交予事件循环</span></span><br><span class="line">asyncio.run( res )</span><br></pre></td></tr></table></figure><p><code>异步可迭代器对象</code></p><p><img src="/2020/12/23/%E7%88%AC%E8%99%AB/image-20220701150552130.png" alt="爬虫"></p><p><code>异步上下文管理器</code></p><p><img src="/2020/12/23/%E7%88%AC%E8%99%AB/image-20220701153654535.png" alt="爬虫"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">start = time.time()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">callback</span>(<span class="params">task</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;i am callback&#x27;</span>, task.result())</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    task.result()</span></span><br><span class="line"><span class="string">        接收特殊函数的返回值</span></span><br><span class="line"><span class="string">        下载成功 www.baidu.com</span></span><br><span class="line"><span class="string">        下载成功 www.jd.com</span></span><br><span class="line"><span class="string">        i am callback www.baidu.com</span></span><br><span class="line"><span class="string">        i am callback www.jd.com</span></span><br><span class="line"><span class="string">        耗时 2.001952648162842</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 特殊函数</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">get_request</span>(<span class="params">url</span>):</span></span><br><span class="line">    <span class="comment"># time.sleep(2) # 4s多</span></span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;下载成功&#x27;</span>, url)</span><br><span class="line">    <span class="keyword">return</span> url</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">urls = [</span><br><span class="line">    <span class="string">&#x27;www.baidu.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;www.jd.com&#x27;</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">tasks = []</span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">    res = get_request(url)</span><br><span class="line">    task = asyncio.ensure_future(res)  <span class="comment"># 封装一个任务对象</span></span><br><span class="line">    task.add_done_callback(callback)  <span class="comment"># 绑定回调函数</span></span><br><span class="line">    tasks.append(task)</span><br><span class="line"></span><br><span class="line">loop = asyncio.get_event_loop()  <span class="comment"># 创建一个事件循环对象</span></span><br><span class="line">loop.run_until_complete(asyncio.wait(tasks)) <span class="comment"># 开启事件循环</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;耗时&#x27;</span>, time.time() - start)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2-多线程异步"><a href="#2-多线程异步" class="headerlink" title="2 多线程异步"></a>2 多线程异步</h2><p>flask_Server</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/lhj&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index_lhj</span>():</span></span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;lhj&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/lyh&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index_lyh</span>():</span></span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;lyh&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure><p>多线程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> multiprocessing.dummy <span class="keyword">import</span> Pool</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">start = time.time()</span><br><span class="line"></span><br><span class="line">urls = [</span><br><span class="line">    <span class="string">&#x27;http://127.0.0.1:5000/lhj&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;http://127.0.0.1:5000/lyh&#x27;</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_request</span>(<span class="params">url</span>):</span></span><br><span class="line">    page_test = requests.get(url=url).text</span><br><span class="line">    <span class="built_in">print</span>(page_test)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pool = Pool(<span class="number">2</span>)</span><br><span class="line">pool.<span class="built_in">map</span>(get_request, urls)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;耗时&#x27;</span>, time.time() - start)</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">lhj</span></span><br><span class="line"><span class="string">lyh</span></span><br><span class="line"><span class="string">耗时 2.0199060440063477</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="3-多任务异步协程"><a href="#3-多任务异步协程" class="headerlink" title="3 多任务异步协程"></a>3 多任务异步协程</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> aiohttp</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"></span><br><span class="line">start = time.time()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">callback</span>(<span class="params">task</span>):</span></span><br><span class="line">    page_text = task.result()</span><br><span class="line">    tree = etree.HTML(page_text)</span><br><span class="line">    parse_data = tree.xpath(<span class="string">&#x27;//li/text()&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(parse_data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 特殊函数</span></span><br><span class="line"><span class="comment"># 注意：</span></span><br><span class="line"><span class="comment"># 每一个with要加上async（表示异步操作）在每一个阻塞的前面加上await</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">get_request</span>(<span class="params">url</span>):</span></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">with</span> aiohttp.ClientSession() <span class="keyword">as</span> s:</span><br><span class="line">        <span class="keyword">async</span> <span class="keyword">with</span> <span class="keyword">await</span> s.get(url) <span class="keyword">as</span> response:</span><br><span class="line">            page_text = <span class="keyword">await</span> response.text()</span><br><span class="line">            <span class="keyword">return</span> page_text</span><br><span class="line"></span><br><span class="line">urls = [</span><br><span class="line">    <span class="string">&#x27;http://127.0.0.1:5000/lhj&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;http://127.0.0.1:5000/lyh&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;http://127.0.0.1:5000/lxx&#x27;</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">tasks = []</span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">    res = get_request(url)</span><br><span class="line">    task = asyncio.ensure_future(res)  <span class="comment"># 封装一个任务对象</span></span><br><span class="line">    task.add_done_callback(callback)  <span class="comment"># 绑定回调函数</span></span><br><span class="line">    tasks.append(task)</span><br><span class="line"></span><br><span class="line">loop = asyncio.get_event_loop()  <span class="comment"># 创建一个事件循环对象</span></span><br><span class="line">loop.run_until_complete(asyncio.wait(tasks))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;耗时&#x27;</span>, time.time() - start)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;三个请求耗时2s</span></span><br><span class="line"><span class="string">[&#x27;i am superman &#x27;, &#x27;i am hero &#x27;, &#x27;i am super &#x27;]</span></span><br><span class="line"><span class="string">[&#x27;i am superman &#x27;, &#x27;i am hero &#x27;, &#x27;i am super &#x27;]</span></span><br><span class="line"><span class="string">[&#x27;i am superman &#x27;, &#x27;i am hero &#x27;, &#x27;i am super &#x27;]</span></span><br><span class="line"><span class="string">耗时 2.015962600708008</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>flask_Server</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/lhj&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index_lhj</span>():</span></span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;test.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/lyh&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index_lyh</span>():</span></span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;test.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/lxx&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index_lxx</span>():</span></span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;test.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>test.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.4.1/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/js/bootstrap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>i am superman <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>i am hero <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>i am super <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-破解验证码登录"><a href="#4-破解验证码登录" class="headerlink" title="4 破解验证码登录"></a>4 <em>破解验证码登录</em></h2><p><img src="/2020/12/23/%E7%88%AC%E8%99%AB/image-20210805003708180.png" alt="爬虫"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">- <span class="number">1</span>对图片验证码进行捕获识别存储到本地</span><br><span class="line">- <span class="number">2</span>使用第三方平台解析验证码中的数字</span><br><span class="line">  -<span class="number">2.1</span> 第三方平台解析可能会涉及到一个appid和appkey</span><br><span class="line">    -<span class="number">2.2</span> 根据封装好类改相应的参数拿到需要解析的验证码类型</span><br><span class="line">- <span class="number">3</span>登录请求携带的参数中把验证码对应的值改为第三方平台解析出来的结果</span><br><span class="line">- <span class="number">4</span>验证登录成功，响应的界面数据，可以用响应对象response.status_code做判断，如果状态码为<span class="number">200</span>，则表示成功</span><br><span class="line">- <span class="number">5</span>对登录成功后的页面再做解析处理的时候，需要携带cookie</span><br><span class="line">   -手动处理cookie（使用抓包工具定制cookie放在请求头中，不建议使用）</span><br><span class="line">   -自动处理cookie</span><br><span class="line">cookie：存在客户端的键值对，携带cookie会让服务端知道所创建的cookie信息</span><br><span class="line">    session会话对象：</span><br><span class="line">    -作用：</span><br><span class="line">        <span class="number">1.</span>可以进行请求的发送</span><br><span class="line">            <span class="number">2.</span>如果请求过程中产生了cookie，则该cookie会被自动存储。携带在该session中 </span><br><span class="line">      - <span class="number">5.1</span>创建一个session对象：session = request.Session()</span><br><span class="line">      - <span class="number">5.2</span>使用session对象进行模拟登录post请求的发送（cookie就会存储在session中） </span><br><span class="line">          session = requests.Session()</span><br><span class="line">    response = session.post(url=img_url, headers=headers,data=img_data)</span><br></pre></td></tr></table></figure><h2 id="5-http与https协议"><a href="#5-http与https协议" class="headerlink" title="5 http与https协议"></a>5 http与https协议</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http: 无状态连接</span><br><span class="line">https: http+ssl()</span><br></pre></td></tr></table></figure><h2 id="6-代理操作"><a href="#6-代理操作" class="headerlink" title="6 代理操作"></a>6 代理操作</h2><p>代理：破解封IP这种反爬机制</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 代理：破解封IP这种反爬机制</span></span><br><span class="line"><span class="comment"># 什么是代理：代理服务器</span></span><br><span class="line"><span class="comment"># 代理的作用：</span></span><br><span class="line">-<span class="number">1</span>突破自身IP访问的限制</span><br><span class="line">    -<span class="number">2</span>可以隐藏自身真实IP</span><br><span class="line"><span class="comment"># 代理相关的网站</span></span><br><span class="line"> - 快代理</span><br><span class="line"> - 西祠代理</span><br><span class="line"> - www.goubanjia.com</span><br><span class="line"> - 蜻蜓代理</span><br><span class="line">代理Ip的类型</span><br><span class="line">-http：应用到http协议对应的请求URL</span><br><span class="line">url = <span class="string">&#x27;http://www.baidu.com/s?i&amp;wd=ip&#x27;</span></span><br><span class="line">page_text = requests.get(url=url, headers=headers, proxies=&#123;<span class="string">&#x27;http&#x27;</span>:<span class="string">&#x27;120.52.73.1:8095&#x27;</span>&#125;).text</span><br><span class="line"></span><br><span class="line">-https：应用到https协议对应的请求URL</span><br><span class="line">url = <span class="string">&#x27;https://www.baidu.com/s?i&amp;wd=ip&#x27;</span></span><br><span class="line">page_text = requests.get(url=url, headers=headers, proxies=&#123;<span class="string">&#x27;https&#x27;</span>:<span class="string">&#x27;120.52.73.1:8095&#x27;</span>&#125;).text</span><br><span class="line"></span><br><span class="line"><span class="comment"># 代理ip的匿名度</span></span><br><span class="line">- 透明：服务器知道该次请求使用了代理，也知道请求对应的真实ip</span><br><span class="line">    - 匿名：知道使用了代理，但是不知道真实的ip（不知道本机的ip）</span><br><span class="line">    - 高匿：不知道使用了代理，更不知道本机的ip地址</span><br><span class="line"><span class="comment"># 反反爬机制：</span></span><br><span class="line">使用代理进行发送请求</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="7-re模块对js代码指定过滤"><a href="#7-re模块对js代码指定过滤" class="headerlink" title="7 re模块对js代码指定过滤"></a>7 re模块对js代码指定过滤</h2><p><img src="/2020/12/23/%E7%88%AC%E8%99%AB/image-20210805013247183.png" alt="爬虫"></p><p><img src="/2020/12/23/%E7%88%AC%E8%99%AB/image-20210805013647300.png" alt="爬虫"></p><p><img src="/2020/12/23/%E7%88%AC%E8%99%AB/image-20210805013936878.png" alt="爬虫"></p><h2 id="8-单线程-异步协程"><a href="#8-单线程-异步协程" class="headerlink" title="8 单线程+异步协程"></a>8 单线程+异步协程</h2><p><img src="/2020/12/23/%E7%88%AC%E8%99%AB/image-20210805014139441.png" alt="爬虫"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">start = time.time()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">callback</span>(<span class="params">task</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;i am callback&#x27;</span>, task.result())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 特殊函数</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">get_request</span>(<span class="params">url</span>):</span></span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;下载成功&#x27;</span>, url)</span><br><span class="line">    <span class="keyword">return</span> url</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">urls = [</span><br><span class="line">    <span class="string">&#x27;www.baidu.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;www.jd.com&#x27;</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">tasks = []</span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">    url = get_request(url)</span><br><span class="line">    task = asyncio.ensure_future(url)  <span class="comment"># 封装一个任务对象</span></span><br><span class="line">    task.add_done_callback(callback)  <span class="comment"># 绑定回调函数</span></span><br><span class="line">    tasks.append(task)</span><br><span class="line"></span><br><span class="line">loop = asyncio.get_event_loop()  <span class="comment"># 创建一个事件循环对象</span></span><br><span class="line">loop.run_until_complete(asyncio.wait(tasks)) <span class="comment"># 将协程对象注册到loop中，然后启动loop</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;耗时&#x27;</span>, time.time() - start)</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    task.result()</span></span><br><span class="line"><span class="string">        接收特殊函数的返回值</span></span><br><span class="line"><span class="string">        下载成功 www.baidu.com</span></span><br><span class="line"><span class="string">        下载成功 www.jd.com</span></span><br><span class="line"><span class="string">        i am callback www.baidu.com</span></span><br><span class="line"><span class="string">        i am callback www.jd.com</span></span><br><span class="line"><span class="string">        耗时 2.001952648162842</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="9-超级鹰平台"><a href="#9-超级鹰平台" class="headerlink" title="9 超级鹰平台"></a>9 超级鹰平台</h2><p><img src="/2020/12/23/%E7%88%AC%E8%99%AB/image-20210805021522176.png" alt="爬虫"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-<span class="number">1</span> 注册普通用户</span><br><span class="line">-<span class="number">2</span> 登录普通用户</span><br><span class="line">-<span class="number">3</span>  题分查询</span><br><span class="line">-<span class="number">4</span>  创建一个软件（<span class="built_in">id</span>）(进入用户中心-软件ID)</span><br><span class="line">-<span class="number">5</span>  下载示例代码 （点击开发文档-python）</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="xpath表达式提取"><a href="#xpath表达式提取" class="headerlink" title="xpath表达式提取"></a>xpath表达式提取</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">/:表示的是从根节点开始定位，表示的是一个层级</span></span><br><span class="line"><span class="string">//:表示的是多个层级，可以表示从任意位置开始定位</span></span><br><span class="line"><span class="string">属性定位 </span></span><br><span class="line"><span class="string">        //div[@class=&quot;blog-link&quot;]</span></span><br><span class="line"><span class="string">索引定位 （索引是从1开始的）</span></span><br><span class="line"><span class="string">        //div[@class=&quot;blog-link&quot;]//li[2]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">取文本</span></span><br><span class="line"><span class="string">    - /text() 获取的是标签中直系的文本内容</span></span><br><span class="line"><span class="string">    - //text() 获取的是标签中非直系的文本内容（所有的文本内容）</span></span><br><span class="line"><span class="string">取属性</span></span><br><span class="line"><span class="string">    //标签名 /ningmeng/@src</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="aiohttp模块"><a href="#aiohttp模块" class="headerlink" title="aiohttp模块"></a>aiohttp模块</h1><ul><li>基于异步网络请求的模块</li></ul><p> flask启动一个应用服务器测试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">from flask import Flask, render_template</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@app.route(&#x27;/lhj&#x27;)</span><br><span class="line">def index_lhj():</span><br><span class="line">    time.sleep(2)</span><br><span class="line">    return render_template(&#x27;test.html&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@app.route(&#x27;/lyh&#x27;)</span><br><span class="line">def index_lyh():</span><br><span class="line">    time.sleep(2)</span><br><span class="line">    return render_template(&#x27;test.html&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@app.route(&#x27;/lxx&#x27;)</span><br><span class="line">def index_lxx():</span><br><span class="line">    time.sleep(2)</span><br><span class="line">    return render_template(&#x27;test.html&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure><p>测试aiohttp异步请求</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> aiohttp</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"></span><br><span class="line">start = time.time()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">callback</span>(<span class="params">task</span>):</span></span><br><span class="line">    page_text = task.result()</span><br><span class="line">    tree = etree.HTML(page_text)</span><br><span class="line">    parse_data = tree.xpath(<span class="string">&#x27;//li/text()&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(parse_data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 特殊函数</span></span><br><span class="line"><span class="comment"># 注意：</span></span><br><span class="line"><span class="comment"># 每一个with要加上async（表示异步操作）在每一个阻塞的前面加上await</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">get_request</span>(<span class="params">url</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;基于aiohttp发送的异步请求模块&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">with</span> aiohttp.ClientSession() <span class="keyword">as</span> session:</span><br><span class="line">        <span class="string">&quot;&quot;&quot;基于请求发送有延时操作的用await关键字&quot;&quot;&quot;</span></span><br><span class="line">                <span class="string">&quot;&quot;&quot;get(url,headers,param,proxy=&#x27;&#x27;,)代理不再是字典而是字符串&quot;&quot;&quot;</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;get(url,headers,data,proxy=&#x27;&#x27;,)代理不再是字典而是字符串&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">async</span> <span class="keyword">with</span> <span class="keyword">await</span> session.get(url) <span class="keyword">as</span> response:</span><br><span class="line">            <span class="string">&quot;&quot;&quot;text()返回字符串形式的响应数据&quot;&quot;&quot;</span></span><br><span class="line">            <span class="string">&quot;&quot;&quot;read()返回二进制形式的响应数据&quot;&quot;&quot;</span></span><br><span class="line">            <span class="string">&quot;&quot;&quot;json()返回的就是json数据&quot;&quot;&quot;</span></span><br><span class="line">            page_text = <span class="keyword">await</span> response.text()</span><br><span class="line">            <span class="keyword">return</span> page_text</span><br><span class="line"></span><br><span class="line">urls = [</span><br><span class="line">    <span class="string">&#x27;http://127.0.0.1:5000/lhj&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;http://127.0.0.1:5000/lyh&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;http://127.0.0.1:5000/lxx&#x27;</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">tasks = []</span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">    res = get_request(url)</span><br><span class="line">    task = asyncio.ensure_future(res)  <span class="comment"># 封装一个任务对象</span></span><br><span class="line">    task.add_done_callback(callback)  <span class="comment"># 绑定回调函数</span></span><br><span class="line">    tasks.append(task)</span><br><span class="line"></span><br><span class="line">loop = asyncio.get_event_loop()  <span class="comment"># 创建一个事件循环对象</span></span><br><span class="line">loop.run_until_complete(asyncio.wait(tasks))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;耗时&#x27;</span>, time.time() - start)</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">输出结果</span></span><br><span class="line"><span class="string">[&#x27;i am superman &#x27;, &#x27;i am hero &#x27;, &#x27;i am super &#x27;]</span></span><br><span class="line"><span class="string">[&#x27;i am superman &#x27;, &#x27;i am hero &#x27;, &#x27;i am super &#x27;]</span></span><br><span class="line"><span class="string">[&#x27;i am superman &#x27;, &#x27;i am hero &#x27;, &#x27;i am super &#x27;]</span></span><br><span class="line"><span class="string">耗时 2.0634195804595947</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h1 id="requests模块"><a href="#requests模块" class="headerlink" title="requests模块"></a>requests模块</h1><ul><li>request.get是基于同步发起的请求</li></ul><h2 id="1-get请求"><a href="#1-get请求" class="headerlink" title="1 get请求"></a>1 get请求</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、基本请求</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">response=requests.get(<span class="string">&#x27;http://dig.chouti.com/&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(response.text)</span><br><span class="line"><span class="number">2</span>、带参数的GET请求-&gt;params</span><br><span class="line"></span><br><span class="line">复制代码</span><br><span class="line"><span class="comment">#在请求头内将自己伪装成浏览器，否则百度不会正常返回页面内容</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">response=requests.get(<span class="string">&#x27;https://www.baidu.com/s?wd=python&amp;pn=1&#x27;</span>,</span><br><span class="line">                      headers=&#123;</span><br><span class="line">                        <span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.75 Safari/537.36&#x27;</span>,</span><br><span class="line">                      &#125;)</span><br><span class="line"><span class="built_in">print</span>(response.text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#如果查询关键词是中文或者有其他特殊符号，则不得不进行url编码</span></span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlencode</span><br><span class="line">wd=<span class="string">&#x27;egon老师&#x27;</span></span><br><span class="line">encode_res=urlencode(&#123;<span class="string">&#x27;k&#x27;</span>:wd&#125;,encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">keyword=encode_res.split(<span class="string">&#x27;=&#x27;</span>)[<span class="number">1</span>]</span><br><span class="line"><span class="built_in">print</span>(keyword)</span><br><span class="line"><span class="comment"># 然后拼接成url</span></span><br><span class="line">url=<span class="string">&#x27;https://www.baidu.com/s?wd=%s&amp;pn=1&#x27;</span> %keyword</span><br><span class="line"></span><br><span class="line">response=requests.get(url,</span><br><span class="line">                      headers=&#123;</span><br><span class="line">                        <span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.75 Safari/537.36&#x27;</span>,</span><br><span class="line">                      &#125;)</span><br><span class="line">res1=response.text</span><br><span class="line">复制代码</span><br><span class="line">复制代码</span><br><span class="line"><span class="comment">#上述操作可以用requests模块的一个params参数搞定，本质还是调用urlencode</span></span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlencode</span><br><span class="line">wd=<span class="string">&#x27;egon老师&#x27;</span></span><br><span class="line">pn=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">response=requests.get(<span class="string">&#x27;https://www.baidu.com/s&#x27;</span>,</span><br><span class="line">                      params=&#123;</span><br><span class="line">                          <span class="string">&#x27;wd&#x27;</span>:wd,</span><br><span class="line">                          <span class="string">&#x27;pn&#x27;</span>:pn</span><br><span class="line">                      &#125;,</span><br><span class="line">                      headers=&#123;</span><br><span class="line">                        <span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.75 Safari/537.36&#x27;</span>,</span><br><span class="line">                      &#125;)</span><br><span class="line">res2=response.text</span><br><span class="line"></span><br><span class="line"><span class="comment">#验证结果，打开a.html与b.html页面内容一样</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;a.html&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(res1) </span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;b.html&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(res2)</span><br><span class="line">复制代码</span><br><span class="line"><span class="number">3</span>、带参数的GET请求-&gt;headers</span><br><span class="line"></span><br><span class="line"><span class="comment">#通常我们在发送请求时都需要带上请求头，请求头是将自身伪装成浏览器的关键，常见的有用的请求头如下</span></span><br><span class="line">Host</span><br><span class="line">Referer <span class="comment">#大型网站通常都会根据该参数判断请求的来源</span></span><br><span class="line">User-Agent <span class="comment">#客户端</span></span><br><span class="line">Cookie <span class="comment">#Cookie信息虽然包含在请求头里，但requests模块有单独的参数来处理他，headers=&#123;&#125;内就不要放它了</span></span><br><span class="line">复制代码</span><br><span class="line"><span class="comment">#添加headers(浏览器会识别请求头,不加可能会被拒绝访问,比如访问https://www.zhihu.com/explore)</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">response=requests.get(<span class="string">&#x27;https://www.zhihu.com/explore&#x27;</span>)</span><br><span class="line">response.status_code <span class="comment">#500</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#自己定制headers</span></span><br><span class="line">headers=&#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.76 Mobile Safari/537.36&#x27;</span>,</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">respone=requests.get(<span class="string">&#x27;https://www.zhihu.com/explore&#x27;</span>,</span><br><span class="line">                     headers=headers)</span><br><span class="line"><span class="built_in">print</span>(respone.status_code) <span class="comment">#200</span></span><br><span class="line">复制代码</span><br><span class="line"><span class="number">4</span>、带参数的GET请求-&gt;cookies</span><br><span class="line"></span><br><span class="line">复制代码</span><br><span class="line"><span class="comment">#登录github，然后从浏览器中获取cookies，以后就可以直接拿着cookie登录了，无需输入用户名密码</span></span><br><span class="line"><span class="comment">#用户名:egonlin 邮箱378533872@qq.com 密码lhf@123</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">Cookies=&#123;   <span class="string">&#x27;user_session&#x27;</span>:<span class="string">&#x27;wGMHFJKgDcmRIVvcA14_Wrt_3xaUyJNsBnPbYzEL6L0bHcfc&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">response=requests.get(<span class="string">&#x27;https://github.com/settings/emails&#x27;</span>,</span><br><span class="line">             cookies=Cookies) <span class="comment">#github对请求头没有什么限制，我们无需定制user-agent，对于其他网站可能还需要定制</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;378533872@qq.com&#x27;</span> <span class="keyword">in</span> response.text) <span class="comment">#True</span></span><br></pre></td></tr></table></figure><h2 id="2-post请求"><a href="#2-post请求" class="headerlink" title="2 post请求"></a>2 post请求</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#GET请求</span></span><br><span class="line">HTTP默认的请求方法就是GET</span><br><span class="line">     * 没有请求体</span><br><span class="line">     * 数据必须在1K之内！</span><br><span class="line">     * GET请求数据会暴露在浏览器的地址栏中</span><br><span class="line"></span><br><span class="line">GET请求常用的操作：</span><br><span class="line">       <span class="number">1.</span> 在浏览器的地址栏中直接给出URL，那么就一定是GET请求</span><br><span class="line">       <span class="number">2.</span> 点击页面上的超链接也一定是GET请求</span><br><span class="line">       <span class="number">3.</span> 提交表单时，表单默认使用GET请求，但可以设置为POST</span><br><span class="line"></span><br><span class="line"><span class="comment">#POST请求</span></span><br><span class="line">(<span class="number">1</span>). 数据不会出现在地址栏中</span><br><span class="line">(<span class="number">2</span>). 数据的大小没有上限</span><br><span class="line">(<span class="number">3</span>). 有请求体</span><br><span class="line">(<span class="number">4</span>). 请求体中如果存在中文，会使用URL编码！</span><br><span class="line"></span><br><span class="line"><span class="comment">#！！！requests.post()用法与requests.get()完全一致，特殊的是requests.post()有一个data参数，用来存放请求体数据</span></span><br></pre></td></tr></table></figure><h2 id="2-1-发送post请求模拟登录"><a href="#2-1-发送post请求模拟登录" class="headerlink" title="2.1 发送post请求模拟登录"></a>2.1 发送post请求模拟登录</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">session = requests.session()</span><br><span class="line"><span class="comment"># 第一次请求</span></span><br><span class="line">r1 = session.get(<span class="string">&#x27;https://github.com/login&#x27;</span>)</span><br><span class="line">authenticity_token = re.findall(<span class="string">r&#x27;name=&quot;authenticity_token&quot;.*?value=&quot;(.*?)&quot;&#x27;</span>, r1.text)[<span class="number">0</span>]  <span class="comment"># 从页面中拿到CSRF TOKEN</span></span><br><span class="line"><span class="built_in">print</span>(authenticity_token)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第二次请求</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;Form Data</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">commit: Sign in</span></span><br><span class="line"><span class="string">authenticity_token: f68TeCuz360B5Ag/DFlRmGJwkvICneQH7E7EP8w7ZeZyg7rdvqeNXA1Vo3163Z+QS8aaF8s+06J6qgECBFr+qQ==</span></span><br><span class="line"><span class="string">login: liu199956</span></span><br><span class="line"><span class="string">password: 11</span></span><br><span class="line"><span class="string">trusted_device: </span></span><br><span class="line"><span class="string">webauthn-support: supported</span></span><br><span class="line"><span class="string">webauthn-iuvpaa-support: supported</span></span><br><span class="line"><span class="string">return_to: </span></span><br><span class="line"><span class="string">allow_signup: </span></span><br><span class="line"><span class="string">client_id: </span></span><br><span class="line"><span class="string">integration: </span></span><br><span class="line"><span class="string">required_field_d6e6: </span></span><br><span class="line"><span class="string">timestamp: 1611157305298</span></span><br><span class="line"><span class="string">timestamp_secret: cc5cbd21bb8363de56c9fbb9d2123c0574787020e7bdf329630b23c997c79c24</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&#x27;commit&#x27;</span>: <span class="string">&#x27;Sign in&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;webauthn-support&#x27;</span>: <span class="string">&#x27;supported&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;authenticity_token&#x27;</span>: authenticity_token,</span><br><span class="line">    <span class="string">&#x27;login&#x27;</span>: <span class="string">&#x27;1026170773@qq.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;liu199556&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;webauthn-iuvpaa-support&#x27;</span>: <span class="string">&#x27;supported&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;timestamp&#x27;</span>: <span class="number">1611157305298</span>,</span><br><span class="line">    <span class="string">&#x27;timestamp_secret&#x27;</span>: <span class="string">&#x27;cc5cbd21bb8363de56c9fbb9d2123c0574787020e7bdf329630b23c997c79c24&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">r2 = session.post(<span class="string">&#x27;https://github.com/session&#x27;</span>,</span><br><span class="line">                  data=data,</span><br><span class="line">                  )</span><br><span class="line"></span><br><span class="line"><span class="comment">#第三次请求</span></span><br><span class="line">r3=session.get(<span class="string">&#x27;https://github.com/settings/emails&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;1026170773@qq.com&#x27;</span> <span class="keyword">in</span> r3.text) <span class="comment">#True</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">一 目标站点分析</span><br><span class="line">    浏览器输入https://gitee.com/login</span><br><span class="line">    然后输入错误的账号密码，抓包</span><br><span class="line">    发现登录行为是post提交到：https://gitee.com/login</span><br><span class="line">    而且请求头包含cookie</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">二 流程分析</span><br><span class="line">    先GET：https://github.com/login拿到初始cookie与</span><br><span class="line">    返回POST：https://gitee.com/check_user_captcha， 带上初始cookie，</span><br><span class="line">        token: 6d65abaf9a8647c289a0fc1abb61535a</span><br><span class="line">        authenticate: e25522a8498a4818b12b2ee11be32d59</span><br><span class="line">        <span class="built_in">type</span>: yunpian</span><br><span class="line">    最后拿到登录cookie</span><br><span class="line"></span><br><span class="line">​```</span><br><span class="line">ps：如果密码时密文形式，则可以先输错账号，输对密码，然后到浏览器中拿到加密后的密码，github的密码是明文</span><br><span class="line">​```</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">import requests</span></span><br><span class="line"><span class="string">import re</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#第一次请求</span></span><br><span class="line"><span class="string">r1=requests.get(&#x27;https://github.com/login&#x27;)</span></span><br><span class="line"><span class="string">r1_cookie=r1.cookies.get_dict() #拿到初始cookie(未被授权)</span></span><br><span class="line"><span class="string">authenticity_token=re.findall(r&#x27;name=&quot;authenticity_token&quot;.*?value=&quot;(.*?)&quot;&#x27;,r1.text)[0] #从页面中拿到CSRF TOKEN</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#第二次请求：带着初始cookie和TOKEN发送POST请求给登录页面，带上账号密码</span></span><br><span class="line"><span class="string">data=&#123;</span></span><br><span class="line"><span class="string">    &#x27;commit&#x27;:&#x27;Sign in&#x27;,</span></span><br><span class="line"><span class="string">    &#x27;utf8&#x27;:&#x27;✓&#x27;,</span></span><br><span class="line"><span class="string">    &#x27;authenticity_token&#x27;:authenticity_token,</span></span><br><span class="line"><span class="string">    &#x27;login&#x27;:&#x27;317828332@qq.com&#x27;,</span></span><br><span class="line"><span class="string">    &#x27;password&#x27;:&#x27;alex3714&#x27;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">r2=requests.post(&#x27;https://github.com/session&#x27;,</span></span><br><span class="line"><span class="string">             data=data,</span></span><br><span class="line"><span class="string">             cookies=r1_cookie</span></span><br><span class="line"><span class="string">             )</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">login_cookie=r2.cookies.get_dict()</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#第三次请求：以后的登录，拿着login_cookie就可以,比如访问一些个人配置</span></span><br><span class="line"><span class="string">r3=requests.get(&#x27;https://github.com/settings/emails&#x27;,</span></span><br><span class="line"><span class="string">                cookies=login_cookie)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">print(&#x27;317828332@qq.com&#x27; in r3.text) #True</span></span><br></pre></td></tr></table></figure><h2 id="3-响应Response"><a href="#3-响应Response" class="headerlink" title="3 响应Response"></a>3 响应Response</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">respone=requests.get(<span class="string">&#x27;http://www.jianshu.com&#x27;</span>)</span><br><span class="line"><span class="comment"># respone属性</span></span><br><span class="line"><span class="built_in">print</span>(respone.text)</span><br><span class="line"><span class="built_in">print</span>(respone.content)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(respone.status_code)</span><br><span class="line"><span class="built_in">print</span>(respone.headers)</span><br><span class="line"><span class="built_in">print</span>(respone.cookies)</span><br><span class="line"><span class="built_in">print</span>(respone.cookies.get_dict())</span><br><span class="line"><span class="built_in">print</span>(respone.cookies.items())</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(respone.url)</span><br><span class="line"><span class="built_in">print</span>(respone.history)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(respone.encoding)</span><br><span class="line"></span><br><span class="line"><span class="comment">#关闭：response.close()</span></span><br><span class="line"><span class="keyword">from</span> contextlib <span class="keyword">import</span> closing</span><br><span class="line"><span class="keyword">with</span> closing(requests.get(<span class="string">&#x27;xxx&#x27;</span>,stream=<span class="literal">True</span>)) <span class="keyword">as</span> response:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> response.iter_content():</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span>、编码问题</span><br><span class="line"><span class="comment">#编码问题</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">response=requests.get(<span class="string">&#x27;http://www.autohome.com/news&#x27;</span>)</span><br><span class="line"><span class="comment"># response.encoding=&#x27;gbk&#x27; #汽车之家网站返回的页面内容为gb2312编码的，而requests的默认编码为ISO-8859-1，如果不设置成gbk则中文乱码</span></span><br><span class="line"><span class="built_in">print</span>(response.text)</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>、 使用代理</span><br><span class="line"><span class="comment">#官网链接: http://docs.python-requests.org/en/master/user/advanced/#proxies</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#代理设置:先发送请求给代理,然后由代理帮忙发送(封ip是常见的事情)</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">proxies=&#123;</span><br><span class="line">    <span class="string">&#x27;http&#x27;</span>:<span class="string">&#x27;http://egon:123@localhost:9743&#x27;</span>,<span class="comment">#带用户名密码的代理,@符号前是用户名与密码</span></span><br><span class="line">    <span class="string">&#x27;http&#x27;</span>:<span class="string">&#x27;http://localhost:9743&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;https&#x27;</span>:<span class="string">&#x27;https://localhost:9743&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line">respone=requests.get(<span class="string">&#x27;https://www.12306.cn&#x27;</span>,</span><br><span class="line">                     proxies=proxies)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(respone.status_code)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#支持socks代理,安装:pip install requests[socks]</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">proxies = &#123;</span><br><span class="line">    <span class="string">&#x27;http&#x27;</span>: <span class="string">&#x27;socks5://user:pass@host:port&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;https&#x27;</span>: <span class="string">&#x27;socks5://user:pass@host:port&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">respone=requests.get(<span class="string">&#x27;https://www.12306.cn&#x27;</span>,</span><br><span class="line">                     proxies=proxies)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(respone.status_code)</span><br><span class="line"></span><br><span class="line"><span class="number">6</span>、上传文件</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">files=&#123;<span class="string">&#x27;file&#x27;</span>:<span class="built_in">open</span>(<span class="string">&#x27;a.jpg&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>)&#125;</span><br><span class="line">respone=requests.post(<span class="string">&#x27;http://httpbin.org/post&#x27;</span>,files=files)</span><br><span class="line"><span class="built_in">print</span>(respone.status_code)</span><br></pre></td></tr></table></figure><h1 id="selenium模块"><a href="#selenium模块" class="headerlink" title="selenium模块"></a>selenium模块</h1><h2 id="1-selenium介绍"><a href="#1-selenium介绍" class="headerlink" title="1 selenium介绍"></a>1 selenium介绍</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> 自动化测试工具，控制浏览器，模拟人的行为，做爬虫为了解决使用requests模块无法执行ajax获取数据</span><br><span class="line"><span class="number">2</span> 使用selenium+半人工登录，获取cookie-----》给requests模块使用</span><br></pre></td></tr></table></figure><h2 id="2-selenium基本使用"><a href="#2-selenium基本使用" class="headerlink" title="2 selenium基本使用"></a>2 selenium基本使用</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拿到一个微软浏览器</span></span><br><span class="line"><span class="comment"># 打开浏览器指定驱动在哪</span></span><br><span class="line">bro = webdriver.Edge(executable_path=<span class="string">&#x27;msedgedriver.exe&#x27;</span>)</span><br><span class="line"></span><br><span class="line">bro.get(<span class="string">&#x27;http://www.baidu.com&#x27;</span>)</span><br><span class="line">time.sleep(<span class="number">5</span>)</span><br><span class="line"><span class="comment"># 关闭浏览器</span></span><br><span class="line">bro.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 无界面浏览器</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-selenium的其它使用"><a href="#3-selenium的其它使用" class="headerlink" title="3 selenium的其它使用"></a>3 selenium的其它使用</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line">bro=webdriver.Chrome(executable_path=<span class="string">&#x27;chromedriver.exe&#x27;</span>)</span><br><span class="line"><span class="comment"># bro.get(&#x27;http://www.baidu.com&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># print(bro.page_source)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 选择器</span></span><br><span class="line"><span class="comment"># 1、find_element_by_id                通过id获取控件</span></span><br><span class="line"><span class="comment"># 2、find_element_by_link_text         通过a标签的文本获取标签</span></span><br><span class="line"><span class="comment"># 3、find_element_by_partial_link_text 通过a标签的文本模糊匹配获取标签</span></span><br><span class="line"><span class="comment"># 4、find_element_by_tag_name          通过标签名找</span></span><br><span class="line"><span class="comment"># 5、find_element_by_class_name        通过类名找</span></span><br><span class="line"><span class="comment"># 6、find_element_by_name              通过name属性找</span></span><br><span class="line"><span class="comment"># 7、find_element_by_css_selector      css选择器</span></span><br><span class="line"><span class="comment"># 8、find_element_by_xpath             xpath选择器</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># input_1=bro.find_element_by_css_selector(&#x27;#kw&#x27;)</span></span><br><span class="line"><span class="comment"># # 往输入框中写文字</span></span><br><span class="line"><span class="comment"># input_1.send_keys(&#x27;美女&#x27;)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># search_btn=bro.find_element_by_css_selector(&#x27;#su&#x27;)</span></span><br><span class="line"><span class="comment"># search_btn.click()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取某个标签的属性,位置,id,名字..</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># input_1=bro.find_element_by_css_selector(&#x27;#kw&#x27;)</span></span><br><span class="line"><span class="comment"># print(input_1.id)</span></span><br><span class="line"><span class="comment"># print(input_1.tag_name)</span></span><br><span class="line"><span class="comment"># print(input_1.get_attribute(&#x27;maxlength&#x27;))</span></span><br><span class="line"><span class="comment"># print(input_1.location)</span></span><br><span class="line"><span class="comment"># print(input_1.size)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 等待元素被加载(显示等待,隐士等待)</span></span><br><span class="line"><span class="comment"># bro.implicitly_wait(10)  # 隐士等待,等待所有,再下方再去找一个控件,如果控件没有加载出来,最多等待10s</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示等待(基本不用),指定等待某个控件几秒</span></span><br><span class="line"><span class="comment"># from selenium.webdriver.support.wait import WebDriverWait</span></span><br><span class="line"><span class="comment"># from selenium.webdriver.support import expected_conditions as EC</span></span><br><span class="line"><span class="comment"># from selenium.webdriver.common.by import By #按照什么方式查找，By.ID,By.CSS_SELECTOR</span></span><br><span class="line"><span class="comment"># wait=WebDriverWait(bro,10)</span></span><br><span class="line"><span class="comment"># wait.until(EC.presence_of_element_located((By.ID,&#x27;kw&#x27;)))</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 控件其它操作</span></span><br><span class="line"><span class="comment"># 点击操作</span></span><br><span class="line"><span class="comment"># search_btn=bro.find_element_by_css_selector(&#x27;#su&#x27;)</span></span><br><span class="line"><span class="comment"># search_btn.click()  # 点击操作</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># input_1=bro.find_element_by_css_selector(&#x27;#kw&#x27;)</span></span><br><span class="line"><span class="comment"># # 往输入框中写文字</span></span><br><span class="line"><span class="comment"># # 清空操作</span></span><br><span class="line"><span class="comment"># input_1.send_keys(&#x27;美女&#x27;)</span></span><br><span class="line"><span class="comment"># time.sleep(1)</span></span><br><span class="line"><span class="comment"># input_1.clear()</span></span><br><span class="line"><span class="comment"># input_1.send_keys(&#x27;帅哥&#x27;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">### 执行js</span></span><br><span class="line"><span class="comment"># bro.get(&#x27;https://www.pearvideo.com/video_1715923&#x27;)</span></span><br><span class="line"><span class="comment"># bro.execute_script(&#x27;alert(urlMap.registerUrl)&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># bro.execute_script(&#x27;scroll(0,30000)&#x27;)  # 滑倒屏幕底部，有的页面滑倒底部自动加载数据</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 模拟浏览器前进后退</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># bro.get(&#x27;http://www.baidu.com&#x27;)</span></span><br><span class="line"><span class="comment"># bro.get(&#x27;http://www.taobao.com&#x27;)</span></span><br><span class="line"><span class="comment"># bro.get(&#x27;http://www.cnblogs.com&#x27;)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># bro.back()</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># time.sleep(1)</span></span><br><span class="line"><span class="comment"># bro.forward()</span></span><br><span class="line"><span class="comment"># time.sleep(1)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># bro.get(&#x27;http://www.cnblogs.com&#x27;)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># time.sleep(30)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">### cookie的处理</span></span><br><span class="line"><span class="comment"># print(type(bro.get_cookies())) # 把所有cookie取出来</span></span><br><span class="line"><span class="comment"># cookies=bro.get_cookies()</span></span><br><span class="line"><span class="comment"># import json</span></span><br><span class="line"><span class="comment"># with open(&#x27;cookie.json&#x27;,&#x27;w&#x27;) as f:</span></span><br><span class="line"><span class="comment">#     json.dump(cookies,f)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># # 取到cookie之后，存到文件中</span></span><br><span class="line"><span class="comment"># # 再打开一个页面，还是这个网站，把cookie之间写入</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># time.sleep(1)</span></span><br><span class="line"><span class="comment"># # 关闭浏览器</span></span><br><span class="line"><span class="comment"># bro.close()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">### 选项卡管理</span></span><br><span class="line"><span class="comment"># browser=webdriver.Chrome()</span></span><br><span class="line"><span class="comment"># browser.get(&#x27;https://www.baidu.com&#x27;)</span></span><br><span class="line"><span class="comment"># browser.execute_script(&#x27;window.open()&#x27;)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># print(browser.window_handles) #获取所有的选项卡</span></span><br><span class="line"><span class="comment"># browser.switch_to_window(browser.window_handles[1])</span></span><br><span class="line"><span class="comment"># browser.get(&#x27;https://www.taobao.com&#x27;)</span></span><br><span class="line"><span class="comment"># time.sleep(2)</span></span><br><span class="line"><span class="comment"># browser.switch_to_window(browser.window_handles[0])</span></span><br><span class="line"><span class="comment"># browser.get(&#x27;https://www.sina.com.cn&#x27;)</span></span><br><span class="line"><span class="comment"># browser.close()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 异常捕获</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    browser=webdriver.Chrome()</span><br><span class="line">    browser.get(<span class="string">&#x27;http://www.runoob.com/try/try.php?filename=jqueryui-api-droppable&#x27;</span>)</span><br><span class="line">    browser.switch_to.frame(<span class="string">&#x27;iframssseResult&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    browser.close()  <span class="comment"># 关闭浏览器</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="4-selenium-爬取京东商品信息"><a href="#4-selenium-爬取京东商品信息" class="headerlink" title="4 selenium 爬取京东商品信息"></a>4 selenium 爬取京东商品信息</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.keys <span class="keyword">import</span> Keys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义爬取函数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_goods</span>(<span class="params">bro</span>):</span></span><br><span class="line">    <span class="comment"># 滑倒屏幕底部</span></span><br><span class="line">    bro.execute_script(<span class="string">&#x27;scroll(0,document.body.scrollHeight)&#x27;</span>)</span><br><span class="line">    li_list = bro.find_elements_by_class_name(<span class="string">&#x27;gl-item&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> li <span class="keyword">in</span> li_list:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            img_url = li.find_element_by_css_selector(<span class="string">&#x27;.p-img&gt;a&gt;img&#x27;</span>).get_attribute(<span class="string">&#x27;src&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> img_url:</span><br><span class="line">                img_url = li.find_element_by_css_selector(<span class="string">&#x27;.p-img&gt;a&gt;img&#x27;</span>).get_attribute(<span class="string">&#x27;data-lazy-img&#x27;</span>)</span><br><span class="line">            <span class="comment"># img_url = &#x27;https:&#x27; + img_url</span></span><br><span class="line"></span><br><span class="line">            name = li.find_element_by_css_selector(<span class="string">&#x27;.p-name em&#x27;</span>).text</span><br><span class="line">            url = li.find_element_by_css_selector(<span class="string">&#x27;.p-img&gt;a&#x27;</span>).get_attribute(<span class="string">&#x27;href&#x27;</span>)</span><br><span class="line">            price = li.find_element_by_css_selector(<span class="string">&#x27;.p-price i&#x27;</span>).text</span><br><span class="line">            commit = li.find_element_by_css_selector(<span class="string">&#x27;.p-commit a&#x27;</span>).text</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">            商品名称：%s</span></span><br><span class="line"><span class="string">            商品价格：%s</span></span><br><span class="line"><span class="string">            商品链接：%s</span></span><br><span class="line"><span class="string">            图片链接：%s</span></span><br><span class="line"><span class="string">            商品评论数：%s</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            &#x27;&#x27;&#x27;</span> % (name, price, url, img_url, commit))</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 点击下一页</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">next</span> = bro.find_element_by_partial_link_text(<span class="string">&#x27;下一页&#x27;</span>)</span><br><span class="line">    <span class="built_in">next</span>.click()</span><br><span class="line">    <span class="comment"># 再解析下一页的内容</span></span><br><span class="line">    get_goods(bro)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">bro = webdriver.Edge(executable_path=<span class="string">&#x27;msedgedriver.exe&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    bro.get(<span class="string">&#x27;https://www.jd.com/&#x27;</span>)</span><br><span class="line">    <span class="comment"># 隐士等待</span></span><br><span class="line"></span><br><span class="line">    bro.implicitly_wait(<span class="number">10</span>)</span><br><span class="line">    search_in = bro.find_element_by_id(<span class="string">&#x27;key&#x27;</span>)</span><br><span class="line">    search_in.send_keys(<span class="string">&#x27;男士内衣&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    search_in.send_keys(Keys.ENTER)  <span class="comment"># 敲击回车</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># bro.page_source---&gt;bs4--lxml</span></span><br><span class="line">    get_goods(bro)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br><span class="line"></span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    bro.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="scrapy模块"><a href="#scrapy模块" class="headerlink" title="scrapy模块"></a>scrapy模块</h1><h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1 安装"></a>1 安装</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span> 框架---》别人帮我们写了好多代码，我们只需要再固定的位置写固定的代码</span><br><span class="line"><span class="number">1</span> 爬虫界的django---》好多东西用起来跟django很像</span><br><span class="line"><span class="number">2</span> pip3 install scrapy  （依赖）</span><br><span class="line">-win平台：</span><br><span class="line">        <span class="number">1</span>、pip3 install wheel </span><br><span class="line">        <span class="number">3</span>、pip3 install lxml</span><br><span class="line">        <span class="number">4</span>、pip3 install pyopenssl（装这个装不上：更新pip,搜方案）</span><br><span class="line">        <span class="number">5</span>、下载并安装pywin32：https://github.com/mhammond/pywin32/releases</span><br><span class="line">        <span class="number">6</span>、下载twisted的wheel文件：http://www.lfd.uci.edu/~gohlke/pythonlibs/<span class="comment">#twisted</span></span><br><span class="line">        <span class="number">7</span>、执行pip3 install 下载目录\Twisted-<span class="number">17.9</span><span class="number">.0</span>-cp36-cp36m-win_amd64.whl</span><br><span class="line">        <span class="number">8</span>、pip3 install scrapy</span><br><span class="line"></span><br><span class="line"><span class="number">3</span> win平台有些模块不好装</span><br><span class="line">-pip3 install wheel </span><br><span class="line">    -http://www.lfd.uci.edu/~gohlke/pythonlibs 下载相应的wheel文件</span><br><span class="line">    -pip3 install 把下载后的whl拖入即可（注意python，win版本）</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="number">4</span> 只要装完：scrapy 命令</span><br><span class="line">-django创建项目：djangoadmin startproject 项目名（pycharm也可以直接创建）</span><br><span class="line">    -scrapy创建项目：scrapy startproject 项目名</span><br><span class="line">    -使用pycharm打开</span><br><span class="line">    -django中创建app ：python manage.py startapp app名字</span><br><span class="line">    -scrapy创建爬虫： scrapy genspider 爬虫名 爬虫的地址</span><br><span class="line">       - scrapy genspider cnblogs www.cnblogs.com</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="number">5</span> scrapy总结</span><br><span class="line">-pip3 install scrapy</span><br><span class="line">    -scrapy startproject 项目名</span><br><span class="line">    -scrapy genspider 爬虫名 爬虫的地址</span><br><span class="line">    -scrapy crawl spiderName 执行工程（开始爬虫）</span><br></pre></td></tr></table></figure><p><strong>spiders</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FirstcrawlSpider</span>(<span class="params">scrapy.Spider</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;爬虫文件的名称：就是爬虫源文件的唯一标识&quot;&quot;&quot;</span></span><br><span class="line">    name = <span class="string">&#x27;firstCrawl&#x27;</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;允许的域名：用来限定start_urls列表中哪些url可以进行请求发送&quot;&quot;&quot;</span></span><br><span class="line">    allowed_domains = [<span class="string">&#x27;www.baidu.com&#x27;</span>]</span><br><span class="line">    <span class="string">&quot;&quot;&quot;爬虫起始的url，可以写多个，该列表中的url会被scrapy自动进行请求的发送&quot;&quot;&quot;</span></span><br><span class="line">    start_urls = [<span class="string">&#x27;http://www.baidu.com/&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span>(<span class="params">self, response</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;用作数据解析，response参数表示的是请求成功后对应的响应参数&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    </span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="settings-py"><a href="#settings-py" class="headerlink" title="settings.py"></a><strong>settings.py</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">ROBOTSTXT_OBEY = <span class="literal">False</span>  <span class="comment"># 爬虫协议，不遵循</span></span><br><span class="line"></span><br><span class="line">LOG_LEVEL = <span class="string">&#x27;ERROR&#x27;</span>  <span class="comment"># 显示指定类型的日志信息</span></span><br><span class="line"></span><br><span class="line">USER_AGENT = <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 Safari/537.36 Edg/85.0.564.51&#x27;</span> <span class="comment"># 浏览器标识</span></span><br><span class="line"></span><br><span class="line">- 管道配置</span><br><span class="line">ITEM_PIPELINES = &#123; </span><br><span class="line">    <span class="string">&#x27;scrapy_redis.pipelines.RedisPipeline&#x27;</span>: <span class="number">300</span>,</span><br><span class="line">    <span class="comment"># &#x27;Scrapy.pipelines.CnblogsSpiderFilePipeline&#x27;: 300,  # 数字表示优先级，数字越小，优先级越大</span></span><br><span class="line">    <span class="string">&#x27;Scrapy.pipelines.CnblogsSpiderMysqlPipeline&#x27;</span>: <span class="number">400</span>,  <span class="comment"># 数字表示优先级，数字越小，优先级越大</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">IMAGES_STORE = <span class="string">&#x27;./imgs&#x27;</span>  <span class="comment"># 图片存储路径</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2-架构"><a href="#2-架构" class="headerlink" title="2 架构"></a>2 架构</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 5大组件：</span></span><br><span class="line"><span class="number">1</span> 爬虫：SPIDERS</span><br><span class="line">-刚刚创建的一个个爬虫（py文件，以后主要再这写）</span><br><span class="line"><span class="number">2</span> 引擎EGINE</span><br><span class="line">-大总管，负责各个组件的沟通（写代码不涉及到），</span><br><span class="line">    -引擎负责控制系统所有组件之间的数据流，并在某些动作发生时触发事件</span><br><span class="line"><span class="number">3</span> pipline持久化</span><br><span class="line">-爬完数据解析完，入库（py文件，存数据库，存文件，存redis，在这写）</span><br><span class="line">    -在items被提取后负责处理它们，主要包括清理、验证、持久化（比如存到数据库）等操作</span><br><span class="line"><span class="number">4</span> 调度器</span><br><span class="line">-调度谁先被爬取，谁后爬取（通过配置来操作）</span><br><span class="line">    -用来接受引擎发过来的请求, 压入队列中, 并在引擎再次请求的时候返回. 可以想像成一个URL的优先级队列, 由它来决定下一个要抓取的网址是什么, 同时去除重复的网址</span><br><span class="line"><span class="number">5</span> 下载器</span><br><span class="line">-真正取爬取数据的（写代码也不涉及）</span><br><span class="line"></span><br><span class="line"><span class="comment"># 两大中间件</span></span><br><span class="line"><span class="number">1</span> 爬虫中间件，介于爬虫和引擎之间，可以写多个（一般不写）</span><br><span class="line"><span class="number">2</span> 下载中间件，介于下载器和引擎之间，可以写多个（写的多）</span><br></pre></td></tr></table></figure><h2 id="3-目录介绍"><a href="#3-目录介绍" class="headerlink" title="3 目录介绍"></a>3 目录介绍</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Scrapy <span class="comment"># 项目名字</span></span><br><span class="line">    Scrapy <span class="comment"># 文件夹</span></span><br><span class="line">        spiders   <span class="comment"># 所有的爬虫文件都放在这个下面</span></span><br><span class="line">            __init__.py</span><br><span class="line">            chouti.py  <span class="comment"># 爬虫1  （写代码）</span></span><br><span class="line">            baidu.py   <span class="comment"># 爬虫2</span></span><br><span class="line">            cnblogs.py <span class="comment"># 爬虫3</span></span><br><span class="line">        settings.py <span class="comment"># 整个项目的配置文件</span></span><br><span class="line">        items.py    <span class="comment"># 写一些类，对比django的models    （写一些类）</span></span><br><span class="line">        middlewares.py <span class="comment"># 爬虫中间件和下载中间件都写在这  （写中间件）</span></span><br><span class="line">        pipelines.py  <span class="comment"># 持久化，存数据，文件，都在这写（数据清洗入库）  （写代码）</span></span><br><span class="line">    scrapy.cfg        <span class="comment"># 上线的配置文件 </span></span><br><span class="line">    </span><br></pre></td></tr></table></figure><h2 id="4-scrapy的简单使用"><a href="#4-scrapy的简单使用" class="headerlink" title="4 scrapy的简单使用"></a>4 scrapy的简单使用</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> 运行爬虫</span><br><span class="line">scrapy scrawl 爬虫名           打印运行日志</span><br><span class="line">    scrapy crawl cnblogs --nolog   不打印日志</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="number">2</span> 记住的</span><br><span class="line">-解析（<span class="function"><span class="keyword">def</span> <span class="title">parse</span>(<span class="params">self, response</span>)）</span></span><br><span class="line"><span class="function">    -<span class="title">css</span></span></span><br><span class="line"><span class="function">        -<span class="title">xpath</span></span></span><br><span class="line"><span class="function">    -解析</span></span><br><span class="line"><span class="function">    &#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="function">             <span class="title">xpath</span>  </span></span><br><span class="line"><span class="function">             选择文本  /<span class="title">text</span>()</span></span><br><span class="line"><span class="function">             选择属性  /@<span class="title">href</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">             <span class="title">css</span></span></span><br><span class="line"><span class="function">             选择文本  :</span>:text</span><br><span class="line">             选择属性  ::attr(href)</span><br><span class="line"></span><br><span class="line">             <span class="comment"># extract_first取一个</span></span><br><span class="line">             <span class="comment"># extract()  取所有（列表形式）</span></span><br><span class="line"></span><br><span class="line">            <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">   -在解析的函数中yeild Request对象，这个地址又会去发请求</span></span><br><span class="line"><span class="string">-yield Request(url=url,callback=self.parser_detail)</span></span><br><span class="line"><span class="string">   -不写默认用yield Request(url=url,callback=self.parser)</span></span><br></pre></td></tr></table></figure><h2 id="5-scrapy持久化"><a href="#5-scrapy持久化" class="headerlink" title="5 scrapy持久化"></a>5 scrapy持久化</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- scrapy 持久化存储</span><br><span class="line">-基于终端指令</span><br><span class="line">    - scrapy crawl 爬虫名 -o filePath</span><br><span class="line">- scrapy crawl cnblogs -o cnblogs.json []</span><br><span class="line">        - 好处：简洁高效便捷</span><br><span class="line">        - 坏处：局限性比较强（数据只可以存储到指定的文件夹后缀中）</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">- scrapy 持久化存储</span><br><span class="line">- 基于管道</span><br><span class="line">    - 编码流程：</span><br><span class="line">        - 数据解析</span><br><span class="line">            - 将解析的数据存储到item类型的对象</span><br><span class="line">            - 将item类型的对象提交给管道（piplines）进行持久化存储的操作</span><br><span class="line">            - 在管道类的process_item中要将其接受到的item对象中存储的数据进行持久化存储操作</span><br><span class="line">            - 在配置文件中开启管道</span><br><span class="line">            </span><br><span class="line"></span><br><span class="line"><span class="number">1</span> 在items中写类，类中写字段</span><br><span class="line">      <span class="class"><span class="keyword">class</span> <span class="title">CnblogsSpiderItem</span>(<span class="params">scrapy.Item</span>):</span></span><br><span class="line">          title = scrapy.Field()</span><br><span class="line">          desc=scrapy.Field()</span><br><span class="line">          url=scrapy.Field()</span><br><span class="line">          author=scrapy.Field()</span><br><span class="line">          <span class="comment"># 重点(文章详情，如果跟之前爬过的文章对应)</span></span><br><span class="line">          content=scrapy.Field()</span><br><span class="line"><span class="number">2</span> 在爬虫中把要保存的字段放到item对象中</span><br><span class="line">      article_item[<span class="string">&#x27;url&#x27;</span>]=url</span><br><span class="line">      article_item[<span class="string">&#x27;title&#x27;</span>]=title</span><br><span class="line">      article_item[<span class="string">&#x27;desc&#x27;</span>]=desc</span><br><span class="line">      article_item[<span class="string">&#x27;author&#x27;</span>]=author</span><br><span class="line">      <span class="keyword">yield</span> article_item</span><br><span class="line"><span class="number">3</span> 在setting中配置</span><br><span class="line"></span><br><span class="line">      ITEM_PIPELINES = &#123;</span><br><span class="line">       <span class="string">&#x27;cnblogs_spider.pipelines.CnblogsSpiderFilePipeline&#x27;</span>: <span class="number">300</span>,  <span class="comment"># 数字表示优先级，数字越小，优先级越大</span></span><br><span class="line">       <span class="string">&#x27;cnblogs_spider.pipelines.CnblogsSpiderMysqlPipeline&#x27;</span>: <span class="number">400</span>,  <span class="comment"># 数字表示优先级，数字越小，优先级越大</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="number">4</span> 在pipline中写</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CnblogsSpiderFilePipeline</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;重写父类的一个方法：该方法只在开始爬虫的时候调用一次&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">open_spider</span>(<span class="params">self, spider</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;spider是爬虫对象&quot;&quot;&quot;</span></span><br><span class="line">        <span class="built_in">print</span>(spider.name)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;爬虫开始了&#x27;</span>)</span><br><span class="line">        self.f = <span class="built_in">open</span>(<span class="string">&#x27;cnblogs.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span>(<span class="params">self, item, spider</span>):</span></span><br><span class="line">        self.f.write(item[<span class="string">&#x27;title&#x27;</span>] + item[<span class="string">&#x27;desc&#x27;</span>] + item[<span class="string">&#x27;author&#x27;</span>] + item[<span class="string">&#x27;url&#x27;</span>])</span><br><span class="line">        self.f.write(<span class="string">&#x27;/n&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> item</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">close_spider</span>(<span class="params">self, spider</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;爬虫停止会执行&quot;&quot;&quot;</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;爬虫停止了&#x27;</span>)</span><br><span class="line">        self.f.close()</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>爬虫的数据一份存到本地，一份存到数据库</strong></p><p>settings.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> ITEM_PIPELINES = &#123;</span><br><span class="line">  <span class="string">&#x27;cnblogs_spider.pipelines.CnblogsSpiderFilePipeline&#x27;</span>: <span class="number">300</span>,  <span class="comment"># 数字表示优先级，数字越小，优先级越大</span></span><br><span class="line">  <span class="string">&#x27;cnblogs_spider.pipelines.CnblogsSpiderMysqlPipeline&#x27;</span>: <span class="number">400</span>,  <span class="comment"># 数字表示优先级，数字越小，优先级越大</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CnblogsSpiderFilePipeline</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;重写父类的一个方法：该方法只在开始爬虫的时候调用一次&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">open_spider</span>(<span class="params">self, spider</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;spider是爬虫对象&quot;&quot;&quot;</span></span><br><span class="line">        <span class="built_in">print</span>(spider.name)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;爬虫开始了&#x27;</span>)</span><br><span class="line">        self.f = <span class="built_in">open</span>(<span class="string">&#x27;cnblogs.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span>(<span class="params">self, item, spider</span>):</span></span><br><span class="line">        self.f.write(item[<span class="string">&#x27;title&#x27;</span>] + item[<span class="string">&#x27;desc&#x27;</span>] + item[<span class="string">&#x27;author&#x27;</span>] + item[<span class="string">&#x27;url&#x27;</span>])</span><br><span class="line">        self.f.write(<span class="string">&#x27;/n&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> item</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">close_spider</span>(<span class="params">self, spider</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;爬虫停止会执行&quot;&quot;&quot;</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;爬虫停止了&#x27;</span>)</span><br><span class="line">        self.f.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;管道文件中一个管道类对应将一组数据存储到一个平台或载体中&quot;&quot;&quot;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CnblogsSpiderMysqlPipeline</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">open_spider</span>(<span class="params">self, spider</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;爬虫开始了&#x27;</span>)</span><br><span class="line">        self.conn = pymysql.connect(host=<span class="string">&#x27;127.0.0.1&#x27;</span>, user=<span class="string">&#x27;root&#x27;</span>, password=<span class="string">&quot;1018&quot;</span>, database=<span class="string">&#x27;cnblogs&#x27;</span>, port=<span class="number">3306</span>)</span><br><span class="line">        self.cursor = self.conn.cursor()  <span class="comment"># 拿到游标</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">close_spider</span>(<span class="params">self, spider</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;爬虫结束了&#x27;</span>)</span><br><span class="line">        self.conn.commit()  <span class="comment"># 提交到数据库</span></span><br><span class="line">        self.cursor.close()  <span class="comment"># 关闭游标</span></span><br><span class="line">        self.conn.close()  <span class="comment"># 关闭链接</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span>(<span class="params">self, item, spider</span>):</span></span><br><span class="line">        sql = <span class="string">&#x27;insert into blog (title,`desc`,url,author,content) values (%s,%s,%s,%s,%s)&#x27;</span></span><br><span class="line">        self.cursor.execute(sql, args=[item[<span class="string">&#x27;title&#x27;</span>], item[<span class="string">&#x27;desc&#x27;</span>], item[<span class="string">&#x27;url&#x27;</span>], item[<span class="string">&#x27;author&#x27;</span>], item[<span class="string">&#x27;content&#x27;</span>]])</span><br><span class="line">        <span class="keyword">return</span> item</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 爬虫文件提交的item类型的对象最终会提交到哪个管道类？</span></span><br><span class="line">- 根据优先级</span><br><span class="line">    - 只要在管道类<span class="function"><span class="keyword">def</span> <span class="title">process_item</span>中<span class="title">return</span> <span class="title">item</span> 就会传递给下一个将要执行的管道类</span></span><br></pre></td></tr></table></figure><h3 id="5-1-全站爬取"><a href="#5-1-全站爬取" class="headerlink" title="5.1 全站爬取"></a>5.1 全站爬取</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- 基于spider的全站数据爬取</span><br><span class="line">- 实现方式：</span><br><span class="line">- 将页面所有的url添加到start_urls(不推荐)</span><br><span class="line">    - 手动发送请求</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2020/12/23/%E7%88%AC%E8%99%AB/image-20210806010100962.png" alt="爬虫">    </p><ul><li>手动发送请求</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> xiaohua.items <span class="keyword">import</span> XiaohuaItem</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">XiaohuarSpider</span>(<span class="params">scrapy.Spider</span>):</span></span><br><span class="line">    name = <span class="string">&#x27;xiaohuar&#x27;</span></span><br><span class="line">    <span class="comment"># allowed_domains = [&#x27;xxx.com&#x27;]</span></span><br><span class="line">    start_urls = [<span class="string">&#x27;http://www.521609.com/meinvxiaohua/&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    url = <span class="string">&#x27;http://www.521609.com/meinvxiaohua/list12%d.html&#x27;</span></span><br><span class="line">    page_num = <span class="number">2</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span>(<span class="params">self, response</span>):</span></span><br><span class="line">        li_list = response.xpath(<span class="string">&#x27;//*[@id=&quot;content&quot;]/div[2]/div[2]/ul/li&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> li <span class="keyword">in</span> li_list:</span><br><span class="line">            img = <span class="string">&quot;http://www.521609.com/&quot;</span> + li.xpath(<span class="string">&#x27;./a/img/@src&#x27;</span>).extract_first()</span><br><span class="line">            <span class="built_in">print</span>(img)</span><br><span class="line">            item = XiaohuaItem()</span><br><span class="line">            item[<span class="string">&#x27;img&#x27;</span>] = img</span><br><span class="line">            <span class="keyword">yield</span> item</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> self.page_num &lt;= <span class="number">2</span>:</span><br><span class="line">            new_url = <span class="built_in">format</span>(self.url % self.page_num)</span><br><span class="line">            self.page_num += <span class="number">1</span></span><br><span class="line">            <span class="keyword">yield</span> scrapy.Request(url=new_url, callback=self.parse)</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>自动发送请求</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="5-2-图片数据爬取之ImagesPipline"><a href="#5-2-图片数据爬取之ImagesPipline" class="headerlink" title="5.2 图片数据爬取之ImagesPipline"></a>5.2 图片数据爬取之ImagesPipline</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">- 基于Scrapy爬取字符串类型的数据和爬取图片类型的数据区别</span><br><span class="line">- 字符串：只需要基于xpath表达式进行解析且提交到管道进行持久化存储</span><br><span class="line">- Image：xpath解析出的图片src的属性值，单独对图片的地址发请求获取图片二进制数据类型</span><br><span class="line"></span><br><span class="line">- ImagesPipline</span><br><span class="line">- 只需要将Image的src属性值解析，提交到管道，管道就会对图片的src进行请求发送获取图片的二进制数据</span><br><span class="line">    需求：爬取糗图</span><br><span class="line">    - 使用流程</span><br><span class="line">      - 数据解析（图片的地址）</span><br><span class="line">      - 将存储图片地址的item提交到制定的管道类</span><br><span class="line">      - 在管道文件中自定制一个基于imagesPipeline的一个管道类</span><br><span class="line">        -get_media_requests</span><br><span class="line">        -file_path</span><br><span class="line">        -item_completed</span><br><span class="line">      - 配置文件中</span><br><span class="line">    - 指定下载图片的目录 IMAGES_STORE = <span class="string">&#x27;./imgs&#x27;</span>  <span class="comment"># 图片存储路径</span></span><br><span class="line">- 开启自定制的管道类</span><br><span class="line">        ITEM_PIPELINES = &#123;</span><br><span class="line">   <span class="string">&#x27;imagepro.pipelines.imagesPipeline&#x27;</span>: <span class="number">300</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>example.py</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> imagepro.items <span class="keyword">import</span> ImageproItem</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ExampleSpider</span>(<span class="params">scrapy.Spider</span>):</span></span><br><span class="line">    name = <span class="string">&#x27;example&#x27;</span></span><br><span class="line">    <span class="comment"># allowed_domains = [&#x27;example.com&#x27;]</span></span><br><span class="line">    start_urls = [<span class="string">&#x27;https://www.qiushibaike.com/imgrank/&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span>(<span class="params">self, response</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;用作数据解析，response参数表示的是请求成功后对应的响应参数&quot;&quot;&quot;</span></span><br><span class="line">        div_list = response.xpath(<span class="string">&#x27;//*[@id=&quot;content&quot;]/div/div[2]&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> div <span class="keyword">in</span> div_list:</span><br><span class="line">            srcList = div.xpath(<span class="string">&#x27;./div/div[2]/a/img/@src&#x27;</span>).extract()</span><br><span class="line">            <span class="keyword">for</span> src <span class="keyword">in</span> srcList:</span><br><span class="line">                src = <span class="string">&#x27;https:&#x27;</span> + src</span><br><span class="line"></span><br><span class="line">                item = ImageproItem()</span><br><span class="line">                item[<span class="string">&#x27;src&#x27;</span>] = src</span><br><span class="line">                <span class="keyword">yield</span> item</span><br></pre></td></tr></table></figure><p><strong>pipline.py</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> scrapy.pipelines.images <span class="keyword">import</span> ImagesPipeline</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">imagesPipeline</span>(<span class="params">ImagesPipeline</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;就是可以根据图片的地址进行图片数据请求&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_media_requests</span>(<span class="params">self, item, info</span>):</span></span><br><span class="line">        <span class="keyword">yield</span> scrapy.Request(item[<span class="string">&#x27;src&#x27;</span>])</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;&quot;&quot;指定图片存储的路径&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">file_path</span>(<span class="params">self, request, response=<span class="literal">None</span>, info=<span class="literal">None</span>, *, item=<span class="literal">None</span></span>):</span></span><br><span class="line">        imgName = request.url.split(<span class="string">&#x27;/&#x27;</span>)[-<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">return</span> imgName</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">item_completed</span>(<span class="params">self, results, item, info</span>):</span></span><br><span class="line">        <span class="keyword">return</span> item  <span class="comment"># 返回给下一个即将执行的管道类</span></span><br></pre></td></tr></table></figure><p><strong>items.py</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ImageproItem</span>(<span class="params">scrapy.Item</span>):</span></span><br><span class="line">    <span class="comment"># define the fields for your item here like:</span></span><br><span class="line">    <span class="comment"># name = scrapy.Field()</span></span><br><span class="line">    src = scrapy.Field()</span><br></pre></td></tr></table></figure><h2 id="6-请求传递参数"><a href="#6-请求传递参数" class="headerlink" title="6 请求传递参数"></a>6 请求传递参数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> 给另一个请求传递参数，在响应中拿到（借助meta）</span><br><span class="line"><span class="keyword">yield</span> Request(url=url,callback=self.parser_detail,meta=&#123;<span class="string">&#x27;item&#x27;</span>:article_item&#125;)</span><br><span class="line"><span class="number">2</span> 在解析方法中通过response对象获取</span><br><span class="line"> item=response.meta.get(<span class="string">&#x27;item&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="7-提高爬虫效率"><a href="#7-提高爬虫效率" class="headerlink" title="7 提高爬虫效率"></a>7 提高爬虫效率</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> 提高scrapy的爬取效率（异步框架，基于twisted，性能很高了，可以优化的点），面试聊</span><br><span class="line"></span><br><span class="line">- 在配置文件中进行相关的配置即可:(默认还有一套setting，类比django)</span><br><span class="line"><span class="comment">#1 增加并发：</span></span><br><span class="line">默认scrapy开启的并发线程为<span class="number">32</span>个，可以适当进行增加。在settings配置文件中修改CONCURRENT_REQUESTS = <span class="number">100</span>值为<span class="number">100</span>,并发设置成了为<span class="number">100</span>。</span><br><span class="line">CONCURRENT_REQUESTS = <span class="number">100</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2 降低日志级别：</span></span><br><span class="line">在运行scrapy时，会有大量日志信息的输出，为了减少CPU的使用率。可以设置log输出信息为INFO或者ERROR即可。在配置文件中编写：LOG_LEVEL = ‘INFO’</span><br><span class="line"><span class="comment"># 3 禁止cookie：（cnblogs不需要cookie）</span></span><br><span class="line">如果不是真的需要cookie，则在scrapy爬取数据时可以禁止cookie从而减少CPU的使用率，提升爬取效率。在配置文件中编写：COOKIES_ENABLED = <span class="literal">False</span></span><br><span class="line"><span class="comment"># 4禁止重试：</span></span><br><span class="line">对失败的HTTP进行重新请求（重试）会减慢爬取速度，因此可以禁止重试。在配置文件中编写：</span><br><span class="line">RETRY_ENABLED = <span class="literal">False</span></span><br><span class="line"><span class="comment"># 5 减少下载超时：</span></span><br><span class="line">如果对一个非常慢的链接进行爬取，减少下载超时可以能让卡住的链接快速被放弃，从而提升效率。在配置文件中进行编写：</span><br><span class="line">DOWNLOAD_TIMEOUT = <span class="number">10</span> 超时时间为10s</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="8-scrapy中间件"><a href="#8-scrapy中间件" class="headerlink" title="8 scrapy中间件"></a>8 scrapy中间件</h2><h3 id="8-1-下载中间件CnblogsSpiderDownloaderMiddleware"><a href="#8-1-下载中间件CnblogsSpiderDownloaderMiddleware" class="headerlink" title="8.1 下载中间件CnblogsSpiderDownloaderMiddleware"></a>8.1 下载中间件CnblogsSpiderDownloaderMiddleware</h3><h4 id="process-request"><a href="#process-request" class="headerlink" title="process_request"></a>process_request</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> 请求来的时候</span><br><span class="line">  <span class="comment"># Must either:</span></span><br><span class="line">  <span class="comment"># - return None: continue processing this request     返回None，进入下一个下载中间件的process_request</span></span><br><span class="line">  <span class="comment"># - or return a Response object                       返回response对象，会给引擎，引擎给爬虫，进入解析</span></span><br><span class="line">  <span class="comment"># - or return a Request object                        返回请求对象，会给引擎，引擎给调度器，放到调度器</span></span><br><span class="line">  <span class="comment"># - or raise IgnoreRequest: process_exception() methods of 抛异常，就会触发process_exception的执行</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment"># 总结：</span></span><br><span class="line">  返回<span class="literal">None</span>，继续爬取</span><br><span class="line">  返回Resoponse对象，会给引擎，给爬虫，去解析</span><br><span class="line">  返回Request对象，会给引擎，给调度器，等待下一次被调度</span><br><span class="line">  </span><br><span class="line">  <span class="comment"># 什么情况会用它：</span></span><br><span class="line">  加代理，加cookie，加浏览器类型</span><br><span class="line">集成 selenium</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  <span class="comment"># 修改cookie</span></span><br><span class="line">  request.cookies=&#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;lqz&#x27;</span>&#125;</span><br><span class="line">  <span class="comment"># 使用代理</span></span><br><span class="line">  proxy=<span class="string">&#x27;http://154.16.63.16:8080&#x27;</span>  <span class="comment"># 从代理池中获取</span></span><br><span class="line">  request.meta[<span class="string">&quot;proxy&quot;</span>] =proxy</span><br><span class="line">  <span class="comment"># 修改请求头</span></span><br><span class="line">  request.headers.setlist(<span class="string">b&#x27;User-Agent&#x27;</span>,<span class="string">&#x27;asdfadsfadsf&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="process-response"><a href="#process-response" class="headerlink" title="process_response"></a>process_response</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Must either;</span></span><br><span class="line"><span class="comment"># - return a Response object        正常逻辑，给 引擎，引擎个爬虫去解析</span></span><br><span class="line"><span class="comment"># - return a Request object         返回Request对象，给引擎，引擎给调度器，等待下一次被调度</span></span><br><span class="line"><span class="comment"># - or raise IgnoreRequest          抛异常IgnoreRequest，响应不要了，不会给引擎，再给爬虫解析</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 总结</span></span><br><span class="line">返回Response,正常逻辑走</span><br><span class="line">返回Request，放到调度器</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 什么情况会用到</span></span><br><span class="line">抛异常，不再解析该响应（用的也不多）</span><br></pre></td></tr></table></figure><h2 id="9-集成selenium"><a href="#9-集成selenium" class="headerlink" title="9 集成selenium"></a>9 集成selenium</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> 在爬虫中写</span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> scrapy <span class="keyword">import</span> Request</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BiliSpider</span>(<span class="params">scrapy.Spider</span>):</span></span><br><span class="line">    name = <span class="string">&#x27;bili&#x27;</span></span><br><span class="line">    allowed_domains = [<span class="string">&#x27;www.bilibili.com&#x27;</span>]</span><br><span class="line">    start_urls = [<span class="string">&#x27;https://www.bilibili.com/v/dance/otaku/#/all/click/0/1/2021-01-28,2021-02-04&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    bro = webdriver.Edge(executable_path=<span class="string">&#x27;msedgedriver.exe&#x27;</span>)</span><br><span class="line">    bro.implicitly_wait(<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">close</span>(<span class="params">spider, reason</span>):</span></span><br><span class="line">        spider.bro.close()</span><br><span class="line"></span><br><span class="line">          </span><br><span class="line">          </span><br><span class="line"><span class="number">2</span> 在中间件中直接使用</span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">CnblogsSpiderDownloaderMiddleware</span>:</span></span><br><span class="line">      <span class="function"><span class="keyword">def</span> <span class="title">process_request</span>(<span class="params">self, request, spider</span>):</span></span><br><span class="line">          spider.bro.get(request.url)</span><br><span class="line">          response=HtmlResponse(url=request.url,body=<span class="built_in">bytes</span>(spider.bro.page_source,encoding=<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">          <span class="keyword">return</span> response</span><br></pre></td></tr></table></figure><h2 id="10-去重规则"><a href="#10-去重规则" class="headerlink" title="10 去重规则"></a>10 去重规则</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> 默认会去重，使用了</span><br><span class="line"><span class="keyword">from</span> scrapy.dupefilters <span class="keyword">import</span> RFPDupeFilter</span><br><span class="line"><span class="number">2</span> 在默认的setting中配的</span><br><span class="line"><span class="number">3</span> 本身原理是使用的是集合去重</span><br><span class="line"></span><br><span class="line"><span class="number">4</span> 更高级部分</span><br><span class="line"><span class="comment"># 是不是同一个地址</span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/?name=lqz&amp;age=<span class="number">19</span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/?age=<span class="number">19</span>&amp;name=lqz</span><br><span class="line"><span class="comment"># 本质原理，把?后的打散了，再排序</span></span><br><span class="line">fp = self.request_fingerprint(request) <span class="comment"># 得到一个指纹，上面那两个地址结果一样</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 自定义去重规则</span></span><br><span class="line">如果你自己写去重类，如何使用？</span><br><span class="line">写一个类，继承 BaseDupeFilter，重写<span class="function"><span class="keyword">def</span> <span class="title">request_seen</span>(<span class="params">self, request</span>):</span></span><br><span class="line">返回true表示爬过了</span><br><span class="line">返回false表示没有爬过</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 你有个更牛逼的去重方案</span></span><br><span class="line">-集合去重可以，存在问题，如果地址特别多，上亿个地址，集合会特别大，会非常占用内存</span><br><span class="line">  -极小内存，完成去重（布隆过滤器）</span><br></pre></td></tr></table></figure><h2 id="11-分布式爬虫"><a href="#11-分布式爬虫" class="headerlink" title="11 分布式爬虫"></a>11 分布式爬虫</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> 借助于scrapy-redis</span><br><span class="line"></span><br><span class="line"><span class="number">2</span> 在scrapy的配置文件中修改</span><br><span class="line">  <span class="comment">#  把调度器替换成scrapy-redis的调度器</span></span><br><span class="line">  SCHEDULER = <span class="string">&quot;scrapy_redis.scheduler.Scheduler&quot;</span></span><br><span class="line">  <span class="comment"># 去重规则，使用scrapy-redis写的类</span></span><br><span class="line">  DUPEFILTER_CLASS = <span class="string">&quot;scrapy_redis.dupefilter.RFPDupeFilter&quot;</span></span><br><span class="line">  <span class="comment"># 爬取的起始地址的key</span></span><br><span class="line">  <span class="comment"># REDIS_START_URLS_KEY = &#x27;cnblogs:start_urls&#x27;</span></span><br><span class="line">  <span class="comment"># 不写就是连本地的6379</span></span><br><span class="line">  <span class="comment"># REDIS_HOST = &#x27;localhost&#x27;</span></span><br><span class="line">  <span class="comment"># REDIS_PORT = 6379</span></span><br><span class="line">  ITEM_PIPELINES = &#123;</span><br><span class="line">   <span class="string">&#x27;scrapy_redis.pipelines.RedisPipeline&#x27;</span>: <span class="number">300</span>,</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="number">3</span> 修改爬虫</span><br><span class="line"><span class="keyword">from</span> scrapy_redis.spiders <span class="keyword">import</span> RedisSpider</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CnblogsSpider</span>(<span class="params">RedisSpider</span>):</span></span><br><span class="line">    name = <span class="string">&#x27;cnblogs_redis&#x27;</span>   <span class="comment"># 爬虫名字（不能重复）</span></span><br><span class="line">    allowed_domains = [<span class="string">&#x27;www.cnblogs.com&#x27;</span>] <span class="comment"># 允许的域（只爬取当前域下的地址）</span></span><br><span class="line">    redis_key = <span class="string">&#x27;myspider:start_urls&#x27;</span></span><br><span class="line">    </span><br><span class="line"><span class="number">4</span> 命令行切换到项目目录 D:\Scrapy&gt;scrapy crawl cnblogs_redis</span><br><span class="line"><span class="number">5</span> 部署在不同的机器上</span><br><span class="line">连接到redis上，设置起始地址</span><br><span class="line">lpush myspider:start_urls http://www.cnblogs.com</span><br></pre></td></tr></table></figure><h2 id="12-布隆过滤器"><a href="#12-布隆过滤器" class="headerlink" title="12 布隆过滤器"></a>12 布隆过滤器</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">1</span> bloomfilter：是一个通过多哈希函数映射到一张表的数据结构，能够快速的判断一个元素在一个集合内是否存在，具有很好的空间和时间效率</span><br><span class="line"><span class="number">2</span> 数组：连续存储的内存空间：取值，改值效率高；；；插入值，删除值效率低</span><br><span class="line"><span class="number">3</span> 链表：不连续的内存空间，可变长：取值，改之效率低；；；插入删除效率高</span><br><span class="line"><span class="number">3</span> 你现在看到的所有数据结构，本质就是数字，字符串，布尔，数组，链表（列表，元组，字典，集合）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">4</span> 计算机最小单位：比特位   <span class="number">8</span>个比特位是1byte</span><br><span class="line">  utf-<span class="number">8</span>： abcdefg-----<span class="number">7</span>个<span class="built_in">bytes</span>----》<span class="number">56</span>个比特位</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="number">5</span> python中使用布隆过滤器（不同语言中都会有）</span><br><span class="line">pip3 install pybloom_live</span><br><span class="line"><span class="comment"># from pybloom_live import ScalableBloomFilter</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># bloom = ScalableBloomFilter(initial_capacity=100, error_rate=0.00001, mode=ScalableBloomFilter.LARGE_SET_GROWTH)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># url = &quot;www.cnblogs.com&quot;</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># url2 = &quot;www.liuqingzheng.top&quot;</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># bloom.add(url)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># print(url in bloom)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># print(url2 in bloom)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pybloom_live <span class="keyword">import</span> BloomFilter</span><br><span class="line"><span class="comment"># 10来个</span></span><br><span class="line">bf = BloomFilter(capacity=<span class="number">1000</span>)</span><br><span class="line">url=<span class="string">&#x27;www.baidu.com&#x27;</span></span><br><span class="line">bf.add(url)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(url <span class="keyword">in</span> bf)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;www.liuqingzheng.top&quot;</span> <span class="keyword">in</span> bf)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用redis的布隆过滤器</span></span><br><span class="line">使用方式见博客</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;异步爬虫&quot;&gt;&lt;a href=&quot;#异步爬虫&quot; class=&quot;headerlink&quot; title=&quot;异步爬虫&quot;&gt;&lt;/a&gt;异步爬虫&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;&lt;img src=&quot;/2020/12/23/%E7%88%AC%E8%99%AB/image-2020113</summary>
      
    
    
    
    
    <category term="爬虫" scheme="http://example.com/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>luffy</title>
    <link href="http://example.com/2020/12/10/luffy/"/>
    <id>http://example.com/2020/12/10/luffy/</id>
    <published>2020-12-10T02:58:27.000Z</published>
    <updated>2022-05-25T03:03:15.959Z</updated>
    
    <content type="html"><![CDATA[<h1 id="luffy"><a href="#luffy" class="headerlink" title="luffy"></a>luffy</h1><h2 id="项目配置"><a href="#项目配置" class="headerlink" title="项目配置"></a>项目配置</h2><h3 id="1-配置pip源"><a href="#1-配置pip源" class="headerlink" title="1.配置pip源"></a>1.配置pip源</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">1、采用国内源，加速下载模块的速度</span></span><br><span class="line"><span class="string">2、常用pip源：</span></span><br><span class="line"><span class="string">-- 豆瓣：https://pypi.douban.com/simple</span></span><br><span class="line"><span class="string">-- 阿里：https://mirrors.aliyun.com/pypi/simple</span></span><br><span class="line"><span class="string">3、加速安装的命令：</span></span><br><span class="line"><span class="string">-- &gt;: pip install -i https://pypi.douban.com/simple 模块名</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">永久配置安装源</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">1、文件管理器文件路径地址栏敲：%APPDATA% 回车，快速进入 C:\Users\电脑用户\AppData\Roaming 文件夹中</span></span><br><span class="line"><span class="string">2、新建 pip 文件夹并在文件夹中新建 pip.ini 配置文件</span></span><br><span class="line"><span class="string">3、新增 pip.ini 配置文件内容</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">配置文件内容</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">[global]</span></span><br><span class="line"><span class="string">index-url = http://pypi.douban.com/simple</span></span><br><span class="line"><span class="string">[install]</span></span><br><span class="line"><span class="string">use-mirrors =true</span></span><br><span class="line"><span class="string">mirrors =http://pypi.douban.com/simple/</span></span><br><span class="line"><span class="string">trusted-host =pypi.douban.com</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h3 id="2-配置虚拟环境"><a href="#2-配置虚拟环境" class="headerlink" title="2.配置虚拟环境"></a>2.配置虚拟环境</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 建议使用pip3安装到python3环境下</span></span><br><span class="line">pip3 install virtualenv</span><br><span class="line">pip3 install virtualenvwrapper-win</span><br><span class="line">配置虚拟环境管理器工作目录</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置环境变量：</span></span><br><span class="line"><span class="comment"># 控制面板 =&gt; 系统和安全 =&gt; 系统 =&gt; 高级系统设置 =&gt; 环境变量 =&gt; 系统变量 =&gt; 点击新建 =&gt; 填入变量名与值</span></span><br><span class="line">变量名：WORKON_HOME  变量值：自定义存放虚拟环境的绝对路径</span><br><span class="line">eg: WORKON_HOME: D:\Virtualenvs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 同步配置信息：</span></span><br><span class="line"><span class="comment"># 去向Python3的安装目录 =&gt; Scripts文件夹 =&gt; virtualenvwrapper.bat =&gt; 双击</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用</span></span><br><span class="line"><span class="comment"># 在终端工作的命令</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1、创建虚拟环境到配置的WORKON_HOME路径下</span></span><br><span class="line"><span class="comment"># 选取默认Python环境创建虚拟环境：</span></span><br><span class="line">-- mkvirtualenv 虚拟环境名称</span><br><span class="line"><span class="comment"># 基于某Python环境创建虚拟环境：</span></span><br><span class="line">-- mkvirtualenv -p python2<span class="number">.7</span> 虚拟环境名称</span><br><span class="line">-- mkvirtualenv -p python3<span class="number">.6</span> 虚拟环境名称</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2、查看已有的虚拟环境</span></span><br><span class="line">-- workon</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3、使用某个虚拟环境</span></span><br><span class="line">-- workon 虚拟环境名称</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4、进入|退出 该虚拟环境的Python环境</span></span><br><span class="line">-- python | exit()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5、为虚拟环境安装模块</span></span><br><span class="line">-- pip或pip3 install 模块名</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6、退出当前虚拟环境</span></span><br><span class="line">-- deactivate</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7、删除虚拟环境(删除当前虚拟环境要先退出)</span></span><br><span class="line">-- rmvirtualenv 虚拟环境名称</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ggqvoob9gbj30lr0dlab0.jpg" alt="img"></p><h3 id="3-后台配置"><a href="#3-后台配置" class="headerlink" title="3.后台配置"></a>3.后台配置</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 后台：Django项目创建</span></span><br><span class="line"><span class="comment"># 1.环境</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">为luffy项目创建一个虚拟环境</span></span><br><span class="line"><span class="string">&gt;: mkvirtualenv luffy</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string"># 2.按照基础环境依赖</span></span><br><span class="line"><span class="string">&gt;: pip install django==2.0.7</span></span><br><span class="line"><span class="string">&gt;: pip install djangorestframework</span></span><br><span class="line"><span class="string">&gt;: pip install pymysql</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.创建项目</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">前提：在目标目录新建luffy文件夹</span></span><br><span class="line"><span class="string">&gt;: cd 建立的luffy文件夹</span></span><br><span class="line"><span class="string">&gt;: django-admin startproject luffyapi</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">开发：用pycharm打开项目，并选择提前备好的虚拟环境</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment">#重构项目目录</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">├── luffyapi</span></span><br><span class="line"><span class="string">├── logs/# 项目运行时/开发时日志目录 - 包</span></span><br><span class="line"><span class="string">    ├── manage.py# 脚本文件</span></span><br><span class="line"><span class="string">    ├── luffyapi/      # 项目主应用，开发时的代码保存 - 包</span></span><br><span class="line"><span class="string">     ├── apps/      # 开发者的代码保存目录，以模块[子应用]为目录保存 - 包</span></span><br><span class="line"><span class="string">        ├── libs/      # 第三方类库的保存目录[第三方组件、模块] - 包</span></span><br><span class="line"><span class="string">    ├── settings/  # 配置目录 - 包</span></span><br><span class="line"><span class="string">├── dev.py   # 项目开发时的本地配置</span></span><br><span class="line"><span class="string">└── prod.py  # 项目上线时的运行配置</span></span><br><span class="line"><span class="string">├── urls.py    # 总路由</span></span><br><span class="line"><span class="string">└── utils/     # 多个模块[子应用]的公共函数类库[自己开发的组件]</span></span><br><span class="line"><span class="string">    └── scripts/       # 保存项目运营时的脚本文件 - 文件夹</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.配置开发环境</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">1.修改 wsgi.py 与 manage.py 两个文件：</span></span><br><span class="line"><span class="string"># manage.py</span></span><br><span class="line"><span class="string">os.environ.setdefault(&#x27;DJANGO_SETTINGS_MODULE&#x27;, &#x27;luffyapi.settings.dev&#x27;)</span></span><br><span class="line"><span class="string"># wsgi.py</span></span><br><span class="line"><span class="string">os.environ.setdefault(&#x27;DJANGO_SETTINGS_MODULE&#x27;, &#x27;luffyapi.settings.prod&#x27;)</span></span><br><span class="line"><span class="string"># manage_prod.py</span></span><br><span class="line"><span class="string">os.environ.setdefault(&#x27;DJANGO_SETTINGS_MODULE&#x27;, &#x27;luffyapi.settings.prod&#x27;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">2.将settings.py删除或改名，内容拷贝到settings/dev.py中</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">3.修改dev.py文件内容</span></span><br><span class="line"><span class="string">LANGUAGE_CODE = &#x27;zh-hans&#x27;</span></span><br><span class="line"><span class="string">TIME_ZONE = &#x27;Asia/Shanghai&#x27;</span></span><br><span class="line"><span class="string">USE_TZ = False</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">4.修改启动配置：见插图</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">5.在任何一个__init__.py文件中测试默认配置文件是否是dev.py文件</span></span><br><span class="line"><span class="string">from django.conf import settings</span></span><br><span class="line"><span class="string">print(settings)</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h3 id="4-数据库配置"><a href="#4-数据库配置" class="headerlink" title="4.数据库配置"></a>4.数据库配置</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.创建数据库</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">1.管理员连接数据库</span></span><br><span class="line"><span class="string">&gt;: mysql -uroot -proot</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">2.创建数据库</span></span><br><span class="line"><span class="string">&gt;: create database luffy default charset=utf8;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">3.查看用户</span></span><br><span class="line"><span class="string">&gt;: select user,host,password from mysql.user;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 5.7往后的版本</span></span><br><span class="line"><span class="string">&gt;: select user,host,authentication_string from mysql.user;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.为指定数据库配置指定账户</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">设置权限账号密码</span></span><br><span class="line"><span class="string"># 授权账号命令：grant 权限(create, update) on 库.表 to &#x27;账号&#x27;@&#x27;host&#x27; identified by &#x27;密码&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">1.配置任意ip都可以连入数据库的账户</span></span><br><span class="line"><span class="string">&gt;: grant all privileges on luffy.* to &#x27;luffy&#x27;@&#x27;%&#x27; identified by &#x27;Luffy123?&#x27;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">示例：grant all privileges on luffy.* to &#x27;luffy&#x27;@&#x27;192.168.43.24&#x27; identified by &#x27;liu199556&#x27;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">2.由于数据库版本的问题，可能本地还连接不上，就给本地用户单独配置</span></span><br><span class="line"><span class="string">&gt;: grant all privileges on luffy.* to &#x27;luffy&#x27;@&#x27;localhost&#x27; identified by &#x27;Luffy123?&#x27;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">3.刷新一下权限</span></span><br><span class="line"><span class="string">&gt;: flush privileges;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">只能操作luffy数据库的账户</span></span><br><span class="line"><span class="string">账号：luffy</span></span><br><span class="line"><span class="string">密码：Luffy123?</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.配置文件配置</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;数据库用户名密码添加到环境变量中&#x27;&#x27;&#x27;</span></span><br><span class="line">user = os.environ.get(<span class="string">&#x27;User&#x27;</span>, )</span><br><span class="line">password = os.environ.get(<span class="string">&#x27;Password&#x27;</span>, )</span><br><span class="line"></span><br><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">&#x27;default&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;ENGINE&#x27;</span>: <span class="string">&#x27;django.db.backends.mysql&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&#x27;luffy&#x27;</span>,  <span class="comment"># 数据库库名</span></span><br><span class="line">        <span class="string">&#x27;USER&#x27;</span>: user,</span><br><span class="line">        <span class="string">&#x27;PASSWORD&#x27;</span>: password,</span><br><span class="line">        <span class="string">&#x27;PORT&#x27;</span>: <span class="number">3306</span>,</span><br><span class="line">        <span class="string">&#x27;HOST&#x27;</span>: <span class="string">&#x27;192.168.31.50&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line">pymysql.install_as_MySQLdb()</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;如果用mysqlclient不用加上述两句话，可以下mysqlcilent 1.4.6&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="5-前台配置"><a href="#5-前台配置" class="headerlink" title="5.前台配置"></a>5.前台配置</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1 vue环境</span></span><br><span class="line"><span class="number">1.</span>傻瓜式安装node: </span><br><span class="line">官网下载：https://nodejs.org/zh-cn/</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>安装cnpm: </span><br><span class="line">&gt;: npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>安装vue最新脚手架: </span><br><span class="line">&gt;: cnpm install -g @vue/cli</span><br><span class="line"></span><br><span class="line">注：如果<span class="number">2</span>、<span class="number">3</span>步报错，清除缓存后重新走<span class="number">2</span>、<span class="number">3</span>步</span><br><span class="line">&gt;: npm cache clean --force</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 2重构项目目录</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">├── luffycity</span></span><br><span class="line"><span class="string">├── public/          # 项目共有资源</span></span><br><span class="line"><span class="string">├── favicon.ico# 站点图标</span></span><br><span class="line"><span class="string">└── index.html# 主页</span></span><br><span class="line"><span class="string">    ├── src/      # 项目主应用，开发时的代码保存</span></span><br><span class="line"><span class="string">    ├── assets/      # 前台静态资源总目录</span></span><br><span class="line"><span class="string">    ├── css/# 自定义css样式</span></span><br><span class="line"><span class="string">    └── global.css# 自定义全局样式</span></span><br><span class="line"><span class="string">    ├── js/# 自定义js样式</span></span><br><span class="line"><span class="string">└── settings.js# 自定义配置文件</span></span><br><span class="line"><span class="string">└── img/# 前台图片资源</span></span><br><span class="line"><span class="string">├── components/    # 小组件目录</span></span><br><span class="line"><span class="string">├── views/  # 页面组件目录</span></span><br><span class="line"><span class="string">├── App.vue    # 根组件</span></span><br><span class="line"><span class="string">├── main.js    # 入口脚本文件</span></span><br><span class="line"><span class="string">├── router    </span></span><br><span class="line"><span class="string">└── index.js# 路由脚本文件</span></span><br><span class="line"><span class="string">store    </span></span><br><span class="line"><span class="string">└── index.js# 仓库脚本文件</span></span><br><span class="line"><span class="string">    ├── vue.config.js    # 项目配置文件</span></span><br><span class="line"><span class="string">    └── *.*# 其他配置文件</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.全局配置：全局样式、配置文件</span></span><br><span class="line"><span class="keyword">global</span>.css</span><br><span class="line"></span><br><span class="line">/* 声明全局样式和项目的初始化样式 */</span><br><span class="line">body, h1, h2, h3, h4, h5, h6, p, table, tr, td, ul, li, a, form, <span class="built_in">input</span>, select, option, textarea &#123;</span><br><span class="line">    margin: <span class="number">0</span>;</span><br><span class="line">    padding: <span class="number">0</span>;</span><br><span class="line">    font-size: 15px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">a &#123;</span><br><span class="line">    text-decoration: none;</span><br><span class="line">    color: <span class="comment">#333;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ul &#123;</span><br><span class="line">    <span class="built_in">list</span>-style: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">table &#123;</span><br><span class="line">    border-collapse: collapse; /* 合并边框 */</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.settings.js</span></span><br><span class="line">export default &#123;</span><br><span class="line">    base_url: <span class="string">&#x27;http://127.0.0.1:8000&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 4.main.js</span></span><br><span class="line"></span><br><span class="line">// 配置全局样式</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;@/assets/css/global.css&#x27;</span></span><br><span class="line"></span><br><span class="line">// 配置全局自定义设置</span><br><span class="line"><span class="keyword">import</span> settings <span class="keyword">from</span> <span class="string">&#x27;@/assets/js/settings&#x27;</span></span><br><span class="line">Vue.prototype.$settings = settings;</span><br><span class="line">// 在所有需要与后台交互的组件中：this.$settings.base_url + <span class="string">&#x27;再拼接具体后台路由&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.axios前后台交互</span></span><br><span class="line">安装：前端项目目录下的终端</span><br><span class="line">&gt;: cnpm install axios</span><br><span class="line">配置：main.js</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line">Vue.prototype.$axios = axios;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.cookies操作</span></span><br><span class="line">安装：前端项目目录下的终端</span><br><span class="line"></span><br><span class="line">&gt;: cnpm install vue-cookies</span><br><span class="line">配置：main.js</span><br><span class="line"><span class="keyword">import</span> cookies <span class="keyword">from</span> <span class="string">&#x27;vue-cookies&#x27;</span></span><br><span class="line">Vue.prototype.$cookies = cookies;</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">// 持久化存储val的值到cookie中</span></span><br><span class="line"><span class="string">this.$cookies.set(&#x27;val&#x27;, this.val, 300)</span></span><br><span class="line"><span class="string">// 获取cookie中val字段值</span></span><br><span class="line"><span class="string">this.$cookies.get(&#x27;val&#x27;)</span></span><br><span class="line"><span class="string">// 删除cookie键值对</span></span><br><span class="line"><span class="string">this.$cookies.remove(&#x27;val&#x27;)</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.element-ui页面组件框架</span></span><br><span class="line">安装：前端项目目录下的终端</span><br><span class="line">&gt;: cnpm install element-ui</span><br><span class="line">配置：main.js</span><br><span class="line"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">&#x27;element-ui&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;element-ui/lib/theme-chalk/index.css&#x27;</span>;</span><br><span class="line">Vue.use(ElementUI);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.bootstrap页面组件框架</span></span><br><span class="line">安装：前端项目目录下的终端</span><br><span class="line">&gt;: cnpm install jquery</span><br><span class="line">&gt;: cnpm install bootstrap@<span class="number">3</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 5.配置jquery：vue.config.js</span></span><br><span class="line"></span><br><span class="line">const webpack = require(<span class="string">&quot;webpack&quot;</span>);</span><br><span class="line"></span><br><span class="line">module.exports = &#123;</span><br><span class="line">    configureWebpack: &#123;</span><br><span class="line">        plugins: [</span><br><span class="line">            new webpack.ProvidePlugin(&#123;</span><br><span class="line">                $: <span class="string">&quot;jquery&quot;</span>,</span><br><span class="line">                jQuery: <span class="string">&quot;jquery&quot;</span>,</span><br><span class="line">                <span class="string">&quot;window.jQuery&quot;</span>: <span class="string">&quot;jquery&quot;</span>,</span><br><span class="line">                <span class="string">&quot;window.$&quot;</span>: <span class="string">&quot;jquery&quot;</span>,</span><br><span class="line">                Popper: [<span class="string">&quot;popper.js&quot;</span>, <span class="string">&quot;default&quot;</span>]</span><br><span class="line">            &#125;)</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.配置bootstrap：main.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;bootstrap&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;bootstrap/dist/css/bootstrap.min.css&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="1-跨域问题"><a href="#1-跨域问题" class="headerlink" title="1 跨域问题"></a>1 跨域问题</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> 同源策略：浏览器的安全策略，不允许去另一个域加载数据</span><br><span class="line"><span class="number">2</span> 域：ip或者端口都必须一致</span><br><span class="line"><span class="number">3</span> 前后端分离项目会出现跨域</span><br><span class="line"><span class="number">4</span> 不使用第三方，自己处理</span><br><span class="line"><span class="number">5</span> CORS：后端技术，跨域资源共享，服务端只要做配置，（本身浏览器已经支持了），就支持跨域</span><br><span class="line">-access-control-allow-origin: *  <span class="comment"># 所有的域都可以向我发送请求，浏览器不会禁止</span></span><br><span class="line"><span class="number">6</span> 浏览器将CORS请求分成两类：</span><br><span class="line">-简单请求（simple request）</span><br><span class="line">-非简单请求（<span class="keyword">not</span>-so-simple request）</span><br><span class="line"><span class="number">7</span> 满足以下两大条件就是简单请求</span><br><span class="line">    （<span class="number">1</span>) 请求方法是以下三种方法之一：</span><br><span class="line">        HEAD</span><br><span class="line">        GET</span><br><span class="line">        POST</span><br><span class="line">    （<span class="number">2</span>）HTTP的头信息不超出以下几种字段：</span><br><span class="line">        Accept</span><br><span class="line">        Accept-Language</span><br><span class="line">        Content-Language</span><br><span class="line">        Last-Event-ID</span><br><span class="line">        Content-<span class="type">Type</span>：只限于三个值application/x-www-form-urlencoded、multipart/form-data、text/plain</span><br><span class="line">        </span><br><span class="line"><span class="number">8</span> 简单请求，只发送一次，如果后端写了CORS，浏览器就不禁止了</span><br><span class="line"><span class="number">9</span> 非简单请求，发两次，第一次是OPTIONS（预检请求），看后端是否允许，如果允许再发真正的请求</span><br></pre></td></tr></table></figure><h3 id="1-1-后端解决跨域问题"><a href="#1-1-后端解决跨域问题" class="headerlink" title="1.1 后端解决跨域问题"></a>1.1 后端解决跨域问题</h3><p>一个测试服务端</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    $(<span class="string">&#x27;#btn&#x27;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> obj = &#123;<span class="attr">name</span>: <span class="string">&#x27;xxxx&#x27;</span>&#125;</span></span><br><span class="line"><span class="javascript">        $.ajax(&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">url</span>: <span class="string">&#x27;http://127.0.0.1:8000/user/index&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">type</span>: <span class="string">&#x27;post&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">headers</span>: &#123;<span class="string">&#x27;authorization&#x27;</span>: <span class="string">&#x27;jwt&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">            <span class="attr">contentType</span>: <span class="string">&#x27;application/json&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">data</span>: <span class="built_in">JSON</span>.stringify(obj),</span></span><br><span class="line"><span class="javascript">            <span class="attr">success</span>: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(res)</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>写一个中间件</p><p>1 middle.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.utils.deprecation <span class="keyword">import</span> MiddlewareMixin</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MiddleCors</span>(<span class="params">MiddlewareMixin</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_response</span>(<span class="params">self, request, response</span>):</span></span><br><span class="line">        <span class="comment"># 配置跨域简单请求</span></span><br><span class="line">        response[<span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>] = <span class="string">&#x27;*&#x27;</span></span><br><span class="line">        <span class="built_in">print</span>(request.method)</span><br><span class="line">        <span class="comment"># 配置跨域非简单请求</span></span><br><span class="line">        <span class="keyword">if</span> request.method == <span class="string">&#x27;OPTIONS&#x27;</span>:</span><br><span class="line">            response[<span class="string">&#x27;Access-Control-Allow-Headers&#x27;</span>] = <span class="string">&#x27;content-type,authorization&#x27;</span></span><br><span class="line">            response[<span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>] = <span class="string">&#x27;*&#x27;</span></span><br><span class="line">        <span class="keyword">return</span> response</span><br></pre></td></tr></table></figure><p>2 注册定义的中间件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">MIDDLEWARE = [    </span><br><span class="line">    <span class="string">&#x27;....&#x27;</span></span><br><span class="line">    <span class="string">&#x27;middle.MiddleCors&#x27;</span>,  <span class="comment"># 自定义的解决跨域中间件</span></span><br><span class="line"><span class="string">&#x27;....&#x27;</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="1-2-第三方解决跨域"><a href="#1-2-第三方解决跨域" class="headerlink" title="1.2 第三方解决跨域"></a>1.2 第三方解决跨域</h2><h3 id="1、使用pip安装"><a href="#1、使用pip安装" class="headerlink" title="1、使用pip安装"></a>1、使用pip安装</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django-cors-headers</span><br></pre></td></tr></table></figure><h3 id="2、添加到setting的app中"><a href="#2、添加到setting的app中" class="headerlink" title="2、添加到setting的app中"></a>2、添加到setting的app中</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = (</span><br><span class="line">...</span><br><span class="line"><span class="string">&#x27;corsheaders&#x27;</span>,</span><br><span class="line">...</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="3、添加中间件"><a href="#3、添加中间件" class="headerlink" title="3、添加中间件"></a>3、添加中间件</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">MIDDLEWARE = [  <span class="comment"># Or MIDDLEWARE_CLASSES on Django &lt; 1.10</span></span><br><span class="line">...</span><br><span class="line"><span class="string">&#x27;corsheaders.middleware.CorsMiddleware&#x27;</span>,</span><br><span class="line">...</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="4、setting下面添加下面的配置"><a href="#4、setting下面添加下面的配置" class="headerlink" title="4、setting下面添加下面的配置"></a>4、setting下面添加下面的配置</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">CORS_ALLOW_CREDENTIALS = <span class="literal">True</span></span><br><span class="line">CORS_ORIGIN_ALLOW_ALL = <span class="literal">True</span></span><br><span class="line">CORS_ORIGIN_WHITELIST = (</span><br><span class="line"><span class="comment"># 允许访问请求资源的url</span></span><br><span class="line">    <span class="string">&#x27;http://127.0.0.1:8081&#x27;</span>,</span><br><span class="line">)</span><br><span class="line">CORS_ALLOW_METHODS = (</span><br><span class="line"><span class="string">&#x27;DELETE&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;OPTIONS&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;PATCH&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;PUT&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;VIEW&#x27;</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">CORS_ALLOW_HEADERS = (</span><br><span class="line"><span class="string">&#x27;XMLHttpRequest&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;X_FILENAME&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;accept-encoding&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;authorization&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;content-type&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;dnt&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;origin&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;user-agent&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;x-csrftoken&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;x-requested-with&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;Pragma&#x27;</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="1-3-前端解决跨域问题"><a href="#1-3-前端解决跨域问题" class="headerlink" title="1.3 前端解决跨域问题"></a>1.3 前端解决跨域问题</h2><h3 id="1-配置文件vue-config-js"><a href="#1-配置文件vue-config-js" class="headerlink" title="1 配置文件vue.config.js"></a>1 配置文件vue.config.js</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">    devServer: &#123;</span><br><span class="line">        proxy: &#123;</span><br><span class="line"></span><br><span class="line">            // <span class="string">&#x27;/ajax&#x27;</span>: &#123; // 路径当中以ajax开头的请求代理到https://m.maoyan.com/中</span><br><span class="line">            //     target: <span class="string">&#x27;https://m.maoyan.com/&#x27;</span>,</span><br><span class="line">            //     changeOrigin: true</span><br><span class="line">            //</span><br><span class="line">            // &#125;,</span><br><span class="line"></span><br><span class="line">            <span class="string">&#x27;/user&#x27;</span>: &#123; // 路径当中以user开头的请求代理到https://m.maoyan.com/中</span><br><span class="line">                target: <span class="string">&#x27;http://127.0.0.1:8000/&#x27;</span>,</span><br><span class="line">                changeOrigin: true</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-axios发送请求"><a href="#2-axios发送请求" class="headerlink" title="2 axios发送请求"></a>2 axios发送请求</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mounted() &#123;</span><br><span class="line">            this.$axios.get(<span class="string">&#x27;user/index&#x27;</span>).then(response =&gt; &#123;</span><br><span class="line">                console.log(response.data)</span><br><span class="line">            &#125;).catch(error =&gt; &#123;</span><br><span class="line">                console.log(error)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="2-git"><a href="#2-git" class="headerlink" title="2 git"></a>2 git</h2><h3 id="2-1-git的工作流程"><a href="#2-1-git的工作流程" class="headerlink" title="2.1 git的工作流程"></a>2.1 git的工作流程</h3><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20201224184543367.png" alt="image-20201224184543367"></p><h3 id="2-2-基础命令"><a href="#2-2-基础命令" class="headerlink" title="2.2 基础命令"></a>2.2 基础命令</h3><h5 id="将已有的文件夹-初始化为git仓库"><a href="#将已有的文件夹-初始化为git仓库" class="headerlink" title="将已有的文件夹 - 初始化为git仓库"></a>将已有的文件夹 - 初始化为git仓库</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&gt;: cd 目标文件夹内部</span></span><br><span class="line"><span class="string">&gt;: git init</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h5 id="在指定目录下-初始化git仓库"><a href="#在指定目录下-初始化git仓库" class="headerlink" title="在指定目录下 - 初始化git仓库"></a>在指定目录下 - 初始化git仓库</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&gt;: cd 目标目录</span></span><br><span class="line"><span class="string">&gt;: git init 仓库名</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h5 id="在仓库目录终端下-设置全局用户"><a href="#在仓库目录终端下-设置全局用户" class="headerlink" title="在仓库目录终端下 - 设置全局用户"></a>在仓库目录终端下 - 设置全局用户</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&gt;: git config --global user.name &#x27;lhj&#x27;</span></span><br><span class="line"><span class="string">&gt;: git config --global user.email &#x27;lhj@qq.com&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">注：在全局文件 C:\Users\用户文件夹\.gitconfig新建用户信息，在所有仓库下都可以使用</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h5 id="在仓库目录终端下-设置局部用户"><a href="#在仓库目录终端下-设置局部用户" class="headerlink" title="在仓库目录终端下 - 设置局部用户"></a>在仓库目录终端下 - 设置局部用户</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&gt;: git config user.name &#x27;lhj&#x27;</span></span><br><span class="line"><span class="string">-- 用户名</span></span><br><span class="line"><span class="string">&gt;: git config user.email &#x27;lhj@qq.com&#x27;</span></span><br><span class="line"><span class="string">-- 用户邮箱</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">注：在当前仓库下的config新建用户信息，只能在当前仓库下使用</span></span><br><span class="line"><span class="string">注：一个仓库有局部用户，优先使用局部用户，没有配置再找全局用户</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h5 id="查看仓库状态"><a href="#查看仓库状态" class="headerlink" title="查看仓库状态"></a>查看仓库状态</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string"># 当仓库中有文件增加、删除、修改，都可以在仓库状态中查看</span></span><br><span class="line"><span class="string">&gt;: git status  </span></span><br><span class="line"><span class="string">-- 查看仓库状态</span></span><br><span class="line"><span class="string">&gt;: git status -s  </span></span><br><span class="line"><span class="string">-- 查看仓库状态的简约显示</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h5 id="撤销工作区操作：改、删（了解）"><a href="#撤销工作区操作：改、删（了解）" class="headerlink" title="撤销工作区操作：改、删（了解）"></a>撤销工作区操作：改、删（了解）</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&gt;: git checkout .</span></span><br><span class="line"><span class="string">-- 撤销所有暂存区的提交</span></span><br><span class="line"><span class="string">&gt;: git checkout 文件名</span></span><br><span class="line"><span class="string">-- 撤销某一文件的暂存区提交</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h5 id="工作区内容提交到暂存区"><a href="#工作区内容提交到暂存区" class="headerlink" title="工作区内容提交到暂存区"></a>工作区内容提交到暂存区</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&gt;: git add .  </span></span><br><span class="line"><span class="string">-- 添加项目中所有文件</span></span><br><span class="line"><span class="string">&gt;: git add 文件名  </span></span><br><span class="line"><span class="string">-- 添加指定文件</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h5 id="撤销暂存区提交：add的逆运算（很少使用）"><a href="#撤销暂存区提交：add的逆运算（很少使用）" class="headerlink" title="撤销暂存区提交：add的逆运算（很少使用）"></a>撤销暂存区提交：add的逆运算（很少使用）</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&gt;: git reset HEAD .</span></span><br><span class="line"><span class="string">-- 撤销所有暂存区的提交</span></span><br><span class="line"><span class="string">&gt;: git reset 文件名</span></span><br><span class="line"><span class="string">-- 撤销某一文件的暂存区提交</span></span><br><span class="line"><span class="string">&gt;: git reset .</span></span><br><span class="line"><span class="string">-- 撤销所有暂存区的提交</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h5 id="提交暂存区内容到版本库"><a href="#提交暂存区内容到版本库" class="headerlink" title="提交暂存区内容到版本库"></a>提交暂存区内容到版本库</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;版本描述信息&quot;</span></span><br></pre></td></tr></table></figure><h5 id="撤销版本库提交：commit的逆运算"><a href="#撤销版本库提交：commit的逆运算" class="headerlink" title="撤销版本库提交：commit的逆运算"></a>撤销版本库提交：commit的逆运算</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">回滚暂存区已经提交到版本库的操作：</span></span><br><span class="line"><span class="string">    查看历史版本：</span></span><br><span class="line"><span class="string">        &gt;: git log</span></span><br><span class="line"><span class="string">        &gt;: git reflog</span></span><br><span class="line"><span class="string">    查看时间点之前|之后的日志：</span></span><br><span class="line"><span class="string">        &gt;: git log --after 2018-6-1</span></span><br><span class="line"><span class="string">        &gt;: git log --before 2018-6-1</span></span><br><span class="line"><span class="string">        &gt;: git reflog --after 2018-6-1</span></span><br><span class="line"><span class="string">        &gt;: git reflog --before 2018-6-1</span></span><br><span class="line"><span class="string">    查看指定开发者日志</span></span><br><span class="line"><span class="string">        &gt;: git log --author author_name</span></span><br><span class="line"><span class="string">        &gt;: git reflog --author author_name</span></span><br><span class="line"><span class="string">    回滚到指定版本：</span></span><br><span class="line"><span class="string">        回滚到上一个版本：</span></span><br><span class="line"><span class="string">            &gt;: git reset --hard HEAD^</span></span><br><span class="line"><span class="string">            &gt;: git reset --hard HEAD~</span></span><br><span class="line"><span class="string">        回滚到上三个版本：</span></span><br><span class="line"><span class="string">            &gt;: git reset --hard HEAD^^^</span></span><br><span class="line"><span class="string">            &gt;: git reset --hard HEAD~3</span></span><br><span class="line"><span class="string">        回滚到指定版本号的版本：</span></span><br><span class="line"><span class="string">            &gt;: git reset --hard 版本号 (重点)</span></span><br><span class="line"><span class="string">            &gt;: eg: git reset --hard 35cb292</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h3 id="2-3-git分支"><a href="#2-3-git分支" class="headerlink" title="2.3 git分支"></a>2.3 git分支</h3><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ggqvtp3d2zj310v0bmq3h.jpg" alt="img"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> 分支查看：git branch  <span class="comment"># 绿色表示当前所在分支</span></span><br><span class="line"><span class="number">2</span> 分支创建：git branch dev <span class="comment"># 创建分支的代码，基于master创建出来的，代码现在跟master一样</span></span><br><span class="line">-在那个分支上创建分支，目前新分支和所在分支代码一样</span><br><span class="line"><span class="number">3</span> 分支删除：git branch -d dev</span><br><span class="line"><span class="number">4</span> 切换分支 ：git checkout dev</span><br><span class="line"><span class="number">5</span> 分支合并</span><br><span class="line">    git merge 分支名</span><br><span class="line">    把dev分支合并到master分支：切换到master分支，执行合并dev分支的命令</span><br><span class="line">    </span><br><span class="line"><span class="number">6</span> 创建并切换到某个分支（两部并作一步）</span><br><span class="line">git checkout -b 分支名</span><br></pre></td></tr></table></figure><h2 id="3-远程仓库"><a href="#3-远程仓库" class="headerlink" title="3 远程仓库"></a>3 远程仓库</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">简易的命令行入门教程:</span><br><span class="line">Git 全局设置:</span><br><span class="line"></span><br><span class="line">git config --<span class="keyword">global</span> user.name <span class="string">&quot;刘皓杰&quot;</span></span><br><span class="line">git config --<span class="keyword">global</span> user.email <span class="string">&quot;1026170773@qq.com&quot;</span></span><br><span class="line">创建 git 仓库:</span><br><span class="line"></span><br><span class="line">mkdir luufy</span><br><span class="line">cd luufy</span><br><span class="line">git init</span><br><span class="line"></span><br><span class="line">git commit -m <span class="string">&quot;first commit&quot;</span></span><br><span class="line">git remote add origin https://gitee.com/liuhaojie_199556/luufy.git</span><br><span class="line">git push  origin master</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">其它命令</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">1）查看仓库已配置的远程源</span></span><br><span class="line"><span class="string">&gt;: git remote</span></span><br><span class="line"><span class="string">&gt;: git remote -v</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">2）查看remote命令帮助文档</span></span><br><span class="line"><span class="string">&gt;: git remote -h</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">3）删除远程源</span></span><br><span class="line"><span class="string">&gt;: git remote remove 源名</span></span><br><span class="line"><span class="string">eg: git remote remove origin</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">4）添加远程源</span></span><br><span class="line"><span class="string">&gt;: git remote add 源名 源地址</span></span><br><span class="line"><span class="string">&gt;: git remote add orgin git@gitee.com:doctor_owen/luffyapi.git</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">5）提交代码到远程源</span></span><br><span class="line"><span class="string">&gt;: git push 源码 分支名</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">6）克隆远程源</span></span><br><span class="line"><span class="string">&gt;: git clone 远程源地址</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h2 id="4-采用ssh协议连接远程源"><a href="#4-采用ssh协议连接远程源" class="headerlink" title="4 采用ssh协议连接远程源"></a>4 采用ssh协议连接远程源</h2><h3 id="4-1-创建电脑的公钥私钥"><a href="#4-1-创建电脑的公钥私钥" class="headerlink" title="4.1 创建电脑的公钥私钥"></a>4.1 创建电脑的公钥私钥</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">官网：https://gitee.com/<span class="built_in">help</span>/articles/<span class="number">4181</span><span class="comment">#article-header0</span></span><br><span class="line">本机命令，生成公钥：ssh-keygen -t rsa -C <span class="string">&quot;1026170773@qq.com&quot;</span></span><br><span class="line">邮箱可以任意填写</span><br><span class="line">本机命令，查看公钥：cat ~/.ssh/id_rsa.pub</span><br><span class="line"></span><br><span class="line">码云线上添加公钥：项目仓库 =&gt; 管理 =&gt; 部署公钥管理 =&gt; 添加公钥 =&gt; 添加个人公钥</span><br></pre></td></tr></table></figure><h3 id="4-2-协同开发"><a href="#4-2-协同开发" class="headerlink" title="4.2 协同开发"></a>4.2 协同开发</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">1）作为开发者，第一次同步项目（前台已经是项目开发者了）</span></span><br><span class="line"><span class="string">&gt;: git clone 项目地址</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">2）保证自己本地有dev分支，且与远程仓库版本同步(没有就自己新建)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">3）本地开发的代码，必须add、commit到本地版本库后，才和远程仓库进行交互</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">4）交互顺序：必须 先拉(pull)后提(push)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">5）必须切换到要交互的分支，在与远程同名的分支进行交互，如本地dev与远程dev交互</span></span><br><span class="line"><span class="string">&gt;: git checkout dev</span></span><br><span class="line"><span class="string">&gt;: git add .</span></span><br><span class="line"><span class="string">&gt;: git commit -m &#x27;本次提交的信息提示&#x27;</span></span><br><span class="line"><span class="string">&gt;: git pull origin dev</span></span><br><span class="line"><span class="string">&gt;: git push origin dev</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h3 id="4-3-远程仓库回滚"><a href="#4-3-远程仓库回滚" class="headerlink" title="4.3 远程仓库回滚"></a>4.3 远程仓库回滚</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">用dev分支举例</span></span><br><span class="line"><span class="string">1）本地切换到远程要回滚的分支对应的本地分支</span></span><br><span class="line"><span class="string">git checkout dev</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">2）回滚本地分支</span></span><br><span class="line"><span class="string">git reset --hard 版本号</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">3）本地版本强行提交给服务器</span></span><br><span class="line"><span class="string">git push origin dev -f</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h2 id="5-redis"><a href="#5-redis" class="headerlink" title="5 redis"></a>5 redis</h2><h3 id="5-1-基本操作"><a href="#5-1-基本操作" class="headerlink" title="5.1 基本操作"></a>5.1 基本操作</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">redis: 操作字符串、列表、字典、无序集合、有序集合 | 支持数据持久化(数据丢失可以找回(默认持久化，主动持久化save)、可以将数据同步给mysql) | 高并发支持</span></span><br><span class="line"><span class="string">memcache: 操作字符串 | 不支持数据持久化 | 并发量小</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">前提：前往一个方便管理redis持久化文件的逻辑再启动服务：dump.rdb</span></span><br><span class="line"><span class="string">1）前台启动服务</span></span><br><span class="line"><span class="string">&gt;: redis-server</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">2）后台启动服务</span></span><br><span class="line"><span class="string">&gt;: redis-server --service-start</span></span><br><span class="line"><span class="string">注）Linux系统后台启动（或是修改配置文件，建议采用方式）</span></span><br><span class="line"><span class="string">&gt;: redis-server &amp;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">3）配置文件启动前台服务</span></span><br><span class="line"><span class="string">&gt;: redis-server 配置文件的绝对路径</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">4）配置文件启动后台服务</span></span><br><span class="line"><span class="string">注）windows系统默认按Redis安装包下的redis.windows-service.conf配置文件启动</span></span><br><span class="line"><span class="string">&gt;: redis-server --service-start</span></span><br><span class="line"><span class="string">注）Linux系统可以完全自定义配置文件(redis.conf)后台启动</span></span><br><span class="line"><span class="string">&gt;: redis-server 配置文件的绝对路径 &amp;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">windows系统</span></span><br><span class="line"><span class="string">1）前台启动</span></span><br><span class="line"><span class="string">i）打开终端切换到redis安装目录</span></span><br><span class="line"><span class="string">&gt;: cd C:\Apps\Redis</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">ii）启动服务</span></span><br><span class="line"><span class="string">&gt;: redis-server redis.windows.conf</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">2）后台启动</span></span><br><span class="line"><span class="string">i）打开终端切换到redis安装目录</span></span><br><span class="line"><span class="string">&gt;: cd C:\Apps\Redis</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">ii）启动服务（后面的配置文件可以省略）</span></span><br><span class="line"><span class="string">&gt;: redis-server --service-start redis.windows-service.conf</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h3 id="5-2-数据类型"><a href="#5-2-数据类型" class="headerlink" title="5.2 数据类型"></a>5.2 数据类型</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">数据操作：字符串、列表、哈希(字典)、无序集合、有序(排序)集合</span></span><br><span class="line"><span class="string">有序集合：游戏排行榜</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">字符串：</span></span><br><span class="line"><span class="string">set key value</span></span><br><span class="line"><span class="string">get key</span></span><br><span class="line"><span class="string">mset k1 v1 k2 v2 ...</span></span><br><span class="line"><span class="string">mget k1 k2 ...</span></span><br><span class="line"><span class="string">setex key exp value</span></span><br><span class="line"><span class="string">incrby key increment</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">列表：</span></span><br><span class="line"><span class="string">rpush key value1 value2 ...</span></span><br><span class="line"><span class="string">lpush key value1 value2 ...</span></span><br><span class="line"><span class="string">lrange key bindex eindex</span></span><br><span class="line"><span class="string">lindex key index</span></span><br><span class="line"><span class="string">lpop key | rpop key</span></span><br><span class="line"><span class="string">linsert key before|after old_value new_value</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">哈希：</span></span><br><span class="line"><span class="string">hset key field value </span></span><br><span class="line"><span class="string">- conn.hset(&#x27;userinfo&#x27;, &#x27;name&#x27;, &#x27;lqz&#x27;)</span></span><br><span class="line"><span class="string">hget key field</span></span><br><span class="line"><span class="string">hmset key field1 value1 field2 value2 ...</span></span><br><span class="line"><span class="string">hmget key field1 field2</span></span><br><span class="line"><span class="string">hkeys key</span></span><br><span class="line"><span class="string">hvals key</span></span><br><span class="line"><span class="string">hdel key field</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">集合：</span></span><br><span class="line"><span class="string">sadd key member1 member2 ...</span></span><br><span class="line"><span class="string">sdiff key1 key2 ...</span></span><br><span class="line"><span class="string">sdiffstore newkey key1 key2 ...</span></span><br><span class="line"><span class="string">sinter key1 key2 ...</span></span><br><span class="line"><span class="string">sunion key1 key2 ...</span></span><br><span class="line"><span class="string">smembers key</span></span><br><span class="line"><span class="string">spop key</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">有序集合：</span></span><br><span class="line"><span class="string">zadd key grade1 member1 grade2 member2 ...</span></span><br><span class="line"><span class="string">zincrby key grade member</span></span><br><span class="line"><span class="string">zrange key start end</span></span><br><span class="line"><span class="string">zrevrange key start end</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h3 id="5-3-redis普通链接和链接池"><a href="#5-3-redis普通链接和链接池" class="headerlink" title="5.3 redis普通链接和链接池"></a>5.3 redis普通链接和链接池</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># from redis import Redis</span></span><br><span class="line"><span class="comment"># 1 普通链接</span></span><br><span class="line"><span class="comment"># # 拿到一个链接</span></span><br><span class="line"><span class="comment"># coon = Redis()</span></span><br><span class="line"><span class="comment"># # conn=Redis(host=&#x27;127.0.0.1&#x27;, port=6379)</span></span><br><span class="line"><span class="comment"># # 使用链接操作</span></span><br><span class="line"><span class="comment"># coon.set(&#x27;name&#x27;, &#x27;lyh&#x27;)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># coon.close()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2 链接池</span></span><br><span class="line"><span class="keyword">import</span> redis</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建出一个连接池</span></span><br><span class="line"><span class="comment"># pool = redis.ConnectionPool(host=&#x27;127.0.0.1&#x27;, port=6379, max_connections=100)</span></span><br><span class="line"><span class="comment"># # 从连接池中拿一个连接</span></span><br><span class="line"><span class="comment"># conn = redis.Redis(connection_pool=pool)</span></span><br><span class="line"><span class="comment"># conn.set(&#x27;foo&#x27;, &#x27;Bar&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># conn.close()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 实际应用</span></span><br><span class="line"><span class="keyword">from</span> redis_pool <span class="keyword">import</span> POOL  <span class="comment"># Pool是单例，</span></span><br><span class="line"></span><br><span class="line">conn = redis.Redis(connection_pool=POOL)</span><br><span class="line">conn.<span class="built_in">set</span>(<span class="string">&#x27;age&#x27;</span>, <span class="number">18</span>)</span><br><span class="line">conn.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="redis-pool"><a href="#redis-pool" class="headerlink" title="redis_pool"></a>redis_pool</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> redis</span><br><span class="line">POOL=redis.ConnectionPool(host=<span class="string">&#x27;127.0.0.1&#x27;</span>, port=<span class="number">6379</span>,max_connections=<span class="number">100</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="5-4-redis之字符串"><a href="#5-4-redis之字符串" class="headerlink" title="5.4  redis之字符串"></a>5.4  redis之字符串</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> redis <span class="keyword">import</span> Redis</span><br><span class="line"></span><br><span class="line">conn = Redis()</span><br><span class="line"><span class="comment">###  1 set 的使用</span></span><br><span class="line"><span class="comment"># name:key值</span></span><br><span class="line"><span class="comment"># value：value值</span></span><br><span class="line"><span class="comment"># ex:过期时间，按秒记</span></span><br><span class="line"><span class="comment"># px：过期时间（毫秒）</span></span><br><span class="line"><span class="comment"># nx：如果设置为True，则只有name不存在时，当前set操作才执行,值存在，就修改不了，执行没效果</span></span><br><span class="line"><span class="comment"># xx：如果设置为True，则只有name存在时，当前set操作才执行，值存在才能修改，值不存在，不会设置新值</span></span><br><span class="line"><span class="comment"># conn.set(&#x27;name&#x27;,&#x27;egon&#x27;)</span></span><br><span class="line"><span class="comment"># conn.set(&#x27;name&#x27;,&#x27;lqz&#x27;,nx=True)</span></span><br><span class="line"><span class="comment"># conn.set(&#x27;name&#x27;,&#x27;lqz&#x27;,xx=True)</span></span><br><span class="line"><span class="comment"># conn.set(&#x27;age&#x27;,&#x27;18&#x27;,xx=True)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 2 get</span></span><br><span class="line"><span class="comment"># res=conn.get(&#x27;name&#x27;)</span></span><br><span class="line"><span class="comment"># print(res)  # 返回的数据是byte格式</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##3 setnx(name, value)</span></span><br><span class="line"><span class="comment"># 设置值，只有name不存在时，执行设置操作（添加）,如果存在，不会修改</span></span><br><span class="line"><span class="comment"># conn.setnx(&#x27;name&#x27;,&#x27;egon&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##4 setex(name, time,value, )</span></span><br><span class="line"><span class="comment"># conn.setex(&#x27;name&#x27;,3,&#x27;egon&#x27;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 5 mset</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># conn.mset(&#123;&#x27;name&#x27;:&#x27;lqz22&#x27;,&#x27;age&#x27;:192,&#x27;sex&#x27;:&#x27;男&#x27;&#125;)</span></span><br><span class="line"><span class="comment">## 6 mget</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># res=conn.mget(&#x27;name&#x27;,&#x27;age&#x27;)</span></span><br><span class="line"><span class="comment"># res=conn.mget([&#x27;name&#x27;,&#x27;age&#x27;])</span></span><br><span class="line"><span class="comment"># print(res)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 7 getset(name, value)</span></span><br><span class="line"><span class="comment"># 一次网络io，完成了取值和设置</span></span><br><span class="line"><span class="comment"># res=conn.getset(&#x27;name&#x27;,&#x27;egon111111111111111&#x27;)</span></span><br><span class="line"><span class="comment"># print(res)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 8 getrange(key, start, end)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 前闭后闭区间</span></span><br><span class="line"><span class="comment"># res1 = conn.getrange(&#x27;name&#x27;, 0, 4).decode(&#x27;utf-8&#x27;)</span></span><br><span class="line"><span class="comment"># 最终效果跟上面一样</span></span><br><span class="line"><span class="comment"># res=conn.get(&#x27;name&#x27;).decode(&#x27;utf-8&#x27;)</span></span><br><span class="line"><span class="comment"># print(res[0:5])</span></span><br><span class="line"><span class="comment"># print(res1)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># setrange(name, offset, value)</span></span><br><span class="line"><span class="comment"># conn.setrange(&#x27;name&#x27;,0,&#x27;tt&#x27;)</span></span><br><span class="line"><span class="comment"># conn.setrange(&#x27;name&#x27;,5,&#x27;tt&#x27;)</span></span><br><span class="line"><span class="comment"># conn.setrange(&#x27;name&#x27;,7,&#x27;ttttttttttttttttttttttttt&#x27;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># setbit(name, offset, value)</span></span><br><span class="line"><span class="comment"># conn.set(&#x27;n1&#x27;,&#x27;foo&#x27;)</span></span><br><span class="line"><span class="comment"># 那么字符串foo的二进制表示为：01100110 01101111 01101111</span></span><br><span class="line"><span class="comment"># conn.setbit(&#x27;n1&#x27;,7,1)</span></span><br><span class="line"><span class="comment"># #那么字符串foo的二进制表示为：01100111 01101111 01101111</span></span><br><span class="line"><span class="comment"># res=conn.get(&#x27;n1&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># getbit(name, offset)</span></span><br><span class="line"><span class="comment"># 获取bit位的第几个位置，看是1还是0</span></span><br><span class="line"><span class="comment"># res=conn.getbit(&#x27;n1&#x27;,7)</span></span><br><span class="line"><span class="comment"># print(res)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># bitcount(key, start=None, end=None)</span></span><br><span class="line"><span class="comment"># end:指的是bytes，前闭后闭区间</span></span><br><span class="line"><span class="comment"># res=conn.bitcount(&#x27;n1&#x27;,0,1)</span></span><br><span class="line"><span class="comment"># print(res)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">### incr 重点</span></span><br><span class="line"><span class="comment"># 每次自增1</span></span><br><span class="line"><span class="comment"># 统计网页访问量，文章阅读量，粉丝数量，计数相关（不会存在并发安全的问题）</span></span><br><span class="line"><span class="comment"># conn.incr(&#x27;age&#x27;,-2)</span></span><br><span class="line"><span class="comment"># res=conn.get(&#x27;age&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># conn.decr(&#x27;age&#x27;)</span></span><br><span class="line"><span class="comment"># res=conn.get(&#x27;age&#x27;)</span></span><br><span class="line"><span class="comment"># print(res)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># append</span></span><br><span class="line"><span class="comment"># conn.append(&#x27;name&#x27;,&#x27;lqz&#x27;)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># res=conn.get(&#x27;name&#x27;)</span></span><br><span class="line"><span class="comment"># print(res)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># conn.close()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 总结</span></span><br><span class="line"><span class="comment"># set:超时时间，nx，xx</span></span><br><span class="line"><span class="comment"># get</span></span><br><span class="line"><span class="comment"># mset</span></span><br><span class="line"><span class="comment"># mget</span></span><br><span class="line"><span class="comment"># incr</span></span><br><span class="line"><span class="comment"># decr</span></span><br><span class="line"><span class="comment"># getrange</span></span><br><span class="line"><span class="comment"># setrange</span></span><br><span class="line"><span class="comment"># append</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="5-5-redis之hash"><a href="#5-5-redis之hash" class="headerlink" title="5.5 redis之hash"></a>5.5 redis之hash</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> redis</span><br><span class="line"></span><br><span class="line">conn = redis.Redis()</span><br><span class="line"></span><br><span class="line"><span class="comment"># hset</span></span><br><span class="line">conn.hset(<span class="string">&#x27;userinfo&#x27;</span>, <span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;lqz&#x27;</span>)</span><br><span class="line"><span class="comment"># conn.hset(&#x27;userinfo&#x27;, &#x27;age&#x27;, &#x27;18&#x27;)</span></span><br><span class="line"><span class="comment"># conn.hset(&#x27;userinfo&#x27;, &#x27;sex&#x27;, &#x27;男&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># hmset</span></span><br><span class="line"><span class="comment"># conn.hmset(&#x27;userinfo_2&#x27;,&#123;&#x27;name&#x27;:&#x27;egon&#x27;,&#x27;age&#x27;:18,&#x27;sex&#x27;:&#x27;男&#x27;&#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># hget</span></span><br><span class="line"><span class="comment"># res=conn.hget(&#x27;userinfo&#x27;,&#x27;sex&#x27;).decode(&#x27;utf-8&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># hmget</span></span><br><span class="line"><span class="comment"># res=conn.hmget(&#x27;userinfo&#x27;,&#x27;age&#x27;,&#x27;name&#x27;)</span></span><br><span class="line"><span class="comment"># res=conn.hmget(&#x27;userinfo&#x27;,[&#x27;age&#x27;,&#x27;name&#x27;])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># hgetall</span></span><br><span class="line"><span class="comment"># res=conn.hgetall(&#x27;userinfo&#x27;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># hlen(name)</span></span><br><span class="line"><span class="comment"># res=conn.hlen(&#x27;userinfo&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># hkeys(name)</span></span><br><span class="line"><span class="comment"># res=conn.hkeys(&#x27;userinfo&#x27;)</span></span><br><span class="line"><span class="comment"># hvals(name)</span></span><br><span class="line"><span class="comment"># res=conn.hvals(&#x27;userinfo&#x27;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># hexists(name, key)</span></span><br><span class="line"><span class="comment"># res=conn.hexists(&#x27;userinfo&#x27;,&#x27;hobby&#x27;)</span></span><br><span class="line"><span class="comment"># res=conn.hexists(&#x27;userinfo&#x27;,&#x27;name&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># hdel</span></span><br><span class="line"><span class="comment"># res=conn.hdel(&#x27;userinfo&#x27;,&#x27;name&#x27;,&#x27;age&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># hincrby</span></span><br><span class="line"><span class="comment"># res=conn.hset(&#x27;userinfo&#x27;,&#x27;age&#x27;,19)</span></span><br><span class="line"><span class="comment"># conn.hincrby(&#x27;userinfo&#x27;,&#x27;age&#x27;)</span></span><br><span class="line"><span class="comment"># res=conn.hget(&#x27;userinfo&#x27;,&#x27;age&#x27;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># hscan</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for i in range(100):</span></span><br><span class="line"><span class="comment">#     conn.hset(&#x27;test&#x27;,&#x27;test_&#x27;+str(i),str(i))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不建议使用</span></span><br><span class="line"><span class="comment"># res=conn.hgetall(&#x27;test&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不怎么用</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># name，redis的name</span></span><br><span class="line"><span class="comment"># cursor，游标（基于游标分批取获取数据）</span></span><br><span class="line"><span class="comment"># match，匹配指定key，默认None 表示所有的key</span></span><br><span class="line"><span class="comment"># count，每次分片最少获取个数，默认None表示采用Redis的默认分片个数</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># res = conn.hscan(&#x27;test&#x27;, cursor=2, count=50)</span></span><br><span class="line"><span class="comment"># print(res)</span></span><br><span class="line"><span class="comment"># print(len(res[1]))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># hscan_iter</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># res=conn.hscan_iter(&#x27;test&#x27;,count=10)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 以后要使用hgetall的时候，要使用如下方式</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> conn.hscan_iter(<span class="string">&#x27;test&#x27;</span>, count=<span class="number">10</span>):</span><br><span class="line">    <span class="built_in">print</span>(item)</span><br><span class="line"></span><br><span class="line"><span class="comment"># print(res)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">conn.close()</span><br><span class="line"></span><br><span class="line"><span class="comment">## 总结</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">hset</span></span><br><span class="line"><span class="string">hget</span></span><br><span class="line"><span class="string">hmset</span></span><br><span class="line"><span class="string">hmget</span></span><br><span class="line"><span class="string">hincrby</span></span><br><span class="line"><span class="string">hdel</span></span><br><span class="line"><span class="string">hexists</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">hscan_iter/hgetall 区分</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="5-6-redis之列表"><a href="#5-6-redis之列表" class="headerlink" title="5.6 redis之列表"></a>5.6 redis之列表</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># import redis</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># class MyRedis():</span></span><br><span class="line"><span class="comment">#     def __enter__(self):</span></span><br><span class="line"><span class="comment">#         self.conn = redis.Redis()</span></span><br><span class="line"><span class="comment">#         return self.conn</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     def __exit__(self, exc_type, exc_val, exc_tb):</span></span><br><span class="line"><span class="comment">#         self.conn.close()</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># with MyRedis() as conn:</span></span><br><span class="line">    <span class="comment"># 列表操作</span></span><br><span class="line">    <span class="comment"># 1 lpush(name,values)</span></span><br><span class="line">    <span class="comment"># conn.lpush(&#x27;l1&#x27;, 1, 2, 3, 4, 5, &#x27;lqz&#x27;)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2 rpush</span></span><br><span class="line">    <span class="comment"># conn.rpush(&#x27;l1&#x27;,&#x27;egon&#x27;)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 3 lpushx(name,value)</span></span><br><span class="line">    <span class="comment"># 在name对应的list中添加元素，只有name已经存在时，值添加到列表的最左边</span></span><br><span class="line">    <span class="comment"># conn.lpushx(&#x27;l2&#x27;,9)</span></span><br><span class="line">    <span class="comment"># conn.lpushx(&#x27;l1&#x27;,9)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># llen(name)</span></span><br><span class="line">    <span class="comment"># res=conn.llen(&#x27;l1&#x27;)</span></span><br><span class="line">    <span class="comment"># print(res)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># linsert(name, where, refvalue, value))  在某个位置插入值</span></span><br><span class="line">    <span class="comment"># where :BEFORE或AFTER,大小写都行</span></span><br><span class="line">    <span class="comment"># refvalue: lqz 表示以lqz为标准（不是下标索引）</span></span><br><span class="line">    <span class="comment"># conn.linsert(&#x27;l1&#x27;,&#x27;after&#x27;,&#x27;lqz&#x27;,&#x27;刘亦菲&#x27;)</span></span><br><span class="line">    <span class="comment"># conn.linsert(&#x27;l1&#x27;,&#x27;before&#x27;,&#x27;lqz&#x27;,&#x27;baby&#x27;)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># lset</span></span><br><span class="line">    <span class="comment"># conn.lset(&#x27;l1&#x27;,0,&#x27;黄晓明&#x27;)</span></span><br><span class="line">    <span class="comment"># conn.lset(&#x27;l1&#x27;,5,&#x27;老伙计&#x27;)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># lrem</span></span><br><span class="line">    <span class="comment"># 第二个参数count：</span></span><br><span class="line">    <span class="comment"># count = 0，删除列表中所有的指定值；</span></span><br><span class="line">    <span class="comment"># count=2,从前到后，删除2个；</span></span><br><span class="line">    <span class="comment"># count=-2,从后向前，删除2个</span></span><br><span class="line">    <span class="comment"># conn.lrem(&#x27;l1&#x27;,0,&#x27;lqz&#x27;)  # 把所有lqz都删除</span></span><br><span class="line">    <span class="comment"># conn.lrem(&#x27;l1&#x27;,2,&#x27;lqz&#x27;)  # 从前往后，删除2个lqz</span></span><br><span class="line">    <span class="comment"># conn.lrem(&#x27;l1&#x27;,-1,&#x27;lqz&#x27;)  # 从前往后，删除2个lqz</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># lpop</span></span><br><span class="line">    <span class="comment"># res=conn.lpop(&#x27;l1&#x27;)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># res=conn.rpop(&#x27;l1&#x27;)</span></span><br><span class="line">    <span class="comment"># print(res)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># lindex(不删除)</span></span><br><span class="line">    <span class="comment"># res=conn.lindex(&#x27;l1&#x27;,3)</span></span><br><span class="line">    <span class="comment"># print(res)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># lrange   # 前闭后闭区间</span></span><br><span class="line">    <span class="comment"># res = conn.lrange(&#x27;l1&#x27;, 0, 3)</span></span><br><span class="line">    <span class="comment"># print(res)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># ltrim</span></span><br><span class="line">    <span class="comment"># res=conn.ltrim(&#x27;l1&#x27;,3,5)</span></span><br><span class="line">    <span class="comment"># print(res)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># rpoplpush  需要两个列表</span></span><br><span class="line">    <span class="comment"># conn.lpush(&#x27;l2&#x27;,&#x27;lqz&#x27;,&#x27;egon&#x27;)</span></span><br><span class="line">    <span class="comment"># conn.rpoplpush(&#x27;l1&#x27;,&#x27;l1&#x27;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># blpop   # block:阻塞  左边弹出</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># res=conn.blpop(&#x27;l1&#x27;)</span></span><br><span class="line">    <span class="comment"># print(res)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">lpush</span></span><br><span class="line"><span class="string">llen</span></span><br><span class="line"><span class="string">linsert</span></span><br><span class="line"><span class="string">lset</span></span><br><span class="line"><span class="string">lrem</span></span><br><span class="line"><span class="string">lpop</span></span><br><span class="line"><span class="string">lrange  # 使用它，自定义增量迭代</span></span><br><span class="line"><span class="string">blpop</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### redis类库中没有提供对列表元素的增量迭代，借助lrange</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> redis</span><br><span class="line"></span><br><span class="line">conn = redis.Redis()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># conn.lpush(&#x27;l2&#x27;,1,2,3,4,5,6,7,8,9,)</span></span><br><span class="line"><span class="comment"># res=conn.lrange(&#x27;l2&#x27;,0,9999)  # 全部取出来</span></span><br><span class="line"><span class="comment"># res1=conn.lrange(&#x27;l2&#x27;,0,conn.llen(&#x27;l2&#x27;))  # 从0取到列表长度</span></span><br><span class="line"><span class="comment"># print(res)</span></span><br><span class="line"><span class="comment"># print(res1)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 类似于字典的hgetall，一次性全取出来，存在的问题是，因为不知道列表有多大，很有可能撑爆内存</span></span><br><span class="line"><span class="comment"># 我们实现一个增量迭代</span></span><br><span class="line"><span class="comment"># print(res)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for i in range(10000):</span></span><br><span class="line"><span class="comment">#     conn.lpush(&#x27;l_test&#x27;,&#x27;test_%s&#x27;%i)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># res=conn.lrange(&#x27;l2&#x27;,0,conn.llen(&#x27;l2&#x27;))</span></span><br><span class="line"><span class="comment"># print(res)</span></span><br><span class="line"><span class="comment"># res = conn.lrange(&#x27;l_test&#x27;, 0, 9)</span></span><br><span class="line"><span class="comment"># print(res)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># def lscan_iter(name, conn, count=10):</span></span><br><span class="line"><span class="comment">#     cursor = 0</span></span><br><span class="line"><span class="comment">#     lenght = conn.llen(name)  # 计算列表总长度</span></span><br><span class="line"><span class="comment">#     while cursor &lt; lenght:</span></span><br><span class="line"><span class="comment">#         data = conn.lrange(name, cursor, (cursor+count) - 1)</span></span><br><span class="line"><span class="comment">#         cursor += count</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#         for item in data:</span></span><br><span class="line"><span class="comment">#             yield item</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">lcan_iter</span>(<span class="params">name, conn, count=<span class="number">10</span>, </span>):</span></span><br><span class="line">    cursor = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        data = conn.lrange(name, cursor, (cursor + count) - <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> data:</span><br><span class="line">            cursor += count</span><br><span class="line">            <span class="keyword">for</span> item <span class="keyword">in</span> data:</span><br><span class="line">                <span class="keyword">yield</span> item</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> lcan_iter(<span class="string">&#x27;l_test&#x27;</span>, conn, <span class="number">20</span>):</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure><h3 id="5-7-redis之其它操作"><a href="#5-7-redis之其它操作" class="headerlink" title="5.7 redis之其它操作"></a>5.7 redis之其它操作</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> redis</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 公共操作</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 搭建哨兵。用了集群，这个模块就不够用了</span></span><br><span class="line"><span class="comment"># conn=redis.Redis()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># delete</span></span><br><span class="line"><span class="comment"># res=conn.delete(&#x27;l2&#x27;,&#x27;name&#x27;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#exists</span></span><br><span class="line"><span class="comment"># res=conn.exists(&#x27;l1&#x27;,&#x27;l_test&#x27;,&#x27;l2&#x27;)</span></span><br><span class="line"><span class="comment"># res=conn.exists(&#x27;l_test&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># expire</span></span><br><span class="line"><span class="comment"># res=conn.expire(&#x27;l_test&#x27;,5)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># rename</span></span><br><span class="line"><span class="comment"># conn.lpush(&#x27;l1&#x27;,1,2,3)</span></span><br><span class="line"><span class="comment"># res=conn.rename(&#x27;l1&#x27;,&#x27;l2&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># res=conn.move(&#x27;l2&#x27;,3)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## redis的库是隔离的</span></span><br><span class="line">conn = redis.Redis()</span><br><span class="line"><span class="comment"># res=conn.lpop(&#x27;l2&#x27;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 随机出一个key值</span></span><br><span class="line"><span class="comment"># res=conn.randomkey()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># conn.sadd(&#x27;choujiang&#x27;,9)</span></span><br><span class="line"><span class="comment"># conn.sadd(&#x27;choujiang&#x27;,90)</span></span><br><span class="line"><span class="comment"># conn.sadd(&#x27;choujiang&#x27;,99)</span></span><br><span class="line"><span class="comment"># print(res)</span></span><br><span class="line"><span class="comment"># res=conn.spop(&#x27;choujiang&#x27;)</span></span><br><span class="line"><span class="comment"># print(res)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># type----查看类型</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># res=conn.type(&#x27;choujiang&#x27;)</span></span><br><span class="line"><span class="comment"># res=conn.type(&#x27;ss&#x27;)</span></span><br><span class="line">res=conn.<span class="built_in">type</span>(<span class="string">&#x27;zzz&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(res)</span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure><h1 id="redis"><a href="#redis" class="headerlink" title="redis"></a>redis</h1><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一 简介"></a>一 简介</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 使用Redis有哪些好处？</span><br><span class="line"></span><br><span class="line">(<span class="number">1</span>) 速度快，因为数据存在内存中，类似于HashMap，HashMap的优势就是查找和操作的时间复杂度都是O(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">(<span class="number">2</span>) 支持丰富数据类型，支持string，<span class="built_in">list</span>，<span class="built_in">set</span>，<span class="built_in">sorted</span> <span class="built_in">set</span>，<span class="built_in">hash</span></span><br><span class="line"></span><br><span class="line">(<span class="number">3</span>) 支持事务，操作都是原子性，所谓的原子性就是对数据的更改要么全部执行，要么全部不执行</span><br><span class="line"></span><br><span class="line">(<span class="number">4</span>) 丰富的特性：可用于缓存，消息，按key设置过期时间，过期后将会自动删除</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> redis相比memcached有哪些优势？</span><br><span class="line"></span><br><span class="line">(<span class="number">1</span>) memcached所有的值均是简单的字符串，redis作为其替代者，支持更为丰富的数据类型</span><br><span class="line"></span><br><span class="line">(<span class="number">2</span>) redis的速度比memcached快很多</span><br><span class="line"></span><br><span class="line">(<span class="number">3</span>) redis可以持久化其数据</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">3.</span> redis常见性能问题和解决方案：</span><br><span class="line"></span><br><span class="line">(<span class="number">1</span>) Master最好不要做任何持久化工作，如RDB内存快照和AOF日志文件</span><br><span class="line"></span><br><span class="line">(<span class="number">2</span>) 如果数据比较重要，某个Slave开启AOF备份数据，策略设置为每秒同步一次</span><br><span class="line"></span><br><span class="line">(<span class="number">3</span>) 为了主从复制的速度和连接的稳定性，Master和Slave最好在同一个局域网内</span><br><span class="line"></span><br><span class="line">(<span class="number">4</span>) 尽量避免在压力很大的主库上增加从库</span><br><span class="line"></span><br><span class="line">(<span class="number">5</span>) 主从复制不要用图状结构，用单向链表结构更为稳定，即：Master &lt;- Slave1 &lt;- Slave2 &lt;- Slave3...</span><br><span class="line"></span><br><span class="line">这样的结构方便解决单点故障问题，实现Slave对Master的替换。如果Master挂了，可以立刻启用Slave1做Master，其他不变。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="number">4.</span> MySQL里有2000w数据，redis中只存20w的数据，如何保证redis中的数据都是热点数据</span><br><span class="line"></span><br><span class="line"> 相关知识：redis 内存数据集大小上升到一定大小的时候，就会施行数据淘汰策略。redis 提供 <span class="number">6</span>种数据淘汰策略：</span><br><span class="line"></span><br><span class="line">volatile-lru：从已设置过期时间的数据集（server.db[i].expires）中挑选最近最少使用的数据淘汰</span><br><span class="line"></span><br><span class="line">volatile-ttl：从已设置过期时间的数据集（server.db[i].expires）中挑选将要过期的数据淘汰</span><br><span class="line"></span><br><span class="line">volatile-random：从已设置过期时间的数据集（server.db[i].expires）中任意选择数据淘汰</span><br><span class="line"></span><br><span class="line">allkeys-lru：从数据集（server.db[i].<span class="built_in">dict</span>）中挑选最近最少使用的数据淘汰</span><br><span class="line"></span><br><span class="line">allkeys-random：从数据集（server.db[i].<span class="built_in">dict</span>）中任意选择数据淘汰</span><br><span class="line"></span><br><span class="line">no-enviction（驱逐）：禁止驱逐数据</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="number">5.</span> Memcache与Redis的区别都有哪些？</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>)、存储方式</span><br><span class="line"></span><br><span class="line">Memecache把数据全部存在内存之中，断电后会挂掉，数据不能超过内存大小。</span><br><span class="line"></span><br><span class="line">Redis有部份存在硬盘上，这样能保证数据的持久性。</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>)、数据支持类型</span><br><span class="line"></span><br><span class="line">Memcache对数据类型支持相对简单。</span><br><span class="line"></span><br><span class="line">Redis有复杂的数据类型。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">3</span>），value大小</span><br><span class="line"></span><br><span class="line">redis最大可以达到1GB，而memcache只有1MB</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">6.</span> Redis 常见的性能问题都有哪些？如何解决？</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="number">1</span>).Master写内存快照，save命令调度rdbSave函数，会阻塞主线程的工作，当快照比较大时对性能影响是非常大的，会间断性暂停服务，所以Master最好不要写内存快照。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">2</span>).Master AOF持久化，如果不重写AOF文件，这个持久化方式对性能的影响是最小的，但是AOF文件会不断增大，AOF文件过大会影响Master重启的恢复速度。Master最好不要做任何持久化工作，包括内存快照和AOF日志文件，特别是不要启用内存快照做持久化,如果数据比较关键，某个Slave开启AOF备份数据，策略为每秒同步一次。</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="number">3</span>).Master调用BGREWRITEAOF重写AOF文件，AOF在重写的时候会占大量的CPU和内存资源，导致服务load过高，出现短暂服务暂停现象。</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>). Redis主从复制的性能问题，为了主从复制的速度和连接的稳定性，Slave和Master最好在同一个局域网内</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">7</span>, redis 最适合的场景</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Redis最适合所有数据<span class="keyword">in</span>-momory的场景，虽然Redis也提供持久化功能，但实际更多的是一个disk-backed的功能，跟传统意义上的持久化有比较大的差别，那么可能大家就会有疑问，似乎Redis更像一个加强版的Memcached，那么何时使用Memcached,何时使用Redis呢?</span><br><span class="line"></span><br><span class="line">       如果简单地比较Redis与Memcached的区别，大多数都会得到以下观点：</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span> 、Redis不仅仅支持简单的k/v类型的数据，同时还提供<span class="built_in">list</span>，<span class="built_in">set</span>，zset，<span class="built_in">hash</span>等数据结构的存储。</span><br><span class="line">     <span class="number">2</span> 、Redis支持数据的备份，即master-slave模式的数据备份。</span><br><span class="line">     <span class="number">3</span> 、Redis支持数据的持久化，可以将内存中的数据保持在磁盘中，重启的时候可以再次加载进行使用。</span><br><span class="line"></span><br><span class="line">（<span class="number">1</span>）、会话缓存（Session Cache）</span><br><span class="line"></span><br><span class="line">最常用的一种使用Redis的情景是会话缓存（session cache）。用Redis缓存会话比其他存储（如Memcached）的优势在于：Redis提供持久化。当维护一个不是严格要求一致性的缓存时，如果用户的购物车信息全部丢失，大部分人都会不高兴的，现在，他们还会这样吗？</span><br><span class="line"></span><br><span class="line">幸运的是，随着 Redis 这些年的改进，很容易找到怎么恰当的使用Redis来缓存会话的文档。甚至广为人知的商业平台Magento也提供Redis的插件。</span><br><span class="line"></span><br><span class="line">（<span class="number">2</span>）、全页缓存（FPC）</span><br><span class="line"></span><br><span class="line">除基本的会话token之外，Redis还提供很简便的FPC平台。回到一致性问题，即使重启了Redis实例，因为有磁盘的持久化，用户也不会看到页面加载速度的下降，这是一个极大改进，类似PHP本地FPC。</span><br><span class="line"></span><br><span class="line">再次以Magento为例，Magento提供一个插件来使用Redis作为全页缓存后端。</span><br><span class="line"></span><br><span class="line">此外，对WordPress的用户来说，Pantheon有一个非常好的插件  wp-redis，这个插件能帮助你以最快速度加载你曾浏览过的页面。</span><br><span class="line"></span><br><span class="line">（<span class="number">3</span>）、队列</span><br><span class="line"></span><br><span class="line">Reids在内存存储引擎领域的一大优点是提供 <span class="built_in">list</span> 和 <span class="built_in">set</span> 操作，这使得Redis能作为一个很好的消息队列平台来使用。Redis作为队列使用的操作，就类似于本地程序语言（如Python）对 <span class="built_in">list</span> 的 push/pop 操作。</span><br><span class="line"></span><br><span class="line">如果你快速的在Google中搜索“Redis queues”，你马上就能找到大量的开源项目，这些项目的目的就是利用Redis创建非常好的后端工具，以满足各种队列需求。例如，Celery有一个后台就是使用Redis作为broker，你可以从这里去查看。</span><br><span class="line"></span><br><span class="line">（<span class="number">4</span>），排行榜/计数器</span><br><span class="line"></span><br><span class="line">Redis在内存中对数字进行递增或递减的操作实现的非常好。集合（<span class="type">Set</span>）和有序集合（Sorted <span class="type">Set</span>）也使得我们在执行这些操作的时候变的非常简单，Redis只是正好提供了这两种数据结构。所以，我们要从排序集合中获取到排名最靠前的<span class="number">10</span>个用户–我们称之为“user_scores”，我们只需要像下面一样执行即可：</span><br><span class="line"></span><br><span class="line">当然，这是假定你是根据你用户的分数做递增的排序。如果你想返回用户及用户的分数，你需要这样执行：</span><br><span class="line"></span><br><span class="line">ZRANGE user_scores <span class="number">0</span> <span class="number">10</span> WITHSCORES</span><br><span class="line"></span><br><span class="line">Agora Games就是一个很好的例子，用Ruby实现的，它的排行榜就是使用Redis来存储数据的，你可以在这里看到。</span><br><span class="line"></span><br><span class="line">（<span class="number">5</span>）、发布/订阅</span><br><span class="line"></span><br><span class="line">最后（但肯定不是最不重要的）是Redis的发布/订阅功能。发布/订阅的使用场景确实非常多。我已看见人们在社交网络连接中使用，还可作为基于发布/订阅的脚本触发器，甚至用Redis的发布/订阅功能来建立聊天系统！（不，这是真的，你可以去核实）。</span><br><span class="line"></span><br><span class="line">Redis提供的所有特性中，我感觉这个是喜欢的人最少的一个，虽然它为用户提供如果此多功能。</span><br></pre></td></tr></table></figure><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210106203412932.png" alt="image-20210106203412932"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">redis=&#123;</span><br><span class="line">        k1:<span class="string">&#x27;123&#x27;</span>,      字符串</span><br><span class="line">        k2:[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>],   列表/数组</span><br><span class="line">        k3:&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;     集合</span><br><span class="line">        k4:&#123;name:lqz,age:<span class="number">12</span>&#125;  字典/哈希表</span><br><span class="line">        k5:&#123;(<span class="string">&#x27;lqz&#x27;</span>,<span class="number">18</span>),(<span class="string">&#x27;egon&#x27;</span>,<span class="number">33</span>)&#125;  有序集合</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二-redis的安装和使用"><a href="#二-redis的安装和使用" class="headerlink" title="二 redis的安装和使用"></a>二 redis的安装和使用</h2><p><strong>linux下安装</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget http://download.redis.io/releases/redis-3.0.6.tar.gz</span><br><span class="line">tar xzf redis-3.0.6.tar.gz</span><br><span class="line">cd redis-3.0.6</span><br><span class="line">make</span><br></pre></td></tr></table></figure><p><strong>启动服务端</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">src/redis-server</span><br></pre></td></tr></table></figure><p><strong>启动客户端</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">src/redis-cli</span><br><span class="line">redis&gt; set foo bar</span><br><span class="line">OK</span><br><span class="line">redis&gt; get foo</span><br><span class="line">&quot;bar&quot;</span><br></pre></td></tr></table></figure><p><strong>Windows下安装</strong></p><p><a href="https://www.cnblogs.com/liuqingzheng/p/9831331.html">详见：链接</a></p><h2 id="三-Python操作Redis之安装和支持存储类型"><a href="#三-Python操作Redis之安装和支持存储类型" class="headerlink" title="三 Python操作Redis之安装和支持存储类型"></a>三 Python操作Redis之安装和支持存储类型</h2><p><strong>安装redis模块</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install redis</span><br></pre></td></tr></table></figure><h2 id="四-Python操作Redis之普通连接"><a href="#四-Python操作Redis之普通连接" class="headerlink" title="四 Python操作Redis之普通连接"></a>四 Python操作Redis之普通连接</h2><p>redis-py提供两个类Redis和StrictRedis用于实现Redis的命令，StrictRedis用于实现大部分官方的命令，并使用官方的语法和命令，Redis是StrictRedis的子类，用于向后兼容旧版本的redis-py</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import redis</span><br><span class="line"></span><br><span class="line">r = redis.Redis(host=&#x27;127.0.0.1&#x27;, port=6379)</span><br><span class="line">r.set(&#x27;foo&#x27;, &#x27;Bar&#x27;)</span><br><span class="line">print(r.get(&#x27;foo&#x27;))</span><br></pre></td></tr></table></figure><h2 id="四-Python操作Redis之连接池"><a href="#四-Python操作Redis之连接池" class="headerlink" title="四 Python操作Redis之连接池"></a>四 Python操作Redis之连接池</h2><p>redis-py使用connection pool来管理对一个redis server的所有连接，避免每次建立、释放连接的开销。默认，每个Redis实例都会维护一个自己的连接池。可以直接建立一个连接池，然后作为参数Redis，这样就可以实现多个Redis实例共享一个连接池</p><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import redis</span><br><span class="line"></span><br><span class="line">pool = redis.ConnectionPool(host=&#x27;127.0.0.1&#x27;, port=6379)</span><br><span class="line">r = redis.Redis(connection_pool=pool)</span><br><span class="line">r.set(&#x27;foo&#x27;, &#x27;Bar&#x27;)</span><br><span class="line">print(r.get(&#x27;foo&#x27;))</span><br></pre></td></tr></table></figure><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><h2 id="五-操作之String操作"><a href="#五-操作之String操作" class="headerlink" title="五 操作之String操作"></a>五 操作之String操作</h2><p>String操作，redis中的String在在内存中按照一个name对应一个value来存储。如图：</p><p><a href="https://img2018.cnblogs.com/blog/1350514/201810/1350514-20181022175533950-849327963.png"><img src="https://img2018.cnblogs.com/blog/1350514/201810/1350514-20181022175533950-849327963.png" alt="img"></a></p><p><strong>set(name, value, ex=None, px=None, nx=False, xx=False)</strong></p><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">在Redis中设置值，默认，不存在则创建，存在则修改</span><br><span class="line">参数：</span><br><span class="line">     ex，过期时间（秒）</span><br><span class="line">     px，过期时间（毫秒）</span><br><span class="line">     nx，如果设置为True，则只有name不存在时，当前set操作才执行,值存在，就修改不了，执行没效果</span><br><span class="line">     xx，如果设置为True，则只有name存在时，当前set操作才执行，值存在才能修改，值不存在，不会设置新值</span><br></pre></td></tr></table></figure><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><p><strong>setnx(name, value)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">设置值，只有name不存在时，执行设置操作（添加）,如果存在，不会修改</span><br></pre></td></tr></table></figure><p><strong>setex(name, value, time)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 设置值</span><br><span class="line"># 参数：</span><br><span class="line">    # time，过期时间（数字秒 或 timedelta对象）</span><br></pre></td></tr></table></figure><p><strong>psetex(name, time_ms, value)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 设置值</span><br><span class="line"># 参数：</span><br><span class="line">    # time_ms，过期时间（数字毫秒 或 timedelta对象</span><br></pre></td></tr></table></figure><p>*<em>mset(*args, *<em>kwargs)</em></em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">批量设置值</span><br><span class="line">如：</span><br><span class="line">    mset(k1=&#x27;v1&#x27;, k2=&#x27;v2&#x27;)</span><br><span class="line">    或</span><br><span class="line">    mget(&#123;&#x27;k1&#x27;: &#x27;v1&#x27;, &#x27;k2&#x27;: &#x27;v2&#x27;&#125;)</span><br></pre></td></tr></table></figure><p><strong>get(name)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">获取值</span><br></pre></td></tr></table></figure><p><strong>mget(keys, *args)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">批量获取</span><br><span class="line">如：</span><br><span class="line">    mget(&#x27;k1&#x27;, &#x27;k2&#x27;)</span><br><span class="line">    或</span><br><span class="line">    r.mget([&#x27;k3&#x27;, &#x27;k4&#x27;])</span><br></pre></td></tr></table></figure><p><strong>getset(name, value)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">设置新值并获取原来的值</span><br></pre></td></tr></table></figure><p><strong>getrange(key, start, end)</strong></p><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 获取子序列（根据字节获取，非字符）</span><br><span class="line"># 参数：</span><br><span class="line">    # name，Redis 的 name</span><br><span class="line">    # start，起始位置（字节）</span><br><span class="line">    # end，结束位置（字节）</span><br><span class="line"># 如： &quot;刘清政&quot; ，0-3表示 &quot;刘&quot;</span><br></pre></td></tr></table></figure><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><p><strong>setrange(name, offset, value)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 修改字符串内容，从指定字符串索引开始向后替换（新值太长时，则向后添加）</span><br><span class="line"># 参数：</span><br><span class="line">    # offset，字符串的索引，字节（一个汉字三个字节）</span><br><span class="line">    # value，要设置的值</span><br></pre></td></tr></table></figure><p><strong>setbit(name, offset, value)</strong></p><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 对name对应值的二进制表示的位进行操作</span><br><span class="line"> </span><br><span class="line"># 参数：</span><br><span class="line">    # name，redis的name</span><br><span class="line">    # offset，位的索引（将值变换成二进制后再进行索引）</span><br><span class="line">    # value，值只能是 1 或 0</span><br><span class="line"> </span><br><span class="line"># 注：如果在Redis中有一个对应： n1 = &quot;foo&quot;，</span><br><span class="line">        那么字符串foo的二进制表示为：01100110 01101111 01101111</span><br><span class="line">    所以，如果执行 setbit(&#x27;n1&#x27;, 7, 1)，则就会将第7位设置为1，</span><br><span class="line">        那么最终二进制则变成 01100111 01101111 01101111，即：&quot;goo&quot;</span><br></pre></td></tr></table></figure><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><p><strong>getbit(name, offset)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 获取name对应的值的二进制表示中的某位的值 （0或1）</span><br></pre></td></tr></table></figure><p><strong>bitcount(key, start=None, end=None)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 获取name对应的值的二进制表示中 1 的个数</span><br><span class="line"># 参数：</span><br><span class="line">    # key，Redis的name</span><br><span class="line">    # start，位起始位置</span><br><span class="line">    # end，位结束位置</span><br></pre></td></tr></table></figure><p><strong>bitop(operation, dest, *keys)</strong></p><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 获取多个值，并将值做位运算，将最后的结果保存至新的name对应的值</span><br><span class="line"> </span><br><span class="line"># 参数：</span><br><span class="line">    # operation,AND（并） 、 OR（或） 、 NOT（非） 、 XOR（异或）</span><br><span class="line">    # dest, 新的Redis的name</span><br><span class="line">    # *keys,要查找的Redis的name</span><br><span class="line"> </span><br><span class="line"># 如：</span><br><span class="line">    bitop(&quot;AND&quot;, &#x27;new_name&#x27;, &#x27;n1&#x27;, &#x27;n2&#x27;, &#x27;n3&#x27;)</span><br><span class="line">    # 获取Redis中n1,n2,n3对应的值，然后讲所有的值做位运算（求并集），然后将结果保存 new_name 对应的值中</span><br></pre></td></tr></table></figure><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><p><strong>strlen(name)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 返回name对应值的字节长度（一个汉字3个字节）</span><br></pre></td></tr></table></figure><p><strong>incr(self, name, amount=1)</strong></p><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 自增 name对应的值，当name不存在时，则创建name＝amount，否则，则自增。</span><br><span class="line"> </span><br><span class="line"># 参数：</span><br><span class="line">    # name,Redis的name</span><br><span class="line">    # amount,自增数（必须是整数）</span><br><span class="line"> </span><br><span class="line"># 注：同incrby</span><br></pre></td></tr></table></figure><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><p><strong>incrbyfloat(self, name, amount=1.0)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 自增 name对应的值，当name不存在时，则创建name＝amount，否则，则自增。</span><br><span class="line"> </span><br><span class="line"># 参数：</span><br><span class="line">    # name,Redis的name</span><br><span class="line">    # amount,自增数（浮点型）</span><br></pre></td></tr></table></figure><p><strong>decr(self, name, amount=1)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 自减 name对应的值，当name不存在时，则创建name＝amount，否则，则自减。</span><br><span class="line"> </span><br><span class="line"># 参数：</span><br><span class="line">    # name,Redis的name</span><br><span class="line">    # amount,自减数（整数）</span><br></pre></td></tr></table></figure><p><strong>append(key, value)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 在redis name对应的值后面追加内容</span><br><span class="line"> </span><br><span class="line"># 参数：</span><br><span class="line">    key, redis的name</span><br><span class="line">    value, 要追加的字符串</span><br></pre></td></tr></table></figure><h2 id="六-操作之Hash操作"><a href="#六-操作之Hash操作" class="headerlink" title="六 操作之Hash操作"></a>六 操作之Hash操作</h2><p>Hash操作，redis中Hash在内存中的存储格式如下图：</p><p><a href="https://img2018.cnblogs.com/blog/1350514/201810/1350514-20181022195454464-123231904.png"><img src="https://img2018.cnblogs.com/blog/1350514/201810/1350514-20181022195454464-123231904.png" alt="img"></a></p><p><strong>hset(name, key, value)</strong></p><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># name对应的hash中设置一个键值对（不存在，则创建；否则，修改）</span><br><span class="line"> </span><br><span class="line"># 参数：</span><br><span class="line">    # name，redis的name</span><br><span class="line">    # key，name对应的hash中的key</span><br><span class="line">    # value，name对应的hash中的value</span><br><span class="line"> </span><br><span class="line"># 注：</span><br><span class="line">    # hsetnx(name, key, value),当name对应的hash中不存在当前key时则创建（相当于添加）</span><br></pre></td></tr></table></figure><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><p><strong>hmset(name, mapping)</strong></p><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 在name对应的hash中批量设置键值对</span><br><span class="line"> </span><br><span class="line"># 参数：</span><br><span class="line">    # name，redis的name</span><br><span class="line">    # mapping，字典，如：&#123;&#x27;k1&#x27;:&#x27;v1&#x27;, &#x27;k2&#x27;: &#x27;v2&#x27;&#125;</span><br><span class="line"> </span><br><span class="line"># 如：</span><br><span class="line">    # r.hmset(&#x27;xx&#x27;, &#123;&#x27;k1&#x27;:&#x27;v1&#x27;, &#x27;k2&#x27;: &#x27;v2&#x27;&#125;)</span><br></pre></td></tr></table></figure><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><p><strong>hget(name,key)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 在name对应的hash中获取根据key获取value</span><br></pre></td></tr></table></figure><p><strong>hmget(name, keys, *args)</strong></p><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 在name对应的hash中获取多个key的值</span><br><span class="line"> </span><br><span class="line"># 参数：</span><br><span class="line">    # name，reids对应的name</span><br><span class="line">    # keys，要获取key集合，如：[&#x27;k1&#x27;, &#x27;k2&#x27;, &#x27;k3&#x27;]</span><br><span class="line">    # *args，要获取的key，如：k1,k2,k3</span><br><span class="line"> </span><br><span class="line"># 如：</span><br><span class="line">    # r.mget(&#x27;xx&#x27;, [&#x27;k1&#x27;, &#x27;k2&#x27;])</span><br><span class="line">    # 或</span><br><span class="line">    # print r.hmget(&#x27;xx&#x27;, &#x27;k1&#x27;, &#x27;k2&#x27;)</span><br></pre></td></tr></table></figure><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><p><strong>hgetall(name)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 获取name对应hash的所有键值</span><br><span class="line">print(re.hgetall(&#x27;xxx&#x27;).get(b&#x27;name&#x27;))</span><br></pre></td></tr></table></figure><p><strong>hlen(name)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 获取name对应的hash中键值对的个数</span><br></pre></td></tr></table></figure><p><strong>hkeys(name)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 获取name对应的hash中所有的key的值</span><br></pre></td></tr></table></figure><p><strong>hvals(name)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 获取name对应的hash中所有的value的值</span><br></pre></td></tr></table></figure><p><strong>hexists(name, key)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 检查name对应的hash是否存在当前传入的key</span><br></pre></td></tr></table></figure><p><strong>hdel(name,*keys)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 将name对应的hash中指定key的键值对删除</span><br><span class="line">print(re.hdel(&#x27;xxx&#x27;,&#x27;sex&#x27;,&#x27;name&#x27;))</span><br></pre></td></tr></table></figure><p><strong>hincrby(name, key, amount=1)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 自增name对应的hash中的指定key的值，不存在则创建key=amount</span><br><span class="line"># 参数：</span><br><span class="line">    # name，redis中的name</span><br><span class="line">    # key， hash对应的key</span><br><span class="line">    # amount，自增数（整数）</span><br></pre></td></tr></table></figure><p><strong>hincrbyfloat(name, key, amount=1.0)</strong></p><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 自增name对应的hash中的指定key的值，不存在则创建key=amount</span><br><span class="line"> </span><br><span class="line"># 参数：</span><br><span class="line">    # name，redis中的name</span><br><span class="line">    # key， hash对应的key</span><br><span class="line">    # amount，自增数（浮点数）</span><br><span class="line"> </span><br><span class="line"># 自增name对应的hash中的指定key的值，不存在则创建key=amount</span><br></pre></td></tr></table></figure><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><p><strong>hscan(name, cursor=0, match=None, count=None)</strong></p><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 增量式迭代获取，对于数据大的数据非常有用，hscan可以实现分片的获取数据，并非一次性将数据全部获取完，从而放置内存被撑爆</span><br><span class="line"> </span><br><span class="line"># 参数：</span><br><span class="line">    # name，redis的name</span><br><span class="line">    # cursor，游标（基于游标分批取获取数据）</span><br><span class="line">    # match，匹配指定key，默认None 表示所有的key</span><br><span class="line">    # count，每次分片最少获取个数，默认None表示采用Redis的默认分片个数</span><br><span class="line"> </span><br><span class="line"># 如：</span><br><span class="line">    # 第一次：cursor1, data1 = r.hscan(&#x27;xx&#x27;, cursor=0, match=None, count=None)</span><br><span class="line">    # 第二次：cursor2, data1 = r.hscan(&#x27;xx&#x27;, cursor=cursor1, match=None, count=None)</span><br><span class="line">    # ...</span><br><span class="line">    # 直到返回值cursor的值为0时，表示数据已经通过分片获取完毕</span><br></pre></td></tr></table></figure><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><p><strong>hscan_iter(name, match=None, count=None)</strong></p><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 利用yield封装hscan创建生成器，实现分批去redis中获取数据</span><br><span class="line"> </span><br><span class="line"># 参数：</span><br><span class="line">    # match，匹配指定key，默认None 表示所有的key</span><br><span class="line">    # count，每次分片最少获取个数，默认None表示采用Redis的默认分片个数</span><br><span class="line"> </span><br><span class="line"># 如：</span><br><span class="line">    # for item in r.hscan_iter(&#x27;xx&#x27;):</span><br><span class="line">    #     print item</span><br></pre></td></tr></table></figure><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><h2 id="七-操作之List操作"><a href="#七-操作之List操作" class="headerlink" title="七 操作之List操作"></a>七 操作之List操作</h2><p>List操作，redis中的List在在内存中按照一个name对应一个List来存储。如图：</p><p><a href="https://img2018.cnblogs.com/blog/1350514/201810/1350514-20181022211822785-370585666.png"><img src="https://img2018.cnblogs.com/blog/1350514/201810/1350514-20181022211822785-370585666.png" alt="img"></a></p><p><strong>lpush(name,values)</strong></p><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 在name对应的list中添加元素，每个新的元素都添加到列表的最左边</span><br><span class="line"> </span><br><span class="line"># 如：</span><br><span class="line">    # r.lpush(&#x27;oo&#x27;, 11,22,33)</span><br><span class="line">    # 保存顺序为: 33,22,11</span><br><span class="line"> </span><br><span class="line"># 扩展：</span><br><span class="line">    # rpush(name, values) 表示从右向左操作</span><br></pre></td></tr></table></figure><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><p><strong>lpushx(name,value)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 在name对应的list中添加元素，只有name已经存在时，值添加到列表的最左边</span><br><span class="line"> </span><br><span class="line"># 更多：</span><br><span class="line">    # rpushx(name, value) 表示从右向左操作</span><br></pre></td></tr></table></figure><p><strong>llen(name)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># name对应的list元素的个数</span><br></pre></td></tr></table></figure><p><strong>linsert(name, where, refvalue, value))</strong></p><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 在name对应的列表的某一个值前或后插入一个新值</span><br><span class="line"> </span><br><span class="line"># 参数：</span><br><span class="line">    # name，redis的name</span><br><span class="line">    # where，BEFORE或AFTER(小写也可以)</span><br><span class="line">    # refvalue，标杆值，即：在它前后插入数据（如果存在多个标杆值，以找到的第一个为准）</span><br><span class="line">    # value，要插入的数据</span><br></pre></td></tr></table></figure><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><p><strong>r.lset(name, index, value)</strong></p><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 对name对应的list中的某一个索引位置重新赋值</span><br><span class="line"> </span><br><span class="line"># 参数：</span><br><span class="line">    # name，redis的name</span><br><span class="line">    # index，list的索引位置</span><br><span class="line">    # value，要设置的值</span><br></pre></td></tr></table></figure><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><p><strong>r.lrem(name, value, num)</strong></p><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 在name对应的list中删除指定的值</span><br><span class="line"> </span><br><span class="line"># 参数：</span><br><span class="line">    # name，redis的name</span><br><span class="line">    # value，要删除的值</span><br><span class="line">    # num，  num=0，删除列表中所有的指定值；</span><br><span class="line">           # num=2,从前到后，删除2个；</span><br><span class="line">           # num=-2,从后向前，删除2个</span><br></pre></td></tr></table></figure><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><p><strong>lpop(name)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 在name对应的列表的左侧获取第一个元素并在列表中移除，返回值则是第一个元素</span><br><span class="line"> </span><br><span class="line"># 更多：</span><br><span class="line">    # rpop(name) 表示从右向左操作</span><br></pre></td></tr></table></figure><p><strong>lindex(name, index)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在name对应的列表中根据索引获取列表元素</span><br></pre></td></tr></table></figure><p><strong>lrange(name, start, end)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 在name对应的列表分片获取数据</span><br><span class="line"># 参数：</span><br><span class="line">    # name，redis的name</span><br><span class="line">    # start，索引的起始位置</span><br><span class="line">    # end，索引结束位置  print(re.lrange(&#x27;aa&#x27;,0,re.llen(&#x27;aa&#x27;)))</span><br></pre></td></tr></table></figure><p><strong>ltrim(name, start, end)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 在name对应的列表中移除没有在start-end索引之间的值</span><br><span class="line"># 参数：</span><br><span class="line">    # name，redis的name</span><br><span class="line">    # start，索引的起始位置</span><br><span class="line">    # end，索引结束位置（大于列表长度，则代表不移除任何）</span><br></pre></td></tr></table></figure><p><strong>rpoplpush(src, dst)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 从一个列表取出最右边的元素，同时将其添加至另一个列表的最左边</span><br><span class="line"># 参数：</span><br><span class="line">    # src，要取数据的列表的name</span><br><span class="line">    # dst，要添加数据的列表的name</span><br></pre></td></tr></table></figure><p><strong>blpop(keys, timeout)</strong></p><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 将多个列表排列，按照从左到右去pop对应列表的元素</span><br><span class="line"> </span><br><span class="line"># 参数：</span><br><span class="line">    # keys，redis的name的集合</span><br><span class="line">    # timeout，超时时间，当元素所有列表的元素获取完之后，阻塞等待列表内有数据的时间（秒）, 0 表示永远阻塞</span><br><span class="line"> </span><br><span class="line"># 更多：</span><br><span class="line">    # r.brpop(keys, timeout)，从右向左获取数据爬虫实现简单分布式：多个url放到列表里，往里不停放URL，程序循环取值，但是只能一台机器运行取值，可以把url放到redis中，多台机器从redis中取值，爬取数据，实现简单分布式</span><br></pre></td></tr></table></figure><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><p><strong>brpoplpush(src, dst, timeout=0)</strong></p><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 从一个列表的右侧移除一个元素并将其添加到另一个列表的左侧</span><br><span class="line"> </span><br><span class="line"># 参数：</span><br><span class="line">    # src，取出并要移除元素的列表对应的name</span><br><span class="line">    # dst，要插入元素的列表对应的name</span><br><span class="line">    # timeout，当src对应的列表中没有数据时，阻塞等待其有数据的超时时间（秒），0 表示永远阻塞</span><br></pre></td></tr></table></figure><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><p><strong>自定义增量迭代</strong></p><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># 由于redis类库中没有提供对列表元素的增量迭代，如果想要循环name对应的列表的所有元素，那么就需要：</span><br><span class="line">    # 1、获取name对应的所有列表</span><br><span class="line">    # 2、循环列表</span><br><span class="line"># 但是，如果列表非常大，那么就有可能在第一步时就将程序的内容撑爆，所有有必要自定义一个增量迭代的功能：</span><br><span class="line">import redis</span><br><span class="line">conn=redis.Redis(host=&#x27;127.0.0.1&#x27;,port=6379)</span><br><span class="line"># conn.lpush(&#x27;test&#x27;,*[1,2,3,4,45,5,6,7,7,8,43,5,6,768,89,9,65,4,23,54,6757,8,68])</span><br><span class="line"># conn.flushall()</span><br><span class="line">def scan_list(name,count=2):</span><br><span class="line">    index=0</span><br><span class="line">    while True:</span><br><span class="line">        data_list=conn.lrange(name,index,count+index-1)</span><br><span class="line">        if not data_list:</span><br><span class="line">            return</span><br><span class="line">        index+=count</span><br><span class="line">        for item in data_list:</span><br><span class="line">            yield item</span><br><span class="line">print(conn.lrange(&#x27;test&#x27;,0,100))</span><br><span class="line">for item in scan_list(&#x27;test&#x27;,5):</span><br><span class="line">    print(&#x27;---&#x27;)</span><br><span class="line">    print(item)</span><br></pre></td></tr></table></figure><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><h2 id="八-操作之Set操作"><a href="#八-操作之Set操作" class="headerlink" title="八 操作之Set操作"></a>八 操作之Set操作</h2><p>Set操作，Set集合就是不允许重复的列表</p><p> <strong>sadd(name,values)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># name对应的集合中添加元素</span><br></pre></td></tr></table></figure><p><strong>scard(name)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">获取name对应的集合中元素个数</span><br></pre></td></tr></table></figure><p><strong>sdiff(keys, *args)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在第一个name对应的集合中且不在其他name对应的集合的元素集合</span><br></pre></td></tr></table></figure><p><strong>sdiffstore(dest, keys, *args)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 获取第一个name对应的集合中且不在其他name对应的集合，再将其新加入到dest对应的集合中</span><br></pre></td></tr></table></figure><p><strong>sinter(keys, *args)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 获取多一个name对应集合的并集</span><br></pre></td></tr></table></figure><p><strong>sinterstore(dest, keys, *args)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 获取多一个name对应集合的并集，再讲其加入到dest对应的集合中</span><br></pre></td></tr></table></figure><p><strong>sismember(name, value)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 检查value是否是name对应的集合的成员</span><br></pre></td></tr></table></figure><p><strong>smembers(name)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 获取name对应的集合的所有成员</span><br></pre></td></tr></table></figure><p><strong>smove(src, dst, value)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 将某个成员从一个集合中移动到另外一个集合</span><br></pre></td></tr></table></figure><p><strong>spop(name)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 从集合的右侧（尾部）移除一个成员，并将其返回</span><br></pre></td></tr></table></figure><p><strong>srandmember(name, numbers)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 从name对应的集合中随机获取 numbers 个元素</span><br></pre></td></tr></table></figure><p><strong>srem(name, values)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 在name对应的集合中删除某些值</span><br></pre></td></tr></table></figure><p><strong>srem(name, values)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 在name对应的集合中删除某些值</span><br></pre></td></tr></table></figure><p><strong>sunion(keys, *args)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 获取多一个name对应的集合的并集</span><br></pre></td></tr></table></figure><p><strong>sunionstore(dest,keys, *args)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 获取多一个name对应的集合的并集，并将结果保存到dest对应的集合中</span><br></pre></td></tr></table></figure><p><strong>sscan(name, cursor=0, match=None, count=None)</strong><br><strong>sscan_iter(name, match=None, count=None)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 同字符串的操作，用于增量迭代分批获取元素，避免内存消耗太大</span><br></pre></td></tr></table></figure><p><strong>有序集合，在集合的基础上，为每元素排序；元素的排序需要根据另外一个值来进行比较，所以，对于有序集合，每一个元素有两个值，即：值和分数，分数专门用来做排序。</strong></p><p> *<em>zadd(name, *args, *<em>kwargs)</em></em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 在name对应的有序集合中添加元素</span><br><span class="line"># 如：</span><br><span class="line">     # zadd(&#x27;zz&#x27;, &#x27;n1&#x27;, 1, &#x27;n2&#x27;, 2)</span><br><span class="line">     # 或</span><br><span class="line">     # zadd(&#x27;zz&#x27;, n1=11, n2=22)</span><br></pre></td></tr></table></figure><p><strong>zcard(name)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 获取name对应的有序集合元素的数量</span><br></pre></td></tr></table></figure><p><strong>zcount(name, min, max)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 获取name对应的有序集合中分数 在 [min,max] 之间的个数</span><br></pre></td></tr></table></figure><p><strong>zincrby(name, value, amount)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 自增name对应的有序集合的 name 对应的分数</span><br></pre></td></tr></table></figure><p><strong>r.zrange( name, start, end, desc=False, withscores=False, score_cast_func=float)</strong></p><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 按照索引范围获取name对应的有序集合的元素</span><br><span class="line"> </span><br><span class="line"># 参数：</span><br><span class="line">    # name，redis的name</span><br><span class="line">    # start，有序集合索引起始位置（非分数）</span><br><span class="line">    # end，有序集合索引结束位置（非分数）</span><br><span class="line">    # desc，排序规则，默认按照分数从小到大排序</span><br><span class="line">    # withscores，是否获取元素的分数，默认只获取元素的值</span><br><span class="line">    # score_cast_func，对分数进行数据转换的函数</span><br><span class="line"> </span><br><span class="line"># 更多：</span><br><span class="line">    # 从大到小排序</span><br><span class="line">    # zrevrange(name, start, end, withscores=False, score_cast_func=float)</span><br><span class="line"> </span><br><span class="line">    # 按照分数范围获取name对应的有序集合的元素</span><br><span class="line">    # zrangebyscore(name, min, max, start=None, num=None, withscores=False, score_cast_func=float)</span><br><span class="line">    # 从大到小排序</span><br><span class="line">    # zrevrangebyscore(name, max, min, start=None, num=None, withscores=False, score_cast_func=float)</span><br></pre></td></tr></table></figure><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><p><strong>zrank(name, value)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 获取某个值在 name对应的有序集合中的排行（从 0 开始）</span><br><span class="line"> </span><br><span class="line"># 更多：</span><br><span class="line">    # zrevrank(name, value)，从大到小排序</span><br></pre></td></tr></table></figure><p><strong>zrangebylex(name, min, max, start=None, num=None)</strong></p><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 当有序集合的所有成员都具有相同的分值时，有序集合的元素会根据成员的 值 （lexicographical ordering）来进行排序，而这个命令则可以返回给定的有序集合键 key 中， 元素的值介于 min 和 max 之间的成员</span><br><span class="line"># 对集合中的每个成员进行逐个字节的对比（byte-by-byte compare）， 并按照从低到高的顺序， 返回排序后的集合成员。 如果两个字符串有一部分内容是相同的话， 那么命令会认为较长的字符串比较短的字符串要大</span><br><span class="line"> </span><br><span class="line"># 参数：</span><br><span class="line">    # name，redis的name</span><br><span class="line">    # min，左区间（值）。 + 表示正无限； - 表示负无限； ( 表示开区间； [ 则表示闭区间</span><br><span class="line">    # min，右区间（值）</span><br><span class="line">    # start，对结果进行分片处理，索引位置</span><br><span class="line">    # num，对结果进行分片处理，索引后面的num个元素</span><br><span class="line"> </span><br><span class="line"># 如：</span><br><span class="line">    # ZADD myzset 0 aa 0 ba 0 ca 0 da 0 ea 0 fa 0 ga</span><br><span class="line">    # r.zrangebylex(&#x27;myzset&#x27;, &quot;-&quot;, &quot;[ca&quot;) 结果为：[&#x27;aa&#x27;, &#x27;ba&#x27;, &#x27;ca&#x27;]</span><br><span class="line"> </span><br><span class="line"># 更多：</span><br><span class="line">    # 从大到小排序</span><br><span class="line">    # zrevrangebylex(name, max, min, start=None, num=None)</span><br></pre></td></tr></table></figure><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><p><strong>zrem(name, values)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 删除name对应的有序集合中值是values的成员</span><br><span class="line"> </span><br><span class="line"># 如：zrem(&#x27;zz&#x27;, [&#x27;s1&#x27;, &#x27;s2&#x27;])</span><br></pre></td></tr></table></figure><p><strong>zremrangebyrank(name, min, max)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 根据排行范围删除</span><br></pre></td></tr></table></figure><p><strong>zremrangebyscore(name, min, max)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 根据分数范围删除</span><br></pre></td></tr></table></figure><p><strong>zremrangebylex(name, min, max)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 根据值返回删除</span><br></pre></td></tr></table></figure><p><strong>zscore(name, value)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 获取name对应有序集合中 value 对应的分数</span><br></pre></td></tr></table></figure><p><strong>zinterstore(dest, keys, aggregate=None)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 获取两个有序集合的交集，如果遇到相同值不同分数，则按照aggregate进行操作</span><br><span class="line"># aggregate的值为:  SUM  MIN  MAX</span><br></pre></td></tr></table></figure><p><strong>zunionstore(dest, keys, aggregate=None)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 获取两个有序集合的并集，如果遇到相同值不同分数，则按照aggregate进行操作</span><br><span class="line"># aggregate的值为:  SUM  MIN  MAX</span><br></pre></td></tr></table></figure><p><strong>zscan(name, cursor=0, match=None, count=None, score_cast_func=float)</strong><br><strong>zscan_iter(name, match=None, count=None,score_cast_func=float)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 同字符串相似，相较于字符串新增score_cast_func，用来对分数进行操作</span><br></pre></td></tr></table></figure><h2 id="九-其它操作"><a href="#九-其它操作" class="headerlink" title="九 其它操作"></a>九 其它操作</h2><p><strong>delete(*names)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 根据删除redis中的任意数据类型</span><br></pre></td></tr></table></figure><p><strong>exists(name)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 检测redis的name是否存在</span><br></pre></td></tr></table></figure><p><strong>keys(pattern=’*‘)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 根据模型获取redis的name</span><br><span class="line"> </span><br><span class="line"># 更多：</span><br><span class="line">    # KEYS * 匹配数据库中所有 key 。</span><br><span class="line">    # KEYS h?llo 匹配 hello ， hallo 和 hxllo 等。</span><br><span class="line">    # KEYS h*llo 匹配 hllo 和 heeeeello 等。</span><br><span class="line">    # KEYS h[ae]llo 匹配 hello 和 hallo ，但不匹配 hillo </span><br></pre></td></tr></table></figure><p><strong>expire(name ,time)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 为某个redis的某个name设置超时时间</span><br></pre></td></tr></table></figure><p><strong>rename(src, dst)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 对redis的name重命名为</span><br></pre></td></tr></table></figure><p><strong>move(name, db))</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 将redis的某个值移动到指定的db下</span><br></pre></td></tr></table></figure><p><strong>randomkey()</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 随机获取一个redis的name（不删除）</span><br></pre></td></tr></table></figure><p><strong>type(name)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 获取name对应值的类型</span><br></pre></td></tr></table></figure><p><strong>scan(cursor=0, match=None, count=None)</strong><br><strong>scan_iter(match=None, count=None)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 同字符串操作，用于增量迭代获取key</span><br></pre></td></tr></table></figure><h2 id="十一-管道"><a href="#十一-管道" class="headerlink" title="十一 管道"></a>十一 管道</h2><p>redis-py默认在执行每次请求都会创建（连接池申请连接）和断开（归还连接池）一次连接操作，如果想要在一次请求中指定多个命令，则可以使用pipline实现一次请求指定多个命令，并且默认情况下一次pipline 是原子性操作。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import redis</span><br><span class="line"> </span><br><span class="line">pool = redis.ConnectionPool(host=&#x27;10.211.55.4&#x27;, port=6379)</span><br><span class="line"> </span><br><span class="line">r = redis.Redis(connection_pool=pool)</span><br><span class="line"> </span><br><span class="line"># pipe = r.pipeline(transaction=False)</span><br><span class="line">pipe = r.pipeline(transaction=True)</span><br><span class="line">pipe.multi()</span><br><span class="line">pipe.set(&#x27;name&#x27;, &#x27;alex&#x27;)</span><br><span class="line">pipe.set(&#x27;role&#x27;, &#x27;sb&#x27;)</span><br><span class="line"> </span><br><span class="line">pipe.execute()</span><br></pre></td></tr></table></figure><h2 id="十二-Django中使用redis"><a href="#十二-Django中使用redis" class="headerlink" title="十二 Django中使用redis"></a>十二 Django中使用redis</h2><p><strong>方式一：</strong></p><p>utils文件夹下，建立django_redis_pool.py</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import redis</span><br><span class="line"></span><br><span class="line">POOL = redis.ConnectionPool(host=&#x27;127.0.0.1&#x27;, port=6379, max_connections=100)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>视图函数中使用：</p><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">import redis</span><br><span class="line">from django.shortcuts import render,HttpResponse</span><br><span class="line">from utils.redis_pool import POOL</span><br><span class="line"></span><br><span class="line">def index(request):</span><br><span class="line">    conn = redis.Redis(connection_pool=POOL)</span><br><span class="line">    conn.hset(&#x27;kkk&#x27;,&#x27;age&#x27;,18)</span><br><span class="line"></span><br><span class="line">    return HttpResponse(&#x27;设置成功&#x27;)</span><br><span class="line">def order(request):</span><br><span class="line">    conn = redis.Redis(connection_pool=POOL)</span><br><span class="line">    conn.hget(&#x27;kkk&#x27;,&#x27;age&#x27;)</span><br><span class="line"></span><br><span class="line">    return HttpResponse(&#x27;获取成功&#x27;)</span><br></pre></td></tr></table></figure><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><p><strong>方式二：</strong></p><p>安装django-redis模块</p><p>pip3 install django-redis</p><p>setting里配置：</p><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># redis配置</span><br><span class="line">CACHES = &#123;</span><br><span class="line">    &quot;default&quot;: &#123;</span><br><span class="line">        &quot;BACKEND&quot;: &quot;django_redis.cache.RedisCache&quot;,</span><br><span class="line">        &quot;LOCATION&quot;: &quot;redis://127.0.0.1:6379&quot;,</span><br><span class="line">        &quot;OPTIONS&quot;: &#123;</span><br><span class="line">            &quot;CLIENT_CLASS&quot;: &quot;django_redis.client.DefaultClient&quot;,</span><br><span class="line">            &quot;CONNECTION_POOL_KWARGS&quot;: &#123;&quot;max_connections&quot;: 100&#125;</span><br><span class="line">            # &quot;PASSWORD&quot;: &quot;123&quot;,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><p>视图函数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">from django_redis import get_redis_connection</span><br><span class="line">conn = get_redis_connection(&#x27;default&#x27;)</span><br><span class="line">print(conn.hgetall(&#x27;xxx&#x27;))</span><br></pre></td></tr></table></figure><h1 id="celery"><a href="#celery" class="headerlink" title="celery"></a>celery</h1><h2 id="1-celery基本使用"><a href="#1-celery基本使用" class="headerlink" title="1 celery基本使用"></a>1 celery基本使用</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> 写一个py文件 t_celery.py</span><br><span class="line">    <span class="keyword">import</span> celery</span><br><span class="line">    <span class="comment"># 消息中间件（redis）</span></span><br><span class="line">    broker=<span class="string">&#x27;redis://127.0.0.1:6379/1&#x27;</span>     <span class="comment"># 1 表示使用redis 1 这个db</span></span><br><span class="line">    <span class="comment"># 结果存储（redis）</span></span><br><span class="line">    backend=<span class="string">&#x27;redis://127.0.0.1:6379/2&#x27;</span>   <span class="comment"># 2 表示使用redis 2 这个db</span></span><br><span class="line">    <span class="comment"># 实例化得到对象，指定中间件和结果存储</span></span><br><span class="line">    app=celery.Celery(<span class="string">&#x27;test&#x27;</span>,broker=broker,backend=backend)</span><br><span class="line"><span class="meta">    @app.task</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">a,b</span>):</span></span><br><span class="line">        <span class="keyword">return</span> a+b</span><br><span class="line"><span class="meta">    @app.task</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">mul</span>(<span class="params">a,b</span>):</span></span><br><span class="line">        <span class="keyword">return</span> a*b</span><br><span class="line">    </span><br><span class="line"><span class="number">2</span> 提交任务（在其它文件中）</span><br><span class="line">    <span class="keyword">from</span> t_celery <span class="keyword">import</span> add, mul</span><br><span class="line">    res=add.delay(<span class="number">100</span>,<span class="number">4</span>) </span><br><span class="line">    <span class="built_in">print</span>(res)  <span class="comment"># id号</span></span><br><span class="line">    </span><br><span class="line"><span class="number">3</span> 启动worker</span><br><span class="line"><span class="comment"># 非windows平台：celery worker -A t_celery -l info</span></span><br><span class="line">    <span class="comment"># windows装eventlet：celery worker -A t_celery -l info -P eventlet</span></span><br><span class="line">    </span><br><span class="line"><span class="number">4</span> 查看执行结果</span><br><span class="line"><span class="keyword">from</span> t_celery <span class="keyword">import</span> app</span><br><span class="line">    <span class="keyword">from</span> celery.result <span class="keyword">import</span> AsyncResult</span><br><span class="line">    <span class="comment"># 关键字，变量不能定义为关键字</span></span><br><span class="line">    <span class="built_in">id</span> = <span class="string">&#x27;5331c70b-1b51-4a15-aa17-2fa0f7952c00&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">        res = AsyncResult(<span class="built_in">id</span>=<span class="built_in">id</span>, app=app)</span><br><span class="line">        <span class="keyword">if</span> res.successful():</span><br><span class="line">            result = res.get()</span><br><span class="line">            <span class="built_in">print</span>(result)</span><br><span class="line">        <span class="keyword">elif</span> res.failed():</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;任务失败&#x27;</span>)</span><br><span class="line">        <span class="keyword">elif</span> res.status == <span class="string">&#x27;PENDING&#x27;</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;任务等待中被执行&#x27;</span>)</span><br><span class="line">        <span class="keyword">elif</span> res.status == <span class="string">&#x27;RETRY&#x27;</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;任务异常后正在重试&#x27;</span>)</span><br><span class="line">        <span class="keyword">elif</span> res.status == <span class="string">&#x27;STARTED&#x27;</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;任务已经开始被执行&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="2-celery多任务结构"><a href="#2-celery多任务结构" class="headerlink" title="2 celery多任务结构"></a>2 celery多任务结构</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">package_celery:     <span class="comment"># 项目名</span></span><br><span class="line">    celery_task     <span class="comment"># celery包名</span></span><br><span class="line">        __init__.py </span><br><span class="line">        celery.py   <span class="comment"># celery 的app，必须叫celery</span></span><br><span class="line">        order_task.py <span class="comment"># 任务</span></span><br><span class="line">        user_task.py  <span class="comment"># 任务</span></span><br><span class="line">    result.py         <span class="comment"># 结果查询</span></span><br><span class="line">    submit_tast.py    <span class="comment"># 提交任务</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># celery.py</span></span><br><span class="line"><span class="keyword">from</span> celery <span class="keyword">import</span> Celery</span><br><span class="line"></span><br><span class="line">    broker = <span class="string">&#x27;redis://127.0.0.1:6379/1&#x27;</span></span><br><span class="line">    backend = <span class="string">&#x27;redis://127.0.0.1:6379/2&#x27;</span></span><br><span class="line">    app = Celery(<span class="string">&#x27;test&#x27;</span>, broker=broker, backend=backend, include=[<span class="string">&#x27;celery_task.order_task&#x27;</span>, <span class="string">&#x27;celery_task.user_task&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># submit_task.py</span></span><br><span class="line">    <span class="comment"># 运行worker（在package_celery目录下执行）</span></span><br><span class="line">        celery worker -A celery_task -l info -P eventlet</span><br><span class="line">    <span class="comment"># 提交任务</span></span><br><span class="line">        <span class="keyword">from</span> celery_task <span class="keyword">import</span> order_task,user_task</span><br><span class="line">        <span class="comment"># 提交一个给用户发短信的任务</span></span><br><span class="line">        res=user_task.send_sms.delay(<span class="string">&#x27;18723454566&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(res)</span><br><span class="line">        <span class="comment"># 提交一个取消订单任务</span></span><br><span class="line">        res=order_task.cancel_order.delay()</span><br><span class="line">        <span class="built_in">print</span>(res)</span><br><span class="line"><span class="comment"># result.py</span></span><br><span class="line"><span class="keyword">from</span> celery_task.celery <span class="keyword">import</span> app</span><br><span class="line">    <span class="keyword">from</span> celery.result <span class="keyword">import</span> AsyncResult</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 关键字，变量不能定义为关键字</span></span><br><span class="line">    <span class="comment"># 发短信任务： 0b46e91b-f1a6-498b-854d-944efe6e87f3</span></span><br><span class="line">    <span class="comment"># 取消订单任务：d9cd67db-ddbf-4bd9-b3ab-1b10c7ec28b1</span></span><br><span class="line">    <span class="built_in">id</span> = <span class="string">&#x27;bda2a1a4-29e6-4e2c-8a84-f94b874e37bb&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">        res = AsyncResult(<span class="built_in">id</span>=<span class="built_in">id</span>, app=app)</span><br><span class="line">        <span class="keyword">if</span> res.successful():</span><br><span class="line">            result = res.get()</span><br><span class="line">            <span class="built_in">print</span>(result)</span><br><span class="line">        <span class="keyword">elif</span> res.failed():</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;任务失败&#x27;</span>)</span><br><span class="line">        <span class="keyword">elif</span> res.status == <span class="string">&#x27;PENDING&#x27;</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;任务等待中被执行&#x27;</span>)</span><br><span class="line">        <span class="keyword">elif</span> res.status == <span class="string">&#x27;RETRY&#x27;</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;任务异常后正在重试&#x27;</span>)</span><br><span class="line">        <span class="keyword">elif</span> res.status == <span class="string">&#x27;STARTED&#x27;</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;任务已经开始被执行&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 真实应用场景</span></span><br><span class="line">-秒杀系统</span><br><span class="line">    -不能秒超，使用锁（mysql悲观锁，乐观锁），redis锁</span><br><span class="line">        -提高并发量---》把同步做成异步---》使用celery</span><br><span class="line">        -前端点击秒杀按钮，向后端发送秒杀请求---》同步操作</span><br><span class="line">            -同步操作</span><br><span class="line">                    -请求来到后端，判断数量是否够，如果够，要生成订单（mysql），订单状态是待支付状态</span><br><span class="line">                    -请求返回，告诉前端，秒杀成功</span><br><span class="line">                -异步操作</span><br><span class="line">                -请求来到后端，提交一个celery任务---》celery任务异步的执行判断数量是否够，如果够，要生成订单（mysql）</span><br><span class="line">                    -秒杀是否成功的结果还没有，直接返回了（返回任务<span class="built_in">id</span>）</span><br><span class="line">                    -前端启动一个定时任务，每隔5s，向后台发送一个查询请求，查询秒杀任务是否执行完                     成（带着任务<span class="built_in">id</span>查）</span><br><span class="line">                    -如果是未执行状态，或者执行中---》返回给前端，前端不处理，定时任务继续执行</span><br><span class="line">                    -又隔了5s，发送查询，查询到秒杀成功的结果，返回给前端，秒杀成功</span><br></pre></td></tr></table></figure><h2 id="3-高级使用之延时任务"><a href="#3-高级使用之延时任务" class="headerlink" title="3 高级使用之延时任务"></a>3 高级使用之延时任务</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> celery_task <span class="keyword">import</span> user_task</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交一个给用户发短信的任务</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># res = user_task.send_sms.delay(&#x27;18723454566&#x27;)</span></span><br><span class="line"><span class="comment"># print(res)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># # 提交一个取消订单任务</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># res = order_task.cancel_order.delay()</span></span><br><span class="line"><span class="comment"># print(res)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># celery执行延时任务</span></span><br><span class="line"><span class="comment">## 第一种方式：2021年1月7日17点3分12秒发送短信</span></span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="comment"># # eta:延迟多长时间执行，eta需要传时间对象,并且是utc时间</span></span><br><span class="line"><span class="comment"># v1 = datetime(2021, 1, 7, 22, 35, 00)</span></span><br><span class="line"><span class="comment"># print(v1)</span></span><br><span class="line"><span class="comment"># v2 = datetime.utcfromtimestamp(v1.timestamp())</span></span><br><span class="line"><span class="comment"># print(v2)</span></span><br><span class="line"><span class="comment"># res = user_task.send_sms.apply_async(args=[&#x27;15194683767&#x27;], eta=v2)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 第二种方式：隔几秒后执行</span></span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> timedelta</span><br><span class="line"></span><br><span class="line">ctime = datetime.now()</span><br><span class="line"><span class="comment"># 默认使用utc事件</span></span><br><span class="line">utc_time = datetime.utcfromtimestamp(ctime.timestamp())</span><br><span class="line">time_delay = timedelta(seconds=<span class="number">5</span>)</span><br><span class="line">task_time = utc_time + time_delay  <span class="comment"># 往后延迟10s的时间</span></span><br><span class="line"><span class="built_in">print</span>(task_time)</span><br><span class="line">res = user_task.send_sms.apply_async(args=[<span class="string">&#x27;15194683767&#x27;</span>], eta=task_time)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="4-高级使用之定时任务"><a href="#4-高级使用之定时任务" class="headerlink" title="4 高级使用之定时任务"></a>4 高级使用之定时任务</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在celery.py中配置</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 时区</span></span><br><span class="line">app.conf.timezone = <span class="string">&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line"><span class="comment"># 是否使用UTC</span></span><br><span class="line">app.conf.enable_utc = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 任务的定时配置</span></span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> timedelta</span><br><span class="line"><span class="keyword">from</span> celery.schedules <span class="keyword">import</span> crontab</span><br><span class="line"></span><br><span class="line">app.conf.beat_schedule = &#123;</span><br><span class="line">    <span class="string">&#x27;send-msg&#x27;</span>:&#123;</span><br><span class="line">        <span class="string">&#x27;task&#x27;</span>: <span class="string">&#x27;celery_task.user_task.send_sms&#x27;</span>,</span><br><span class="line">        <span class="comment"># &#x27;schedule&#x27;: timedelta(hours=24*10),</span></span><br><span class="line">        <span class="comment"># &#x27;schedule&#x27;: crontab(hour=8, day_of_week=1),  # 每周一早八点</span></span><br><span class="line">        <span class="string">&#x27;schedule&#x27;</span>: crontab(hour=<span class="number">8</span>, day_of_month=<span class="number">1</span>),  <span class="comment"># 每月一号早八点</span></span><br><span class="line">        <span class="string">&#x27;args&#x27;</span>: (<span class="string">&#x27;18964352112&#x27;</span>,),</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动beat，负责每隔3s提交一个任务</span></span><br><span class="line">celery beat -A celery_task -l info</span><br><span class="line"><span class="comment"># 启动worker</span></span><br><span class="line">celery worker -A celery_task -l info -P eventlet</span><br></pre></td></tr></table></figure><h2 id="5-django中使用celery"><a href="#5-django中使用celery" class="headerlink" title="5 django中使用celery"></a>5 django中使用celery</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> celery是独立的，跟框架没有关系</span><br><span class="line"><span class="number">2</span> django-celery第三方模块，兼容性不好，咱们不采用，咱们使用通用方式</span><br><span class="line"><span class="number">3</span> 目录</span><br><span class="line">celery_task</span><br><span class="line">    __init__.py</span><br><span class="line">        celery.py</span><br><span class="line">        home_task.py</span><br><span class="line">        order_task.py</span><br><span class="line">        user_task.py</span><br><span class="line">luffyapi</span><br></pre></td></tr></table></figure><h3 id="view-py"><a href="#view-py" class="headerlink" title="view.py"></a>view.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> celery_task <span class="keyword">import</span> user_task</span><br><span class="line"><span class="keyword">from</span> celery_task.celery <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> celery.result <span class="keyword">import</span> AsyncResult</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_celery</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="built_in">id</span> = request.GET.get(<span class="string">&#x27;id&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">id</span>:</span><br><span class="line">        res = AsyncResult(<span class="built_in">id</span>=<span class="built_in">id</span>, app=app)</span><br><span class="line">        <span class="keyword">if</span> res.successful():</span><br><span class="line">            result = res.get()</span><br><span class="line">            <span class="built_in">print</span>(result)</span><br><span class="line">            <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;执行完成了，结果是：%s&#x27;</span> % result)</span><br><span class="line"></span><br><span class="line">    res = user_task.send_sms.delay(<span class="string">&#x27;15194683767&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;任务号%s&#x27;</span> % <span class="built_in">str</span>(res))</span><br></pre></td></tr></table></figure><h3 id="urls-py"><a href="#urls-py" class="headerlink" title="urls.py"></a>urls.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">path(<span class="string">&#x27;test_celery&#x27;</span>, views.test_celery)</span><br></pre></td></tr></table></figure><h3 id="user-task-py"><a href="#user-task-py" class="headerlink" title="user_task.py"></a>user_task.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> .celery <span class="keyword">import</span> app</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.task</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_sms</span>(<span class="params">phone</span>):</span></span><br><span class="line">    <span class="keyword">import</span> time</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;%s短信发送成功&#x27;</span> % phone)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;%s短信发送成功&#x27;</span> % phone</span><br></pre></td></tr></table></figure><h2 id="6-celery应用首页轮播图接口和定时更新"><a href="#6-celery应用首页轮播图接口和定时更新" class="headerlink" title="6 celery应用首页轮播图接口和定时更新"></a>6 celery应用首页轮播图接口和定时更新</h2><h3 id="home-view-py"><a href="#home-view-py" class="headerlink" title="home/view.py"></a>home/view.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> rest_framework.viewsets <span class="keyword">import</span> GenericViewSet</span><br><span class="line"><span class="keyword">from</span> rest_framework.mixins <span class="keyword">import</span> ListModelMixin</span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> models</span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> serializer</span><br><span class="line"><span class="keyword">from</span> django.conf <span class="keyword">import</span> settings</span><br><span class="line"><span class="keyword">from</span> django.core.cache <span class="keyword">import</span> cache</span><br><span class="line"><span class="keyword">from</span> rest_framework.response <span class="keyword">import</span> Response</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BannerView</span>(<span class="params">GenericViewSet, ListModelMixin</span>):</span></span><br><span class="line">    queryset = models.Banner.objects.<span class="built_in">filter</span>(is_delete=<span class="literal">False</span>, is_show=<span class="literal">True</span>, ).order_by(<span class="string">&#x27;-orders&#x27;</span>)[:settings.BANNER]</span><br><span class="line">    serializer_class = serializer.BannerSerializer</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 改成，先从缓存中取，缓存中如果有，直接返回，没有，再去数据库查</span></span><br><span class="line">    <span class="comment"># 重写list方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list</span>(<span class="params">self, request, *args, **kwargs</span>):</span></span><br><span class="line">        banner_data = cache.get(<span class="string">&#x27;banner_data&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> banner_data:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;走了缓存&#x27;</span>)</span><br><span class="line">            <span class="keyword">return</span> Response(data=banner_data)</span><br><span class="line">        <span class="comment"># 如果缓存中没有，再走数据，查出来，放到缓存中</span></span><br><span class="line">        res = <span class="built_in">super</span>().<span class="built_in">list</span>(request, *args, **kwargs)</span><br><span class="line">        <span class="comment"># 把首页轮播图放到缓存中</span></span><br><span class="line">        cache.<span class="built_in">set</span>(<span class="string">&#x27;banner_data&#x27;</span>, res.data)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;没走缓存&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="celery-py"><a href="#celery-py" class="headerlink" title="celery.py"></a>celery.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> celery <span class="keyword">import</span> Celery</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">os.environ.setdefault(<span class="string">&quot;DJANGO_SETTINGS_MODULE&quot;</span>, <span class="string">&quot;luffyapi.settings.dev&quot;</span>)</span><br><span class="line">broker = <span class="string">&#x27;redis://127.0.0.1:6379/1&#x27;</span></span><br><span class="line">backend = <span class="string">&#x27;redis://127.0.0.1:6379/2&#x27;</span></span><br><span class="line">app = Celery(broker=broker, backend=backend,</span><br><span class="line">             include=[<span class="string">&#x27;celery_task.order_task&#x27;</span>, <span class="string">&#x27;celery_task.user_task&#x27;</span>, <span class="string">&#x27;celery_task.home_task&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 时区</span></span><br><span class="line">app.conf.timezone = <span class="string">&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line"><span class="comment"># 是否使用UTC</span></span><br><span class="line">app.conf.enable_utc = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 任务的定时配置</span></span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> timedelta</span><br><span class="line"><span class="keyword">from</span> celery.schedules <span class="keyword">import</span> crontab</span><br><span class="line"></span><br><span class="line">app.conf.beat_schedule = &#123;</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;update_banner&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;task&#x27;</span>: <span class="string">&#x27;celery_task.home_task.update_banner&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;schedule&#x27;</span>: timedelta(seconds=<span class="number">10</span>),</span><br><span class="line">        <span class="comment"># &#x27;schedule&#x27;: crontab(hour=8, day_of_week=1),  # 每周一早八点</span></span><br><span class="line">        <span class="comment"># &#x27;schedule&#x27;: crontab(hour=8, day_of_month=1),  # 每月一号早八点</span></span><br><span class="line">        <span class="string">&#x27;args&#x27;</span>: (),</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="home-task-py"><a href="#home-task-py" class="headerlink" title="home_task.py"></a>home_task.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> .celery <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> home <span class="keyword">import</span> models</span><br><span class="line"><span class="keyword">from</span> home.serializer <span class="keyword">import</span> BannerSerializer</span><br><span class="line"><span class="keyword">from</span> django.conf <span class="keyword">import</span> settings</span><br><span class="line"><span class="keyword">from</span> django.core.cache <span class="keyword">import</span> cache</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.task()</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update_banner</span>():</span></span><br><span class="line">    banners = models.Banner.objects.<span class="built_in">filter</span>(is_delete=<span class="literal">False</span>, is_show=<span class="literal">True</span>).order_by(<span class="string">&#x27;-orders&#x27;</span>)[:settings.BANNER]</span><br><span class="line">    serializer = BannerSerializer(instance=banners, many=<span class="literal">True</span>)</span><br><span class="line">    banner_data = serializer.data</span><br><span class="line">    <span class="keyword">for</span> banner <span class="keyword">in</span> banner_data:</span><br><span class="line">        banner[<span class="string">&#x27;image&#x27;</span>] = <span class="string">&#x27;http://127.0.0.1:8000%s&#x27;</span> % banner[<span class="string">&#x27;image&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    cache.<span class="built_in">set</span>(<span class="string">&#x27;banner_data&#x27;</span>, banner_data)  <span class="comment"># 放到缓存中</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="1-七牛云对象存储托管视频"><a href="#1-七牛云对象存储托管视频" class="headerlink" title="1 七牛云对象存储托管视频"></a>1 七牛云对象存储托管视频</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># from qiniu import Auth, put_file, etag</span></span><br><span class="line"><span class="comment"># import qiniu.config</span></span><br><span class="line"><span class="comment"># #需要填写你的 Access Key 和 Secret Key</span></span><br><span class="line"><span class="comment"># access_key = &#x27;-BoMxfk8dxgDq87mA-qLkgmI_AHYfF27tOFan_NJ&#x27;</span></span><br><span class="line"><span class="comment"># secret_key = &#x27;Wijh6Fg6gedtBqoqKElkxrrlySoiVWbFSfQ6I-qM&#x27;</span></span><br><span class="line"><span class="comment"># #构建鉴权对象</span></span><br><span class="line"><span class="comment"># q = Auth(access_key, secret_key)</span></span><br><span class="line"><span class="comment"># #要上传的空间</span></span><br><span class="line"><span class="comment"># bucket_name = &#x27;lqz&#x27;</span></span><br><span class="line"><span class="comment"># #上传后保存的文件名</span></span><br><span class="line"><span class="comment"># key = &#x27;lqz.mp4&#x27;</span></span><br><span class="line"><span class="comment"># #生成上传 Token，可以指定过期时间等</span></span><br><span class="line"><span class="comment"># token = q.upload_token(bucket_name, key, 3600)</span></span><br><span class="line"><span class="comment"># #要上传文件的本地路径</span></span><br><span class="line"><span class="comment"># localfile = &#x27;./6-测试功能.mp4&#x27;</span></span><br><span class="line"><span class="comment"># ret, info = put_file(token, key, localfile)</span></span><br><span class="line"><span class="comment"># print(info)</span></span><br><span class="line"><span class="comment"># assert ret[&#x27;key&#x27;] == key</span></span><br><span class="line"><span class="comment"># assert ret[&#x27;hash&#x27;] == etag(localfile)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除视频</span></span><br><span class="line"><span class="comment"># from qiniu import Auth</span></span><br><span class="line"><span class="comment"># from qiniu import BucketManager</span></span><br><span class="line"><span class="comment"># access_key = &#x27;-BoMxfk8dxgDq87mA-qLkgmI_AHYfF27tOFan_NJ&#x27;</span></span><br><span class="line"><span class="comment"># secret_key = &#x27;Wijh6Fg6gedtBqoqKElkxrrlySoiVWbFSfQ6I-qM&#x27;</span></span><br><span class="line"><span class="comment"># #初始化Auth状态</span></span><br><span class="line"><span class="comment"># q = Auth(access_key, secret_key)</span></span><br><span class="line"><span class="comment"># #初始化BucketManager</span></span><br><span class="line"><span class="comment"># bucket = BucketManager(q)</span></span><br><span class="line"><span class="comment"># #你要测试的空间， 并且这个key在你空间中存在</span></span><br><span class="line"><span class="comment"># bucket_name = &#x27;lqz&#x27;</span></span><br><span class="line"><span class="comment"># key = &#x27;lqz.mp4&#x27;</span></span><br><span class="line"><span class="comment"># #删除bucket_name 中的文件 key</span></span><br><span class="line"><span class="comment"># ret, info = bucket.delete(bucket_name, key)</span></span><br><span class="line"><span class="comment"># print(info)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># import requests</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># res=requests.get(&#x27;https://vd3.bdstatic.com/mda-kkena9xzt4hmb7b7/sc/cae_h264_clips/1605430730/mda-kkena9xzt4hmb7b7.mp4?auth_key=1610529585-0-0-14a58ce4cca097b0a5c823cc506d95da&amp;bcevod_channel=searchbox_feed&amp;pd=1&amp;pt=3&amp;abtest=8656_1&#x27;)</span></span><br><span class="line"><span class="comment"># with open(&#x27;致命诱惑.mp4&#x27;,&#x27;wb&#x27;) as f:</span></span><br><span class="line"><span class="comment">#     for line in res.iter_content():</span></span><br><span class="line"><span class="comment">#         f.write(line)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">通过该程序下载的视频和音频是分成连个文件的，没有合成，</span></span><br><span class="line"><span class="string">视频为：视频名_video.mp4</span></span><br><span class="line"><span class="string">音频为：视频名_audio.mp4</span></span><br><span class="line"><span class="string">修改url的值，换成自己想下载的页面节课</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入requests模块，模拟发送请求</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="comment"># 导入json</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="comment"># 导入re</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义请求头</span></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&#x27;Accept&#x27;</span>: <span class="string">&#x27;*/*&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Accept-Language&#x27;</span>: <span class="string">&#x27;en-US,en;q=0.5&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.84 Safari/537.36&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 正则表达式，根据条件匹配出值</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_match</span>(<span class="params">text, pattern</span>):</span></span><br><span class="line">    match = re.search(pattern, text)</span><br><span class="line">    <span class="built_in">print</span>(match.group(<span class="number">1</span>))</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line">    <span class="keyword">return</span> json.loads(match.group(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_video</span>(<span class="params">old_video_url, video_url, audio_url, video_name</span>):</span></span><br><span class="line">    headers.update(&#123;<span class="string">&quot;Referer&quot;</span>: old_video_url&#125;)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;开始下载视频：%s&quot;</span> % video_name)</span><br><span class="line">    video_content = requests.get(video_url, headers=headers)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;%s视频大小：&#x27;</span> % video_name, video_content.headers[<span class="string">&#x27;content-length&#x27;</span>])</span><br><span class="line">    audio_content = requests.get(audio_url, headers=headers)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;%s音频大小：&#x27;</span> % video_name, audio_content.headers[<span class="string">&#x27;content-length&#x27;</span>])</span><br><span class="line">    <span class="comment"># 下载视频开始</span></span><br><span class="line">    received_video = <span class="number">0</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;%s_video.mp4&#x27;</span> % video_name, <span class="string">&#x27;ab&#x27;</span>) <span class="keyword">as</span> output:</span><br><span class="line">        <span class="keyword">while</span> <span class="built_in">int</span>(video_content.headers[<span class="string">&#x27;content-length&#x27;</span>]) &gt; received_video:</span><br><span class="line">            headers[<span class="string">&#x27;Range&#x27;</span>] = <span class="string">&#x27;bytes=&#x27;</span> + <span class="built_in">str</span>(received_video) + <span class="string">&#x27;-&#x27;</span></span><br><span class="line">            response = requests.get(video_url, headers=headers)</span><br><span class="line">            output.write(response.content)</span><br><span class="line">            received_video += <span class="built_in">len</span>(response.content)</span><br><span class="line">    <span class="comment"># 下载视频结束</span></span><br><span class="line">    <span class="comment"># 下载音频开始</span></span><br><span class="line">    audio_content = requests.get(audio_url, headers=headers)</span><br><span class="line">    received_audio = <span class="number">0</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;%s_audio.mp4&#x27;</span> % video_name, <span class="string">&#x27;ab&#x27;</span>) <span class="keyword">as</span> output:</span><br><span class="line">        <span class="keyword">while</span> <span class="built_in">int</span>(audio_content.headers[<span class="string">&#x27;content-length&#x27;</span>]) &gt; received_audio:</span><br><span class="line">            <span class="comment"># 视频分片下载</span></span><br><span class="line">            headers[<span class="string">&#x27;Range&#x27;</span>] = <span class="string">&#x27;bytes=&#x27;</span> + <span class="built_in">str</span>(received_audio) + <span class="string">&#x27;-&#x27;</span></span><br><span class="line">            response = requests.get(audio_url, headers=headers)</span><br><span class="line">            output.write(response.content)</span><br><span class="line">            received_audio += <span class="built_in">len</span>(response.content)</span><br><span class="line">    <span class="comment"># 下载音频结束</span></span><br><span class="line">    <span class="keyword">return</span> video_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 换成你要爬取的视频地址</span></span><br><span class="line">    url = <span class="string">&#x27;https://www.bilibili.com/video/BV1TA411H7gQ&#x27;</span></span><br><span class="line">    <span class="comment"># 发送请求，拿回数据</span></span><br><span class="line">    res = requests.get(url, headers=headers)</span><br><span class="line">    <span class="comment"># 视频详情json</span></span><br><span class="line">    playinfo = my_match(res.text, <span class="string">&#x27;__playinfo__=(.*?)&lt;/script&gt;&lt;script&gt;&#x27;</span>)</span><br><span class="line">    <span class="comment"># 视频内容json</span></span><br><span class="line">    initial_state = my_match(res.text, <span class="string">r&#x27;__INITIAL_STATE__=(.*?);\(function\(\)&#x27;</span>)</span><br><span class="line">    <span class="comment"># 视频分多种格式，直接取分辨率最高的视频 1080p</span></span><br><span class="line">    video_url = playinfo[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;dash&#x27;</span>][<span class="string">&#x27;video&#x27;</span>][<span class="number">0</span>][<span class="string">&#x27;baseUrl&#x27;</span>]</span><br><span class="line">    <span class="comment"># 取出音频地址</span></span><br><span class="line">    audio_url = playinfo[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;dash&#x27;</span>][<span class="string">&#x27;audio&#x27;</span>][<span class="number">0</span>][<span class="string">&#x27;baseUrl&#x27;</span>]</span><br><span class="line">    video_name = initial_state[<span class="string">&#x27;videoData&#x27;</span>][<span class="string">&#x27;title&#x27;</span>]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;视频名字为：video_name&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;视频地址为：&#x27;</span>, video_url)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;音频地址为：&#x27;</span>, audio_url)</span><br><span class="line">    download_video(url, video_url, audio_url, video_name)</span><br></pre></td></tr></table></figure><h1 id="项目上线"><a href="#项目上线" class="headerlink" title="项目上线"></a>项目上线</h1><h2 id="1-购买云服务器"><a href="#1-购买云服务器" class="headerlink" title="1.购买云服务器"></a>1.购买云服务器</h2><h2 id="2-将前端项目build"><a href="#2-将前端项目build" class="headerlink" title="2. 将前端项目build"></a>2. 将前端项目build</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>npm run build</span><br><span class="line"><span class="number">2.</span>远程连接阿里云的服务器<span class="number">47.116</span><span class="number">.138</span><span class="number">.170</span></span><br><span class="line"><span class="number">3.</span>$ scp -r dist root@<span class="number">47.116</span><span class="number">.138</span><span class="number">.170</span>:~ 将项目传到服务器（在git窗口运行）</span><br><span class="line"><span class="number">3.1</span> &gt;: mv dist /home/html(在shell窗口运行)</span><br><span class="line"><span class="number">4.</span>更新系统软件包</span><br><span class="line">&gt;: yum update -y</span><br><span class="line"><span class="number">5.</span>安装软件管理包和可能使用的依赖</span><br><span class="line">&gt;: yum install openssl-devel bzip2-devel expat-devel gdbm-devel readline-devel sqlite-devel psmisc libffi-devel</span><br><span class="line">     &gt;: yum -y groupinstall <span class="string">&quot;Development tools&quot;</span></span><br><span class="line"> <span class="number">6.</span>检测是否成功：会将git作为依赖安装号</span><br><span class="line"> &gt;: git</span><br></pre></td></tr></table></figure><h2 id="3-安装Mysql"><a href="#3-安装Mysql" class="headerlink" title="3.安装Mysql"></a>3.安装Mysql</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>）前往用户根目录</span><br><span class="line">&gt;: cd ~</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>）下载mysql57</span><br><span class="line">&gt;: wget http://dev.mysql.com/get/mysql57-community-release-el7-<span class="number">10.</span>noarch.rpm</span><br><span class="line"></span><br><span class="line">也可以本地上传，这条命令要在本地终端上执行</span><br><span class="line">&gt;: scp -r C:mysql57-community-release-el7-<span class="number">10.</span>noarch.rpm root@<span class="number">39.99</span><span class="number">.192</span><span class="number">.127</span>:~</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>）安装mysql57</span><br><span class="line">&gt;: yum -y install mysql57-community-release-el7-<span class="number">10.</span>noarch.rpm</span><br><span class="line">&gt;: yum -y install mysql-community-server</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>）启动mysql57并查看启动状态</span><br><span class="line">&gt;: systemctl start mysqld.service</span><br><span class="line">&gt;: systemctl status mysqld.service</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>）查看默认密码并登录</span><br><span class="line">&gt;: grep <span class="string">&quot;password&quot;</span> /var/log/mysqld.log</span><br><span class="line">&gt;: mysql -uroot -p</span><br><span class="line"></span><br><span class="line"><span class="number">6</span>）修改密码</span><br><span class="line">&gt;: ALTER USER <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class="string">&#x27;Liuhaojie123456?&#x27;</span>;</span><br><span class="line">    ALTER USER <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;10.21.6.12&#x27;</span> IDENTIFIED BY <span class="string">&#x27;Fod123456?&#x27;</span>;</span><br><span class="line">    </span><br><span class="line"><span class="number">1</span>）管理员连接数据库</span><br><span class="line">&gt;: mysql -uroot -Liuhaojie123456?</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>）创建数据库</span><br><span class="line">&gt;: create database luffy default charset=utf8;</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>）设置权限账号密码：账号密码要与项目中配置的一致</span><br><span class="line">&gt;: grant <span class="built_in">all</span> privileges on luffy.* to <span class="string">&#x27;luffy&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified by <span class="string">&#x27;Liu199556?&#x27;</span>;</span><br><span class="line">&gt;: grant <span class="built_in">all</span> privileges on luffy.* to <span class="string">&#x27;luffy&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> identified by <span class="string">&#x27;Liu199556?&#x27;</span>; <span class="comment"># 本地127.0.0.1 可以链接</span></span><br><span class="line">&gt;: flush privileges;</span><br><span class="line">    </span><br><span class="line">grant <span class="built_in">all</span> privileges on *.* to <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;10.21.6.11&#x27;</span> identified by <span class="string">&#x27;Foda123456?&#x27;</span>; </span><br><span class="line"></span><br><span class="line"><span class="number">4</span>）退出mysql</span><br><span class="line">&gt;: quit;</span><br></pre></td></tr></table></figure><h2 id="4-安装Redis"><a href="#4-安装Redis" class="headerlink" title="4.安装Redis"></a>4.安装Redis</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>）前往用户根目录</span><br><span class="line">&gt;: cd ~</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>）下载redis-<span class="number">5.0</span><span class="number">.5</span></span><br><span class="line">&gt;: wget http://download.redis.io/releases/redis-<span class="number">5.0</span><span class="number">.5</span>.tar.gz</span><br><span class="line">&gt;: scp -r C:\Users\dell\Desktop\pkg\redis-<span class="number">5.0</span><span class="number">.5</span>.tar.gz root@<span class="number">39.99</span><span class="number">.192</span><span class="number">.127</span>:~</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>）解压安装包</span><br><span class="line">&gt;: tar -xf redis-<span class="number">5.0</span><span class="number">.5</span>.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>）进入目标文件</span><br><span class="line">&gt;: cd redis-<span class="number">5.0</span><span class="number">.5</span></span><br><span class="line"></span><br><span class="line"><span class="number">5</span>）编译环境</span><br><span class="line">&gt;: make</span><br><span class="line"></span><br><span class="line"><span class="number">6</span>）复制环境到指定路径完成安装</span><br><span class="line">&gt;: cp -r ~/redis-<span class="number">5.0</span><span class="number">.5</span> /usr/local/redis</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">9</span>）建立软连接</span><br><span class="line">&gt;: ln -s /usr/local/redis/src/redis-server /usr/<span class="built_in">bin</span>/redis-server</span><br><span class="line">&gt;: ln -s /usr/local/redis/src/redis-cli /usr/<span class="built_in">bin</span>/redis-cli</span><br><span class="line"></span><br><span class="line"><span class="number">10</span>）后台运行redis</span><br><span class="line">&gt;: cd /usr/local/redis</span><br><span class="line">&gt;: redis-server &amp;</span><br><span class="line"></span><br><span class="line">ctrl + c 停止</span><br><span class="line"></span><br><span class="line"><span class="number">11</span>）测试redis环境</span><br><span class="line">&gt;: redis-cli</span><br><span class="line">ctrl + c</span><br><span class="line"></span><br><span class="line"><span class="number">12</span>）关闭redis服务</span><br><span class="line">&gt;: pkill -f redis -<span class="number">9</span></span><br></pre></td></tr></table></figure><h2 id="5-安装python"><a href="#5-安装python" class="headerlink" title="5.安装python"></a>5.安装python</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>）前往用户根目录</span><br><span class="line">&gt;: cd ~</span><br><span class="line">&gt;: yum install zlib-devel bzip2-devel  openssl-devel ncurses-devel  <span class="comment"># 安装依赖</span></span><br><span class="line"><span class="number">2</span>）下载 或 上传 Python3<span class="number">.6</span><span class="number">.7</span></span><br><span class="line"><span class="comment"># 服务器终端</span></span><br><span class="line">&gt;: wget https://www.python.org/ftp/python/<span class="number">3.6</span><span class="number">.7</span>/Python-<span class="number">3.6</span><span class="number">.7</span>.tar.xz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 本地终端，给服务器上传</span></span><br><span class="line">&gt;: scp -r 本地Python-<span class="number">3.6</span><span class="number">.7</span>.tar.xz ssh root@<span class="number">39.99</span><span class="number">.192</span><span class="number">.127</span>:服务器路径</span><br><span class="line">&gt;: scp -r C:\Users\dell\Desktop\pkg\Python-<span class="number">3.6</span><span class="number">.7</span>.tar.xz ssh root@<span class="number">39.99</span><span class="number">.192</span><span class="number">.127</span>~</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>）解压安装包</span><br><span class="line">&gt;: tar -xf Python-<span class="number">3.6</span><span class="number">.7</span>.tar.xz</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>）进入目标文件</span><br><span class="line">&gt;: cd Python-<span class="number">3.6</span><span class="number">.7</span></span><br><span class="line"></span><br><span class="line"><span class="number">5</span>）配置安装路径：mkdir /usr/local/python3</span><br><span class="line">&gt;: ./configure --prefix=/usr/local/python3 <span class="comment"># 如果报错</span></span><br><span class="line">yum install gcc -y  <span class="comment"># 安装gcc编译工具</span></span><br><span class="line"></span><br><span class="line"><span class="number">6</span>）编译并安装</span><br><span class="line">&gt;: make &amp;&amp; sudo make install</span><br><span class="line"></span><br><span class="line"><span class="number">7</span>）建立软连接：终端命令 python3，pip3</span><br><span class="line">&gt;: ls -l /usr/<span class="built_in">bin</span> | grep python <span class="comment">#查看软连接</span></span><br><span class="line">&gt;: ln -s /usr/local/python3/<span class="built_in">bin</span>/python3<span class="number">.6</span> /usr/<span class="built_in">bin</span>/python3</span><br><span class="line">&gt;: ln -s /usr/local/python3/<span class="built_in">bin</span>/pip3<span class="number">.6</span> /usr/<span class="built_in">bin</span>/pip3</span><br><span class="line"></span><br><span class="line"><span class="number">8</span>）删除安装包与文件：</span><br><span class="line">&gt;: rm -rf Python-<span class="number">3.6</span><span class="number">.7</span></span><br><span class="line">&gt;: rm -rf Python-<span class="number">3.6</span><span class="number">.7</span>.tar.xz</span><br></pre></td></tr></table></figure><h2 id="6-安装nginx"><a href="#6-安装nginx" class="headerlink" title="6.安装nginx"></a>6.安装nginx</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>）前往用户根目录</span><br><span class="line">&gt;: cd ~</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>）下载nginx1<span class="number">.13</span><span class="number">.7</span></span><br><span class="line">&gt;: wget http://nginx.org/download/nginx-<span class="number">1.13</span><span class="number">.7</span>.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>）解压安装包</span><br><span class="line">&gt;: tar -xf nginx-<span class="number">1.13</span><span class="number">.7</span>.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>）进入目标文件</span><br><span class="line">&gt;: cd nginx-<span class="number">1.13</span><span class="number">.7</span></span><br><span class="line"></span><br><span class="line"><span class="number">5</span>）配置安装路径：/usr/local/nginx</span><br><span class="line">&gt;: yum -y install gcc pcre-devel zlib-devel openssl openssl-devel </span><br><span class="line">&gt;: ./configure --prefix=/usr/local/nginx</span><br><span class="line"></span><br><span class="line"><span class="number">6</span>）编译并安装</span><br><span class="line">&gt;: make &amp;&amp; sudo make install</span><br><span class="line"></span><br><span class="line"><span class="number">7</span>）建立软连接：终端命令 nginx</span><br><span class="line">&gt;: ln -s /usr/local/nginx/sbin/nginx /usr/<span class="built_in">bin</span>/nginx</span><br><span class="line"></span><br><span class="line"><span class="number">8</span>）删除安装包与文件：</span><br><span class="line">&gt;: cd ~</span><br><span class="line">&gt;: rm -rf nginx-<span class="number">1.13</span><span class="number">.7</span></span><br><span class="line">&gt;: rm -rf nginx-<span class="number">1.13</span><span class="number">.7</span>.tar.xz</span><br><span class="line"></span><br><span class="line"><span class="number">9</span>）测试Nginx环境，服务器运行nginx，本地访问服务器ip</span><br><span class="line">&gt;: nginx</span><br><span class="line">&gt;: 服务器绑定的域名 或 ip:<span class="number">80</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#Nginx命令</span></span><br><span class="line"><span class="number">1</span>）启动</span><br><span class="line">&gt;: nginx</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>）关闭nginx</span><br><span class="line">&gt;: nginx -s stop</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>）重启nginx</span><br><span class="line">&gt;: nginx -s reload</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>）查看端口，强行关闭</span><br><span class="line">&gt;: ps -aux|grep nginx</span><br><span class="line">&gt;: kill &lt;pid:进程编号&gt;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment"># </span></span><br><span class="line">Nginx (engine x) 是一个高性能的HTTP和反向代理web服务器</span><br><span class="line">Apache和Nginx最核心的区别在于 apache 是同步多进程模型，一个连接对应一个进程；而 nginx 是异步的，多个连接（万级别）可以对应一个进程</span><br><span class="line">    </span><br><span class="line">   http请求转发</span><br><span class="line">   反向代理服务器</span><br><span class="line">   负载均衡</span><br><span class="line">   动静分离</span><br></pre></td></tr></table></figure><h2 id="7-上线"><a href="#7-上线" class="headerlink" title="7.上线"></a>7.上线</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string"># 本地终端操作</span></span><br><span class="line"><span class="string">1）本地项目打包，前往luffycity项目目录下</span></span><br><span class="line"><span class="string">&gt;: cnpm run build</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">2）本地终端上传</span></span><br><span class="line"><span class="string">&gt;: scp -r dist root@39.99.192.127:~</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 开始服务器连接，在服务器终端操作</span></span><br><span class="line"><span class="string">3）移动并重命名</span></span><br><span class="line"><span class="string">mv ~/dist /home/html</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">4）去向Nginx配置目录，备份配置，完全更新配置：填入下方内容</span></span><br><span class="line"><span class="string">&gt;: cd /usr/local/nginx/conf</span></span><br><span class="line"><span class="string">&gt;: mv nginx.conf nginx.conf.bak</span></span><br><span class="line"><span class="string">&gt;: vim nginx.conf</span></span><br><span class="line"><span class="string">&gt;: i</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">events &#123;</span></span><br><span class="line"><span class="string">    worker_connections  1024;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">http &#123;</span></span><br><span class="line"><span class="string">    include       mime.types;</span></span><br><span class="line"><span class="string">    default_type  application/octet-stream;</span></span><br><span class="line"><span class="string">    sendfile        on;</span></span><br><span class="line"><span class="string">    server &#123;</span></span><br><span class="line"><span class="string">        listen 80;</span></span><br><span class="line"><span class="string">        server_name  127.0.0.1; # 改为自己的域名，没域名修改为127.0.0.1:80</span></span><br><span class="line"><span class="string">        charset utf-8;</span></span><br><span class="line"><span class="string">        location / &#123;</span></span><br><span class="line"><span class="string">            root /home/html; # html访问路径</span></span><br><span class="line"><span class="string">            index index.html; # html文件名称</span></span><br><span class="line"><span class="string">            try_files $uri $uri/ /index.html; # 解决单页面应用刷新404问题</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;   </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">5）退出</span></span><br><span class="line"><span class="string">&gt;: esc</span></span><br><span class="line"><span class="string">&gt;: :wq</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">6）重启nginx</span></span><br><span class="line"><span class="string">&gt;: nginx -s reload</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h1 id="后台部署"><a href="#后台部署" class="headerlink" title="后台部署"></a>后台部署</h1><h2 id="1-上线前配置"><a href="#1-上线前配置" class="headerlink" title="1 上线前配置"></a>1 上线前配置</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">pro.py：上线的配置文件，内容拷贝dev.py，前身就是settings.py</span><br><span class="line"><span class="comment"># 关闭测试环境</span></span><br><span class="line">DEBUG = <span class="literal">False</span></span><br><span class="line">ALLOWED_HOSTS = [</span><br><span class="line">    <span class="string">&#x27;39.99.192.127&#x27;</span>  <span class="comment"># 公网ip地址</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">CORS_ORIGIN_ALLOW_ALL = <span class="literal">True</span>  <span class="comment"># 允许所有跨域</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 静态文件配置：上线后还有额外配置，见下方 后台样式问题</span></span><br><span class="line">STATIC_URL = <span class="string">&#x27;/static/&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 后台http根路径</span></span><br><span class="line"><span class="comment"># BASE_URL = &#x27;http://127.0.0.1:8000&#x27;</span></span><br><span class="line">BASE_URL = <span class="string">&#x27;http://39.99.192.127:8000&#x27;</span></span><br><span class="line"><span class="comment"># 前台http根路径</span></span><br><span class="line"><span class="comment"># LUFFY_URL = &#x27;http://127.0.0.1:8080&#x27;</span></span><br><span class="line">LUFFY_URL = <span class="string">&#x27;http://39.99.192.127:80&#x27;</span></span><br><span class="line"><span class="comment"># 订单支付成功的后台异步回调接口</span></span><br><span class="line">NOTIFY_URL = BASE_URL + <span class="string">&#x27;/order/success/&#x27;</span></span><br><span class="line"><span class="comment"># 订单支付成功的前台同步回调接口</span></span><br><span class="line">RETURN_URL = LUFFY_URL + <span class="string">&#x27;/order/pay/success/&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">REST_FRAMEWORK = &#123;</span><br><span class="line">    <span class="comment"># 渲染模块</span></span><br><span class="line">    <span class="string">&#x27;DEFAULT_RENDERER_CLASSES&#x27;</span>: [</span><br><span class="line">        <span class="string">&#x27;rest_framework.renderers.JSONRenderer&#x27;</span>,</span><br><span class="line">        <span class="comment"># &#x27;rest_framework.renderers.BrowsableAPIRenderer&#x27;,</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="comment"># ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-导出项目环境"><a href="#2-导出项目环境" class="headerlink" title="2 导出项目环境"></a>2 导出项目环境</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>）进入本地项目根目录</span><br><span class="line">&gt;: cd 项目根目录</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>）本地导出项目环境</span><br><span class="line">&gt;: pip3 freeze &gt; packages.txt</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>）如果环境中有特殊的安装包，需要处理一下xadmin</span><br><span class="line">packages.txt中的</span><br><span class="line">xadmin==<span class="number">2.0</span><span class="number">.1</span></span><br><span class="line">要被替换为</span><br><span class="line">https://codeload.github.com/sshwsfc/xadmin/<span class="built_in">zip</span>/django2</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-项目提交到远程git仓库"><a href="#3-项目提交到远程git仓库" class="headerlink" title="3 项目提交到远程git仓库"></a>3 项目提交到远程git仓库</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>）去向本地项目仓库</span><br><span class="line">&gt;: cd 项目根目录</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>）本地版本库操作</span><br><span class="line">&gt;: git status</span><br><span class="line">&gt;: git add .</span><br><span class="line">&gt;: git commit -m <span class="string">&#x27;项目2.0上线&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="number">3</span>）提交到远程版本库</span><br><span class="line">&gt;: git pull origin master</span><br><span class="line">&gt;: git push origin master</span><br></pre></td></tr></table></figure><h2 id="4-线上操作（xshell）"><a href="#4-线上操作（xshell）" class="headerlink" title="4 线上操作（xshell）"></a>4 线上操作（xshell）</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>）创建存放后台项目的目录</span><br><span class="line">&gt;: mkdir /home/project</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>）进入后台项目管理目录同步git仓库中的项目</span><br><span class="line">&gt;: cd /home/project</span><br><span class="line">&gt;: git clone https://gitee.com/liuhaojie_199556/luufy.git</span><br></pre></td></tr></table></figure><h2 id="5-项目虚拟环境"><a href="#5-项目虚拟环境" class="headerlink" title="5 项目虚拟环境"></a>5 项目虚拟环境</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>）安装依赖</span><br><span class="line">&gt;: pip3 install virtualenv</span><br><span class="line">&gt;: pip3 install virtualenvwrapper</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>）建立虚拟环境软连接</span><br><span class="line">&gt;: ln -s /usr/local/python3/<span class="built_in">bin</span>/virtualenv /usr/<span class="built_in">bin</span>/virtualenv</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>）配置虚拟环境：填入下方内容</span><br><span class="line">&gt;: vim ~/.bash_profile</span><br><span class="line"></span><br><span class="line">VIRTUALENVWRAPPER_PYTHON=/usr/<span class="built_in">bin</span>/python3</span><br><span class="line">source /usr/local/python3/<span class="built_in">bin</span>/virtualenvwrapper.sh</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>）退出编辑状态</span><br><span class="line">&gt;: esc</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>）保存修改并退出</span><br><span class="line">&gt;: :wq</span><br><span class="line"></span><br><span class="line"><span class="number">6</span>）更新配置文件内容</span><br><span class="line">&gt;: source ~/.bash_profile</span><br><span class="line"></span><br><span class="line"><span class="number">7</span>）虚拟环境默认根目录：~/.virtualenvs</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># virtualenvwrapper 报错</span></span><br><span class="line"><span class="comment">###### 使用这种</span></span><br><span class="line">virtualenv  luffy   <span class="comment">#再当前路径创建</span></span><br><span class="line"><span class="comment">## 使用虚拟环境</span></span><br><span class="line">source luffy/<span class="built_in">bin</span>/activate</span><br><span class="line"><span class="comment">#  退出</span></span><br><span class="line">deactivate</span><br></pre></td></tr></table></figure><h2 id="7-云服务器转发动态请求（uwsgi-django项目）"><a href="#7-云服务器转发动态请求（uwsgi-django项目）" class="headerlink" title="7 云服务器转发动态请求（uwsgi+django项目）"></a>7 云服务器转发动态请求（uwsgi+django项目）</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1 mkdir /home/project</span></span><br><span class="line"><span class="comment"># 2 cd /home/project</span></span><br><span class="line"><span class="comment"># 3 git clone https://gitee.com/liuhaojie_199556/luufy.git</span></span><br><span class="line"><span class="comment"># 4 安装虚拟环境，创建虚拟环境，安装项目依赖</span></span><br><span class="line">    virtualenv  luffy   <span class="comment">#家目录</span></span><br><span class="line">    <span class="comment">## 使用虚拟环境</span></span><br><span class="line">    source luffy/<span class="built_in">bin</span>/activate</span><br><span class="line">    <span class="comment">#  退出</span></span><br><span class="line">    deactivate</span><br><span class="line">    </span><br><span class="line">    (luffy) [root@lhj luffyapi]<span class="comment"># pip install -r requirements.txt  （在指定的目录下）</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 如果遇到mysqlclient报错</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        #CentOS有Python、Mysql的开发工具包，安装后使用pip安装mysqlclient即可</span></span><br><span class="line"><span class="string">    yum install mysql-devel</span></span><br><span class="line"><span class="string">    yum install python-devel</span></span><br><span class="line"><span class="string">    #yum install python36-devel</span></span><br><span class="line"><span class="string">    pip install mysqlclient</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># 5 pip install uwsgi （虚拟和真实环境都需要安装）</span></span><br><span class="line"><span class="comment"># 6 进行uwsgi服务配置，内容如下</span></span><br><span class="line">vim /home/project/luffyapi/luffyapi.xml</span><br><span class="line"></span><br><span class="line">&lt;uwsgi&gt;    </span><br><span class="line">   &lt;socket&gt;<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8808</span>&lt;/socket&gt; &lt;!-- 内部端口，自定义 --&gt; </span><br><span class="line">   &lt;chdir&gt;/home/project/luffyapi/&lt;/chdir&gt; &lt;!-- 项目路径 --&gt;            </span><br><span class="line">   &lt;module&gt;luffyapi.wsgi&lt;/module&gt;  &lt;!-- luffyapi为wsgi.py所在目录名--&gt; </span><br><span class="line">   &lt;processes&gt;<span class="number">4</span>&lt;/processes&gt; &lt;!-- 进程数 --&gt;     </span><br><span class="line">   &lt;daemonize&gt;uwsgi.log&lt;/daemonize&gt; &lt;!-- 日志文件 --&gt;</span><br><span class="line">&lt;/uwsgi&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7 去向Nginx配置目录，备份配置，完全更新配置：填入下方内容</span></span><br><span class="line">&gt;: vim /usr/local/nginx/conf/nginx.conf</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line">    sendfile        on;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen <span class="number">80</span>;</span><br><span class="line">        server_name  <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>; <span class="comment"># 改为自己的域名，没域名修改为127.0.0.1:80</span></span><br><span class="line">        charset utf-<span class="number">8</span>;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root /home/html; <span class="comment"># html访问路径</span></span><br><span class="line">            index index.html; <span class="comment"># html文件名称</span></span><br><span class="line">            try_files $uri $uri/ /index.html; <span class="comment"># 解决单页面应用刷新404问题</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 新增的server</span></span><br><span class="line">    server &#123;</span><br><span class="line">        listen <span class="number">8000</span>;</span><br><span class="line">        server_name  <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>; <span class="comment"># 改为自己的域名，没域名修改为127.0.0.1:80</span></span><br><span class="line">        charset utf-<span class="number">8</span>;</span><br><span class="line">        location / &#123;</span><br><span class="line">           include uwsgi_params;</span><br><span class="line">           uwsgi_pass <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8808</span>;  <span class="comment"># 端口要和uwsgi里配置的一样</span></span><br><span class="line">           uwsgi_param UWSGI_SCRIPT luffyapi.wsgi;  <span class="comment">#wsgi.py所在的目录名+.wsgi</span></span><br><span class="line">           uwsgi_param UWSGI_CHDIR /home/project/luffyapi/; <span class="comment"># 项目路径</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动uwsgi和nginx（后端项目就可以了）</span></span><br><span class="line">    <span class="number">1</span>）启动uwsgi</span><br><span class="line">    &gt;: uwsgi -x /home/project/luffyapi/luffyapi.xml</span><br><span class="line">    <span class="number">2</span>）重启nginx</span><br><span class="line">    &gt;: nginx -s reload</span><br></pre></td></tr></table></figure><h2 id="8-后台样式：admin、rest-framework、xadmin等框架的静态样式也需要处理"><a href="#8-后台样式：admin、rest-framework、xadmin等框架的静态样式也需要处理" class="headerlink" title="8 后台样式：admin、rest_framework、xadmin等框架的静态样式也需要处理"></a>8 后台样式：admin、rest_framework、xadmin等框架的静态样式也需要处理</h2><h5 id="修改线上配置"><a href="#修改线上配置" class="headerlink" title="修改线上配置"></a>修改线上配置</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>）编辑线上配置文件</span><br><span class="line">&gt;: vim /home/project/luffyapi/settings/pro.py</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">2</span>）修改static配置，新增STATIC_ROOT、STATICFILES_DIRS</span><br><span class="line">STATIC_URL = <span class="string">&#x27;/static/&#x27;</span></span><br><span class="line">STATIC_ROOT = <span class="string">&#x27;/home/project/luffyapi/static&#x27;</span>  </span><br><span class="line">STATICFILES_DIRS = (os.path.join(BASE_DIR, <span class="string">&quot;static&quot;</span>),)</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>）退出编辑</span><br><span class="line">&gt;: esc</span><br><span class="line">&gt;: :wq</span><br></pre></td></tr></table></figure><h5 id="迁移静态样式：项目目录下"><a href="#迁移静态样式：项目目录下" class="headerlink" title="迁移静态样式：项目目录下"></a>迁移静态样式：项目目录下</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>）项目目录下没有 static 文件夹需要新建</span><br><span class="line">&gt;: mkdir /home/project/luffyapi/static</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>）完成静态文件迁移</span><br><span class="line">&gt;: python /home/project/manage_prod.py collectstatic</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="Nginx配置静态路径"><a href="#Nginx配置静态路径" class="headerlink" title="Nginx配置静态路径"></a>Nginx配置静态路径</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>）修改nginx配置</span><br><span class="line">&gt;: vim /usr/local/nginx/conf/nginx.conf</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line">    sendfile        on;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen <span class="number">80</span>;</span><br><span class="line">        server_name  <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>; <span class="comment"># 改为自己的域名，没域名修改为127.0.0.1:80</span></span><br><span class="line">        charset utf-<span class="number">8</span>;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root /home/html; <span class="comment"># html访问路径</span></span><br><span class="line">            index index.html; <span class="comment"># html文件名称</span></span><br><span class="line">            try_files $uri $uri/ /index.html; <span class="comment"># 解决单页面应用刷新404问题</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen <span class="number">8000</span>;</span><br><span class="line">        server_name  <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>; <span class="comment"># 改为自己的域名，没域名修改为127.0.0.1:80</span></span><br><span class="line">        charset utf-<span class="number">8</span>;</span><br><span class="line">        location / &#123;</span><br><span class="line">           include uwsgi_params;</span><br><span class="line">           uwsgi_pass <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8808</span>;  <span class="comment"># 端口要和uwsgi里配置的一样</span></span><br><span class="line">           uwsgi_param UWSGI_SCRIPT luffyapi.wsgi;  <span class="comment">#wsgi.py所在的目录名+.wsgi</span></span><br><span class="line">           uwsgi_param UWSGI_CHDIR /home/project/luffyapi/; <span class="comment"># 项目路径</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"># 新增的配置静态文件</span></span><br><span class="line">        location /static &#123;</span><br><span class="line">            alias /home/project/luffyapi/static;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>）退出</span><br><span class="line">&gt;: esc</span><br><span class="line">&gt;: :wq</span><br></pre></td></tr></table></figure><h5 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>）关闭 uwsgi，重新启动 uwsgi</span><br><span class="line">&gt;: pkill -f uwsgi -<span class="number">9</span></span><br><span class="line">&gt;: uwsgi -x /home/project/luffyapi/luffyapi.xml</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>）关闭 nginx，重新启动 nginx</span><br><span class="line">&gt;: nginx -s stop</span><br><span class="line">&gt;: nginx</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://cloud.tencent.com/document/product/<span class="number">382</span>/<span class="number">11672</span></span><br></pre></td></tr></table></figure><h1 id="redis高级"><a href="#redis高级" class="headerlink" title="redis高级"></a>redis高级</h1><h2 id="1-redis单机安装"><a href="#1-redis单机安装" class="headerlink" title="1 redis单机安装"></a>1 redis单机安装</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">mkdir soft</span><br><span class="line">cd soft/</span><br><span class="line"><span class="comment">#下载</span></span><br><span class="line">wget http://download.redis.io/releases/redis-<span class="number">5.0</span><span class="number">.7</span>.tar.gz</span><br><span class="line"><span class="comment">#解压</span></span><br><span class="line">tar -xzf redis-<span class="number">5.0</span><span class="number">.7</span>.tar.gz</span><br><span class="line"><span class="comment">#建立软连接</span></span><br><span class="line">ln -s redis-<span class="number">5.0</span><span class="number">.7</span> redis</span><br><span class="line">cd redis</span><br><span class="line">make&amp;&amp;make install</span><br><span class="line"><span class="comment">#在src目录下可以看到</span></span><br><span class="line"><span class="comment">#redis-server---&gt;redis服务器</span></span><br><span class="line"><span class="comment">#redis-cli---》redis命令行客户端</span></span><br><span class="line"><span class="comment">#redis-benchmark---》redis性能测试工具</span></span><br><span class="line"><span class="comment">#redis-check-aof---&gt;aof文件修复工具</span></span><br><span class="line"><span class="comment">#redis-check-dump---》rdb文件检查工具</span></span><br><span class="line"><span class="comment">#redis-sentinel---》sentinel服务器，哨兵</span></span><br><span class="line"><span class="comment">#redis作者对windows维护不好，window自己有安装包</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在任意路径执行redis-server 都能运行起redis服务</span></span><br><span class="line">-把可执行文件加入环境变量</span><br><span class="line">    -用户变量（用户家路径下：.bash_profile）</span><br><span class="line">         vim ~/.bash_profile </span><br><span class="line">export PATH=$PATH:/home/soft/redis/src</span><br><span class="line">source ~/.bash_profile</span><br><span class="line">        -系统变量</span><br><span class="line">    -把可执行文件在usr路径下建立软链接</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment"># 启动服务</span></span><br><span class="line">redis-server</span><br><span class="line"><span class="comment"># 动态参数启动</span></span><br><span class="line">redis-server --port <span class="number">6379</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 重点：通过配置文件启动</span></span><br><span class="line"><span class="comment">#配置文件启动（6379对应手机按键MERZ，意大利女歌手Alessia Merz的名字）</span></span><br><span class="line">    <span class="comment">#####通过redis-cli连接，输入config get * 可以获得默认配置</span></span><br><span class="line">    <span class="comment">#在redis目录下创建config目录，copy一个redis.conf文件</span></span><br><span class="line">    daemonize yes <span class="comment">#是否是守护进程启动（no|yes）</span></span><br><span class="line">    port <span class="number">6379</span></span><br><span class="line">    logfile <span class="string">&quot;6379.log&quot;</span>  <span class="comment">#redis系统日志</span></span><br><span class="line">    <span class="built_in">dir</span> <span class="string">&quot;/soft/redis/data&quot;</span> <span class="comment">#redis工作目录</span></span><br><span class="line">    bind <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">    protected-mode no</span><br><span class="line">    requirepass <span class="number">123456</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 客户端连接</span></span><br><span class="line">redis-cli -h ip -p port</span><br><span class="line">redis-cli</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 带密码的</span></span><br><span class="line">    <span class="comment"># 方式一</span></span><br><span class="line">    redis-cli -h <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>  -p <span class="number">6370</span> -a <span class="number">123456</span></span><br><span class="line">    <span class="comment"># 方式二</span></span><br><span class="line">    redis-cli -h <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>  -p <span class="number">6370</span></span><br><span class="line">    先登陆，再通过auth输入密码</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 注意</span></span><br><span class="line">CONFIG GET *   一百多对建值</span><br><span class="line">CONFIG SET maxmemory 128M  <span class="comment"># 设置最大使用的内存</span></span><br><span class="line">CONFIG <span class="built_in">set</span> requirepass <span class="number">123456</span>  <span class="comment"># 设置密码</span></span><br><span class="line">CONFIG REWRITE  <span class="comment"># 保存到配置文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">####卸载redis</span></span><br><span class="line"><span class="comment"># 1、查看redis进程；</span></span><br><span class="line">ps aux|grep redis</span><br><span class="line"><span class="comment"># 2、kill掉进程；</span></span><br><span class="line">kill 进程<span class="built_in">id</span></span><br><span class="line"><span class="comment"># 3、进入到redis目录</span></span><br><span class="line">cd /usr/local/</span><br><span class="line"><span class="comment"># 4、删除redis对应的文件</span></span><br><span class="line">rm -f /usr/local/redis/<span class="built_in">bin</span>/redis*</span><br><span class="line">rm -f /usr/local/<span class="built_in">bin</span>/redis*</span><br><span class="line"><span class="comment"># 5、删除对应的文件</span></span><br><span class="line">rm -rf redis</span><br></pre></td></tr></table></figure><h2 id="2-数据结构"><a href="#2-数据结构" class="headerlink" title="2 数据结构"></a>2 数据结构</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">string</span><br><span class="line"><span class="built_in">hash</span></span><br><span class="line"><span class="built_in">list</span></span><br><span class="line"><span class="built_in">set</span></span><br><span class="line">zset</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-1-字符串类型"><a href="#2-1-字符串类型" class="headerlink" title="2.1 字符串类型"></a>2.1 字符串类型</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">###1---基本使用get，set，del</span></span><br><span class="line">get name       <span class="comment">#时间复杂度 o(1)</span></span><br><span class="line"><span class="built_in">set</span> name lqz   <span class="comment">#时间复杂度 o(1)</span></span><br><span class="line"><span class="keyword">del</span> name       <span class="comment">#时间复杂度 o(1)</span></span><br><span class="line"><span class="comment">###2---其他使用incr,decr,incrby,decrby</span></span><br><span class="line">incr age  <span class="comment">#对age这个key的value值自增1</span></span><br><span class="line">decr age  <span class="comment">#对age这个key的value值自减1</span></span><br><span class="line">incrby age <span class="number">10</span>  <span class="comment">#对age这个key的value值增加10</span></span><br><span class="line">decrby age <span class="number">10</span>  <span class="comment">#对age这个key的value值减10</span></span><br><span class="line"><span class="comment">#统计网站访问量（单线程无竞争，天然适合做计数器）</span></span><br><span class="line"><span class="comment">#缓存mysql的信息（json格式）</span></span><br><span class="line"><span class="comment">#分布式id生成（多个机器同时并发着生成，不会重复）</span></span><br><span class="line"><span class="comment">###3---set，setnx，setxx</span></span><br><span class="line"><span class="built_in">set</span> name lqz  <span class="comment">#不管key是否存在，都设置 </span></span><br><span class="line">setnx name lqz <span class="comment">#key不存在时才设置（新增操作）</span></span><br><span class="line"><span class="built_in">set</span> name lqz nx <span class="comment">#同上</span></span><br><span class="line"><span class="built_in">set</span> name lqz xx <span class="comment">#key存在，才设置（更新操作）</span></span><br><span class="line"><span class="comment">###4---mget mset</span></span><br><span class="line">mget key1 key2 key3     <span class="comment">#批量获取key1，key2.。。时间复杂度o(n)</span></span><br><span class="line">mset key1 value1 key2 value2 key3 value3    <span class="comment">#批量设置时间复杂度o(n)</span></span><br><span class="line"><span class="comment">#n次get和mget的区别</span></span><br><span class="line"><span class="comment">#n次get时间=n次命令时间+n次网络时间</span></span><br><span class="line"><span class="comment">#mget时间=1次网络时间+n次命令时间</span></span><br><span class="line"><span class="comment">###5---其他：getset，append，strlen</span></span><br><span class="line">getset name lqznb <span class="comment">#设置新值并返回旧值 时间复杂度o(1)</span></span><br><span class="line">append name <span class="number">666</span> <span class="comment">#将value追加到旧的value 时间复杂度o(1)</span></span><br><span class="line">strlen name  <span class="comment">#计算字符串长度(注意中文)  时间复杂度o(1)</span></span><br><span class="line"><span class="comment">###6---其他：incrybyfloat,getrange,setrange</span></span><br><span class="line">increbyfloat age <span class="number">3.5</span>  <span class="comment">#为age自增3.5，传负值表示自减 时间复杂度o(1)</span></span><br><span class="line">getrange key start end <span class="comment">#获取字符串制定下标所有的值  时间复杂度o(1)</span></span><br><span class="line">setrange key index value <span class="comment">#从指定index开始设置value值  时间复杂度o(1)</span></span><br></pre></td></tr></table></figure><h3 id="2-2-哈希类型"><a href="#2-2-哈希类型" class="headerlink" title="2.2 哈希类型"></a>2.2 哈希类型</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">###1---hget,hset,hdel</span></span><br><span class="line">hget key field  <span class="comment">#获取hash key对应的field的value 时间复杂度为 o(1)</span></span><br><span class="line">hset key field value <span class="comment">#设置hash key对应的field的value值 时间复杂度为 o(1)</span></span><br><span class="line">hdel key field <span class="comment">#删除hash key对应的field的值 时间复杂度为 o(1)</span></span><br><span class="line"><span class="comment">#测试</span></span><br><span class="line">hset user:<span class="number">1</span>:info age <span class="number">23</span></span><br><span class="line">hget user:<span class="number">1</span>:info ag</span><br><span class="line">hset user:<span class="number">1</span>:info name lqz</span><br><span class="line">hgetall user:<span class="number">1</span>:info</span><br><span class="line">hdel user:<span class="number">1</span>:info age</span><br><span class="line"><span class="comment">###2---hexists,hlen</span></span><br><span class="line">hexists key field  <span class="comment">#判断hash key 是否存在field 时间复杂度为 o(1)</span></span><br><span class="line">hlen key   <span class="comment">#获取hash key field的数量  时间复杂度为 o(1)</span></span><br><span class="line">hexists user:<span class="number">1</span>:info name</span><br><span class="line">hlen user:<span class="number">1</span>:info  <span class="comment">#返回数量</span></span><br><span class="line">        </span><br><span class="line"><span class="comment">###3---hmget，hmset</span></span><br><span class="line">hmget key field1 field2 ...fieldN  <span class="comment">#批量获取hash key 的一批field对应的值  时间复杂度是o(n)</span></span><br><span class="line">hmset key field1 value1 field2 value2  <span class="comment">#批量设置hash key的一批field value 时间复杂度是o(n)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">###4--hgetall,hvals，hkeys</span></span><br><span class="line">hgetall key  <span class="comment">#返回hash key 对应的所有field和value  时间复杂度是o(n)</span></span><br><span class="line">hvals key   <span class="comment">#返回hash key 对应的所有field的value  时间复杂度是o(n)</span></span><br><span class="line">hkeys key   <span class="comment">#返回hash key对应的所有field  时间复杂度是o(n)</span></span><br><span class="line"><span class="comment">###小心使用hgetall</span></span><br><span class="line"><span class="comment">##1 计算网站每个用户主页的访问量</span></span><br><span class="line">hincrby user:<span class="number">1</span>:info pageview count</span><br><span class="line"><span class="comment">##2 缓存mysql的信息，直接设置hash格式</span></span><br></pre></td></tr></table></figure><h3 id="2-3-列表类型"><a href="#2-3-列表类型" class="headerlink" title="2.3 列表类型"></a>2.3 列表类型</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> 插入操作</span><br><span class="line"><span class="comment">#rpush 从右侧插入</span></span><br><span class="line">rpush key value1 value2 ...valueN  <span class="comment">#时间复杂度为o(1~n)</span></span><br><span class="line"><span class="comment">#lpush 从左侧插入</span></span><br><span class="line"><span class="comment">#linsert</span></span><br><span class="line">linsert key before|after value newValue   <span class="comment">#从元素value的前或后插入newValue 时间复杂度o(n) ，需要遍历列表</span></span><br><span class="line">linsert listkey before b java</span><br><span class="line">linsert listkey after b php</span><br><span class="line"></span><br><span class="line"><span class="number">2</span> 删除操作</span><br><span class="line">lpop key <span class="comment">#从列表左侧弹出一个item 时间复杂度o(1)</span></span><br><span class="line"></span><br><span class="line">rpop key <span class="comment">#从列表右侧弹出一个item 时间复杂度o(1)</span></span><br><span class="line"></span><br><span class="line">lrem key count value</span><br><span class="line"><span class="comment">#根据count值，从列表中删除所有value相同的项 时间复杂度o(n)</span></span><br><span class="line"><span class="number">1</span> count&gt;<span class="number">0</span> 从左到右，删除最多count个value相等的项</span><br><span class="line"><span class="number">2</span> count&lt;<span class="number">0</span> 从右向左，删除最多 Math.<span class="built_in">abs</span>(count)个value相等的项</span><br><span class="line"><span class="number">3</span> count=<span class="number">0</span> 删除所有value相等的项</span><br><span class="line">lrem listkey <span class="number">0</span> a <span class="comment">#删除列表中所有值a</span></span><br><span class="line">lrem listkey -<span class="number">1</span> c <span class="comment">#从右侧删除1个c</span></span><br><span class="line"></span><br><span class="line">ltrim key start end <span class="comment">#按照索引范围修剪列表 o(n)</span></span><br><span class="line">ltrim listkey <span class="number">1</span> <span class="number">4</span> <span class="comment">#只保留下表1--4的元素</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">3</span> 查询操作</span><br><span class="line">lrange key start end <span class="comment">#包含end获取列表指定索引范围所有item  o(n)</span></span><br><span class="line">lrange listkey <span class="number">0</span> <span class="number">2</span></span><br><span class="line">lrange listkey <span class="number">1</span> -<span class="number">1</span> <span class="comment">#获取第一个位置到倒数第一个位置的元素</span></span><br><span class="line"></span><br><span class="line">lindex key index <span class="comment">#获取列表指定索引的item  o(n)</span></span><br><span class="line">lindex listkey <span class="number">0</span></span><br><span class="line">lindex listkey -<span class="number">1</span></span><br><span class="line"></span><br><span class="line">llen key <span class="comment">#获取列表长度</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">4</span> 修改操作</span><br><span class="line"><span class="built_in">set</span> key index newValue <span class="comment">#设置列表指定索引值为newValue o(n)</span></span><br><span class="line">lset listkey <span class="number">2</span> ppp <span class="comment">#把第二个位置设为ppp</span></span><br><span class="line"></span><br><span class="line"><span class="number">5</span> 其它操作</span><br><span class="line">blpop key timeout <span class="comment">#lpop的阻塞版，timeout是阻塞超时时间，timeout=0为拥有不阻塞 o(1)</span></span><br><span class="line">brpop key timeout <span class="comment">#rpop的阻塞版，timeout是阻塞超时时间，timeout=0为拥有不阻塞 o(1)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#要实现栈的功能</span></span><br><span class="line">lpush+lpop</span><br><span class="line"><span class="comment">#实现队列功能</span></span><br><span class="line">lpush+rpop</span><br><span class="line"><span class="comment">#固定大小的列表</span></span><br><span class="line">lpush+ltrim</span><br><span class="line"><span class="comment">#消息队列</span></span><br><span class="line">lpush+brpop</span><br></pre></td></tr></table></figure><h3 id="2-4-集合类型"><a href="#2-4-集合类型" class="headerlink" title="2.4 集合类型"></a>2.4 集合类型</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> 特点：无序，无重复，集合间操作（交叉并补）</span><br><span class="line"><span class="number">2</span> API：</span><br><span class="line">sadd key element <span class="comment">#向集合key添加element（如果element存在，添加失败） o(1)</span></span><br><span class="line"></span><br><span class="line">srem key element <span class="comment">#从集合中的element移除掉 o(1)</span></span><br><span class="line"></span><br><span class="line">scard key <span class="comment">#计算集合大小</span></span><br><span class="line"></span><br><span class="line">sismember key element <span class="comment">#判断element是否在集合中</span></span><br><span class="line"></span><br><span class="line">srandmember key count <span class="comment">#从集合中随机取出count个元素，不会破坏集合中的元素</span></span><br><span class="line"></span><br><span class="line">spop key <span class="comment">#从集合中随机弹出一个元素</span></span><br><span class="line"></span><br><span class="line">smembers key <span class="comment">#获取集合中所有元素 ，无序，小心使用，会阻塞住 </span></span><br><span class="line"></span><br><span class="line">sdiff user:<span class="number">1</span>:follow user:<span class="number">2</span>:follow  <span class="comment">#计算user:1:follow和user:2:follow的差集</span></span><br><span class="line"></span><br><span class="line">sinter user:<span class="number">1</span>:follow user:<span class="number">2</span>:follow  <span class="comment">#计算user:1:follow和user:2:follow的交集</span></span><br><span class="line">          </span><br><span class="line">sunion user:<span class="number">1</span>:follow user:<span class="number">2</span>:follow  <span class="comment">#计算user:1:follow和user:2:follow的并集</span></span><br><span class="line">                </span><br><span class="line">sdiff|sinter|suion + store destkey... <span class="comment">#将差集，交集，并集结果保存在destkey集合中</span></span><br><span class="line"><span class="number">3</span> 实战</span><br><span class="line">抽奖系统 ：通过spop来弹出用户的<span class="built_in">id</span>，活动取消，直接删除</span><br><span class="line"></span><br><span class="line">点赞，点踩，喜欢等，用户如果点了赞，就把用户<span class="built_in">id</span>放到该条记录的集合中</span><br><span class="line"></span><br><span class="line">标签：给用户/文章等添加标签，sadd user:<span class="number">1</span>:tags 标签<span class="number">1</span> 标签<span class="number">2</span> 标签<span class="number">3</span></span><br><span class="line"></span><br><span class="line">给标签添加用户，关注该标签的人有哪些</span><br><span class="line"></span><br><span class="line">共同好友：集合间的操作</span><br></pre></td></tr></table></figure><h3 id="2-5-有序集合类型"><a href="#2-5-有序集合类型" class="headerlink" title="2.5 有序集合类型"></a>2.5 有序集合类型</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> 特点</span><br><span class="line"><span class="comment">#有一个分值字段，来保证顺序</span></span><br><span class="line">key                  score                value</span><br><span class="line">user:ranking           <span class="number">1</span>                   lqz</span><br><span class="line">user:ranking           <span class="number">99</span>                  lqz2</span><br><span class="line">user:ranking           <span class="number">88</span>                  lqz3</span><br><span class="line"><span class="comment">#集合有序集合</span></span><br><span class="line">集合：无重复元素，无序，element</span><br><span class="line">有序集合：无重复元素，有序，element+score</span><br><span class="line"><span class="comment">#列表和有序集合</span></span><br><span class="line">列表：可以重复，有序，element</span><br><span class="line">有序集合：无重复元素，有序，element+score</span><br><span class="line"></span><br><span class="line"><span class="number">2</span> Api</span><br><span class="line">zadd key score element <span class="comment">#score可以重复，可以多个同时添加，element不能重复 o(logN) </span></span><br><span class="line"></span><br><span class="line">zrem key element <span class="comment">#删除元素，可以多个同时删除 o(1)</span></span><br><span class="line"></span><br><span class="line">zscore key element <span class="comment">#获取元素的分数 o(1)</span></span><br><span class="line"></span><br><span class="line">zincrby key increScore element <span class="comment">#增加或减少元素的分数  o(1)</span></span><br><span class="line"></span><br><span class="line">zcard key <span class="comment">#返回元素总个数 o(1)</span></span><br><span class="line"></span><br><span class="line">zrank key element <span class="comment">#返回element元素的排名（从小到大排）</span></span><br><span class="line"></span><br><span class="line">zrange key <span class="number">0</span> -<span class="number">1</span> <span class="comment">#返回排名，不带分数  o(log(n)+m) n是元素个数，m是要获取的值</span></span><br><span class="line">zrange player:rank <span class="number">0</span> -<span class="number">1</span> withscores <span class="comment">#返回排名，带分数</span></span><br><span class="line"></span><br><span class="line">zrangebyscore key minScore maxScore <span class="comment">#返回指定分数范围内的升序元素 o(log(n)+m) n是元素个数，m是要获取的值</span></span><br><span class="line">zrangebyscore user:<span class="number">1</span>:ranking <span class="number">90</span> <span class="number">210</span> withscores <span class="comment">#获取90分到210分的元素</span></span><br><span class="line"></span><br><span class="line">zcount key minScore maxScore <span class="comment">#返回有序集合内在指定分数范围内的个数 o(log(n)+m)</span></span><br><span class="line"></span><br><span class="line">zremrangebyrank key start end <span class="comment">#删除指定排名内的升序元素 o(log(n)+m)</span></span><br><span class="line">zremrangebyrank user:<span class="number">1</span>:rangking <span class="number">1</span> <span class="number">2</span> <span class="comment">#删除升序排名中1到2的元素</span></span><br><span class="line">        </span><br><span class="line">zremrangebyscore key minScore maxScore <span class="comment">#删除指定分数内的升序元素 o(log(n)+m)</span></span><br><span class="line">zremrangebyscore user:<span class="number">1</span>:ranking <span class="number">90</span> <span class="number">210</span> <span class="comment">#删除分数90到210之间的元素</span></span><br><span class="line">        </span><br><span class="line"><span class="number">3</span> 实战</span><br><span class="line">排行榜：音乐排行榜，销售榜，关注榜，游戏排行榜</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">4</span> 其它操作</span><br><span class="line">zrevrank <span class="comment">#从高到低排序</span></span><br><span class="line">zrevrange <span class="comment">#从高到低排序取一定范围</span></span><br><span class="line">zrevrangebyscore <span class="comment">#返回指定分数范围内的降序元素</span></span><br><span class="line">zinterstore <span class="comment">#对两个有序集合交集</span></span><br><span class="line">zunionstore <span class="comment">#对两个有序集合求并集</span></span><br></pre></td></tr></table></figure><h2 id="3-单线程架构"><a href="#3-单线程架构" class="headerlink" title="3 单线程架构"></a>3 单线程架构</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.3</span><span class="number">.1</span> 单线程架构，</span><br><span class="line">一个瞬间只会执行一条命令</span><br><span class="line"></span><br><span class="line"><span class="number">1.3</span><span class="number">.2</span> 单线程为什么这么快</span><br><span class="line"><span class="number">1</span> 纯内存</span><br><span class="line"></span><br><span class="line"><span class="number">2</span> 非阻塞IO （epoll），自身实现了事件处理，不在网络io上浪费过多时间</span><br><span class="line"></span><br><span class="line"><span class="number">3</span> 避免线程间切换和竞态消耗</span><br><span class="line"></span><br><span class="line"><span class="number">1.3</span><span class="number">.3</span> 注意</span><br><span class="line"><span class="number">1</span> 一次只运行一条命令</span><br><span class="line"></span><br><span class="line"><span class="number">2</span> 拒绝长慢命令</span><br><span class="line"></span><br><span class="line">​ -keys，flushall,flushdb,慢的lua脚本，mutil/<span class="built_in">exec</span>，operate，big value</span><br><span class="line"></span><br><span class="line"><span class="number">3</span> 其实不是单线程（在做持久化是另外的线程）</span><br><span class="line"></span><br><span class="line">​ -fysnc file descriptor</span><br><span class="line"></span><br><span class="line">​ -close file descriptor</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="4-同步异步阻塞非阻塞"><a href="#4-同步异步阻塞非阻塞" class="headerlink" title="4 同步异步阻塞非阻塞"></a>4 同步异步阻塞非阻塞</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">同步/异步关注的是消息通信机制 (synchronous communication/ asynchronous communication) 。</span><br><span class="line">所谓同步，就是在发出一个调用时，在没有得到结果之前， 该调用就不返回。</span><br><span class="line">异步则是相反，调用在发出之后，这个调用就直接返回了，所以没有返回结果</span><br><span class="line"></span><br><span class="line">阻塞非阻塞关注的是程序在等待调用结果（消息，返回值）时的状态.</span><br><span class="line"></span><br><span class="line">阻塞调用是指调用结果返回之前，当前线程会被挂起。调用线程只有在得到结果之后才会返回。非阻塞调用指在不能立刻得到结果之前，该调用不会阻塞当前线程。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">三、悲观锁（悲观并发控制）</span><br><span class="line">悲观锁（Pessimistic Concurrency Control，缩写”PCC”），顾名思义，就是很悲观，每次去拿数据的时候都认为别人会修改，所以每次在拿数据的时候都会上锁，这样别人想拿这个数据就会block直到它拿到锁。（共享资源每次只给一个线程使用，其它线程阻塞，用完后再把资源转让给其它线程，和Python中GIL锁一样）</span><br><span class="line">悲观锁：假定会发生并发冲突，屏蔽一切可能违反数据完整性的操作。</span><br><span class="line">悲观锁：主要用于数据争用激烈的环境，以及发生并发冲突时使用锁保护数据的成本要低于回滚事务的成本的环境中。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">四、乐观锁（乐观并发控制）</span><br><span class="line">乐观锁（Optimistic Concurrency Control，缩写”OCC”），顾名思义，就是很乐观，每次去拿数据的时候都认为别人不会修改，所以不会上锁，但是在提交更新的时候会判断一下在此期间别人有没有去更新这个数据。乐观锁适用于读多写少的应用场景，这样可以提高吞吐量。</span><br><span class="line">乐观锁：假设不会发生并发冲突，只在提交操作时检查是否违反数据完整性。</span><br><span class="line">乐观锁：多数用于数据争用不大、冲突较少的环境中，这种环境中，偶尔回滚事务的成本会低于读取数据时锁定数据的成本，因此可以获得比其他并发控制方法更高的吞吐量。</span><br><span class="line">相对于悲观锁，在对数据库进行处理的时候，乐观锁并不会使用数据库提供的锁机制。一般的实现乐观锁的方式就是记录数据版本</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GIL：又叫全局解释器锁，每个线程在执行的过程中都需要先获取GIL，保证同一时刻只有一个线程在运行，目的是解决多线程同时竞争程序中的全局变量而出现的线程安全问题</span><br><span class="line"></span><br><span class="line">GIL面试题参考答案：</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> Python语言和GIL没有什么关系。仅仅是由于历史原因在Cpython虚拟机(解释器)，难以移除GIL。</span><br><span class="line"></span><br><span class="line"><span class="number">2</span> GIL：全局解释器锁。每个线程在执行的过程都需要先获取GIL，保证同一时刻只有一个线程可以执行代码。</span><br><span class="line"></span><br><span class="line"><span class="number">3</span> 线程释放GIL锁的情况： 在IO操作等可能会引起阻塞的system call之前,可以暂时释放GIL,但在执行完毕后,必须重新获取GIL Python <span class="number">3.</span>x使用计时器（执行时间</span><br><span class="line">达到阈值后，当前线程释放GIL）或Python <span class="number">2.</span>x，tickets计数达到<span class="number">100</span>。</span><br><span class="line"></span><br><span class="line"><span class="number">4</span> Python使用多进程是可以利用多核的CPU资源的。</span><br><span class="line"></span><br><span class="line"><span class="number">5</span> 多线程爬取比单线程性能有提升，因为遇到IO阻塞会自动释放GIL锁。</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="5-慢查询"><a href="#5-慢查询" class="headerlink" title="5 慢查询"></a>5 慢查询</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.2</span> 两个配置</span><br><span class="line"><span class="number">1.2</span><span class="number">.1</span> slowlog-<span class="built_in">max</span>-<span class="built_in">len</span></span><br><span class="line">慢查询是一个先进先出的队列</span><br><span class="line"></span><br><span class="line">固定长度</span><br><span class="line"></span><br><span class="line">保存在内存中</span><br><span class="line"></span><br><span class="line"><span class="number">1.2</span><span class="number">.2</span> slowlog-<span class="built_in">max</span>-<span class="built_in">len</span></span><br><span class="line">慢查询阈值（单位：微秒）</span><br><span class="line"></span><br><span class="line">slowlog-log-slower-than=<span class="number">0</span>，记录所有命令</span><br><span class="line"></span><br><span class="line">slowlog-log-slower-than &lt;<span class="number">0</span>,不记录任何命令</span><br><span class="line"></span><br><span class="line"><span class="number">1.2</span><span class="number">.3</span> 配置方法</span><br><span class="line"><span class="number">1</span> 默认配置</span><br><span class="line"></span><br><span class="line">config get slowlog-<span class="built_in">max</span>-<span class="built_in">len</span>=<span class="number">128</span></span><br><span class="line"></span><br><span class="line">Config get slowly-log-slower-than=<span class="number">10000</span></span><br><span class="line"></span><br><span class="line"><span class="number">2</span> 修改配置文件重启</span><br><span class="line"></span><br><span class="line"><span class="number">3</span> 动态配置</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置记录所有命令</span></span><br><span class="line">config <span class="built_in">set</span> slowlog-log-slower-than <span class="number">0</span></span><br><span class="line"><span class="comment"># 最多记录100条</span></span><br><span class="line">config <span class="built_in">set</span> slowlog-<span class="built_in">max</span>-<span class="built_in">len</span> <span class="number">100</span></span><br><span class="line"><span class="comment"># 持久化到本地配置文件</span></span><br><span class="line">config rewrite</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">config set slowlog-max-len 1000</span></span><br><span class="line"><span class="string">config set slowlog-log-slower-than 1000</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="number">1.3</span> 三个命令</span><br><span class="line">slowlog get [n]  <span class="comment">#获取慢查询队列</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">日志由4个属性组成：</span></span><br><span class="line"><span class="string">1）日志的标识id</span></span><br><span class="line"><span class="string">2）发生的时间戳</span></span><br><span class="line"><span class="string">3）命令耗时</span></span><br><span class="line"><span class="string">4）执行的命令和参数</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">slowlog <span class="built_in">len</span> <span class="comment">#获取慢查询队列长度</span></span><br><span class="line"></span><br><span class="line">slowlog reset <span class="comment">#清空慢查询队列</span></span><br><span class="line"></span><br><span class="line"><span class="number">1.4</span> 经验</span><br><span class="line"><span class="number">1</span> slowlog-<span class="built_in">max</span>-<span class="built_in">len</span> 不要设置过大，默认10ms，通常设置1ms</span><br><span class="line"><span class="number">2</span> slowlog-log-slower-than不要设置过小，通常设置<span class="number">1000</span>左右</span><br><span class="line"><span class="number">3</span> 理解命令生命周期</span><br><span class="line"><span class="number">4</span> 定期持久化慢查询</span><br></pre></td></tr></table></figure><h2 id="6-pipeline与事务"><a href="#6-pipeline与事务" class="headerlink" title="6 pipeline与事务"></a>6 pipeline与事务</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">Redis的pipeline(管道)功能在命令行中没有，但redis是支持pipeline的，而且在各个语言版的client中都有相应的实现</span><br><span class="line"></span><br><span class="line">将一批命令，批量打包，在redis服务端批量计算(执行)，然后把结果批量返回</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>次pipeline(n条命令)=<span class="number">1</span>次网络时间+n次命令时间</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用建议</span></span><br><span class="line"><span class="number">1</span> 注意每次pipeline携带的数据量</span><br><span class="line"></span><br><span class="line">    <span class="number">2</span> pipeline每次只能作用在一个Redis的节点上</span><br><span class="line"></span><br><span class="line">    <span class="number">3</span> M(mset，mget….)操作和pipeline的区别</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment"># 原生事务操作</span></span><br><span class="line">    <span class="comment"># 1 mutil  开启事务，放到管道中一次性执行</span></span><br><span class="line">    multi   <span class="comment"># 开启事务</span></span><br><span class="line">    <span class="built_in">set</span> name lqz</span><br><span class="line">    <span class="built_in">set</span> age <span class="number">18</span></span><br><span class="line">    <span class="built_in">exec</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2 模拟事务</span></span><br><span class="line">    <span class="comment"># 在开启事务之前，先watch</span></span><br><span class="line">    wathc age</span><br><span class="line">    multi</span><br><span class="line">    decr age</span><br><span class="line">    <span class="built_in">exec</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 另一台机器</span></span><br><span class="line">    mutil</span><br><span class="line">    decr age</span><br><span class="line">    <span class="built_in">exec</span>  <span class="comment"># 先执行，上面的执行就会失败(乐观锁，被wathc的事务不会执行成功)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="7-发布订阅"><a href="#7-发布订阅" class="headerlink" title="7 发布订阅"></a>7 发布订阅</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 发布者发布了消息，所有的订阅者都可以收到，就是生产者消费者模型（后订阅了，无法获取历史消息）</span></span><br><span class="line">publish channel message <span class="comment">#发布命令</span></span><br><span class="line">publish souhu:tv <span class="string">&quot;hello world&quot;</span> <span class="comment">#在souhu:tv频道发布一条hello world  返回订阅者个数</span></span><br><span class="line"></span><br><span class="line">subscribe [channel] <span class="comment">#订阅命令，可以订阅一个或多个</span></span><br><span class="line">subscribe souhu:tv  <span class="comment">#订阅sohu:tv频道</span></span><br><span class="line"></span><br><span class="line">unsubscribe [channel] <span class="comment">#取消订阅一个或多个频道</span></span><br><span class="line">unsubscribe sohu:tv  <span class="comment">#取消订阅sohu:tv频道</span></span><br><span class="line">    </span><br><span class="line">psubscribe [pattern...] <span class="comment">#订阅模式匹配</span></span><br><span class="line">psubscribe c*  <span class="comment">#订阅以c开头的频道</span></span><br><span class="line"></span><br><span class="line">unpsubscribe [pattern...] <span class="comment">#按模式退订指定频道</span></span><br><span class="line"></span><br><span class="line">pubsub channels <span class="comment">#列出至少有一个订阅者的频道,列出活跃的频道</span></span><br><span class="line"></span><br><span class="line">pubsub numsub [channel...] <span class="comment">#列出给定频道的订阅者数量</span></span><br><span class="line"></span><br><span class="line">pubsub numpat <span class="comment">#列出被订阅模式的数量</span></span><br></pre></td></tr></table></figure><h2 id="8-Bitmap位图"><a href="#8-Bitmap位图" class="headerlink" title="8 Bitmap位图"></a>8 Bitmap位图</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4.2</span> 相关命令</span><br><span class="line"><span class="built_in">set</span> hello big <span class="comment">#放入key位hello 值为big的字符串</span></span><br><span class="line">getbit hello <span class="number">0</span> <span class="comment">#取位图的第0个位置，返回0</span></span><br><span class="line">getbit hello <span class="number">1</span> <span class="comment">#取位图的第1个位置，返回1 如上图</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##我们可以直接操纵位</span></span><br><span class="line">setbit key offset value <span class="comment">#给位图指定索引设置值</span></span><br><span class="line">setbit hello <span class="number">7</span> <span class="number">1</span> <span class="comment">#把hello的第7个位置设为1 这样，big就变成了cig</span></span><br><span class="line"></span><br><span class="line">setbit test <span class="number">50</span> <span class="number">1</span> <span class="comment">#test不存在，在key为test的value的第50位设为1，那其他位都以0补</span></span><br><span class="line"></span><br><span class="line">bitcount key [start end] <span class="comment">#获取位图指定范围(start到end,单位为字节,注意按字节一个字节8个bit为，如果不指定就是获取全部)位值为1的个数</span></span><br><span class="line"></span><br><span class="line">bitop op destkey key [key...] <span class="comment">#做多个Bitmap的and(交集)/or(并集)/not(非)/xor(异或)，操作并将结果保存在destkey中 </span></span><br><span class="line">bitop <span class="keyword">and</span> after_lqz lqz lqz2 <span class="comment">#把lqz和lqz2按位与操作，放到after_lqz中</span></span><br><span class="line"></span><br><span class="line">bitpos key targetBit start end <span class="comment">#计算位图指定范围(start到end，单位为字节，如果不指定是获取全部)第一个偏移量对应的值等于targetBit的位置</span></span><br><span class="line">bitpos lqz <span class="number">1</span> <span class="comment">#big 对应位图中第一个1的位置，在第二个位置上，由于从0开始返回1</span></span><br><span class="line">bitpos lqz <span class="number">0</span> <span class="comment">#big 对应位图中第一个0的位置，在第一个位置上，由于从0开始返回0</span></span><br><span class="line">bitpos lqz <span class="number">1</span> <span class="number">1</span> <span class="number">2</span> <span class="comment">#返回9：返回从第一个字节到第二个字节之间 第一个1的位置，看上图，为9</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">使用<span class="built_in">set</span>和Bitmap对比</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>亿用户，<span class="number">5</span>千万独立（<span class="number">1</span>亿用户量，约<span class="number">5</span>千万人访问，统计活跃用户数量）</span><br><span class="line"></span><br><span class="line">数据类型每个userid占用空间需要存储用户量   全部内存量</span><br><span class="line"><span class="built_in">set</span>       <span class="number">32</span>位(假设userid是整形，占<span class="number">32</span>位)<span class="number">5</span>千万<span class="number">32</span>位*<span class="number">5</span>千万=200MB</span><br><span class="line">bitmap    <span class="number">1</span>位                          <span class="number">1</span>亿   <span class="number">1</span>位*<span class="number">1</span>亿=<span class="number">12.5</span>MB</span><br><span class="line">假设有<span class="number">10</span>万独立用户，使用位图还是占用<span class="number">12.5</span>mb，使用<span class="built_in">set</span>需要<span class="number">32</span>位*<span class="number">1</span>万=4MB</span><br></pre></td></tr></table></figure><h2 id="9-HyperLogLog"><a href="#9-HyperLogLog" class="headerlink" title="9 HyperLogLog"></a>9 HyperLogLog</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># HyperLogLog：极小的空间完成独立数量统计</span></span><br><span class="line">-pfadd key element  增加（重复了不会增加）</span><br><span class="line">    -pfcount key         统计个数</span><br><span class="line">    -去重，独立用户统计，有错误率</span><br><span class="line">    </span><br><span class="line"><span class="comment"># GEO（redis，es）</span></span><br><span class="line"><span class="comment"># 插入</span></span><br><span class="line">    geoadd cities:locations <span class="number">116.28</span> <span class="number">39.55</span> beijing <span class="comment">#把北京地理信息天津到cities:locations中</span></span><br><span class="line">    geoadd cities:locations <span class="number">117.12</span> <span class="number">39.08</span> tianjin</span><br><span class="line">    geoadd cities:locations <span class="number">114.29</span> <span class="number">38.02</span> shijiazhuang</span><br><span class="line">    geoadd cities:locations <span class="number">118.01</span> <span class="number">39.38</span> tangshan</span><br><span class="line">    geoadd cities:locations <span class="number">115.29</span> <span class="number">38.51</span> baoding</span><br><span class="line">    <span class="comment"># 计算北京到天津的距离</span></span><br><span class="line">    geodist cities:locations beijing tianjin km</span><br><span class="line"><span class="comment"># 计算北京方圆150km内的城市</span></span><br><span class="line">    georadiusbymember cities:locations beijing <span class="number">150</span> km</span><br><span class="line">        </span><br><span class="line"><span class="number">5.3</span> 内存消耗&amp;总结</span><br><span class="line">百万级别独立用户统计，百万条数据只占15k</span><br><span class="line"></span><br><span class="line">错误率 <span class="number">0.81</span>%</span><br><span class="line"></span><br><span class="line">无法取出单条数据，只能统计个数</span><br></pre></td></tr></table></figure><h2 id="10-持久化"><a href="#10-持久化" class="headerlink" title="10 持久化"></a>10 持久化</h2><h3 id="rdb"><a href="#rdb" class="headerlink" title="rdb"></a>rdb</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 两种：</span></span><br><span class="line">-rdb：缓存</span><br><span class="line">    -aof：对数据准确性要求高一些</span><br><span class="line"><span class="comment"># rdb：触发方式三种</span></span><br><span class="line">-手动 save</span><br><span class="line">    </span><br><span class="line">    -手动 bgsave</span><br><span class="line">    </span><br><span class="line">    -配置文件</span><br><span class="line">    配置   seconds   changes</span><br><span class="line">    save   <span class="number">900</span>        <span class="number">1</span></span><br><span class="line">    save   <span class="number">300</span>        <span class="number">10</span></span><br><span class="line">    save   <span class="number">60</span>         <span class="number">10000</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment"># rdb最佳配置</span></span><br><span class="line">save <span class="number">900</span> <span class="number">1</span> </span><br><span class="line">save <span class="number">300</span> <span class="number">10</span> </span><br><span class="line">save <span class="number">60</span> <span class="number">10000</span> </span><br><span class="line">dbfilename dump-<span class="number">3306.</span>rdb  <span class="comment">#以端口号作为文件名，可能一台机器上很多reids，不会乱</span></span><br><span class="line"><span class="built_in">dir</span> /bigdiskpath <span class="comment">#保存路径放到一个大硬盘位置目录</span></span><br><span class="line">stop-writes-on-bgsave-error yes <span class="comment">#出现错误停止</span></span><br><span class="line">rdbcompression yes <span class="comment">#压缩</span></span><br><span class="line">rdbchecksum yes <span class="comment">#校验</span></span><br></pre></td></tr></table></figure><h3 id="aof"><a href="#aof" class="headerlink" title="aof"></a>aof</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">客户端每写入一条命令，都记录一条日志，放到日志文件中，如果出现宕机，可以将数据完全恢复</span><br><span class="line"></span><br><span class="line"><span class="comment"># AOF 重写</span></span><br><span class="line">本质就是把过期的，无用的，重复的，可以优化的命令，来优化</span><br><span class="line">这样可以减少磁盘占用量，加速恢复速度</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment"># aof的最佳配置</span></span><br><span class="line">appendonly yes <span class="comment">#将该选项设置为yes，打开</span></span><br><span class="line">appendfilename <span class="string">&quot;appendonly-3306.aof&quot;</span> <span class="comment">#文件保存的名字</span></span><br><span class="line">appendfsync everysec <span class="comment">#采用第二种策略</span></span><br><span class="line"><span class="built_in">dir</span> /data <span class="comment">#存放的路径</span></span><br><span class="line">no-appendfsync-on-rewrite yes</span><br></pre></td></tr></table></figure><h3 id="rdb和aof的比较"><a href="#rdb和aof的比较" class="headerlink" title="rdb和aof的比较"></a>rdb和aof的比较</h3><p><img src="C:/Users/%E5%88%98%E4%B8%80/AppData/Roaming/Typora/typora-user-images/image-20210301211021206.png" alt="image-20210301211021206"></p><h2 id="11-主从复制原理与优化"><a href="#11-主从复制原理与优化" class="headerlink" title="11 主从复制原理与优化"></a>11 主从复制原理与优化</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 副本库通过slaveof <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="number">6379</span>命令,连接主库,并发送SYNC给主库 </span><br><span class="line"><span class="number">2.</span> 主库收到SYNC,会立即触发BGSAVE,后台保存RDB,发送给副本库</span><br><span class="line"><span class="number">3.</span> 副本库接收后会应用RDB快照</span><br><span class="line"><span class="number">4.</span> 主库会陆续将中间产生的新的操作,保存并发送给副本库</span><br><span class="line"><span class="number">5.</span> 到此,我们主复制集就正常工作了</span><br><span class="line"><span class="number">6.</span> 再此以后,主库只要发生新的操作,都会以命令传播的形式自动发送给副本库.</span><br><span class="line"><span class="number">7.</span> 所有复制相关信息,从info信息中都可以查到.即使重启任何节点,他的主从关系依然都在.</span><br><span class="line"><span class="number">8.</span> 如果发生主从关系断开时,从库数据没有任何损坏,在下次重连之后,从库发送PSYNC给主库</span><br><span class="line"><span class="number">9.</span> 主库只会将从库缺失部分的数据同步给从库应用,达到快速恢复主从的目的</span><br></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 手动配置</span></span><br><span class="line">在<span class="number">6380</span>上执行（去从库配置，配置主库）</span><br><span class="line"><span class="comment"># 127.0.0.1 6379主库</span></span><br><span class="line"><span class="comment"># 127.0.0.1 6380 从库</span></span><br><span class="line"><span class="comment"># 在从库上执行，就建立了主从</span></span><br><span class="line">slaveof <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="number">6379</span> <span class="comment">#异步</span></span><br><span class="line"><span class="comment"># 取消主从</span></span><br><span class="line">slaveof no one <span class="comment">#取消复制，不会把之前的数据清除</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置文件配置</span></span><br><span class="line"><span class="comment"># vim redis_6381.conf</span></span><br><span class="line">daemonize yes</span><br><span class="line">port <span class="number">6381</span></span><br><span class="line">logfile <span class="string">&quot;6381.log&quot;</span></span><br><span class="line"><span class="built_in">dir</span> <span class="string">&quot;/soft/redis/data2&quot;</span></span><br><span class="line">bind <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">protected-mode no</span><br><span class="line"><span class="comment">#requirepass 123456</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># rdb最佳配置</span></span><br><span class="line">save <span class="number">900</span> <span class="number">1</span></span><br><span class="line">save <span class="number">300</span> <span class="number">10</span></span><br><span class="line">save <span class="number">60</span> <span class="number">10000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># aof的最佳配置</span></span><br><span class="line">appendonly yes</span><br><span class="line">appendfilename <span class="string">&quot;appendonly-3306.aof&quot;</span></span><br><span class="line">appendfsync everysec</span><br><span class="line">no-appendfsync-on-rewrite yes</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定主库为139.196.29.107 6379</span></span><br><span class="line">slaveof <span class="number">139.196</span><span class="number">.29</span><span class="number">.107</span> <span class="number">6379</span></span><br><span class="line"><span class="comment"># 从库只读</span></span><br><span class="line">slave-read-only yes</span><br></pre></td></tr></table></figure><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> 读写分离</span><br><span class="line"></span><br><span class="line">读流量分摊到从节点</span><br><span class="line"></span><br><span class="line">可能遇到问题：复制数据延迟，读到过期数据，从节点故障</span><br><span class="line"></span><br><span class="line"><span class="number">2</span> 主从配置不一致</span><br><span class="line"></span><br><span class="line">maxmemory不一致：丢失数据</span><br><span class="line"></span><br><span class="line">数据结构优化参数：主节点做了优化，从节点没有设置优化，会出现一些问题</span><br><span class="line"></span><br><span class="line"><span class="number">3</span> 规避全量复制</span><br><span class="line"></span><br><span class="line">第一次全量复制，不可避免：小主节点，低峰(夜间)</span><br><span class="line"></span><br><span class="line">节点运行<span class="built_in">id</span>不匹配：主节点重启(运行<span class="built_in">id</span>变化)</span><br><span class="line"></span><br><span class="line">复制挤压缓冲区不足：增大复制缓冲区大小，rel_backlog_size</span><br><span class="line"></span><br><span class="line"><span class="number">4</span> 规避复制风暴</span><br><span class="line"></span><br><span class="line">单主节点复制风暴，主节点重启，所有从节点复制</span><br></pre></td></tr></table></figure><h2 id="12-redis哨兵"><a href="#12-redis哨兵" class="headerlink" title="12 redis哨兵"></a>12 redis哨兵</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> 搭一个一主两从</span><br><span class="line"><span class="comment">#创建三个配置文件：</span></span><br><span class="line"><span class="comment">#第一个是主配置文件</span></span><br><span class="line">daemonize yes</span><br><span class="line">pidfile /var/run/redis.pid</span><br><span class="line">port <span class="number">6379</span></span><br><span class="line"><span class="built_in">dir</span> <span class="string">&quot;/opt/soft/redis/data&quot;</span></span><br><span class="line">logfile “<span class="number">6379.</span>log”</span><br><span class="line"></span><br><span class="line"><span class="comment">#第二个是从配置文件</span></span><br><span class="line">daemonize yes</span><br><span class="line">pidfile /var/run/redis2.pid</span><br><span class="line">port <span class="number">6378</span></span><br><span class="line"><span class="built_in">dir</span> <span class="string">&quot;/soft/redis/data2&quot;</span></span><br><span class="line">logfile “<span class="number">6378.</span>log”</span><br><span class="line">slaveof <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="number">6379</span></span><br><span class="line">slave-read-only yes</span><br><span class="line"><span class="comment">#第三个是从配置文件</span></span><br><span class="line">daemonize yes</span><br><span class="line">pidfile /var/run/redis3.pid</span><br><span class="line">port <span class="number">6377</span></span><br><span class="line"><span class="built_in">dir</span> <span class="string">&quot;/soft/redis/data3&quot;</span></span><br><span class="line">logfile “<span class="number">6377.</span>log”</span><br><span class="line">slaveof <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="number">6379</span></span><br><span class="line">slave-read-only yes</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#把三个redis服务都启动起来</span></span><br><span class="line">./src/redis-server redis_6379.conf</span><br><span class="line">./src/redis-server redis_6378.conf</span><br><span class="line">./src/redis-server redis_6377.conf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@lhj redis]<span class="comment"># vi sentinel_26381.conf</span></span><br><span class="line"><span class="comment"># sentinel.conf这个文件</span></span><br><span class="line"><span class="comment"># 把哨兵也当成一个redis服务器</span></span><br><span class="line">创建三个配置文件分别叫sentinel_26379.conf sentinel_26380.conf  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 当前路径下创建 data1 data2 data3 个文件夹</span></span><br><span class="line"><span class="comment">#内容如下(需要修改端口，文件地址日志文件名字)</span></span><br><span class="line"><span class="comment"># sentinel_26381.conf</span></span><br><span class="line">port <span class="number">26381</span></span><br><span class="line">daemonize yes</span><br><span class="line"><span class="built_in">dir</span> /soft/redis/data3</span><br><span class="line">protected-mode no</span><br><span class="line">bind <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">logfile <span class="string">&quot;redis_sentine26381.log&quot;</span></span><br><span class="line">sentinel monitor mymaster <span class="number">139.196</span><span class="number">.29</span><span class="number">.107</span> <span class="number">6379</span> <span class="number">2</span></span><br><span class="line">sentinel down-after-milliseconds mymaster <span class="number">30000</span></span><br><span class="line">sentinel parallel-syncs mymaster <span class="number">1</span></span><br><span class="line">sentinel failover-timeout mymaster <span class="number">180000</span></span><br><span class="line"></span><br><span class="line">[root@lhj redis]<span class="comment"># redis-server redis_6379.conf </span></span><br><span class="line">[root@lhj redis]<span class="comment"># redis-server redis_6380.conf </span></span><br><span class="line">[root@lhj redis]<span class="comment"># redis-server redis_6381.conf </span></span><br><span class="line">[root@lhj redis]<span class="comment"># </span></span><br><span class="line">[root@lhj redis]<span class="comment"># </span></span><br><span class="line">[root@lhj redis]<span class="comment"># redis-sentinel sentinel_26379.conf </span></span><br><span class="line">[root@lhj redis]<span class="comment"># redis-sentinel sentinel_26380.conf </span></span><br><span class="line">[root@lhj redis]<span class="comment"># redis-sentinel sentinel_26381.conf </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="客户端连接"><a href="#客户端连接" class="headerlink" title="客户端连接"></a>客户端连接</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">-客户端测试</span><br><span class="line">    <span class="keyword">import</span> redis</span><br><span class="line">        <span class="keyword">from</span> redis.sentinel <span class="keyword">import</span> Sentinel</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 连接哨兵服务器(主机名也可以用域名)</span></span><br><span class="line">        <span class="comment"># 10.0.0.101:26379</span></span><br><span class="line">        sentinel = Sentinel([(<span class="string">&#x27;139.196.158.24&#x27;</span>, <span class="number">26379</span>),</span><br><span class="line">                             (<span class="string">&#x27;139.196.158.24&#x27;</span>, <span class="number">26380</span>),</span><br><span class="line">                             (<span class="string">&#x27;139.196.158.24&#x27;</span>, <span class="number">26381</span>)],</span><br><span class="line">                            socket_timeout=<span class="number">5</span>)</span><br><span class="line">        <span class="comment"># print(sentinel)</span></span><br><span class="line">        <span class="comment"># # 获取主服务器地址</span></span><br><span class="line">        master = sentinel.discover_master(<span class="string">&#x27;mymaster&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(master)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 获取从服务器地址</span></span><br><span class="line">        slave = sentinel.discover_slaves(<span class="string">&#x27;mymaster&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(slave)</span><br><span class="line"></span><br><span class="line">        <span class="comment">##### 读写分离</span></span><br><span class="line">        <span class="comment"># 获取主服务器进行写入</span></span><br><span class="line">        <span class="comment"># master = sentinel.master_for(&#x27;mymaster&#x27;, socket_timeout=5)</span></span><br><span class="line">        <span class="comment"># w_ret = master.set(&#x27;foo&#x27;, &#x27;bar&#x27;)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># slave = sentinel.slave_for(&#x27;mymaster&#x27;, socket_timeout=0.5)</span></span><br><span class="line">        <span class="comment"># r_ret = slave.get(&#x27;foo&#x27;)</span></span><br><span class="line">        <span class="comment"># print(r_ret)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="13-redis集群"><a href="#13-redis集群" class="headerlink" title="13 redis集群"></a>13 redis集群</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 实操</span></span><br><span class="line">cd /soft/redis/config</span><br><span class="line">vim redis-<span class="number">7000.</span>conf</span><br><span class="line"><span class="comment"># 写入</span></span><br><span class="line"><span class="comment"># 第一步：启动6个实例</span></span><br><span class="line">port <span class="number">7000</span></span><br><span class="line">daemonize yes</span><br><span class="line"></span><br><span class="line"><span class="built_in">dir</span> /soft/redis/data7000</span><br><span class="line">logfile <span class="string">&quot;7000.log&quot;</span></span><br><span class="line">dbfilename <span class="string">&quot;dump-7000.rdb&quot;</span></span><br><span class="line">cluster-enabled yes</span><br><span class="line">cluster-config-file nodes-<span class="number">7000.</span>conf</span><br><span class="line">cluster-require-full-coverage yes </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">#masterauth  集群搭建时，主的密码</span></span><br><span class="line"><span class="string">cluster-enabled yes  # 开启cluster</span></span><br><span class="line"><span class="string">cluster-node-timeout 15000 # 故障转移，超时时间 15s</span></span><br><span class="line"><span class="string">cluster-config-file nodes-$&#123;port&#125;.conf  # 给cluster节点增加一个自己的配置文件</span></span><br><span class="line"><span class="string">cluster-require-full-coverage yes  #只要集群中有一个故障了，整个就不对外提供服务了，这个实际不合理，假设有50个节点，一个节点故障了，所有不提供服务了；，需要设置成no</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># 快速生成其他配置</span></span><br><span class="line">[root@lhj config]<span class="comment"># sed &#x27;s/7000/7001/g&#x27; redis-7000.conf &gt; redis-7001.conf</span></span><br><span class="line">[root@lhj config]<span class="comment"># sed &#x27;s/7000/7002/g&#x27; redis-7000.conf &gt; redis-7002.conf</span></span><br><span class="line">[root@lhj config]<span class="comment"># sed &#x27;s/7000/7003/g&#x27; redis-7000.conf &gt; redis-7003.conf</span></span><br><span class="line">[root@lhj config]<span class="comment"># sed &#x27;s/7000/7004/g&#x27; redis-7000.conf &gt; redis-7004.conf</span></span><br><span class="line">[root@lhj config]<span class="comment"># sed &#x27;s/7000/7005/g&#x27; redis-7000.conf &gt; redis-7005.conf</span></span><br><span class="line">[root@lhj config]<span class="comment"># ls</span></span><br><span class="line">redis-<span class="number">7000.</span>conf  redis-<span class="number">7001.</span>conf  redis-<span class="number">7002.</span>conf  redis-<span class="number">7003.</span>conf  redis-<span class="number">7004.</span>conf  redis-<span class="number">7005.</span>conf</span><br><span class="line">[root@lhj config]<span class="comment"># cd ..</span></span><br><span class="line">[root@lhj redis]<span class="comment"># mkdir data&#123;7000..7007&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># # 第二部：启动实例</span></span><br><span class="line">[root@lhj redis]<span class="comment"># redis-server ./config/redis-7000.conf </span></span><br><span class="line">[root@lhj redis]<span class="comment"># redis-server ./config/redis-7001.conf </span></span><br><span class="line">[root@lhj redis]<span class="comment"># redis-server ./config/redis-7002.conf </span></span><br><span class="line">[root@lhj redis]<span class="comment"># redis-server ./config/redis-7003.conf </span></span><br><span class="line">[root@lhj redis]<span class="comment"># redis-server ./config/redis-7004.conf </span></span><br><span class="line">[root@lhj redis]<span class="comment"># redis-server ./config/redis-7005.conf </span></span><br><span class="line">[root@lhj redis]<span class="comment"># ps -ef |grep redis</span></span><br><span class="line"></span><br><span class="line">-启动<span class="number">6</span>个实例，自动处理（老的配置集群，比较麻烦，手动做好多东西），集群中有<span class="number">6</span>个节点，每个主节点有一个从节点（主和从都是redis自己选择）</span><br><span class="line"></span><br><span class="line">redis-cli -p <span class="number">7000</span> --cluster create <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">7000</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">7001</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">7002</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">7003</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">7004</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">7005</span> --cluster-replicas <span class="number">1</span></span><br><span class="line">                            </span><br><span class="line"><span class="comment"># 第三步：客户端连接</span></span><br><span class="line">    redis-cli -c -p <span class="number">7000</span>   <span class="comment"># -c是集群模式，查询或写入的数据如果不在当前节点，会自动跳转查询或写入</span></span><br><span class="line">    cluster nodes   <span class="comment"># 查看集群节点信息</span></span><br><span class="line">        cluster info                          </span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="扩容"><a href="#扩容" class="headerlink" title="扩容"></a>扩容</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1  准备新节点</span></span><br><span class="line">-集群模式</span><br><span class="line">-配置和其他节点统一</span><br><span class="line">-启动后是孤儿节点</span><br><span class="line">[root@lhj config]<span class="comment"># sed &#x27;s/7000/7006/g&#x27; redis-7000.conf &gt; redis-7006.conf</span></span><br><span class="line">[root@lhj config]<span class="comment"># sed &#x27;s/7000/7007/g&#x27; redis-7000.conf &gt; redis-7007.conf</span></span><br><span class="line"></span><br><span class="line">[root@lhj redis]<span class="comment"># redis-server ./config/redis-7006.conf </span></span><br><span class="line">[root@lhj redis]<span class="comment"># redis-server ./config/redis-7007.conf</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-启动两个实例，加入集群，一个作为主，一个作为从</span><br><span class="line">    - 把<span class="number">7006</span>加入到集群中</span><br><span class="line">redis-cli --cluster add-node  <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">7006</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">7005</span></span><br><span class="line">-把<span class="number">7007</span>加入到集群并且作为<span class="number">7006</span>的从库</span><br><span class="line">redis-cli --cluster add-node  <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">7007</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">7005</span> --cluster-slave --cluster-master-<span class="built_in">id</span> 0602ca3e17a1661f05ba34c63bf7317cfd9d6e85</span><br><span class="line">     -迁移槽（指定迁移的大小，指定从哪个节点迁移（<span class="built_in">all</span>）,每个节点迁移一部分）</span><br><span class="line">    redis-cli --cluster reshard <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">7000</span></span><br><span class="line">        <span class="comment">#打印当前集群状态</span></span><br><span class="line">        <span class="comment"># 希望迁移多少个槽：1365</span></span><br><span class="line">        <span class="comment"># 希望那个id是接收的：7006的id</span></span><br><span class="line">        <span class="comment"># 传入source id ：all</span></span><br><span class="line">        <span class="comment"># yes</span></span><br><span class="line">   <span class="comment"># 查看</span></span><br><span class="line">        redis-cli -p <span class="number">7000</span> cluster nodes</span><br><span class="line">        redis-cli -p <span class="number">7000</span> cluster slots</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="comment">## 其他：</span></span><br><span class="line">-如果想给<span class="number">7000</span>再加一个从节点怎么弄？</span><br><span class="line"><span class="comment"># 启动起7006，meet一下，让7006复制7000</span></span><br><span class="line">redis-cli -p <span class="number">7000</span> cluster meet <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="number">7006</span></span><br><span class="line">redis-cli -p <span class="number">7006</span> cluster replicate e03fb9a259cd314e9a23e17573d07c477d3242f7</span><br></pre></td></tr></table></figure><h3 id="缩容"><a href="#缩容" class="headerlink" title="缩容"></a>缩容</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下线迁槽（把7006的1366个槽迁移到7000上）</span></span><br><span class="line">redis-cli --cluster reshard --cluster-<span class="keyword">from</span> 5e7166befdff35eb8026c5c88991f9b05ee7cf8d --cluster-to 0465e391784a56b188ef93ea7a154ed506915c53 --cluster-slots <span class="number">1366</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">7005</span></span><br><span class="line">yes</span><br><span class="line"></span><br><span class="line">redis-cli --cluster reshard --cluster-<span class="keyword">from</span> <span class="number">7006</span>的<span class="built_in">id</span> --cluster-to <span class="number">7001</span>的<span class="built_in">id</span> --cluster-slots <span class="number">1365</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">7002</span></span><br><span class="line">yes</span><br><span class="line">redis-cli --cluster reshard --cluster-<span class="keyword">from</span> <span class="number">7006</span>的<span class="built_in">id</span> --cluster-to <span class="number">7002</span>的<span class="built_in">id</span> --cluster-slots <span class="number">1365</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">7003</span></span><br><span class="line">yes</span><br><span class="line"><span class="comment"># 忘记节点，关闭节点</span></span><br><span class="line">redis-cli --cluster <span class="keyword">del</span>-node <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">7000</span> 要下线的7007<span class="built_in">id</span>  <span class="comment"># 先下从，再下主，因为先下主会触发故障转移</span></span><br><span class="line">redis-cli --cluster <span class="keyword">del</span>-node <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">7000</span> 要下线的7006<span class="built_in">id</span> </span><br><span class="line"><span class="comment"># </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 关掉其中一个主，另一个从立马变成主顶上， 重启停止的主，发现变成了从</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;luffy&quot;&gt;&lt;a href=&quot;#luffy&quot; class=&quot;headerlink&quot; title=&quot;luffy&quot;&gt;&lt;/a&gt;luffy&lt;/h1&gt;&lt;h2 id=&quot;项目配置&quot;&gt;&lt;a href=&quot;#项目配置&quot; class=&quot;headerlink&quot; title=&quot;项目配置&quot;</summary>
      
    
    
    
    
    <category term="luffy" scheme="http://example.com/tags/luffy/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2020/09/17/HTML/"/>
    <id>http://example.com/2020/09/17/HTML/</id>
    <published>2020-09-16T16:16:57.209Z</published>
    <updated>2020-09-27T16:27:34.424Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><h3 id="1-head内常用标签"><a href="#1-head内常用标签" class="headerlink" title="1 head内常用标签"></a>1 head内常用标签</h3><h4 id="1-1-meta相关"><a href="#1-1-meta相关" class="headerlink" title="1.1 meta相关"></a>1.1 meta相关</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#1、指定字符集</span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;gbk&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">#2、页面描述</span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;Description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;具体描述。。。&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">#3、关键字：有助于搜索引擎SEC优化，再怎么优化也抵不过竞价排名</span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;Keywords&quot;</span> <span class="attr">content</span>=<span class="string">&quot;网易，邮箱，游戏，新闻&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">#4、3秒后跳转</span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;refresh&quot;</span> <span class="attr">content</span>=<span class="string">&quot;3,http://www.baidu.com&quot;</span>&gt;</span></span><br><span class="line">#5、三秒刷新</span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;refresh&quot;</span> <span class="attr">content</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="1-2-非meta标签"><a href="#1-2-非meta标签" class="headerlink" title="1.2 非meta标签"></a>1.2 非meta标签</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#1、标题</span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>百度一下，你就知道<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">#2、网站的图标</span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com/favicon.ico&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">#3、定义内部样式</span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">#4、引入外部样式文件</span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;mystyle.css&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">#5、定义JavaScript代码或引入JavaScript文件</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;hello.js&quot;</span>&gt;</span>&lt;/script</span><br></pre></td></tr></table></figure><h3 id="2-body内常用标签"><a href="#2-body内常用标签" class="headerlink" title="2 body内常用标签"></a>2 body内常用标签</h3><h4 id="2-1-html语义化"><a href="#2-1-html语义化" class="headerlink" title="2.1 html语义化"></a>2.1 html语义化</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">h5</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: <span class="number">#287dfa</span>;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">h1</span>&gt;</span> hello world <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">h2</span>&gt;</span> hello world <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">h3</span>&gt;</span> hello world <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">h4</span>&gt;</span> hello world <span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">h5</span>&gt;</span> hello world <span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">h6</span>&gt;</span> hello world <span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">b</span>&gt;</span>加粗<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span>&gt;</span>斜体<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">u</span>&gt;</span>下划线<span class="tag">&lt;/<span class="name">u</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">s</span>&gt;</span>删除线<span class="tag">&lt;/<span class="name">s</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">stong</span>&gt;</span>加粗<span class="tag">&lt;/<span class="name">stong</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ins</span>&gt;</span>下划线<span class="tag">&lt;/<span class="name">ins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">em</span>&gt;</span>斜体<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">del</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">del</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>段落标签1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span>  换行</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>段落标签2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span>  水平分割线</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>段落标签3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>段落标签4<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-1-img标签"><a href="#2-1-img标签" class="headerlink" title="2.1 img标签"></a>2.1 img标签</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">content</span>=<span class="string">&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>img标签<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;timg.jfif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;图片图片加载失败时显示的内容&quot;</span> <span class="attr">title</span>=<span class="string">&quot;鼠标悬浮图片时显示内容&quot;</span> <span class="attr">width</span>=<span class="string">&quot;1000px&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-2-a标签"><a href="#2-2-a标签" class="headerlink" title="2.2 a标签"></a>2.2 a标签</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.jd.com&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank是否在新页面跳转&quot;</span> <span class="attr">title</span>=<span class="string">&quot;鼠标悬浮显示内容&quot;</span> &gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;timg.jfif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;图片图片加载失败时显示的内容&quot;</span>&gt;</span>点我跳转京东<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;head内常用标签.html&quot;</span>&gt;</span>自己的页面<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>刷新页面，回到顶部，人类感觉不出来区别<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>回到顶部<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:&quot;</span>&gt;</span>假链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-3-列表标签"><a href="#2-3-列表标签" class="headerlink" title="2.3 列表标签"></a>2.3 列表标签</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;ul&gt;无序列表</span></span><br><span class="line"><span class="string">    &lt;h&gt;标题&lt;/h&gt;</span></span><br><span class="line"><span class="string">    &lt;li&gt;描述信息1&lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;li&gt;描述信息2&lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;li&gt;描述信息3&lt;/li&gt;</span></span><br><span class="line"><span class="string">&lt;/ul&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;ol&gt;有序列表</span></span><br><span class="line"><span class="string">    &lt;h&gt;标题&lt;/h&gt;</span></span><br><span class="line"><span class="string">    &lt;li&gt;描述信息1&lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;li&gt;描述信息2&lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;li&gt;描述信息3&lt;/li&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;/ol&gt;</span></span><br><span class="line"><span class="string">&lt;dl&gt;自定义列表</span></span><br><span class="line"><span class="string">    &lt;dt&gt;标题&lt;/dt&gt;</span></span><br><span class="line"><span class="string">    &lt;dd&gt;描述信息1&lt;/dd&gt;</span></span><br><span class="line"><span class="string">    &lt;dd&gt;描述信息2&lt;/dd&gt;</span></span><br><span class="line"><span class="string">    &lt;dd&gt;描述信息3&lt;/dd&gt;</span></span><br><span class="line"><span class="string">&lt;/dl&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#3、ul标签的属性type（这属于列表的样式，所以了解即可）</span></span><br><span class="line"><span class="built_in">type</span>：列表标识的类型</span><br><span class="line">        disc：实心圆(默认值)</span><br><span class="line">        circle：空心圆</span><br><span class="line">        square：实心矩形</span><br><span class="line">        none：不显示标识</span><br><span class="line">可以通过css直接去掉小圆点</span><br><span class="line">&lt;style <span class="built_in">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><br><span class="line">            ul &#123;</span><br><span class="line">                <span class="built_in">list</span>-style: none;</span><br><span class="line">            &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#4、注意</span></span><br><span class="line">ul与li是组合标签应该一起出现，并且ul的子标签只应该是li，而li的子标签则可以是任意其他标签</span><br></pre></td></tr></table></figure><h4 id="2-4-table标签"><a href="#2-4-table标签" class="headerlink" title="2.4 table标签"></a>2.4 table标签</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#三种方式细线表格</span></span><br><span class="line"><span class="comment">#1、方式一</span></span><br><span class="line">    在标签中，想通过指定外边距为<span class="number">0</span>来实现细线表格是不靠谱的，其实他是将<span class="number">2</span>条线合成了一条线.所以看上去很不舒服,如下实现</span><br><span class="line">&lt;table width=<span class="string">&quot;200px&quot;</span> height=<span class="string">&quot;200px&quot;</span> bgcolor=<span class="string">&quot;black&quot;</span> border=<span class="string">&quot;1&quot;</span> cellspacing=<span class="string">&quot;0px&quot;</span>&gt;</span><br><span class="line">    &lt;tr bgcolor=<span class="string">&quot;white&quot;</span>&gt;</span><br><span class="line">        &lt;td&gt;姓名&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;性别&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;年龄&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line"></span><br><span class="line">    &lt;tr bgcolor=<span class="string">&quot;white&quot;</span> &gt;</span><br><span class="line">        &lt;td&gt;Egon&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;male&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;<span class="number">18</span>&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line"></span><br><span class="line">    &lt;tr bgcolor=<span class="string">&quot;white&quot;</span>&gt;</span><br><span class="line">        &lt;td&gt;ALex&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;male&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;<span class="number">73</span>&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line"></span><br><span class="line">    &lt;tr bgcolor=<span class="string">&quot;white&quot;</span>&gt;</span><br><span class="line">        &lt;td&gt;Wxx&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;female&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;<span class="number">84</span>&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line"><span class="comment">#2、方式二</span></span><br><span class="line"> 细线表格的制作方式：</span><br><span class="line">        <span class="number">1</span>、给table标签设置bgcolor</span><br><span class="line">        <span class="number">2</span>、给tr标签设置bgcolor</span><br><span class="line">        <span class="number">3</span>、给table标签设置cellspacing=<span class="string">&quot;1px&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      注意：</span><br><span class="line">      table、tr、td标签都支持bgcolor属性</span><br><span class="line"></span><br><span class="line">&lt;table width=<span class="string">&quot;200px&quot;</span> height=<span class="string">&quot;200px&quot;</span> bgcolor=<span class="string">&quot;black&quot;</span> cellspacing=<span class="string">&quot;1px&quot;</span>&gt;</span><br><span class="line">    &lt;tr bgcolor=<span class="string">&quot;white&quot;</span>&gt;</span><br><span class="line">        &lt;td&gt;姓名&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;性别&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;年龄&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line"></span><br><span class="line">    &lt;tr bgcolor=<span class="string">&quot;white&quot;</span> &gt;</span><br><span class="line">        &lt;td&gt;Egon&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;male&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;<span class="number">18</span>&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line"></span><br><span class="line">    &lt;tr bgcolor=<span class="string">&quot;white&quot;</span>&gt;</span><br><span class="line">        &lt;td&gt;ALex&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;male&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;<span class="number">73</span>&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line"></span><br><span class="line">    &lt;tr bgcolor=<span class="string">&quot;white&quot;</span>&gt;</span><br><span class="line">        &lt;td&gt;Wxx&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;female&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;<span class="number">84</span>&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#3、方式三（style=&quot;border-collapse: collapse;border: 1px solid red&quot;）</span></span><br><span class="line">&lt;table border=<span class="string">&quot;1px&quot;</span> style=<span class="string">&quot;border-collapse: collapse;border: 1px solid red&quot;</span>&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;姓名&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;性别&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;年龄&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;egon&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;male&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;<span class="number">18</span>&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;alex&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;female&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;<span class="number">19</span>&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-5-form表单"><a href="#2-5-form表单" class="headerlink" title="2.5 form表单"></a>2.5 form表单</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>form表单<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http://www.baidu.com&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>  <span class="attr">enctype</span>=<span class="string">&quot;application/x-www-form-urlencoded&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">legend</span>&gt;</span>注册页面<span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        用户名:</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span> = <span class="string">&#x27;username&#x27;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        密码:</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span> = <span class="string">&#x27;password&#x27;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        生日：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;date&quot;</span> <span class="attr">name</span>=<span class="string">&quot;date&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;male&quot;</span>&gt;</span>男</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;female&quot;</span>&gt;</span>女</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;null&quot;</span> <span class="attr">checked</span>&gt;</span>保密</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobbies&quot;</span> <span class="attr">value</span>=<span class="string">&quot;read&quot;</span>&gt;</span> 读书</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobbies&quot;</span> <span class="attr">value</span>=<span class="string">&quot;play&quot;</span>&gt;</span> 玩</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobbies&quot;</span> <span class="attr">value</span>=<span class="string">&quot;book&quot;</span> <span class="attr">checked</span>&gt;</span> 看书</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobbies&quot;</span> <span class="attr">value</span>=<span class="string">&quot;tea&quot;</span> <span class="attr">checked</span>&gt;</span> 喝茶</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">multiple</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">     &lt;p&gt;</span></span><br><span class="line"><span class="comment">        简介：</span></span><br><span class="line"><span class="comment">        &lt;textarea name=&quot;&quot; id=&quot;&quot; cols=&quot;30&quot; rows=&quot;10&quot; name=&quot;desc&quot;&gt;&lt;/textarea&gt;</span></span><br><span class="line"><span class="comment">    &lt;/p&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>籍贯</span><br><span class="line">          <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;addr&quot;</span> <span class="attr">size</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;深圳&quot;</span>&gt;</span>深圳<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;北京&quot;</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;上海&quot;</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>城市</span><br><span class="line">            <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;city&quot;</span> <span class="attr">size</span>=<span class="string">&quot;3&quot;</span> <span class="attr">multiple</span> <span class="attr">style</span>=<span class="string">&quot;display: inline-block;width: 100px&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optgroup</span> <span class="attr">label</span>=<span class="string">&quot;一线城市&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;深圳&quot;</span>&gt;</span>深圳<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;北京&quot;</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;上海&quot;</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;上海&quot;</span> <span class="attr">selected</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">optgroup</span>&gt;</span></span><br><span class="line"></span><br><span class="line">             <span class="tag">&lt;<span class="name">optgroup</span> <span class="attr">label</span>=<span class="string">&quot;二线城市&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;郑州&quot;</span>&gt;</span>郑州<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;杭州&quot;</span>&gt;</span>杭州<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;湖州&quot;</span>&gt;</span>湖州<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;台州&quot;</span> <span class="attr">selected</span>&gt;</span>台州<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">optgroup</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   </span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;登录&quot;</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;重置&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-css选择器"><a href="#3-css选择器" class="headerlink" title="3 css选择器"></a>3 css选择器</h3><h4 id="3-1-css的引入方式"><a href="#3-1-css的引入方式" class="headerlink" title="3.1 css的引入方式"></a>3.1 css的引入方式</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--   嵌入式</span></span><br><span class="line"><span class="comment">    &lt;style&gt;</span></span><br><span class="line"><span class="comment">        p  &#123;</span></span><br><span class="line"><span class="comment">            color: red;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &lt;/style&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 外联式</span></span><br><span class="line"><span class="comment">    &lt;link rel=&quot;stylesheet&quot; href=&quot;my.css&quot;&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>hi baby<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 行内式</span></span><br><span class="line"><span class="comment">&lt;p style=&quot;color: #287dfa&quot;&gt;hello world&lt;/p&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-2-基本选择器"><a href="#3-2-基本选择器" class="headerlink" title="3.2 基本选择器"></a>3.2 基本选择器</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>基本选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/* id选择器</span></span></span><br><span class="line"><span class="comment"><span class="css">        #p2 &#123;</span></span></span><br><span class="line"><span class="comment"><span class="css">            color: blue;</span></span></span><br><span class="line"><span class="comment"><span class="css">        &#125;</span></span></span><br><span class="line"><span class="comment"><span class="css"></span></span></span><br><span class="line"><span class="comment"><span class="css">         */</span></span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/* 类选择器</span></span></span><br><span class="line"><span class="comment"><span class="css">        .p1 &#123;</span></span></span><br><span class="line"><span class="comment"><span class="css">            color: red;</span></span></span><br><span class="line"><span class="comment"><span class="css">        &#125;</span></span></span><br><span class="line"><span class="comment"><span class="css"></span></span></span><br><span class="line"><span class="comment"><span class="css">        .p4 &#123;</span></span></span><br><span class="line"><span class="comment"><span class="css">            color: #287dfa;</span></span></span><br><span class="line"><span class="comment"><span class="css">            font-size: 30px;</span></span></span><br><span class="line"><span class="comment"><span class="css">        &#125;</span></span></span><br><span class="line"><span class="comment"><span class="css"></span></span></span><br><span class="line"><span class="comment"><span class="css">        .p3 &#123;</span></span></span><br><span class="line"><span class="comment"><span class="css">            text-decoration: underline;</span></span></span><br><span class="line"><span class="comment"><span class="css">        &#125;</span></span></span><br><span class="line"><span class="comment"><span class="css">        */</span></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/* 标签选择器</span></span></span><br><span class="line"><span class="comment"><span class="css">        p&#123;</span></span></span><br><span class="line"><span class="comment"><span class="css">            color: red;</span></span></span><br><span class="line"><span class="comment"><span class="css">        &#125;</span></span></span><br><span class="line"><span class="comment"><span class="css"></span></span></span><br><span class="line"><span class="comment"><span class="css">        */</span></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 通配符选择器</span></span><br><span class="line"><span class="comment">    &lt;style&gt;</span></span><br><span class="line"><span class="comment">         * &#123;</span></span><br><span class="line"><span class="comment">            color: red;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &lt;/style&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">1 3 颜色red</span><br><span class="line">1 4 字体50px</span><br><span class="line">3 4 加下划线</span><br><span class="line">--&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;p1 p4&quot;</span>&gt;</span>山重水复疑无路<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p2&quot;</span>&gt;</span>柳暗花明又一村<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;p1 p3&quot;</span>&gt;</span>长风破浪会有时<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;p4 p3&quot;</span>&gt;</span>直挂云帆济沧海<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>美丽的外表下其实隐藏着一颗骚动的心<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>这颗心叫做七巧玲珑心，男人吃了会流泪，女人吃了会怀孕<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-3-组合选择器"><a href="#3-3-组合选择器" class="headerlink" title="3.3 组合选择器"></a>3.3 组合选择器</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>组合选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="css">        div p&#123;</span></span></span><br><span class="line"><span class="comment"><span class="css">            color: #287dfa;</span></span></span><br><span class="line"><span class="comment"><span class="css">        &#125;</span></span></span><br><span class="line"><span class="comment"><span class="css"></span></span></span><br><span class="line"><span class="comment"><span class="css">         */</span></span></span><br><span class="line"><span class="css">        <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="css">        div ul li a&#123;</span></span></span><br><span class="line"><span class="comment"><span class="css">            color: red;</span></span></span><br><span class="line"><span class="comment"><span class="css">            font-size: 80px;</span></span></span><br><span class="line"><span class="comment"><span class="css">        &#125;</span></span></span><br><span class="line"><span class="comment"><span class="css">        */</span></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">    <span class="comment">/* 子元素选择器</span></span></span><br><span class="line"><span class="comment"><span class="css">        body &gt; p&#123;</span></span></span><br><span class="line"><span class="comment"><span class="css">            color: red;</span></span></span><br><span class="line"><span class="comment"><span class="css">        &#125;</span></span></span><br><span class="line"><span class="comment"><span class="css"></span></span></span><br><span class="line"><span class="comment"><span class="css"></span></span></span><br><span class="line"><span class="comment"><span class="css">        div &gt; p&#123;</span></span></span><br><span class="line"><span class="comment"><span class="css">            font-size: 80px;</span></span></span><br><span class="line"><span class="comment"><span class="css">        &#125;</span></span></span><br><span class="line"><span class="comment"><span class="css"></span></span></span><br><span class="line"><span class="comment"><span class="css">        .aaa &gt; a&#123;</span></span></span><br><span class="line"><span class="comment"><span class="css">            font-size: 100px;</span></span></span><br><span class="line"><span class="comment"><span class="css">        &#125;</span></span></span><br><span class="line"><span class="comment"><span class="css">        */</span></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">    <span class="comment">/* 毗邻选择器</span></span></span><br><span class="line"><span class="comment"><span class="css">        h1 + p &#123;</span></span></span><br><span class="line"><span class="comment"><span class="css">            font-size: 110px;</span></span></span><br><span class="line"><span class="comment"><span class="css">        &#125;</span></span></span><br><span class="line"><span class="comment"><span class="css"></span></span></span><br><span class="line"><span class="comment"><span class="css">     */</span></span></span><br><span class="line"><span class="css">         <span class="comment">/*相邻选择器</span></span></span><br><span class="line"><span class="comment"><span class="css">         h1 ~ p &#123;</span></span></span><br><span class="line"><span class="comment"><span class="css">            font-size: 110px;</span></span></span><br><span class="line"><span class="comment"><span class="css">        &#125;</span></span></span><br><span class="line"><span class="comment"><span class="css"></span></span></span><br><span class="line"><span class="comment"><span class="css">          */</span></span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是body下的段落1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--如果想为div内所有标签都设置属性，无论用id还是class都不合理，因为当div内的标签过多，我们无法加那么多id或者class--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;id1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;part1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是div下的段落1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是div下的段落2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;aaa&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;ccc&quot;</span>&gt;</span>我是ul&gt;li下的段落1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;ddd&quot;</span>&gt;</span>我是ul&gt;li下的段落2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>点我啊1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>点我啊2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是body下的段落2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> &gt;</span>我是标题1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>有了这个标签，p就不再是紧跟h1标签了,但通用兄弟选择器仍然能选中<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是段落1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是段落2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是段落3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是段落4<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是段落5<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是段落6<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是段落7<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是段落8<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是段落9<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是标题2<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是段落10<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-4-序列选择器"><a href="#3-4-序列选择器" class="headerlink" title="3.4 序列选择器"></a>3.4 序列选择器</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">#2.1 同级别</span></span><br><span class="line"><span class="string">:first-child    p:first-child    同级别的第一个</span></span><br><span class="line"><span class="string">:last-child    p:last-child    同级别的最后一个</span></span><br><span class="line"><span class="string">:nth-child(n)                    同级别的第n个</span></span><br><span class="line"><span class="string">:nth-last-child(n)            同级别的倒数第n个</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#2.2 同级别同类型</span></span><br><span class="line"><span class="string">:first-of-type                    同级别同类型的第一个</span></span><br><span class="line"><span class="string">:last-of-type                    同级别同类型的最后一个</span></span><br><span class="line"><span class="string">:nth-of-type(n)                    同级别同类型的第n个</span></span><br><span class="line"><span class="string">:nth-last-of-type(n)            同级别同类型的倒数第n个</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#2.3 其他</span></span><br><span class="line"><span class="string">:only-of-type                    同类型的唯一一个</span></span><br><span class="line"><span class="string">:only-child                         同级别的唯一一个</span></span><br><span class="line"><span class="string">复制代码</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;序列选择器&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        /*</span><br><span class="line">        p:first-child &#123;</span><br><span class="line">            color: blue;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        p:last-child &#123;</span><br><span class="line">            color: green;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        p:nth-child(<span class="number">3</span>) &#123;</span><br><span class="line">            color: red;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        p:first-of-<span class="built_in">type</span> &#123;</span><br><span class="line">            color: red ;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">         p:last-of-<span class="built_in">type</span> &#123;</span><br><span class="line">            color: red ;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">         p:nth-of-<span class="built_in">type</span>(<span class="number">3</span>) &#123;</span><br><span class="line">            color: red ;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">         */</span><br><span class="line"></span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;a href=<span class="string">&quot;&quot;</span>&gt;&lt;/a&gt;</span><br><span class="line">&lt;h&gt;标题&lt;/h&gt;</span><br><span class="line">&lt;p&gt;我是段落<span class="number">1</span>&lt;/p&gt;</span><br><span class="line">&lt;p&gt;我是段落<span class="number">2</span>&lt;/p&gt;</span><br><span class="line">&lt;p&gt;我是段落<span class="number">3</span>&lt;/p&gt;</span><br><span class="line">&lt;p&gt;我是段落<span class="number">4</span>&lt;/p&gt;</span><br><span class="line">&lt;p&gt;我是段落<span class="number">5</span>&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;hr&gt;</span><br><span class="line">    &lt;p&gt;我是段落<span class="number">6</span>&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;我是段落<span class="number">7</span>&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;我是段落<span class="number">8</span>&lt;/p&gt;</span><br><span class="line">    &lt;hr&gt;</span><br><span class="line">    &lt;hr&gt;</span><br><span class="line">    &lt;hr&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="3-5-属性选择器"><a href="#3-5-属性选择器" class="headerlink" title="3.5 属性选择器"></a>3.5 属性选择器</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">#1、作用：根据指定的属性名称找到对应的标签，然后设置属性</span></span><br><span class="line"><span class="string">       该选择器，最常用于input标签</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">#2、格式与具体用法：</span></span><br><span class="line"><span class="string">    [属性名]</span></span><br><span class="line"><span class="string">    其他选择器[属性名]</span></span><br><span class="line"><span class="string">    [属性名=值]</span></span><br><span class="line"><span class="string">    [属性名^=值]</span></span><br><span class="line"><span class="string">    [属性名$=值]</span></span><br><span class="line"><span class="string">    [属性名*=值]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    例1：找到所有包含id属性的标签</span></span><br><span class="line"><span class="string">        [id]</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    例2：找到所有包含id属性的p标签</span></span><br><span class="line"><span class="string">        p[id]</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    例3：找到所有class属性值为part1的p标签</span></span><br><span class="line"><span class="string">        p[class=&quot;part1&quot;]</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    例4：找到所有href属性值以https开头的a标签</span></span><br><span class="line"><span class="string">        a[href^=&quot;https&quot;]</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">    例5：找到所有src属性值以png结果的img标签</span></span><br><span class="line"><span class="string">        img[src$=&quot;png&quot;]</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">    例6：找到所有class属性值中包含part2的标签</span></span><br><span class="line"><span class="string">        [class*=&quot;part&quot;] </span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;后代选择器&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">    &lt;style <span class="built_in">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><br><span class="line">        [<span class="built_in">id</span>] &#123;</span><br><span class="line">            color: red;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        p[<span class="built_in">id</span>] &#123;</span><br><span class="line">            font-size: 30px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        p[<span class="class"><span class="keyword">class</span>=&quot;<span class="title">part1</span>&quot;] &#123;</span></span><br><span class="line"><span class="class">            <span class="title">color</span>:</span> green;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        a[href^=<span class="string">&quot;https&quot;</span>] &#123;</span><br><span class="line">            font-size: 50px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        img[src$=<span class="string">&quot;png&quot;</span>] &#123;</span><br><span class="line">            width: 100px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        [<span class="class"><span class="keyword">class</span>*=&quot;<span class="title">part</span>&quot;] &#123;</span></span><br><span class="line"><span class="class">            <span class="title">text</span>-<span class="title">decoration</span>:</span> line-through;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1 <span class="built_in">id</span>=<span class="string">&quot;id1&quot;</span>&gt;哈哈啊&lt;/h1&gt;</span><br><span class="line">    &lt;p <span class="built_in">id</span>=<span class="string">&quot;id2&quot;</span>&gt;我是段落<span class="number">1</span>&lt;/p&gt;</span><br><span class="line">    &lt;p <span class="class"><span class="keyword">class</span>=&quot;<span class="title">part1</span>&quot;&gt;我是段落2&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">p</span> <span class="title">class</span>=&quot;<span class="title">xxx</span> <span class="title">part2</span> <span class="title">yyy</span>&quot;&gt;我是段落3&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">a</span> <span class="title">href</span>=&quot;#&quot;&gt;我是我&lt;/<span class="title">a</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">a</span> <span class="title">href</span>=&quot;<span class="title">http</span>:</span>//www.baidu.com<span class="string">&quot;&gt;http://www.baidu.com&lt;/a&gt;</span></span><br><span class="line"><span class="string">    &lt;a href=&quot;</span>https://www.baidu.com<span class="string">&quot;&gt;https://www.baidu.com&lt;/a&gt;</span></span><br><span class="line"><span class="string">    &lt;img src=&quot;</span><span class="number">1.</span>png<span class="string">&quot; alt=&quot;</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;img src=&quot;</span><span class="number">2.j</span>pg<span class="string">&quot; alt=&quot;</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;p&gt;我是段落&lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;p&gt;我是段落&lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;img src=&quot;</span>../day%<span class="number">2050</span>/timg.jfi<span class="string">f&quot; alt=&quot;</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-6-伪类选择器"><a href="#3-6-伪类选择器" class="headerlink" title="3.6 伪类选择器"></a>3.6 伪类选择器</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>伪类选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/* 没有访问的超链接a标签样式：*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">a</span><span class="selector-pseudo">:link</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="comment">/* 访问过的超链接a标签样式：*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">a</span><span class="selector-pseudo">:visited</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: green;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/* 鼠标悬浮在元素上应用样式：*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: black;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/*鼠标点击瞬间的样式：*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">a</span><span class="selector-pseudo">:active</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: gold;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.baidu.com&quot;</span>&gt;</span>来点我啊<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-7-伪元素选择器"><a href="#3-7-伪元素选择器" class="headerlink" title="3.7 伪元素选择器"></a>3.7 伪元素选择器</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>伪元素选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/* 首字母样式调整*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">p</span><span class="selector-pseudo">:first</span>-letter&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">         <span class="selector-tag">p</span>:before&#123;</span></span><br><span class="line"><span class="css">             content: <span class="string">&#x27;+a&#x27;</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="css">             <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">p</span>:after&#123;</span></span><br><span class="line"><span class="css">             content: <span class="string">&#x27;-&#x27;</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: blue;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        </span></span><br><span class="line"><span class="css">        <span class="selector-tag">input</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">outline</span>: none;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: blue;&#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-css属性设置"><a href="#4-css属性设置" class="headerlink" title="4 css属性设置"></a>4 css属性设置</h3><h4 id="4-1-字体属性"><a href="#4-1-字体属性" class="headerlink" title="4.1 字体属性"></a>4.1 字体属性</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1、font-weight：文字粗细</span></span><br><span class="line"></span><br><span class="line">取值描述</span><br><span class="line">normal默认值，标准粗细</span><br><span class="line">bord粗体</span><br><span class="line">border更粗</span><br><span class="line">lighter更细</span><br><span class="line"><span class="number">100</span>~<span class="number">900</span>设置具体粗细，<span class="number">400</span>等同于normal，而<span class="number">700</span>等同于bold</span><br><span class="line">inherit继承父元素字体的粗细值</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2、font-style：文字风格</span></span><br><span class="line"></span><br><span class="line"> normal 正常，默认就是正常的</span><br><span class="line"> italic 倾斜 </span><br><span class="line"><span class="comment"># 3、font-size：文字大小</span></span><br><span class="line"></span><br><span class="line">fs：一般是12px或13px或14px</span><br><span class="line"></span><br><span class="line">注意：</span><br><span class="line"><span class="number">1</span>、通过font-size设置文字大小一定要带单位，即一定要写px</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、如果设置成inherit表示继承父元素的字体大小值。</span><br><span class="line"><span class="comment"># 4、font-family：文字字体</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">复制代码</span></span><br><span class="line"><span class="string">font-family: &quot;Microsoft Yahei&quot;, &quot;微软雅黑&quot;, &quot;Arial&quot;, sans-serif</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">常见字体：</span></span><br><span class="line"><span class="string">serif 衬线字体</span></span><br><span class="line"><span class="string">sans-serif 非衬线字体</span></span><br><span class="line"><span class="string">中文：宋体，微软雅黑，黑体</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">注意：</span></span><br><span class="line"><span class="string">    1、设置的字体必须是用户电脑里已经安装的字体，浏览器会使用它可识别的第一个值。</span></span><br><span class="line"><span class="string">    2、如果取值为中文，需要用单或双引号扩起来</span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">复制代码</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># 5、文字属性简写 </span></span><br><span class="line"></span><br><span class="line">/*font-weight: bolder;*/</span><br><span class="line">/*font-style: italic;*/</span><br><span class="line">/*font-size: 50px;*/</span><br><span class="line">/*font-family: <span class="string">&#x27;serif&#x27;</span>,<span class="string">&#x27;微软雅黑&#x27;</span>;*/</span><br><span class="line">简写为</span><br><span class="line">font: bolder italic 50px <span class="string">&#x27;serif&#x27;</span>,<span class="string">&#x27;微软雅黑&#x27;</span>; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 6、color：文字颜色 </span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">color :red</span></span><br><span class="line"><span class="string">color:rgb(255,255,255)</span></span><br><span class="line"><span class="string">color:rgba(255,255,255,0.1)</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="4-2-文本属性"><a href="#4-2-文本属性" class="headerlink" title="4.2 文本属性"></a>4.2 文本属性</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1、text-align：规定元素中的文本的水平对齐方式。</span></span><br><span class="line"></span><br><span class="line">值描述</span><br><span class="line">left左边对齐 默认值</span><br><span class="line">right右对齐</span><br><span class="line">center居中对齐</span><br><span class="line">justify两端对齐</span><br><span class="line"><span class="comment"># 2、text-decoration：文本装饰</span></span><br><span class="line"></span><br><span class="line">值描述</span><br><span class="line">none默认。定义标准的文本，通常用来去掉a标签的下划线</span><br><span class="line">underline定义文本下的一条线。</span><br><span class="line">overline定义文本上的一条线。</span><br><span class="line">line-through定义穿过文本下的一条线。</span><br><span class="line">inherit继承父元素的text-decoration属性的值。</span><br><span class="line"><span class="comment"># 3、text-indent：首行缩进</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#将段落的第一行缩进 32像素,16px;=1em;</span></span><br><span class="line">p &#123;</span><br><span class="line">  text-indent: 32px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 4、line-height：行高</span></span><br></pre></td></tr></table></figure><h4 id="4-3-背景属性"><a href="#4-3-背景属性" class="headerlink" title="4.3 背景属性"></a>4.3 背景属性</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置标签的背景颜色的</span></span><br><span class="line">background-color: rgba(<span class="number">222</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>);   </span><br><span class="line">background-color: 设置标签背景颜色;</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 设置标签的背景图片</span></span><br><span class="line">background-image: url(<span class="string">&quot;本地图片地址&quot;</span>);</span><br><span class="line">background-image: url(<span class="string">&quot;网址&quot;</span>);</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 设置标签的背景图片的宽、高</span></span><br><span class="line">background-size: 100px 100px;</span><br><span class="line">background-size: <span class="number">100</span>% <span class="number">100</span>%;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置标签的背景图片的平铺方式</span></span><br><span class="line">background-repeat: repeat; <span class="comment">#默认值，在垂直和水平方向都重复</span></span><br><span class="line">background-repeat: no-repeat; <span class="comment">#不重复，背景图片将仅显示一次</span></span><br><span class="line">background-repeat: repeat-x; <span class="comment">#背景图片将在水平方向平铺</span></span><br><span class="line">background-repeat: repeat-y; <span class="comment">#背景图片将在垂直方向平铺</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 设置标签的背景图片在标签中固定或随着页面滚动而滚动</span></span><br><span class="line">background-attachment: scroll; <span class="comment">#默认值，背景图片会随着滚动条的滚动而滚动</span></span><br><span class="line">background-attachment: fixed; <span class="comment">#不会随着滚动条的滚动而滚动</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># background-position：属性，就是专门用于控制背景图片的位置</span></span><br><span class="line"><span class="comment"># background-position：水平方向的值，垂直方向的值</span></span><br><span class="line"><span class="number">1</span>、具体的方位名词</span><br><span class="line"></span><br><span class="line">    水平方向：left，center，right</span><br><span class="line">    垂直方向：top，center，bottom</span><br><span class="line">　　 如果只设置了一个关键词，那么第二个值就是<span class="string">&quot;center&quot;</span>。</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、百分比</span><br><span class="line">　　第一个值是水平位置，第二个值是垂直位置。</span><br><span class="line">　　左上角是 <span class="number">0</span>% <span class="number">0</span>%。右下角是 <span class="number">100</span>% <span class="number">100</span>%。</span><br><span class="line">　　如果只设置了一个值，另一个值就是<span class="number">50</span>%。</span><br><span class="line"><span class="number">3</span>、具体的像素（一定要加px单位）</span><br><span class="line">    例如：30px，50px等等</span><br><span class="line">　　第一个值是水平位置，第二个值是垂直位置。</span><br><span class="line">　　左上角是 <span class="number">0</span> <span class="number">0</span>。单位是像素 (0px 0px) 或任何其他的 CSS 单位。</span><br><span class="line">　　如果只设置了一个值，另一个值就是<span class="number">50</span>%。</span><br><span class="line">　　可以混合使用%和position值。</span><br><span class="line"></span><br><span class="line"><span class="comment"># 背景缩写</span></span><br><span class="line">body &#123; </span><br><span class="line">  background: red url(xx.png) no-repeat fixed center/300px 300px; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/*只能给背景设置透明度*/</span><br><span class="line">/*background-color: rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.65</span>);*/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">background-color: rgb(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">opacity: <span class="number">0.65</span>; /*改变整个标签的透明度*/</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">  div &#123;</span></span><br><span class="line"><span class="string">            width: 900px;</span></span><br><span class="line"><span class="string">            height: 900px;</span></span><br><span class="line"><span class="string">            background-color: wheat;</span></span><br><span class="line"><span class="string">            background-image: url(&quot;https://images2018.cnblogs.com/blog/1036857/201805/1036857-20180516225809591-1990809146.jpg&quot;);</span></span><br><span class="line"><span class="string">            background-size: 300px 300px;</span></span><br><span class="line"><span class="string">            background-repeat: no-repeat;</span></span><br><span class="line"><span class="string">            background-position: right;</span></span><br><span class="line"><span class="string">            opacity: 0.6;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="4-4-盒子模型"><a href="#4-4-盒子模型" class="headerlink" title="4.4 盒子模型"></a>4.4 盒子模型</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># CSS显示模式转换</span></span><br><span class="line"><span class="comment"># display :</span></span><br><span class="line">none HTML文档中元素存在，但是在浏览器中不显示。一般用于配合JavaScript代码使用</span><br><span class="line">block 块级</span><br><span class="line">inline 行内</span><br><span class="line">inline-block 行内块级</span><br><span class="line"></span><br><span class="line"><span class="comment"># 盒子模型通过四个边界来描述：margin（外边距），border（边框），padding（内填充），content（内容区域）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1、border边框</span></span><br><span class="line">同时设置四条边的边框</span><br><span class="line">border:边框的宽度 边框的样式 边框的颜色</span><br><span class="line">分别设置四条边的边框</span><br><span class="line">border-left:边框的宽度 边框的样式 边框的颜色</span><br><span class="line"></span><br><span class="line">border-top:边框的宽度 边框的样式 边框的颜色</span><br><span class="line"></span><br><span class="line">border-right:边框的宽度 边框的样式 边框的颜色</span><br><span class="line"></span><br><span class="line">border-bottom:边框的宽度 边框的样式 边框的颜色</span><br><span class="line">分别指定宽度、格式、颜色</span><br><span class="line"><span class="number">1</span>、连写：（分别设置四条边的边框）</span><br><span class="line">bord-width: 上 右 下 左</span><br><span class="line">border-style:上 右 下 左</span><br><span class="line">border-color：上 右 下 左</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 边框的样式 </span></span><br><span class="line">border-style: </span><br><span class="line">    none 无边框。</span><br><span class="line">    dotted 点状虚线边框。</span><br><span class="line">    dashed 矩形虚线边框。</span><br><span class="line">    solid 实线边框。</span><br><span class="line"><span class="comment"># 边框半径</span></span><br><span class="line">border-radius:</span><br><span class="line">/* 缩写设置 */</span><br><span class="line">border-radius: 20px;/* 所有角设置相同值 */</span><br><span class="line">    </span><br><span class="line">border-radius: 20px 10px 10px 20px; /* 顺时针顺序：上左 上右 下左 下右*/</span><br><span class="line"></span><br><span class="line">/* 百分比设置 */</span><br><span class="line">border-radius: <span class="number">50</span>%; <span class="comment"># ⚪</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/* 椭圆圆弧设置 */</span><br><span class="line">border-radius: <span class="number">25</span>%/<span class="number">50</span>%; /* 前面一个值代表水平方向的半径占总宽度的，后面一个值代表垂直方向 */</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 2、padding内边距：边框与内容的距离就是内边距</span></span><br><span class="line">padding-top：20px；  内容与上边框距离20px</span><br><span class="line">padding-right：20px；内容与右边框距离20px</span><br><span class="line">padding-bottom：20px；内容与下边框距离20px</span><br><span class="line">padding-left：20px；  内容与左边框距离20px</span><br><span class="line">padding：20px 上 右 下 左;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加边框与padding后保持盒子大小不变：方式box-sizing</span></span><br><span class="line">box-sizing: border-box;</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 3、margin外边距：标签与标签之间的距离就是外边距 </span></span><br><span class="line"><span class="comment">## 垂直方向的两个盒子，一个设置bottom一个设置top，会选取一个最大的值作为它俩之间的间距 </span></span><br><span class="line"><span class="comment">## 水平方向的两个盒子，一个设置left一个设置right，两个值会相加作为它俩之间的间距</span></span><br><span class="line"></span><br><span class="line"><span class="comment">###两个嵌套的盒子，内层盒子设置margin-top后会将外层盒子一起顶下来，解决方法如下：</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">1、外部盒子设置一个边框</span></span><br><span class="line"><span class="string">2、外部盒子设置 overflow: hidden; 当子元素的尺寸超过父元素的尺寸时，内容会被修剪，并且其余内容是不可见的，此属性还有清除浮动、清除margin-top塌陷的功能。</span></span><br><span class="line"><span class="string">3、使用伪元素类：</span></span><br><span class="line"><span class="string">.clearfix:before&#123;</span></span><br><span class="line"><span class="string">    content: &#x27;&#x27;;</span></span><br><span class="line"><span class="string">    display:table;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#示范</span></span><br><span class="line"><span class="string">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">&lt;html lang=&quot;en&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;head&gt;</span></span><br><span class="line"><span class="string">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;title&gt;盒子模型宽度和高度&lt;/title&gt;</span></span><br><span class="line"><span class="string">    &lt;style&gt;</span></span><br><span class="line"><span class="string">        .outter &#123;</span></span><br><span class="line"><span class="string">            background-color: green;</span></span><br><span class="line"><span class="string">            width: 300px;</span></span><br><span class="line"><span class="string">            height: 300px;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            /*方式一*/</span></span><br><span class="line"><span class="string">            /*border: 1px solid #000;*/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            /*方式二*/</span></span><br><span class="line"><span class="string">            /*overflow: hidden;*/</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        .inner &#123;</span></span><br><span class="line"><span class="string">            background-color: red;</span></span><br><span class="line"><span class="string">            width: 200px;</span></span><br><span class="line"><span class="string">            height: 200px;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            margin-top: 100px;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        /*方式三*/</span></span><br><span class="line"><span class="string">        .clearfix:before &#123;</span></span><br><span class="line"><span class="string">            display: table;</span></span><br><span class="line"><span class="string">            content: &quot;&quot;;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &lt;/style&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;div class=&quot;outter clearfix&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;inner&quot;&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br><span class="line"><span class="string">margin-top塌陷</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4 盒子居中与内容居中</span></span><br><span class="line">                width: 300px;</span><br><span class="line">                height: 300px;</span><br><span class="line">                background-color: red;</span><br><span class="line"></span><br><span class="line">                /*多行内容水平居中与单行一样*/</span><br><span class="line">                /*text-align: center;*/</span><br><span class="line">                /*line-height: 300px;*/</span><br><span class="line">                    </span><br><span class="line"><span class="comment"># 让行高与盒子高度一样，只能让一行内容垂直居中，如果想让多行内容垂直居中，</span></span><br><span class="line">                    </span><br><span class="line">   /*!*多行内容垂直居中*!*/</span><br><span class="line">               </span><br><span class="line">                text-align:center ;</span><br><span class="line">                line-height: 30px; </span><br><span class="line">                padding-top: 120px;</span><br><span class="line">                padding-bottom: 120px;</span><br><span class="line">                box-sizing: border-box;</span><br><span class="line"></span><br><span class="line">                /*盒子本身水平居中*/</span><br><span class="line">                /*margin: <span class="number">0</span> auto;*/</span><br><span class="line"><span class="comment"># 5 防止文字溢出word-break: break-all;</span></span><br><span class="line"> div &#123;</span><br><span class="line">            word-<span class="keyword">break</span>: <span class="keyword">break</span>-<span class="built_in">all</span>;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment"># 6 清除默认边距</span></span><br><span class="line"><span class="comment">#1、为什么要清空默认边距（外边距和内边距）</span></span><br><span class="line">浏览器会自动附加边距，在企业开发中为了更好的控制盒子的宽高和计算盒子的宽高等等</span><br><span class="line">编写代码之前的第一件事情就是清空默认的边距</span><br><span class="line"></span><br><span class="line"><span class="comment">#2、如何清空默认的边距</span></span><br><span class="line">        * &#123;</span><br><span class="line">            margin: 0px;</span><br><span class="line">            padding: 0px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#3、注意点：</span></span><br><span class="line">    通配符选择器会找到（遍历）当前界面中所有的标签，所以性能不好，参考：https://yuilibrary.com/yui/docs/cssreset/</span><br><span class="line">  </span><br><span class="line">    拷贝代码：</span><br><span class="line">    body,div,dl,dt,dd,ul,ol,li,h1,h2,h3,h4,h5,h6,pre,code,form,fieldset,legend,<span class="built_in">input</span>,textarea,p,blockquote,th,td&#123;margin:<span class="number">0</span>;padding:<span class="number">0</span>&#125;</span><br><span class="line"></span><br><span class="line">    可以查看京东，bat主页也是这么做的，在企业开发中也应该像上面这么写</span><br></pre></td></tr></table></figure><h3 id="5-css网页布局"><a href="#5-css网页布局" class="headerlink" title="5 css网页布局"></a>5 css网页布局</h3><h4 id="5-1-标准流"><a href="#5-1-标准流" class="headerlink" title="5.1 标准流"></a>5.1 标准流</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">标准流的排版方式，又称为：文档流/普通流，所谓的文档流，指的是元素排版布局过程中，元素会自动从左往右，从上往下的流式排列。</span><br><span class="line">#   1 浏览器默认的排版方式就是标准流排版方式</span><br><span class="line"></span><br><span class="line">#   2 在CSS中将元素分为三类：分别是</span><br><span class="line">        块级</span><br><span class="line">        行内</span><br><span class="line">        行内块级</span><br><span class="line"></span><br><span class="line">#  3 在标准流中有两种排版方式，一种是垂直排版，一种是水平排版</span><br><span class="line"></span><br><span class="line">        垂直排版，如果元素是块级元素，那么就会垂直排版</span><br><span class="line">        水平排版，如果元素是行内元素或行内块级元素，那么就会水平排版</span><br></pre></td></tr></table></figure><h4 id="5-2-浮动流"><a href="#5-2-浮动流" class="headerlink" title="5.2 浮动流"></a>5.2 浮动流</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1、浮动流是一种半脱离标准流的排版方式那什么是脱离文档流？什么又是半脱离文档流？</span></span><br><span class="line"><span class="number">1.1</span> 什么是脱离文档流？</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>、浮动元素脱离文档流意味着</span><br><span class="line"><span class="comment">#1、不再区分行内、块级、行内块级，无论是什么级的元素都可以水平排版</span></span><br><span class="line"><span class="comment">#2、无论是什么级的元素都可以设置宽高</span></span><br><span class="line"></span><br><span class="line"><span class="number">1.2</span> 那什么又是半脱离文档流？</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">脱离分为：半脱离与完全脱离，</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">其中完全脱离指的是元素原先在正常文档流中所占的空间会关闭，就好像该元素原来不存在一样</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">而之所以称为半脱离：是因为浮动元素浮动之后的位置取决于它在浮动之前的标准流中的位置，跟标准流还是有一定的关系，比如说浮动的元素在浮动之前处于标准流的第二行，那么他浮动之后也是处于浮动流的第二行，不会去找其他行的浮动元素去贴靠，打一个比方就是：浮动流就是在标准流上面覆盖的一层透明薄膜，元素浮动之后就会被从标准流中扔到浮动流这个薄膜上，他在这个薄膜上的位置还是以前在标准流的位置上找同方向的浮动元素进行贴靠，贴靠的准则就是：</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">（1）同一个方向上谁先浮动，谁在前面</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">（2）不同方向上左浮动找左浮动，右浮动找右浮动</span></span><br><span class="line"><span class="string">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">&lt;html lang=&quot;en&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;head&gt;</span></span><br><span class="line"><span class="string">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;title&gt;浮动元素排序规则&lt;/title&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &lt;style&gt;</span></span><br><span class="line"><span class="string">        .box1 &#123;</span></span><br><span class="line"><span class="string">            float: left;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            width: 100px;</span></span><br><span class="line"><span class="string">            height: 100px;</span></span><br><span class="line"><span class="string">            background-color: red;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        .box2 &#123;</span></span><br><span class="line"><span class="string">            float: left;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            width: 150px;</span></span><br><span class="line"><span class="string">            height: 150px;</span></span><br><span class="line"><span class="string">            background-color: blue;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        .box3 &#123;</span></span><br><span class="line"><span class="string">            float: right;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            width: 250px;</span></span><br><span class="line"><span class="string">            height: 250px;</span></span><br><span class="line"><span class="string">            background-color: yellow;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        .box4 &#123;</span></span><br><span class="line"><span class="string">            float: right;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            width: 300px;</span></span><br><span class="line"><span class="string">            height: 300px;</span></span><br><span class="line"><span class="string">            background-color: rebeccapurple;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &lt;/style&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;div class=&quot;box1&quot;&gt;1&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;box2&quot;&gt;2&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;box3&quot;&gt;3&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;box4&quot;&gt;4&lt;/div&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="number">1.3</span> 浮动元素贴靠问题</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">当父元素的宽度足够显示所有元素时，浮动的元素就会并列显示</span></span><br><span class="line"><span class="string">当父元素的宽度不足够显示所有元素时，浮动的元素就贴前一个元素，如果还不够，就会再贴前一个元素</span></span><br><span class="line"><span class="string">直到贴到父元素左边，此时无论是否宽度足够都会在这一行显示了</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">&lt;html lang=&quot;en&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;head&gt;</span></span><br><span class="line"><span class="string">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;title&gt;浮动元素贴靠问题&lt;/title&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &lt;style&gt;</span></span><br><span class="line"><span class="string">        .father &#123;</span></span><br><span class="line"><span class="string">            width: 400px;</span></span><br><span class="line"><span class="string">            height: 400px;</span></span><br><span class="line"><span class="string">            border: 1px solid #000;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        .box1 &#123;</span></span><br><span class="line"><span class="string">            float: left;</span></span><br><span class="line"><span class="string">            width: 50px;</span></span><br><span class="line"><span class="string">            height: 300px;</span></span><br><span class="line"><span class="string">            background-color: rebeccapurple;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        .box2 &#123;</span></span><br><span class="line"><span class="string">            float: left;</span></span><br><span class="line"><span class="string">            width: 50px;</span></span><br><span class="line"><span class="string">            height: 100px;</span></span><br><span class="line"><span class="string">            background-color: green;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        .box3 &#123;</span></span><br><span class="line"><span class="string">            float: left;</span></span><br><span class="line"><span class="string">            width: 250px;</span></span><br><span class="line"><span class="string">            /*width: 300px;*/</span></span><br><span class="line"><span class="string">            /*width: 310px;*/</span></span><br><span class="line"><span class="string">            /*width: 400px;*/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            height: 100px;</span></span><br><span class="line"><span class="string">            background-color: red;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &lt;/style&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;div class=&quot;father&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;box1&quot;&gt;1&lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;box2&quot;&gt;2&lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;box3&quot;&gt;3&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br><span class="line"><span class="string">示范</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="number">1.4</span> 浮动元素字围现象</span><br><span class="line"><span class="comment"># 没有浮动文字、图片、超链接等元素会给浮动的元素让位置，并围绕在浮动元素的周围 </span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">&lt;html lang=&quot;en&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;head&gt;</span></span><br><span class="line"><span class="string">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;title&gt;浮动元素字围现象&lt;/title&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &lt;style&gt;</span></span><br><span class="line"><span class="string">        img &#123;</span></span><br><span class="line"><span class="string">            float: left;</span></span><br><span class="line"><span class="string">            width:300px;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        p &#123;</span></span><br><span class="line"><span class="string">            background-color: #b9950c;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &lt;/style&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">&lt;img src=&quot;https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1526318630409&amp;di=8186a1ab56ed36696ade3e23a228acfc&amp;imgtype=0&amp;src=http%3A%2F%2Fpic1.win4000.com%2Fwallpaper%2Ff%2F58be1c554d5f0.jpg&quot; alt=&quot;&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;</span></span><br><span class="line"><span class="string">迪丽热巴（Dilraba），1992年6月3日出生于新疆乌鲁木齐市，中国内地影视女演员。2013年，迪丽热巴因主演个人首部电视剧《阿娜尔罕》而出道。2014年，她主演了奇幻剧《逆光之恋》。2015年，迪丽热巴凭借爱情剧《克拉恋人》赢得高人气，并获得国剧盛典最受欢迎新人女演员奖。2016年，其主演的现代剧《麻辣变形计》播出；同年，她还凭借喜剧片《傲娇与偏见》获得中英电影节最佳新人奖。2017年，迪丽热巴因在玄幻剧《三生三世十里桃花》中饰演青丘白凤九而获得白玉兰奖最佳女配角提名。2018年 ...</span></span><br><span class="line"><span class="string">    迪丽热巴（Dilraba），1992年6月3日出生于新疆乌鲁木齐市，中国内地影视女演员 [1]  。</span></span><br><span class="line"><span class="string">2013年，迪丽热巴因主演个人首部电视剧《阿娜尔罕》而出道 [2]  。2014年，她主演了奇幻剧《逆光之恋》 [3]  。2015年，迪丽热巴凭借爱情剧《克拉恋人》赢得高人气，并获得国剧盛典最受欢迎新人女演员奖 [4]  。2016年，其主演的现代剧《麻辣变形计》播出 [5]  ；同年，她还凭借喜剧片《傲娇与偏见》获得中英电影节最佳新人奖 [6]  。2017年，迪丽热巴因在玄幻剧《三生三世十里桃花》中饰演青丘白凤九而获得白玉兰奖最佳女配角提名 [7]  。2018年4月20日，主演的爱情喜剧电影《21克拉》上映 [8]  。</span></span><br><span class="line"><span class="string">    迪丽热巴出生于新疆乌鲁木齐市，父亲是新疆歌舞团的独唱演员。因受父亲影响，迪丽热巴从小便对各种艺术类的东西颇感兴趣，并主动要求学习钢琴、舞蹈、小提琴、吉他等 [9]  。</span></span><br><span class="line"><span class="string">2001年，9岁的迪丽热巴被父亲带去一所艺术学院参加考试，当时她以为是上兴趣班，结果被录取后才发现是一个专业的舞蹈院校，而迪丽热巴也开始了为期六年的民族舞、芭蕾舞专业学习。2007年，从艺术学院毕业的迪丽热巴成为了新疆歌舞团的舞蹈演员 [10]  。2009年，迪丽热巴还在东北师范大学民族学院读了一年预科，在此期间她还参加了吉林省的首届少数民族新歌大赛，并最终获得了省级三等奖的成绩 [11]  。</span></span><br><span class="line"><span class="string">之后，迪丽热巴却慢慢发现这并不是自己想要的生活。于是决定继续求学，去看看外面的世界，因为有不错钢琴基础，所以本来想报考的是中央音乐学院，可报名时却看到了中戏和上戏在招生，便突然决定改学表演。而迪丽热巴会有这样的决定则是受到了她钢琴老师的指点。2010年，迪丽热巴顺利考入了上海戏剧学院表演系戏剧影视专业；同年，她参加了陆川执导的古装片《王的盛宴》女主角“虞姬”的上海站海选 [12]  ，并因此获得了颇多关注 [13]  。</span></span><br><span class="line"><span class="string">&lt;/p&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="5-3-定位流"><a href="#5-3-定位流" class="headerlink" title="5.3 定位流"></a>5.3 定位流</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="6-BOM与DOM操作"><a href="#6-BOM与DOM操作" class="headerlink" title="6 BOM与DOM操作"></a>6 BOM与DOM操作</h3><h4 id="6-1-BOM操作"><a href="#6-1-BOM操作" class="headerlink" title="6.1 BOM操作"></a>6.1 BOM操作</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h4 id="6-2-DOM操作"><a href="#6-2-DOM操作" class="headerlink" title="6.2 DOM操作"></a>6.2 DOM操作</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="7-jQuery"><a href="#7-jQuery" class="headerlink" title="7 jQuery"></a>7 jQuery</h3><h4 id="7-1-jQuery基本使用"><a href="#7-1-jQuery基本使用" class="headerlink" title="7.1  jQuery基本使用"></a>7.1  jQuery基本使用</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">// $(<span class="string">&#x27;.box&#x27;</span>).css(<span class="string">&#x27;display&#x27;</span>,<span class="string">&#x27;block&#x27;</span>)  // 等同于$(<span class="string">&#x27;.box&#x27;</span>).show()</span><br><span class="line">//  $(<span class="string">&#x27;.box&#x27;</span>).hide()  // 隐藏  $(<span class="string">&#x27;.box&#x27;</span>).css(<span class="string">&#x27;display&#x27;</span>,<span class="string">&#x27;none&#x27;</span>)</span><br><span class="line"></span><br><span class="line">//  为box设置css属性</span><br><span class="line">// $(function () &#123;</span><br><span class="line">//     $(<span class="string">&quot;.box&quot;</span>).show().css(<span class="string">&quot;background-color&quot;</span>,<span class="string">&#x27;green&#x27;</span>)</span><br><span class="line">// &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// // js 对象 --》jq 对象</span><br><span class="line">// var d1 = document.getElementById(<span class="string">&#x27;d1&#x27;</span>)</span><br><span class="line">// alert($(d1).text())</span><br><span class="line">// alert(d1.innerText)  //  等同于alert($(<span class="string">&quot;#d1&quot;</span>).text())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// jq对象 --》 js对象</span><br><span class="line">// var box1 = $(<span class="string">&quot;.box&quot;</span>)[<span class="number">0</span>]</span><br><span class="line">// alert(box1.innerText)</span><br><span class="line"></span><br><span class="line">// 隐式迭代</span><br><span class="line">//  $(<span class="string">&quot;.box&quot;</span>).text()</span><br><span class="line">// 等同于</span><br><span class="line">// var x = $(<span class="string">&quot;.box&quot;</span>)</span><br><span class="line">// x.each(function (i,x) &#123;console.log(i,$(x).text())</span><br><span class="line">//</span><br><span class="line">// &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// <span class="keyword">for</span>显式迭代，取出的是js对象</span><br><span class="line">// var x = $(<span class="string">&quot;.box&quot;</span>)</span><br><span class="line">// <span class="keyword">for</span> (var i = <span class="number">0</span>; i &lt; x.length; i++) &#123;</span><br><span class="line">//     console.log(x[i].innerText</span><br><span class="line">//     )&#125;  循环打印出所有为box类的文本</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// each 显示迭代，取出的是js对象</span><br><span class="line">// var x = $(<span class="string">&quot;.box&quot;</span>)</span><br><span class="line">// x.each(function (i,x) &#123;console.log(i,x.innerText)</span><br><span class="line">//</span><br><span class="line">// &#125;)</span><br></pre></td></tr></table></figure><h4 id="7-2-基本选择器"><a href="#7-2-基本选择器" class="headerlink" title="7.2 基本选择器:"></a>7.2 基本选择器:</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">id选择器：</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$(&quot;#id&quot;)</span></span><br><span class="line"><span class="string">标签选择器：</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$(&quot;tagName&quot;)</span></span><br><span class="line"><span class="string">class选择器：</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$(&quot;.className&quot;)</span></span><br><span class="line"><span class="string">所有元素选择器：</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$(&quot;*&quot;)</span></span><br><span class="line"><span class="string">交集选择器：</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$(&quot;div.c1&quot;)  // 找到类为c1的div标签</span></span><br><span class="line"><span class="string">并集选择器：</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$(&quot;#id, .className, tagName&quot;)</span></span><br><span class="line"><span class="string">层级选择器：</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">x和y可以为任意选择器</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$(&quot;x y&quot;);   // x的所有后代y（子子孙孙）</span></span><br><span class="line"><span class="string">$(&quot;x &gt; y&quot;); // x的所有儿子y（儿子）</span></span><br><span class="line"><span class="string">$(&quot;x + y&quot;)  // 找到所有紧挨在x后面的y</span></span><br><span class="line"><span class="string">$(&quot;x ~ y&quot;)  // x之后所有的兄弟y </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#  基本筛选器：</span></span><br><span class="line"><span class="comment"># .first() // 获取匹配的第一个元素</span></span><br><span class="line"> - $(<span class="string">&quot;.box:first&quot;</span>).text()</span><br><span class="line"> - $(<span class="string">&quot;.box&quot;</span>).first().text()  </span><br><span class="line"></span><br><span class="line"><span class="comment"># .last() // 获取匹配的最后一个元素</span></span><br><span class="line"> - $(<span class="string">&quot;.box:last&quot;</span>).text()</span><br><span class="line"> - $(<span class="string">&quot;.box&quot;</span>).last().text()</span><br><span class="line"></span><br><span class="line"><span class="comment"># .eq() // 索引值等于指定值的元素</span></span><br><span class="line"> - $(<span class="string">&quot;.box:eq(2)&quot;</span>).text()</span><br><span class="line"> - $(<span class="string">&quot;.box&quot;</span>).eq(<span class="number">1</span>).text()</span><br><span class="line"></span><br><span class="line"><span class="comment"># .not() // 从匹配元素的集合中删除与指定表达式匹配的元素</span></span><br><span class="line"> - $(<span class="string">&quot;div:not(.box)&quot;</span>)</span><br><span class="line">    </span><br><span class="line"><span class="comment"># .has() // 保留包含特定后代的元素，去掉那些不含有指定后代的元素。</span></span><br><span class="line"> - $(<span class="string">&quot;div:has(p)&quot;</span>)</span><br><span class="line"> - $(<span class="string">&quot;div&quot;</span>).has(<span class="string">&quot;p&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># :even // 匹配所有索引值为偶数的元素，从 0 开始计数</span></span><br><span class="line">- $(<span class="string">&quot;div:even&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># :odd // 匹配所有索引值为奇数的元素，从 0 开始计数</span></span><br><span class="line">- $(<span class="string">&quot;div:odd&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># :gt(index)// 匹配所有大于给定索引值的元素</span></span><br><span class="line">- $(<span class="string">&quot;div:gt(2)&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># :lt(index)// 匹配所有小于给定索引值的元素</span></span><br><span class="line">- $(<span class="string">&quot;div:lt(2)&quot;</span>)  </span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">属性选择器：</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[attribute]</span></span><br><span class="line"><span class="string">[attribute=value]// 属性等于</span></span><br><span class="line"><span class="string">[attribute!=value]// 属性不等于</span></span><br><span class="line"><span class="string">例子：</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// 示例</span></span><br><span class="line"><span class="string">&lt;input type=&quot;text&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input type=&quot;password&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input type=&quot;checkbox&quot;&gt;</span></span><br><span class="line"><span class="string">$(&quot;input[type=&#x27;checkbox&#x27;]&quot;);// 取到checkbox类型的input标签</span></span><br><span class="line"><span class="string">$(&quot;input[type!=&#x27;text&#x27;]&quot;);// 取到类型不是text的input标签</span></span><br><span class="line"><span class="string">表单常用筛选：</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">复制代码</span></span><br><span class="line"><span class="string">:text</span></span><br><span class="line"><span class="string">:password</span></span><br><span class="line"><span class="string">:file</span></span><br><span class="line"><span class="string">:radio</span></span><br><span class="line"><span class="string">:checkbox</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:submit</span></span><br><span class="line"><span class="string">:reset</span></span><br><span class="line"><span class="string">:button</span></span><br><span class="line"><span class="string">复制代码</span></span><br><span class="line"><span class="string">例子：</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$(&quot;:checkbox&quot;)  // 找到所有的checkbox</span></span><br><span class="line"><span class="string">表单对象属性:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:enabled</span></span><br><span class="line"><span class="string">:disabled</span></span><br><span class="line"><span class="string">:checked</span></span><br><span class="line"><span class="string">:selected</span></span><br><span class="line"><span class="string">例子：</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">找到可用的input标签</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;form&gt;</span></span><br><span class="line"><span class="string">  &lt;input name=&quot;email&quot; disabled=&quot;disabled&quot; /&gt;</span></span><br><span class="line"><span class="string">  &lt;input name=&quot;id&quot; /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$(&quot;input:enabled&quot;)  // 找到可用的input标签 </span></span><br><span class="line"><span class="string"> 找到被选中的option：</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">复制代码</span></span><br><span class="line"><span class="string">&lt;select id=&quot;s1&quot;&gt;</span></span><br><span class="line"><span class="string">  &lt;option value=&quot;beijing&quot;&gt;北京市&lt;/option&gt;</span></span><br><span class="line"><span class="string">  &lt;option value=&quot;shanghai&quot;&gt;上海市&lt;/option&gt;</span></span><br><span class="line"><span class="string">  &lt;option selected value=&quot;guangzhou&quot;&gt;广州市&lt;/option&gt;</span></span><br><span class="line"><span class="string">  &lt;option value=&quot;shenzhen&quot;&gt;深圳市&lt;/option&gt;</span></span><br><span class="line"><span class="string">&lt;/select&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$(&quot;:selected&quot;)  // 找到所有被选中的option</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="7-3-筛选器"><a href="#7-3-筛选器" class="headerlink" title="7.3 筛选器"></a>7.3 筛选器</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box a&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box &quot;</span> <span class="attr">id</span>=<span class="string">&quot;d1&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box z&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">id</span>=<span class="string">&quot;d2&quot;</span>&gt;</span>6</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>aaa<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>bbb<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>ccc<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">下一个兄弟元素：</span><br><span class="line">$(&quot;#d1&quot;).next().text()  </span><br><span class="line">&quot;4&quot;</span><br><span class="line"></span><br><span class="line">$(&quot;#d1&quot;).nextAll().text()</span><br><span class="line">&quot;456</span><br><span class="line">    aaa</span><br><span class="line">    bbb</span><br><span class="line">    ccc</span><br><span class="line">&quot;</span><br><span class="line"></span><br><span class="line">$(&quot;#d1&quot;).nextUntil(&#x27;.z&#x27;).text()</span><br><span class="line">&quot;4&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">上一个兄弟元素：</span><br><span class="line"></span><br><span class="line">$(&quot;#d1&quot;).prev().text()</span><br><span class="line">&quot;2&quot;</span><br><span class="line">$(&quot;#d1&quot;).prevAll().text()</span><br><span class="line">&quot;21&quot;</span><br><span class="line">$(&quot;#d2&quot;).prevUntil(&quot;#d1&quot;).text()</span><br><span class="line">&quot;54&quot;</span><br><span class="line"></span><br><span class="line">父亲元素：</span><br><span class="line"></span><br><span class="line">$(&quot;#id&quot;).parent()</span><br><span class="line">$(&quot;#id&quot;).parents()  // 查找当前元素的所有的父辈元素</span><br><span class="line">$(&quot;#id&quot;).parentsUntil() // 查找当前元素的所有的父辈元素，直到遇到匹配的那个元素为止。</span><br><span class="line">儿子和兄弟元素：</span><br><span class="line"></span><br><span class="line">$(&quot;#d2&quot;).children();// 儿子们</span><br><span class="line">0: p</span><br><span class="line">1: p</span><br><span class="line">2: a</span><br><span class="line"></span><br><span class="line">$(&quot;#d2&quot;).siblings();// 兄弟们</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">搜索所有与指定表达式匹配的元素。这个函数是找出正在处理的元素的后代元素的好方法。</span><br><span class="line"></span><br><span class="line">$(&quot;div&quot;).find(&quot;p&quot;)</span><br><span class="line">等价于$(&quot;div p&quot;)</span><br><span class="line"></span><br><span class="line">筛选</span><br><span class="line"></span><br><span class="line">筛选出与指定表达式匹配的元素集合。这个方法用于缩小匹配的范围。用逗号分隔多个表达式。</span><br><span class="line"></span><br><span class="line">$(&quot;div&quot;).filter(&quot;.c1&quot;)  // 从结果集中过滤出有c1样式类的</span><br><span class="line">等价于 $(&quot;div.c1&quot;)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;HTML&quot;&gt;&lt;a href=&quot;#HTML&quot; class=&quot;headerlink&quot; title=&quot;HTML&quot;&gt;&lt;/a&gt;HTML&lt;/h2&gt;&lt;h3 id=&quot;1-head内常用标签&quot;&gt;&lt;a href=&quot;#1-head内常用标签&quot; class=&quot;headerlink&quot; ti</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>python</title>
    <link href="http://example.com/2020/08/23/python/"/>
    <id>http://example.com/2020/08/23/python/</id>
    <published>2020-08-23T09:23:37.000Z</published>
    <updated>2022-09-23T03:30:53.578Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python"><a href="#python" class="headerlink" title="python"></a>python</h1><h2 id="队列与堆栈"><a href="#队列与堆栈" class="headerlink" title="队列与堆栈"></a>队列与堆栈</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">队列:先进先出FIFO</span><br><span class="line">堆栈:后进先出LIFO</span><br></pre></td></tr></table></figure><h2 id="桶排序"><a href="#桶排序" class="headerlink" title="桶排序"></a>桶排序</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bucketSort</span>(<span class="params">nums</span>):</span></span><br><span class="line">    <span class="comment"># 选择最大的数</span></span><br><span class="line">    max_num = <span class="built_in">max</span>(nums)</span><br><span class="line">    <span class="comment"># 创建一个元素全是0的列表，当做桶</span></span><br><span class="line">    bucket = [<span class="number">0</span>] * (max_num + <span class="number">1</span>)</span><br><span class="line">    <span class="comment"># 把所有元素的个数放入桶中与其值相等的下标对应的位置</span></span><br><span class="line">    <span class="comment"># 即其值对应位置的元素的值为其在原列表中的个数</span></span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> nums:</span><br><span class="line">        bucket[num] += <span class="number">1</span></span><br><span class="line">    <span class="comment"># sort_nums存储排序好的元素</span></span><br><span class="line">    sort_nums = []</span><br><span class="line">    <span class="comment"># 取出桶中的元素</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(bucket)):  <span class="comment"># 下标i 其实就是原列表的值</span></span><br><span class="line">        <span class="keyword">if</span> bucket[i] != <span class="number">0</span>:</span><br><span class="line">            <span class="comment"># 下标i对应的值不为0的话，说明原列表存在i这个值，bucket[i]就是i在原列表的个数</span></span><br><span class="line">            <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(bucket[i]):</span><br><span class="line">                sort_nums.append(i)</span><br><span class="line">    <span class="keyword">return</span> sort_nums</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    res = bucketSort([<span class="number">3</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">5</span>])</span><br><span class="line">    <span class="built_in">print</span>(res)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">1、桶排序是稳定的</span></span><br><span class="line"><span class="string">2、桶排序是常见排序里最快的一种, 大多数情况下比快排还要快</span></span><br><span class="line"><span class="string">3、但是同时也非常耗空间,基本上是最耗空间的一种排序算法</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="斐波那契数列"><a href="#斐波那契数列" class="headerlink" title="斐波那契数列"></a>斐波那契数列</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#非递归</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fib</span>(<span class="params">n</span>):</span></span><br><span class="line">    a,b=<span class="number">0</span>,<span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> a &lt; n:</span><br><span class="line">        <span class="built_in">print</span>(a,end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        a,b=b,a+b</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line">fib(<span class="number">10</span>)</span><br><span class="line"><span class="comment">#递归</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fib</span>(<span class="params">a,b,stop</span>):</span></span><br><span class="line">    <span class="keyword">if</span>  a &gt; stop:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="built_in">print</span>(a,end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    fib(b,a+b,stop)</span><br><span class="line"></span><br><span class="line">fib(<span class="number">0</span>,<span class="number">1</span>,<span class="number">10</span>)</span><br></pre></td></tr></table></figure><p>递归法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fibonacci_number</span>(<span class="params">n</span>):</span></span><br><span class="line">    a, b = <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        a, b = b, b + a</span><br><span class="line">    <span class="keyword">return</span> a</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">100</span>):</span><br><span class="line">    <span class="built_in">print</span>(fibonacci_number(i), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">递推法，就是递增法，时间复杂度是 O(n)，呈线性增长，如果数据量巨大，速度会越拖越慢</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span> </span><br></pre></td></tr></table></figure><p>生成器</p><p>用for循环调用generator时，发现拿不到generator的return语句的返回值。如果拿不到返回值，那么就会报错，所以为了不让报错，就要进行异常处理，拿到返回值，如果想要拿到返回值，必须捕获StopIteration错误，返回值包含在StopIteration的value中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fib_number</span>(<span class="params">n</span>):</span></span><br><span class="line">    a, b = <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> n &gt; <span class="number">0</span>:</span><br><span class="line">        a, b = b, a + b</span><br><span class="line">        n -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">yield</span> a</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fib_number</span>(<span class="params">n</span>):</span></span><br><span class="line">    a, b = <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        a, b = b, a+b</span><br><span class="line">        <span class="keyword">yield</span> a</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> fib_number(<span class="number">20</span>):</span><br><span class="line">    <span class="built_in">print</span>(i, end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">带有yield的函数都被看成生成器，生成器是可迭代对象，且具备__iter__和 __next__方法， 可以遍历获取元素, python要求迭代器本身也是可迭代的，所以我们还要为迭代器实现__iter__方法，而__iter__方法要返回一个迭代器，迭代器自身正是一个迭代器，所以迭代器的__iter__方法返回自身即可</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>类内部实现魔法方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FibNumber</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, n</span>):</span></span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        :param n: int 指生成数列的个数</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">        self.n = n</span><br><span class="line">        <span class="comment"># 保存当前生成到的数据列的第几个数据，生成器中性质，记录位置，下一个位置的数据</span></span><br><span class="line">        self.current = <span class="number">0</span></span><br><span class="line">        self.a = <span class="number">0</span></span><br><span class="line">        self.b = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__next__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;当使用next()函数调用时，就会获取下一个数&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> self.current &lt; self.n:</span><br><span class="line">            self.a, self.b = self.b, self.a + self.b</span><br><span class="line">            self.current += <span class="number">1</span></span><br><span class="line">            <span class="keyword">return</span> self.a</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span> StopIteration</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__iter__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;迭代器的__iter__ 返回自身即可&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    fib = FibNumber(<span class="number">20</span>)</span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> fib:</span><br><span class="line">        <span class="built_in">print</span>(num, end=<span class="string">&#x27; &#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;冒泡排序的思想: 每次比较两个相邻的元素, 如果他们的顺序错误就把他们交换位置&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    # 升序排序，从列表最前面开始进行判断，如果后面一个小于前面一个，则交换位置,依次比较</span></span><br><span class="line"><span class="string">    # 第一次循环就会把最大的值放到列表的最后面</span></span><br><span class="line"><span class="string">    # 第二次循环就会把第二大的值放到最大值的前面，以此类推</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bubble_sort</span>(<span class="params">nums</span>):</span></span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(nums) - <span class="number">1</span>, <span class="number">0</span>, -<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> num_index <span class="keyword">in</span> <span class="built_in">range</span>(index):</span><br><span class="line">            <span class="keyword">if</span> nums[num_index] &gt; nums[num_index + <span class="number">1</span>]:</span><br><span class="line">                nums[num_index], nums[num_index + <span class="number">1</span>] = nums[num_index + <span class="number">1</span>], nums[num_index]</span><br><span class="line">    <span class="keyword">return</span> nums</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">res = bubble_sort([<span class="number">29</span>, <span class="number">55</span>, <span class="number">33</span>, <span class="number">44</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">99</span>])</span><br><span class="line"><span class="built_in">print</span>(res)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">[1, 5, 7, 29, 33, 44, 55, 99]</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="快排"><a href="#快排" class="headerlink" title="快排"></a>快排</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">quick_sort</span>(<span class="params">array</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param array: 列表</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    lower = []</span><br><span class="line">    higher = []</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;递归条件结束&#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(array) &lt;= <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> array</span><br><span class="line">    <span class="comment"># 把最后一个弹出来的值作为中间点</span></span><br><span class="line">    pivot = array.pop()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> array:</span><br><span class="line">        <span class="keyword">if</span> i &gt;= pivot:</span><br><span class="line">            higher.append(i)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            lower.append(i)</span><br><span class="line">    <span class="keyword">return</span> quick_sort(lower) + [pivot] + quick_sort(higher)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">res = quick_sort([<span class="number">10</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">55</span>, <span class="number">6</span>, <span class="number">88</span>, <span class="number">99</span>, <span class="number">1999</span>])</span><br><span class="line"><span class="built_in">print</span>(res)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;[6, 10, 22, 33, 55, 88, 99, 1999]</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="排序算法分析"><a href="#排序算法分析" class="headerlink" title="排序算法分析"></a>排序算法分析</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、排序算法的稳定性：如果在对象序列中有两个对象 r[i]和r[j] ,它们的排序码 k[i]==k[j] 。如果排序前后,对象 r[i]和 r[j] 的相对位置不变，则称排序算法是稳定的；否则排序算法是不稳定的。</span><br><span class="line"><span class="number">2</span>、时间开销：排序的时间开销可用算法执行中的数据比较次数与数据移动次数来衡量。</span><br><span class="line">算法运行时间代价的大略估算一般都按平均情况进行估算。对于那些受对象排序码序列初始排列及对象个数影响较大的，需要按最好情况和最坏情况进行估算</span><br><span class="line"><span class="number">3</span>、空间开销：算法执行时所需的附加存储。</span><br></pre></td></tr></table></figure><h2 id="三元表达式"><a href="#三元表达式" class="headerlink" title="三元表达式"></a>三元表达式</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="built_in">input</span>(<span class="string">&#x27;姓名&gt;&gt;: &#x27;</span>)</span><br><span class="line">res=<span class="string">&#x27;SB&#x27;</span> <span class="keyword">if</span> name == <span class="string">&#x27;xxx&#x27;</span> <span class="keyword">else</span> <span class="string">&#x27;NB&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(res)</span><br></pre></td></tr></table></figure><h2 id="列表推导式"><a href="#列表推导式" class="headerlink" title="列表推导式"></a>列表推导式</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">将原列表的值整体+<span class="number">1</span></span><br><span class="line">info = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br><span class="line">a = [i+<span class="number">1</span> <span class="keyword">for</span> i <span class="keyword">in</span> info]</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="生成器表达式"><a href="#生成器表达式" class="headerlink" title="生成器表达式"></a>生成器表达式</h2><p>生成器是一个特殊的程序，可以被用作控制循环的迭代行为，python中生成器是迭代器的一种，使用yield返回值函数，每次调用yield会暂停，而可以使用next()函数和send()函数恢复生成器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">把列表推导式的[]换成()就是生成器表达式</span><br><span class="line">g = (i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(g)) </span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;0&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(g)) </span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;[1,....,99]&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器"></a>迭代器</h2><ul><li>迭代器就是一种不依赖于索引的迭代方法称之为迭代器</li></ul><p>​        优点：<br>​              - 提供一种统一的、不依赖于索引的迭代方式<br>​              - 惰性计算，节省内存<br>​        缺点：<br>​              - 无法获取长度（只有在next完毕才知道到底有几个值）<br>​              - 一次性的，只能往后走，不能往前退往后走，不能往前退</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">迭代器（迭代就是循环）</span><br><span class="line">　　迭代器包含有<span class="built_in">next</span>方法的实现，在正确的范围内返回期待的数据以及超出范围后能够抛出StopIteration的错误停止迭代。</span><br><span class="line"></span><br><span class="line">我们已经知道，可以直接作用于<span class="keyword">for</span>循环的数据类型有以下几种：</span><br><span class="line"></span><br><span class="line">一类是集合数据类型，如<span class="built_in">list</span>,<span class="built_in">tuple</span>,<span class="built_in">dict</span>,<span class="built_in">set</span>,<span class="built_in">str</span>等</span><br><span class="line"></span><br><span class="line">一类是generator，包括生成器和带<span class="keyword">yield</span>的generator function</span><br><span class="line"></span><br><span class="line">这些可以直接作用于<span class="keyword">for</span> 循环的对象统称为可迭代对象：Iterable</span><br><span class="line"></span><br><span class="line">可以使用<span class="built_in">isinstance</span>()判断一个对象是否为可Iterable对象</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> collections <span class="keyword">import</span> Iterable</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">isinstance</span>([], Iterable)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">isinstance</span>(&#123;&#125;, Iterable)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">isinstance</span>(<span class="string">&#x27;abc&#x27;</span>, Iterable)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">isinstance</span>((x <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>)), Iterable)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">isinstance</span>(<span class="number">100</span>, Iterable)</span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure><p>生成器都是<code>Iterator</code>对象，但<code>list</code>、<code>dict</code>、<code>str</code>虽然是<code>Iterable（可迭代对象）</code>，却不是<code>Iterator（迭代器）</code></p><p>**把<code>list</code>、<code>dict</code>、<code>str</code>等<code>Iterable</code>变成<code>Iterator</code>**可以使用<code>iter()</code>函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">isinstance</span>(<span class="built_in">iter</span>([]), Iterator)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">isinstance</span>(<span class="built_in">iter</span>(<span class="string">&#x27;abc&#x27;</span>), Iterator)</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure><p>**<code>判断下列数据类型是可迭代对象or迭代器</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">s=<span class="string">&#x27;hello&#x27;</span>     <span class="comment">#字符串是可迭代对象，但不是迭代器</span></span><br><span class="line">l=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]     <span class="comment">#列表是可迭代对象，但不是迭代器</span></span><br><span class="line">t=(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)       <span class="comment">#元组是可迭代对象，但不是迭代器</span></span><br><span class="line">d=&#123;<span class="string">&#x27;a&#x27;</span>:<span class="number">1</span>&#125;        <span class="comment">#字典是可迭代对象，但不是迭代器</span></span><br><span class="line"><span class="built_in">set</span>=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;     <span class="comment">#集合是可迭代对象，但不是迭代器</span></span><br><span class="line"><span class="comment"># *************************************</span></span><br><span class="line">f=<span class="built_in">open</span>(<span class="string">&#x27;test.txt&#x27;</span>) <span class="comment">#文件是可迭代对象，是迭代器</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#如何判断是可迭代对象，只有__iter__方法，执行该方法得到的迭代器对象。</span></span><br><span class="line"><span class="comment"># 及可迭代对象通过__iter__转成迭代器对象</span></span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Iterator  <span class="comment">#迭代器</span></span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Iterable  <span class="comment">#可迭代对象</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">isinstance</span>(s,Iterator))     <span class="comment">#判断是不是迭代器</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">isinstance</span>(s,Iterable))       <span class="comment">#判断是不是可迭代对象</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#把可迭代对象转换为迭代器</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">isinstance</span>(<span class="built_in">iter</span>(s),Iterator))</span><br></pre></td></tr></table></figure><p><code>yeild总结</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>带有<span class="keyword">yield</span>的函数不再是一个普通的函数，而是一个生成器generator，可用于迭代</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span><span class="keyword">yield</span>是一个类似<span class="keyword">return</span> 的关键字，迭代一次遇到<span class="keyword">yield</span>的时候就返回<span class="keyword">yield</span>后面或者右面的值。而且下一次迭代的时候，从上一次迭代遇到的<span class="keyword">yield</span>后面的代码开始执行</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span><span class="keyword">yield</span>就是<span class="keyword">return</span>返回的一个值，并且记住这个返回的位置。下一次迭代就从这个位置开始。</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>带有<span class="keyword">yield</span>的函数不仅仅是只用于<span class="keyword">for</span>循环，而且可用于某个函数的参数，只要这个函数的参数也允许迭代参数。</span><br></pre></td></tr></table></figure><h2 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">函数的递归调用：就是在调用一个函数的过程中又直接或间接地调用自己</span><br><span class="line">直接调用本身</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f1</span>():</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;from f1&#x27;</span>)</span><br><span class="line">    f1()</span><br><span class="line">f1()</span><br></pre></td></tr></table></figure><p>间接调用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f1</span>(<span class="params">m</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;from f1&#x27;</span>, m)</span><br><span class="line">    f2(m+<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f2</span>(<span class="params">n</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;from f2&#x27;</span>, n)</span><br><span class="line">    f1(n + <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">f1(<span class="number">1</span>)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">from f1 1</span></span><br><span class="line"><span class="string">from f2 2</span></span><br><span class="line"><span class="string">from f1 3</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>递归总结</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">递归调用应该包含两个明确的阶段：回溯，递推</span><br><span class="line">    回溯就是从外向里一层一层递归调用下去，</span><br><span class="line">        回溯阶段必须要有一个明确地结束条件，每进入下一次递归时，问题的规模都应该有所减少（否则，单纯地重复调用自身是毫无意义的）</span><br><span class="line"></span><br><span class="line">    递推就是从里向外一层一层结束递归</span><br></pre></td></tr></table></figure><h2 id="二分法"><a href="#二分法" class="headerlink" title="二分法"></a>二分法</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">array = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">binary_search</span>(<span class="params">array, find_num</span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(array) == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;find_num not exist&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        middle_num_index = <span class="built_in">len</span>(array) // <span class="number">2</span></span><br><span class="line">        <span class="built_in">print</span>(middle_num_index)</span><br><span class="line">        <span class="keyword">if</span> find_num &gt; array[middle_num_index]:</span><br><span class="line">            <span class="string">&#x27;&#x27;&#x27;寻找数》中间数，从列表中间值的下一个数到末尾值区间找&#x27;&#x27;&#x27;</span></span><br><span class="line">            binary_search(array[middle_num_index + <span class="number">1</span>:], find_num)</span><br><span class="line">        <span class="keyword">elif</span> find_num &lt; array[middle_num_index]:</span><br><span class="line">            <span class="string">&#x27;&#x27;&#x27;寻找数《中间数,从列表左边到中间值区间找&#x27;&#x27;&#x27;</span></span><br><span class="line">            binary_search(array[:middle_num_index], find_num)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;find it&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">binary_search(array, <span class="number">7</span>)</span><br></pre></td></tr></table></figure><h2 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h2><ul><li>匿名函数：与函数有相同的作用域，但是匿名意味着引用计数为0，使用一次就释放</li><li>应用：max，min，sorted,map,reduce,filter</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">salaries=&#123;</span><br><span class="line">    <span class="string">&#x27;egon&#x27;</span>:<span class="number">3000</span>,</span><br><span class="line">    <span class="string">&#x27;alex&#x27;</span>:<span class="number">100000000</span>,</span><br><span class="line">    <span class="string">&#x27;wupeiqi&#x27;</span>:<span class="number">10000</span>,</span><br><span class="line">    <span class="string">&#x27;yuanhao&#x27;</span>:<span class="number">2000</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">max</span>(salaries.values()) <span class="comment">#最大薪资，比较的是value</span></span><br><span class="line"><span class="number">100000000</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">min</span>(salaries.values()) <span class="comment">#最小薪资，比较的是key</span></span><br><span class="line"><span class="number">2000</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">max</span>(salaries.keys())   <span class="comment">#最大薪资人名，比较是key中字符串的ASCII码</span></span><br><span class="line"><span class="string">&#x27;yuanhao&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">min</span>(salaries.keys())   <span class="comment">#最小薪资人名，比较是key中字符串的ASCII码</span></span><br><span class="line"><span class="string">&#x27;alex&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">max</span>(salaries,key=<span class="keyword">lambda</span> k:salaries[k]) <span class="comment"># 最大薪资，比较的是salaries的值，得到的是键</span></span><br><span class="line"><span class="string">&#x27;alex&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">min</span>(salaries,key=<span class="keyword">lambda</span> k:salaries[k]) <span class="comment"># 最小薪资，比较的是salaries的值，得到的是键</span></span><br><span class="line"><span class="string">&#x27;yuanhao&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>zip</p><ul><li>解压（元祖的形式）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">先比较值，值相同则比较键</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>zip_obj = <span class="built_in">zip</span>(salaries.values(),salaries.keys())</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">max</span>(zip_obj)</span><br><span class="line">(<span class="number">100000000</span>, <span class="string">&#x27;alex&#x27;</span>)</span><br><span class="line"></span><br><span class="line">zip_obj是迭代器，因而只能访问一次</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">min</span>(zip_obj)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">ValueError: <span class="built_in">min</span>() arg <span class="keyword">is</span> an empty sequence</span><br></pre></td></tr></table></figure><p>map</p><ul><li><p>映射</p></li><li><p>Python 2.x 返回列表</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">square</span>(<span class="params">x</span>) :</span>            <span class="comment"># 计算平方数</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> x ** <span class="number">2</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">map</span>(square, [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>])   <span class="comment"># 计算列表各个元素的平方</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">map</span>(<span class="keyword">lambda</span> x: x ** <span class="number">2</span>, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])  <span class="comment"># 使用 lambda 匿名函数</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提供了两个列表，对相同位置的列表数据进行相加</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">map</span>(<span class="keyword">lambda</span> x, y: x + y, [<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>], [<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>])</span><br><span class="line">[<span class="number">3</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">15</span>, <span class="number">19</span>]</span><br></pre></td></tr></table></figure><ul><li>Python 3.x 返回迭代器</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">square</span>(<span class="params">x</span>) :</span>         <span class="comment"># 计算平方数</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> x ** <span class="number">2</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">map</span>(square, [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>])    <span class="comment"># 计算列表各个元素的平方</span></span><br><span class="line">&lt;<span class="built_in">map</span> <span class="built_in">object</span> at <span class="number">0x100d3d550</span>&gt;     <span class="comment"># 返回迭代器</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">list</span>(<span class="built_in">map</span>(square, [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]))   <span class="comment"># 使用 list() 转换为列表</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x: x ** <span class="number">2</span>, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]))   <span class="comment"># 使用 lambda 匿名函数</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>]</span><br></pre></td></tr></table></figure><p>map映射一个新列表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">dic_list = [&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;alex&#x27;</span>, <span class="string">&#x27;gender&#x27;</span>: <span class="string">&#x27;male&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="string">&#x27;38&#x27;</span>, <span class="string">&#x27;salary&#x27;</span>: <span class="string">&#x27;30000&#x27;</span>&#125;]</span><br><span class="line">new_dic_list = <span class="built_in">map</span>(<span class="keyword">lambda</span> dic: &#123;<span class="string">&#x27;name&#x27;</span>: dic[<span class="string">&#x27;name&#x27;</span>].upper(),</span><br><span class="line">                                <span class="string">&#x27;&#x27;&#x27;title()首字母变大写&#x27;&#x27;&#x27;</span></span><br><span class="line">                                <span class="string">&#x27;gender&#x27;</span>: dic[<span class="string">&#x27;gender&#x27;</span>].title(),</span><br><span class="line">                                <span class="string">&#x27;age&#x27;</span>: dic[<span class="string">&#x27;age&#x27;</span>].title(),</span><br><span class="line">                                <span class="string">&#x27;salary&#x27;</span>: dic[<span class="string">&#x27;salary&#x27;</span>]</span><br><span class="line">                                &#125;, dic_list)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(new_dic_list))</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;[&#123;&#x27;name&#x27;: &#x27;ALEX&#x27;, &#x27;gender&#x27;: &#x27;Male&#x27;, &#x27;age&#x27;: &#x27;38&#x27;, &#x27;salary&#x27;: &#x27;30000&#x27;&#125;]&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>filter</p><ul><li>过滤</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">dic_list = [&#123;&#x27;name&#x27;: &#x27;alex&#x27;, &#x27;gender&#x27;: &#x27;male&#x27;, &#x27;age&#x27;: &#x27;38&#x27;, &#x27;salary&#x27;: &#x27;30000&#x27;&#125;,</span><br><span class="line">            &#123;&#x27;name&#x27;: &#x27;blex&#x27;, &#x27;gender&#x27;: &#x27;male&#x27;, &#x27;age&#x27;: &#x27;38&#x27;, &#x27;salary&#x27;: &#x27;30000&#x27;&#125;]</span><br><span class="line"></span><br><span class="line">g = filter(lambda dic: dic[&#x27;name&#x27;].startswith(&#x27;a&#x27;), dic_list)</span><br><span class="line">print(list(g))</span><br><span class="line">&#x27;&#x27;&#x27;[&#123;&#x27;name&#x27;: &#x27;ALEX&#x27;, &#x27;gender&#x27;: &#x27;Male&#x27;, &#x27;age&#x27;: &#x27;38&#x27;, &#x27;salary&#x27;: &#x27;30000&#x27;&#125;]&#x27;&#x27;&#x27;</span><br></pre></td></tr></table></figure><h2 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h2><ul><li>内部函数引用了外层函数的参数和临时变量</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">在内函数中，如果想改变外部函数的临时变量</span></span><br><span class="line"><span class="string">方法1 nonlocal关键字声明</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">方法2，把闭包变量修改成可变数据类型 比如列表</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># 方法1</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">counter</span>():</span></span><br><span class="line">    n = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">incr</span>():</span></span><br><span class="line">        <span class="keyword">nonlocal</span> n</span><br><span class="line">        x = n</span><br><span class="line">        n += <span class="number">1</span></span><br><span class="line">        <span class="built_in">print</span>(x)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> incr</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">c = counter()</span><br><span class="line">c()  <span class="comment"># 0</span></span><br><span class="line">c()  <span class="comment"># 1</span></span><br><span class="line">c()  <span class="comment"># 2</span></span><br><span class="line">c()  <span class="comment"># 3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法2</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">counter</span>():</span></span><br><span class="line">    n = [<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">incr</span>():</span></span><br><span class="line"></span><br><span class="line">        n[<span class="number">0</span>] += <span class="number">1</span></span><br><span class="line">        <span class="built_in">print</span>(n[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> incr</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">c = counter()</span><br><span class="line">c()  <span class="comment"># 0</span></span><br><span class="line">c()  <span class="comment"># 1</span></span><br><span class="line">c()  <span class="comment"># 2</span></span><br><span class="line">c()  <span class="comment"># 3</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="装饰器"><a href="#装饰器" class="headerlink" title="装饰器"></a>装饰器</h2><p><img src="/2020/08/23/python/image-20201121173051673.png" alt="python"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> wraps</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">wrapper</span>(<span class="params">f</span>):</span></span><br><span class="line">    <span class="comment"># 2. f = func</span></span><br><span class="line"><span class="meta">    @wraps(<span class="params">f</span>)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">inner</span>(<span class="params">*args, **kwargs</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="number">111</span>)  <span class="comment"># 5. 打印111</span></span><br><span class="line">        ret = f(*args, **kwargs)  <span class="comment"># 6 func(*args, **kwargs) 执行func函数</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="number">222</span>)  <span class="comment"># 8 打印222</span></span><br><span class="line">        <span class="keyword">return</span> ret</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> inner  <span class="comment"># 3. 返回inner的内存地址</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@wrapper  </span><span class="comment"># 1. func = wrapper(func)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span>():</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;in func&#x27;</span>)  <span class="comment"># 7.打印 in func</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">func()  <span class="comment"># 4. func() 相当于 inner()</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(func, func.__name__)  <span class="comment"># (不加装饰器wraps) &lt;function wrapper.&lt;locals&gt;.inner at 0x0000028AD703E8B8&gt; inner</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;打印结果</span></span><br><span class="line"><span class="string">111</span></span><br><span class="line"><span class="string">in func</span></span><br><span class="line"><span class="string">222</span></span><br><span class="line"><span class="string">&lt;function func at 0x000002D120EAE8B8&gt; func (加了装饰器wraps)</span></span><br></pre></td></tr></table></figure><h2 id="计时器使用之装饰器"><a href="#计时器使用之装饰器" class="headerlink" title="计时器使用之装饰器"></a>计时器使用之装饰器</h2><ul><li>装饰器遵循开放封闭的原则，再不改变原代码的基础上，为函数新增功能</li><li>应用场景：统计时间，登录</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> functools</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trace</span>(<span class="params">func</span>):</span></span><br><span class="line"><span class="meta">    @functools.wraps(<span class="params">func</span>)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span>(<span class="params">*args, **kwargs</span>):</span></span><br><span class="line">        start = time.time()</span><br><span class="line">        v = func(*args, **kwargs)</span><br><span class="line">        end = time.time()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125;, &#123;&#125;, &#123;&#125;, &#123;&#125;, cost: &#123;&#125; seconds&#x27;</span>.<span class="built_in">format</span>(</span><br><span class="line">                func.__name__, args, kwargs, v, (end - start)))</span><br><span class="line">        <span class="keyword">return</span> v</span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@trace</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span>():</span></span><br><span class="line">    it = <span class="built_in">iter</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="built_in">next</span>(it))</span><br><span class="line">        <span class="keyword">except</span> StopIteration:</span><br><span class="line">            <span class="comment"># 遇到StopIteration就跳出循环, 且自动频闭StopIteration异常</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">test()</span><br></pre></td></tr></table></figure><h2 id="有参装饰器"><a href="#有参装饰器" class="headerlink" title="有参装饰器"></a>有参装饰器</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">outter</span>(<span class="params">engine</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">deco2</span>(<span class="params">func2</span>):</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">wrapper2</span>(<span class="params">*args, **kwargs</span>):</span></span><br><span class="line">            inp_name = <span class="built_in">input</span>(<span class="string">&#x27;username&gt;&gt;&gt;: &#x27;</span>).strip()</span><br><span class="line">            inp_pwd = <span class="built_in">input</span>(<span class="string">&#x27;password&gt;&gt;&gt;: &#x27;</span>).strip()</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> engine == <span class="string">&quot;file&quot;</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;基于file的认证&#x27;</span>)</span><br><span class="line">                <span class="keyword">if</span> inp_name == <span class="string">&quot;egon&quot;</span> <span class="keyword">and</span> inp_pwd == <span class="string">&quot;123&quot;</span>:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&#x27;login successful&#x27;</span>)</span><br><span class="line">                    res = func2(*args, **kwargs)</span><br><span class="line">                    <span class="keyword">return</span> res</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&#x27;username or password error&#x27;</span>)</span><br><span class="line">            <span class="keyword">elif</span> engine == <span class="string">&#x27;mysql&#x27;</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;基于mysql的认证&#x27;</span>)</span><br><span class="line">            <span class="keyword">elif</span> engine == <span class="string">&#x27;ldap&#x27;</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;基于ldap的认证&#x27;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;未知的engine&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> wrapper2</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> deco2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@outter(<span class="params">engine=<span class="string">&#x27;file&#x27;</span></span>)  </span><span class="comment"># @deco2 # index=deco2(index)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>(<span class="params">x, y</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;index=&gt;&#x27;</span>, x, y)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">index(<span class="number">1</span>, <span class="number">2</span>)  <span class="comment"># index=&gt;wrapper2</span></span><br></pre></td></tr></table></figure><h2 id="常用模块"><a href="#常用模块" class="headerlink" title="常用模块"></a>常用模块</h2><ul><li>time</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>time.time()  时间戳</span><br><span class="line"><span class="number">1627206013.6049714</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>time.strftime(<span class="string">&quot;%Y-%m-%d %X&quot;</span>) 格式化时间字符串</span><br><span class="line"><span class="string">&#x27;2021-07-25 17:40:25&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>time.strftime(<span class="string">&quot;%Y-%m-%d %X&quot;</span>)</span><br><span class="line"><span class="string">&#x27;2021-07-25 17:40:37&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>time.gmtime()</span><br><span class="line">time.struct_time(tm_year=<span class="number">2021</span>, tm_mon=<span class="number">7</span>, tm_mday=<span class="number">25</span>, tm_hour=<span class="number">9</span>, tm_min=<span class="number">40</span>, tm_sec=<span class="number">43</span>, tm_wday=<span class="number">6</span>, tm_yday=<span class="number">206</span>, tm_isdst=<span class="number">0</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>time.localtime()</span><br><span class="line">time.struct_time(tm_year=<span class="number">2021</span>, tm_mon=<span class="number">7</span>, tm_mday=<span class="number">25</span>, tm_hour=<span class="number">17</span>, tm_min=<span class="number">41</span>, tm_sec=<span class="number">7</span>, tm_wday=<span class="number">6</span>, tm_yday=<span class="number">206</span>, tm_isdst=<span class="number">0</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>datetime</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>datetime.datetime.now() </span><br><span class="line">datetime.datetime(<span class="number">2021</span>, <span class="number">7</span>, <span class="number">25</span>, <span class="number">17</span>, <span class="number">44</span>, <span class="number">1</span>, <span class="number">343302</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>datetime.date.fromtimestamp(time.time()) <span class="comment"># 日期格式</span></span><br><span class="line">datetime.date(<span class="number">2021</span>, <span class="number">7</span>, <span class="number">25</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>datetime.datetime.now() + datetime.timedelta(<span class="number">3</span>) <span class="comment"># 当前时间+3天</span></span><br><span class="line">datetime.datetime(<span class="number">2021</span>, <span class="number">7</span>, <span class="number">28</span>, <span class="number">17</span>, <span class="number">45</span>, <span class="number">21</span>, <span class="number">190108</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>random</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(random.random()) <span class="comment">#0.9452247845902332 大于0且小于1之间的小数</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(random.randint(<span class="number">1</span>,<span class="number">6</span>)) <span class="comment"># 大于等于1且小于等于6之间的整数</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(random.randrange(<span class="number">1</span>,<span class="number">6</span>)) <span class="comment"># 大于等于1且小于6之间的整数</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(random.choice([<span class="number">1</span>,<span class="string">&quot;11&quot;</span>,[<span class="number">4</span>,<span class="number">5</span>]])) <span class="comment">#1或者11或者[4,5]</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(random.sample([<span class="number">1</span>,<span class="string">&quot;11&quot;</span>,[<span class="number">4</span>,<span class="number">5</span>]],<span class="number">2</span>)) <span class="comment">#列表元素任意2个组合 [&#x27;11&#x27;, 1]</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(random.uniform(<span class="number">1</span>,<span class="number">3</span>)) <span class="comment">#大于1小于3的小数，如1.927109612082716</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">0.17907399398718404</span></span><br><span class="line"><span class="string">3</span></span><br><span class="line"><span class="string">2</span></span><br><span class="line"><span class="string">[4, 5]</span></span><br><span class="line"><span class="string">[1, [4, 5]]</span></span><br><span class="line"><span class="string">2.5553886836999373</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">item = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>]</span><br><span class="line">random.shuffle(item) <span class="comment">##打乱item的顺序,相当于&quot;洗牌&quot;</span></span><br><span class="line"><span class="built_in">print</span>(item)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;[1, 7, 5, 9, 3]&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">code</span>(<span class="params">n</span>):</span>  <span class="comment">#随机验证码</span></span><br><span class="line">    res = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        s1 = <span class="built_in">str</span>(random.randint(<span class="number">1</span>, <span class="number">10</span>))</span><br><span class="line">        s2 = <span class="built_in">chr</span>(random.randint(<span class="number">65</span>, <span class="number">90</span>))</span><br><span class="line">        res += random.choice([s1, s2])</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(code(<span class="number">5</span>))</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;BDG6D&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>json</li><li>序列化:把python的对象编码转换为json格式的字符串，用以保存在文件中或通过网络传输，称之为序列化过程, 在序列化时，中文汉字总是被转换为unicode码，在dumps函数中添加参数ensure_ascii=False即可解决。</li><li>反序列化:把json格式字符串解码为python数据对象，转换成内存中原来的数据类型，称之为反序列化过程</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1、序列化与反序列化</span></span><br><span class="line"><span class="comment"># json</span></span><br><span class="line"><span class="comment"># 优点：跨平台交互数据</span></span><br><span class="line"><span class="comment"># 缺点：无法识别所有的python数据类型</span></span><br><span class="line"><span class="comment"># 注意：json格式的字符串里不能包含单引号</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#序列化方式一</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line">t =&#123;<span class="string">&#x27;a&#x27;</span>:<span class="number">1</span>,<span class="string">&#x27;b&#x27;</span>:<span class="number">2</span>,<span class="string">&#x27;c&#x27;</span>:<span class="number">3</span>&#125;</span><br><span class="line">res = json.dumps(t)</span><br><span class="line"><span class="built_in">print</span>(res,<span class="built_in">type</span>(res))</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;db.txx&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,encoding=<span class="string">&#x27;utf_8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(res)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;&#123;&quot;a&quot;: 1, &quot;b&quot;: 2, &quot;c&quot;: 3&#125; &lt;class &#x27;str&#x27;&gt;&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 反序列化方式一</span></span><br><span class="line">t =&#123;<span class="string">&#x27;a&#x27;</span>:<span class="number">1</span>,<span class="string">&#x27;b&#x27;</span>:<span class="number">2</span>,<span class="string">&#x27;c&#x27;</span>:<span class="number">3</span>&#125;</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;db.txx&#x27;</span>,<span class="string">&#x27;r&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">   res = json.loads(f.read())</span><br><span class="line">   <span class="built_in">print</span>(res)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;&#123;&#x27;a&#x27;: 1, &#x27;b&#x27;: 2, &#x27;c&#x27;: 3&#125;&#x27;&#x27;&#x27;</span> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#序列化方式二</span></span><br><span class="line">t =&#123;<span class="string">&#x27;a&#x27;</span>:<span class="number">1</span>,<span class="string">&#x27;b&#x27;</span>:<span class="number">2</span>,<span class="string">&#x27;c&#x27;</span>:<span class="number">3</span>&#125;   <span class="comment"># 字典=======》json格式的字符串：&quot;&#123;&#x27;a&#x27;:1,&#x27;b&#x27;:2,&#x27;c&#x27;:3&#125; &quot;</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;.db.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    json.dump(t,f)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;文件：&#123;&quot;a&quot;: 1, &quot;b&quot;: 2, &quot;c&quot;: 3&#125;&#x27;&#x27;&#x27;</span> </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment"># 反序列化方式二</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;.db.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    res = json.load(f)</span><br><span class="line">    <span class="built_in">print</span>(res,<span class="built_in">type</span>(res))</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;&#123;&#x27;a&#x27;: 1, &#x27;b&#x27;: 2, &#x27;c&#x27;: 3&#125; &lt;class &#x27;dict&#x27;&gt;&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 序列化与反序列化其它数据类型</span></span><br><span class="line"><span class="comment"># 序列化</span></span><br><span class="line">s = json.dumps((<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>))</span><br><span class="line"><span class="built_in">print</span>(s) <span class="comment"># [1, 2, 3] 元组序列化后转成列表</span></span><br><span class="line"></span><br><span class="line">s = json.dumps((<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(s,<span class="built_in">type</span>(s)) <span class="comment"># 1 &lt;class &#x27;str&#x27;&gt;</span></span><br><span class="line"></span><br><span class="line">s = json.dumps(&#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;lhj&#x27;</span>,<span class="string">&#x27;age&#x27;</span>:<span class="number">18</span>&#125;)</span><br><span class="line"><span class="built_in">print</span>(s,<span class="built_in">type</span>(s)) <span class="comment"># 字典序列化后成字符串&#123;&quot;name&quot;: &quot;lhj&quot;, &quot;age&quot;: 18&#125; &lt;class &#x27;str&#x27;&gt;</span></span><br><span class="line"></span><br><span class="line">s = json.dumps(<span class="built_in">set</span>(<span class="string">&#x27;aaabbc&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(s) <span class="comment"># 报错 集合不可以被序列化</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;s = json.dumps(set(&#x27;aaabbc&#x27;))</span></span><br><span class="line"><span class="string">print(s) # 报错 集合不可以被序列化&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 反序列化</span></span><br><span class="line">s = json.dumps([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line">ls = json.loads(s)</span><br><span class="line"><span class="built_in">print</span>(ls,<span class="built_in">type</span>(ls))</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;[1, 2, 3] &lt;class &#x27;list&#x27;&gt;&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">s = json.dumps(<span class="string">&#x27;abcd&#x27;</span>)</span><br><span class="line">ls = json.loads(s)</span><br><span class="line"><span class="built_in">print</span>(ls,<span class="built_in">type</span>(ls))</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;abcd &lt;class &#x27;str&#x27;&gt;&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>os</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">os模块是与操作系统交互的一个接口</span><br><span class="line">os.getcwd() 获取当前工作目录，即当前python脚本工作的目录路径</span><br><span class="line">os.chdir(<span class="string">&quot;dirname&quot;</span>)  改变当前脚本工作目录；相当于shell下cd</span><br><span class="line">os.curdir  返回当前目录: (<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">os.pardir  获取当前目录的父目录字符串名：(<span class="string">&#x27;..&#x27;</span>)</span><br><span class="line">os.makedirs(<span class="string">&#x27;dirname1/dirname2&#x27;</span>)    可生成多层递归目录</span><br><span class="line">os.removedirs(<span class="string">&#x27;dirname1&#x27;</span>)    若目录为空，则删除，并递归到上一级目录，如若也为空，则删除，依此类推</span><br><span class="line">os.mkdir(<span class="string">&#x27;dirname&#x27;</span>)    生成单级目录；相当于shell中mkdir dirname</span><br><span class="line">os.rmdir(<span class="string">&#x27;dirname&#x27;</span>)    删除单级空目录，若目录不为空则无法删除，报错；相当于shell中rmdir dirname</span><br><span class="line">os.listdir(<span class="string">&#x27;dirname&#x27;</span>)    列出指定目录下的所有文件和子目录，包括隐藏文件，并以列表方式打印</span><br><span class="line">os.remove()  删除一个文件</span><br><span class="line">os.rename(<span class="string">&quot;oldname&quot;</span>,<span class="string">&quot;newname&quot;</span>)  重命名文件/目录</span><br><span class="line">os.stat(<span class="string">&#x27;path/filename&#x27;</span>)  获取文件/目录信息</span><br><span class="line">os.sep    输出操作系统特定的路径分隔符，win下为<span class="string">&quot;\\&quot;</span>,Linux下为<span class="string">&quot;/&quot;</span></span><br><span class="line">os.linesep    输出当前平台使用的行终止符，win下为<span class="string">&quot;\t\n&quot;</span>,Linux下为<span class="string">&quot;\n&quot;</span></span><br><span class="line">os.pathsep    输出用于分割文件路径的字符串 win下为;,Linux下为:</span><br><span class="line">os.name    输出字符串指示当前使用平台。win-&gt;<span class="string">&#x27;nt&#x27;</span>; Linux-&gt;<span class="string">&#x27;posix&#x27;</span></span><br><span class="line">os.system(<span class="string">&quot;bash command&quot;</span>)  运行shell命令，直接显示</span><br><span class="line">os.environ  获取系统环境变量</span><br><span class="line">os.path.abspath(path)  返回path规范化的绝对路径</span><br><span class="line">os.path.split(path)  将path分割成目录和文件名二元组返回</span><br><span class="line">os.path.dirname(path)  返回path的目录。其实就是os.path.split(path)的第一个元素</span><br><span class="line">os.path.basename(path)  返回path最后的文件名。如何path以／或\结尾，那么就会返回空值。即os.path.split(path)的第二个元素</span><br><span class="line">os.path.exists(path)  如果path存在，返回<span class="literal">True</span>；如果path不存在，返回<span class="literal">False</span></span><br><span class="line">os.path.isabs(path)  如果path是绝对路径，返回<span class="literal">True</span></span><br><span class="line">os.path.isfile(path)  如果path是一个存在的文件，返回<span class="literal">True</span>。否则返回<span class="literal">False</span></span><br><span class="line">os.path.isdir(path)  如果path是一个存在的目录，则返回<span class="literal">True</span>。否则返回<span class="literal">False</span></span><br><span class="line">os.path.join(path1[, path2[, ...]])  将多个路径组合后返回，第一个绝对路径之前的参数将被忽略</span><br><span class="line">os.path.getatime(path)  返回path所指向的文件或者目录的最后存取时间</span><br><span class="line">os.path.getmtime(path)  返回path所指向的文件或者目录的最后修改时间</span><br><span class="line">os.path.getsize(path) 返回path的大小</span><br></pre></td></tr></table></figure><ul><li>sys</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">python解释器相关的操作</span><br><span class="line"><span class="comment"># 获取命令行方式运行脚本的后面参数</span></span><br><span class="line"><span class="number">1</span> sys.argv[<span class="number">0</span>]        命令行参数<span class="type">List</span>，第一个元素是程序本身路径</span><br><span class="line"><span class="number">2</span> sys.exit(n)        退出程序，正常退出时exit(<span class="number">0</span>)</span><br><span class="line"><span class="number">3</span> sys.version        获取Python解释程序的版本信息</span><br><span class="line"><span class="number">4</span> sys.maxint         最大的Int值</span><br><span class="line"><span class="number">5</span> sys.path           返回模块的搜索路径，初始化时使用PYTHONPATH环境变量的值</span><br><span class="line"><span class="number">6</span> sys.platform       返回操作系统平台名称</span><br></pre></td></tr></table></figure><ul><li>configpaser</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">cofig.cfg配置文件</span><br><span class="line"><span class="comment"># 注释1</span></span><br><span class="line">; 注释<span class="number">2</span></span><br><span class="line"></span><br><span class="line">[section1]</span><br><span class="line">k1 = v1</span><br><span class="line">k2:v2</span><br><span class="line">user=egon</span><br><span class="line">age=<span class="number">18</span></span><br><span class="line">is_admin=true</span><br><span class="line">salary=<span class="number">31</span></span><br><span class="line"></span><br><span class="line">[section2]</span><br><span class="line">k1 = v1</span><br></pre></td></tr></table></figure><ul><li>读取</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> configparser</span><br><span class="line"></span><br><span class="line">config=configparser.ConfigParser()</span><br><span class="line">config.read(<span class="string">&#x27;a.cfg&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看所有的标题</span></span><br><span class="line">res=config.sections() <span class="comment">#[&#x27;section1&#x27;, &#x27;section2&#x27;]</span></span><br><span class="line"><span class="built_in">print</span>(res)</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看标题section1下所有key=value的key</span></span><br><span class="line">options=config.options(<span class="string">&#x27;section1&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(options) <span class="comment">#[&#x27;k1&#x27;, &#x27;k2&#x27;, &#x27;user&#x27;, &#x27;age&#x27;, &#x27;is_admin&#x27;, &#x27;salary&#x27;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看标题section1下所有key=value的(key,value)格式</span></span><br><span class="line">item_list=config.items(<span class="string">&#x27;section1&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(item_list) <span class="comment">#[(&#x27;k1&#x27;, &#x27;v1&#x27;), (&#x27;k2&#x27;, &#x27;v2&#x27;), (&#x27;user&#x27;, &#x27;egon&#x27;), (&#x27;age&#x27;, &#x27;18&#x27;), (&#x27;is_admin&#x27;, &#x27;true&#x27;), (&#x27;salary&#x27;, &#x27;31&#x27;)]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看标题section1下user的值=&gt;字符串格式</span></span><br><span class="line">val=config.get(<span class="string">&#x27;section1&#x27;</span>,<span class="string">&#x27;user&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(val) <span class="comment">#egon</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看标题section1下age的值=&gt;整数格式</span></span><br><span class="line">val1=config.getint(<span class="string">&#x27;section1&#x27;</span>,<span class="string">&#x27;age&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(val1) <span class="comment">#18</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看标题section1下is_admin的值=&gt;布尔值格式</span></span><br><span class="line">val2=config.getboolean(<span class="string">&#x27;section1&#x27;</span>,<span class="string">&#x27;is_admin&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(val2) <span class="comment">#True</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看标题section1下salary的值=&gt;浮点型格式</span></span><br><span class="line">val3=config.getfloat(<span class="string">&#x27;section1&#x27;</span>,<span class="string">&#x27;salary&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(val3) <span class="comment">#31.0</span></span><br></pre></td></tr></table></figure><ul><li>改写</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> configparser</span><br><span class="line"></span><br><span class="line">config=configparser.ConfigParser()</span><br><span class="line">config.read(<span class="string">&#x27;a.cfg&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#删除整个标题section2</span></span><br><span class="line">config.remove_section(<span class="string">&#x27;section2&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除标题section1下的某个k1和k2</span></span><br><span class="line">config.remove_option(<span class="string">&#x27;section1&#x27;</span>,<span class="string">&#x27;k1&#x27;</span>)</span><br><span class="line">config.remove_option(<span class="string">&#x27;section1&#x27;</span>,<span class="string">&#x27;k2&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#判断是否存在某个标题</span></span><br><span class="line"><span class="built_in">print</span>(config.has_section(<span class="string">&#x27;section1&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#判断标题section1下是否有user</span></span><br><span class="line"><span class="built_in">print</span>(config.has_option(<span class="string">&#x27;section1&#x27;</span>,<span class="string">&#x27;&#x27;</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#添加一个标题</span></span><br><span class="line">config.add_section(<span class="string">&#x27;egon&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#在标题egon下添加name=egon,age=18的配置</span></span><br><span class="line">config.<span class="built_in">set</span>(<span class="string">&#x27;egon&#x27;</span>,<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;egon&#x27;</span>)</span><br><span class="line">config.<span class="built_in">set</span>(<span class="string">&#x27;egon&#x27;</span>,<span class="string">&#x27;age&#x27;</span>,<span class="number">18</span>) <span class="comment">#报错,必须是字符串</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#最后将修改的内容写入文件,完成最终的修改</span></span><br><span class="line">config.write(<span class="built_in">open</span>(<span class="string">&#x27;a.cfg&#x27;</span>,<span class="string">&#x27;w&#x27;</span>))</span><br></pre></td></tr></table></figure><ul><li>hashlib</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line">m=hashlib.md5()<span class="comment"># m=hashlib.sha256()</span></span><br><span class="line"></span><br><span class="line">m.update(<span class="string">&#x27;hello&#x27;</span>.encode(<span class="string">&#x27;utf8&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(m.hexdigest())  <span class="comment">#5d41402abc4b2a76b9719d911017c592</span></span><br><span class="line"></span><br><span class="line">m.update(<span class="string">&#x27;alvin&#x27;</span>.encode(<span class="string">&#x27;utf8&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(m.hexdigest())  <span class="comment">#92a7e713c30abbb0319fa07da2a5c4af</span></span><br><span class="line"></span><br><span class="line">m2=hashlib.md5()</span><br><span class="line">m2.update(<span class="string">&#x27;helloalvin&#x27;</span>.encode(<span class="string">&#x27;utf8&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(m2.hexdigest()) <span class="comment">#92a7e713c30abbb0319fa07da2a5c4af</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">注意：把一段很长的数据update多次，与一次update这段长数据，得到的结果一样</span></span><br><span class="line"><span class="string">但是update多次为校验大文件提供了可能。</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>hamc</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#要想保证hmac最终结果一致，必须保证：</span></span><br><span class="line"><span class="comment">#1:hmac.new括号内指定的初始key一样</span></span><br><span class="line"><span class="comment">#2:无论update多少次，校验的内容累加到一起是一样的内容</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 操作一</span></span><br><span class="line"><span class="keyword">import</span> hmac</span><br><span class="line">h1=hmac.new(<span class="string">&#x27;hello&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>),digestmod=<span class="string">&#x27;md5&#x27;</span>)</span><br><span class="line">h1.update(<span class="string">&#x27;world&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(h1.hexdigest()) <span class="comment"># 0e2564b7e100f034341ea477c23f283b</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 操作二</span></span><br><span class="line"><span class="keyword">import</span> hmac</span><br><span class="line">h2=hmac.new(<span class="string">&#x27;hello&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>),digestmod=<span class="string">&#x27;md5&#x27;</span>)</span><br><span class="line">h2.update(<span class="string">&#x27;w&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">h2.update(<span class="string">&#x27;orld&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(h1.hexdigest()) <span class="comment"># 0e2564b7e100f034341ea477c23f283b</span></span><br></pre></td></tr></table></figure><ul><li>re</li><li><img src="https://images2015.cnblogs.com/blog/1036857/201705/1036857-20170529203214461-666088398.png" alt="img"></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><ul><li>subprocess</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># !/usr/bin/python</span></span><br><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">from</span> subprocess <span class="keyword">import</span> check_output</span><br><span class="line"></span><br><span class="line">all_list = []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MoFileInfo</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name, path</span>):</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.path = path</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取磁盘中jar启动包</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_file_bypath</span>(<span class="params">strDir</span>):</span></span><br><span class="line">    filelist = os.listdir(strDir)</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> filelist:</span><br><span class="line">        <span class="keyword">if</span> os.path.isdir(strDir + <span class="string">&quot;/&quot;</span> + file):</span><br><span class="line">            find_file_bypath(strDir + <span class="string">&quot;/&quot;</span> + file)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> (file.find(<span class="string">&quot;.jar&quot;</span>) &gt;= <span class="number">0</span>):</span><br><span class="line">                fileInfo = MoFileInfo(file, strDir + <span class="string">&quot;/&quot;</span> + file)</span><br><span class="line">                all_list.append(fileInfo)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_list_file</span>():</span></span><br><span class="line">    <span class="keyword">for</span> index, x <span class="keyword">in</span> <span class="built_in">enumerate</span>(all_list):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;&#123;&#125;. &#123;&#125;&quot;</span>.<span class="built_in">format</span>(index, x.name))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取pid</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_pid</span>(<span class="params">name</span>):</span></span><br><span class="line">    child = subprocess.Popen([<span class="string">&#x27;pgrep&#x27;</span>, <span class="string">&#x27;-f&#x27;</span>, name], stdout=subprocess.PIPE, shell=<span class="literal">False</span>)</span><br><span class="line">    response = child.communicate()[<span class="number">0</span>]</span><br><span class="line">    <span class="built_in">print</span>(response)</span><br><span class="line">    <span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行命令</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">exec_file</span>(<span class="params">index</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">int</span>(index) &lt;= -<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            fileInfo = all_list[<span class="built_in">int</span>(index)]</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;你选择的是：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(fileInfo.path))</span><br><span class="line">            strcmd = <span class="built_in">input</span>(<span class="string">&quot;请输入执行命令(nr:nohup启动java r:java启动 k:kill d:删除java包   kd:kill+删除jar包)：\r\n&quot;</span>)</span><br><span class="line">            <span class="keyword">if</span> (strcmd == <span class="string">&quot;nr&quot;</span>):</span><br><span class="line">                os.system(<span class="string">&quot;nohup java -jar &#123;&#125; 2&gt;&amp;1 &amp; &quot;</span>.<span class="built_in">format</span>(fileInfo.path))</span><br><span class="line">            <span class="keyword">elif</span> (strcmd == <span class="string">&quot;r&quot;</span>):</span><br><span class="line">                os.system(<span class="string">&quot;java -jar &#123;&#125;&quot;</span>.<span class="built_in">format</span>(fileInfo.path))</span><br><span class="line">            <span class="keyword">elif</span> (strcmd == <span class="string">&quot;k&quot;</span>):</span><br><span class="line">                pid = get_pid(fileInfo.name)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;pid:&quot;</span> + pid.decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">                strcmd_1 = <span class="string">&quot;kill -9 &#123;&#125;&quot;</span>.<span class="built_in">format</span>(pid)</span><br><span class="line">                exec_cmd(strcmd_1)</span><br><span class="line">            <span class="keyword">elif</span> (strcmd == <span class="string">&quot;d&quot;</span>):</span><br><span class="line">                strcmd_1 = <span class="string">&quot;rm -rf &#123;&#125;&quot;</span>.<span class="built_in">format</span>(fileInfo.path)</span><br><span class="line">                exec_cmd(strcmd_1)</span><br><span class="line">            <span class="keyword">elif</span> (strcmd == <span class="string">&quot;kd&quot;</span>):</span><br><span class="line">                pid = get_pid(fileInfo.name)</span><br><span class="line">                strcmd_1 = <span class="string">&quot;kill -9 &#123;&#125;&quot;</span>.<span class="built_in">format</span>(pid)</span><br><span class="line">                exec_cmd(strcmd_1)</span><br><span class="line"></span><br><span class="line">                strcmd_1 = <span class="string">&quot;rm -rf &#123;&#125;&quot;</span>.<span class="built_in">format</span>(fileInfo.path)</span><br><span class="line">                exec_cmd(strcmd_1)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;无任何操作&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;操作失败&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">exec_cmd</span>(<span class="params">strcmd</span>):</span></span><br><span class="line">    <span class="built_in">str</span> = <span class="built_in">input</span>(<span class="string">&quot;是否执行命令(y/n)：&quot;</span> + strcmd + <span class="string">&quot;\r\n&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">str</span> == <span class="string">&quot;y&quot;</span>):</span><br><span class="line">        os.system(strcmd)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">strDir = <span class="built_in">input</span>(<span class="string">&quot;请输入jar所在磁盘路径(默认：/root/job):\r\n&quot;</span>)</span><br><span class="line">strDir = strDir <span class="keyword">if</span> (<span class="built_in">len</span>(strDir) &gt; <span class="number">0</span>) <span class="keyword">else</span> <span class="string">&quot;/root/job&quot;</span></span><br><span class="line"><span class="comment"># 获取运行包</span></span><br><span class="line">find_file_bypath(strDir)</span><br><span class="line"><span class="comment"># 展示运行包</span></span><br><span class="line">show_list_file()</span><br><span class="line"><span class="comment"># 选择运行包</span></span><br><span class="line">strIndex = <span class="built_in">input</span>(<span class="string">&quot;请选择要运行的编号:\r\n&quot;</span>)</span><br><span class="line"><span class="comment"># 执行命令</span></span><br><span class="line">exec_file(strIndex)</span><br></pre></td></tr></table></figure><h2 id="猴子补丁"><a href="#猴子补丁" class="headerlink" title="猴子补丁"></a>猴子补丁</h2><ul><li>属性运行时被动态的替换叫做猴子补丁</li><li>应用场景如下</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">如果我们的程序中已经基于json模块编写了大量代码了，发现有一个模块ujson比它性能更高，</span><br><span class="line">但用法一样，我们肯定不会想所有的代码都换成ujson.dumps或者ujson.loads,那我们可能</span><br><span class="line">会想到这么做</span><br><span class="line"><span class="keyword">import</span> ujson <span class="keyword">as</span> json，但是这么做的需要每个文件都重新导入一下，维护成本依然很高</span><br><span class="line">此时我们就可以用到猴子补丁了</span><br><span class="line">只需要在入口处加上</span><br><span class="line">, 只需要在入口加上:</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> ujson</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">monkey_patch_json</span>():</span></span><br><span class="line">    json.__name__ = <span class="string">&#x27;ujson&#x27;</span></span><br><span class="line">    json.dumps = ujson.dumps</span><br><span class="line">    json.loads = ujson.loads</span><br><span class="line"></span><br><span class="line">monkey_patch_json() <span class="comment"># 之所以在入口处加，是因为模块在导入一次后，后续的导入便直接引用第一次的成果</span></span><br></pre></td></tr></table></figure><h2 id="实现单例的几种方式"><a href="#实现单例的几种方式" class="headerlink" title="实现单例的几种方式"></a><strong>实现单例的几种方式</strong></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>使用模块</span><br><span class="line">其实，Python 的模块就是天然的单例模式，因为模块在第一次导入时，会生成 .pyc 文件，当第二次导入时，就会直接加载 .pyc 文件，而不会再次执行模块代码。因此，我们只需把相关的函数和数据定义在一个模块中，就可以获得一个单例对象了。如果我们真的想要一个单例类，可以考虑这样做：</span><br><span class="line"></span><br><span class="line">mysingleton.py</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Singleton</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">foo</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">singleton = Singleton()</span><br><span class="line">将上面的代码保存在文件 mysingleton.py 中，要使用时，直接在其他文件中导入此文件中的对象，这个对象即是单例模式的对象</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> mysingleton.py <span class="keyword">import</span> singleton</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>使用装饰器</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Singleton</span>(<span class="params">cls</span>):</span></span><br><span class="line">    instance = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_singleton</span>(<span class="params">*args, **kargs</span>):</span></span><br><span class="line">        <span class="keyword">nonlocal</span> instance</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> instance:</span><br><span class="line">            instance = cls(*args, **kargs)</span><br><span class="line">        <span class="keyword">return</span> instance</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> _singleton</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Singleton</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, x=<span class="number">0</span></span>):</span></span><br><span class="line">        self.x = x</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a1 = A(<span class="number">2</span>)</span><br><span class="line">a2 = A(<span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(a1.x)</span><br><span class="line"><span class="built_in">print</span>(a2.x)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a1 <span class="keyword">is</span> a2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>使用类方法</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Singleton</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    _instance=<span class="literal">None</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">instance</span>(<span class="params">cls, *args, **kwargs</span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> cls._instance:</span><br><span class="line">            cls._instance=cls(*args, **kwargs)</span><br><span class="line">        <span class="keyword">return</span> cls._instance</span><br><span class="line"></span><br><span class="line">a1=Singleton.instance()</span><br><span class="line">a2=Singleton().instance()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a1 <span class="keyword">is</span> a2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>基于new方法实现</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Singleton</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    _instance=<span class="literal">None</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__new__</span>(<span class="params">cls, *args, **kwargs</span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> cls._instance:</span><br><span class="line">            cls._instance = <span class="built_in">object</span>.__new__(cls)</span><br><span class="line">        <span class="keyword">return</span> cls._instance</span><br><span class="line"></span><br><span class="line">obj1 = Singleton()</span><br><span class="line">obj2 = Singleton()</span><br><span class="line"><span class="built_in">print</span>(obj1 <span class="keyword">is</span> obj2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">5.</span>基于metaclass方式实现</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SingletonType</span>(<span class="params"><span class="built_in">type</span></span>):</span></span><br><span class="line">    _instance=<span class="literal">None</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__call__</span>(<span class="params">cls, *args, **kwargs</span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> cls._instance:</span><br><span class="line">            <span class="comment"># cls._instance = super().__call__(*args, **kwargs)</span></span><br><span class="line">            cls._instance = <span class="built_in">object</span>.__new__(cls)</span><br><span class="line">            cls._instance.__init__(*args, **kwargs)</span><br><span class="line">        <span class="keyword">return</span> cls._instance</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span>(<span class="params">metaclass=SingletonType</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self,name</span>):</span></span><br><span class="line">        self.name = name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">obj1 = Foo(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">obj2 = Foo(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(obj1.name)</span><br><span class="line"><span class="built_in">print</span>(obj1 <span class="keyword">is</span> obj2)</span><br></pre></td></tr></table></figure><h2 id="同步异步阻塞非阻塞"><a href="#同步异步阻塞非阻塞" class="headerlink" title="同步异步阻塞非阻塞"></a>同步异步阻塞非阻塞</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">同步/异步关注的是消息通信机制 (synchronous communication/ asynchronous communication) 。</span><br><span class="line">所谓同步，就是在发出一个调用时，在没有得到结果之前， 该调用就不返回。</span><br><span class="line">异步则是相反，调用在发出之后，这个调用就直接返回了，所以没有返回结果</span><br><span class="line"></span><br><span class="line">阻塞非阻塞关注的是程序在等待调用结果（消息，返回值）时的状态.</span><br><span class="line"></span><br><span class="line">阻塞调用是指调用结果返回之前，当前线程会被挂起。调用线程只有在得到结果之后才会返回。非阻塞调用指在不能立刻得到结果之前，该调用不会阻塞当前线程。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">三、悲观锁（悲观并发控制）</span><br><span class="line">悲观锁（Pessimistic Concurrency Control，缩写”PCC”），顾名思义，就是很悲观，每次去拿数据的时候都认为别人会修改，所以每次在拿数据的时候都会上锁，这样别人想拿这个数据就会block直到它拿到锁。（共享资源每次只给一个线程使用，其它线程阻塞，用完后再把资源转让给其它线程，和Python中GIL锁一样）</span><br><span class="line">悲观锁：假定会发生并发冲突，屏蔽一切可能违反数据完整性的操作。</span><br><span class="line">悲观锁：主要用于数据争用激烈的环境，以及发生并发冲突时使用锁保护数据的成本要低于回滚事务的成本的环境中。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">四、乐观锁（乐观并发控制）</span><br><span class="line">乐观锁（Optimistic Concurrency Control，缩写”OCC”），顾名思义，就是很乐观，每次去拿数据的时候都认为别人不会修改，所以不会上锁，但是在提交更新的时候会判断一下在此期间别人有没有去更新这个数据。乐观锁适用于读多写少的应用场景，这样可以提高吞吐量。</span><br><span class="line">乐观锁：假设不会发生并发冲突，只在提交操作时检查是否违反数据完整性。</span><br><span class="line">乐观锁：多数用于数据争用不大、冲突较少的环境中，这种环境中，偶尔回滚事务的成本会低于读取数据时锁定数据的成本，因此可以获得比其他并发控制方法更高的吞吐量。</span><br><span class="line">相对于悲观锁，在对数据库进行处理的时候，乐观锁并不会使用数据库提供的锁机制。一般的实现乐观锁的方式就是记录数据版本</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GIL：又叫全局解释器锁，每个线程在执行的过程中都需要先获取GIL，保证同一时刻只有一个线程在运行，目的是解决多线程同时竞争程序中的全局变量而出现的线程安全问题</span><br><span class="line"></span><br><span class="line">GIL面试题参考答案：</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> Python语言和GIL没有什么关系。仅仅是由于历史原因在Cpython虚拟机(解释器)，难以移除GIL。</span><br><span class="line"></span><br><span class="line"><span class="number">2</span> GIL：全局解释器锁。每个线程在执行的过程都需要先获取GIL，保证同一时刻只有一个线程可以执行代码。</span><br><span class="line"></span><br><span class="line"><span class="number">3</span> 线程释放GIL锁的情况： 在IO操作等可能会引起阻塞的system call之前,可以暂时释放GIL,但在执行完毕后,必须重新获取GIL Python <span class="number">3.</span>x使用计时器（执行时间</span><br><span class="line">达到阈值后，当前线程释放GIL）或Python <span class="number">2.</span>x，tickets计数达到<span class="number">100</span>。</span><br><span class="line"></span><br><span class="line"><span class="number">4</span> Python使用多进程是可以利用多核的CPU资源的。</span><br><span class="line"></span><br><span class="line"><span class="number">5</span> 多线程爬取比单线程性能有提升，因为遇到IO阻塞会自动释放GIL锁</span><br></pre></td></tr></table></figure><h2 id="requests模块模拟下发form-data数据"><a href="#requests模块模拟下发form-data数据" class="headerlink" title="requests模块模拟下发form/data数据"></a>requests模块模拟下发form/data数据</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    url = <span class="string">&quot;http://127.0.0.1:5000/api/v1/algorithm_manage/alarm&quot;</span></span><br><span class="line">    body = &#123;</span><br><span class="line">        <span class="string">&quot;applicationType&quot;</span>: applicationType,</span><br><span class="line">        <span class="string">&quot;eventAddrType&quot;</span>: eventAddrType,</span><br><span class="line">        <span class="string">&quot;eventStarted&quot;</span>: eventStarted,</span><br><span class="line">        <span class="string">&quot;eventMsgType&quot;</span>: eventMsgType,</span><br><span class="line">        <span class="string">&quot;eventType&quot;</span>: eventType,</span><br><span class="line">        <span class="comment"># &quot;eventMessage&quot;: base_file_path,</span></span><br><span class="line">    &#125;</span><br><span class="line">    file = &#123;<span class="string">&quot;file&quot;</span>: <span class="built_in">open</span>(filepath, <span class="string">&quot;rb&quot;</span>)&#125;</span><br><span class="line">    response = requests.post(url=url, data=body, files=file)</span><br><span class="line">    <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">        result = response.json()</span><br><span class="line">        <span class="built_in">print</span>(result)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="keyword">raise</span></span><br></pre></td></tr></table></figure><p><code>代理</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">proxies = &#123;</span><br><span class="line">  <span class="string">&quot;http&quot;</span>: <span class="string">&quot;http://192.168.31.1:3128&quot;</span>,</span><br><span class="line">  <span class="string">&quot;https&quot;</span>: <span class="string">&quot;http://10.10.1.10:1080&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">requests.get(<span class="string">&quot;http://xlzd.me&quot;</span>, proxies=proxies)</span><br></pre></td></tr></table></figure><p><code>会话对象</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">session = requests.Session()</span><br><span class="line">session.post(<span class="string">&#x27;http://xlzd.me/login&#x27;</span>, data=&#123;<span class="string">&#x27;user&#x27;</span>: <span class="string">&#x27;xlzd&#x27;</span>, <span class="string">&#x27;pass&#x27;</span>: <span class="string">&#x27;mypassword&#x27;</span>&#125;)</span><br><span class="line"><span class="comment"># 登录成功则可以发布文章了</span></span><br><span class="line">session.put(<span class="string">&#x27;http://xlzd.me/new&#x27;</span>, data=&#123;<span class="string">&#x27;title&#x27;</span>: <span class="string">&#x27;title of article&#x27;</span>, <span class="string">&#x27;data&#x27;</span>: <span class="string">&#x27;content&#x27;</span>&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="虚拟环境"><a href="#虚拟环境" class="headerlink" title="虚拟环境"></a>虚拟环境</h2><p><img src="/2020/08/23/python/image-20210727213002977.png" alt="python"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 创建虚拟环境</span><br><span class="line">使用 venv 创建虚拟环境的命令为 python -m venv &lt;env_name&gt;，例：</span><br><span class="line">cd your_project_root_directory</span><br><span class="line">python -m venv .venv 或 mkvirtualenv ENV</span><br><span class="line"><span class="number">2.</span>激活虚拟环境</span><br><span class="line"><span class="comment"># linux</span></span><br><span class="line">source .venv/<span class="built_in">bin</span>/activate</span><br><span class="line"><span class="comment"># windows</span></span><br><span class="line">.venv\Scripts\activate.bat</span><br><span class="line"><span class="number">3.</span>退出虚拟环境</span><br><span class="line">deactivate</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>进入项目，安装需要依赖的包</span><br><span class="line">requirements.txt可以通过pip命令自动生成和安装</span><br><span class="line"></span><br><span class="line">生成requirements.txt文件</span><br><span class="line">pip freeze &gt; requirements.txt</span><br><span class="line"></span><br><span class="line">安装requirements.txt依赖</span><br><span class="line">pip install -r requirements.txt</span><br><span class="line"></span><br><span class="line"><span class="number">5</span> 升级虚拟环境的pip</span><br><span class="line">easy_install -U pip</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 建议使用pip3安装到python3环境下</span></span><br><span class="line">pip3 install virtualenv</span><br><span class="line">pip3 install virtualenvwrapper-win</span><br><span class="line">配置虚拟环境管理器工作目录</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置环境变量：</span></span><br><span class="line"><span class="comment"># 控制面板 =&gt; 系统和安全 =&gt; 系统 =&gt; 高级系统设置 =&gt; 环境变量 =&gt; 系统变量 =&gt; 点击新建 =&gt; 填入变量名与值</span></span><br><span class="line">变量名：WORKON_HOME  变量值：自定义存放虚拟环境的绝对路径</span><br><span class="line">eg: WORKON_HOME: D:\Virtualenvs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 同步配置信息：</span></span><br><span class="line"><span class="comment"># 去向Python3的安装目录 =&gt; Scripts文件夹 =&gt; virtualenvwrapper.bat =&gt; 双击</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用</span></span><br><span class="line"><span class="comment"># 在终端工作的命令</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1、创建虚拟环境到配置的WORKON_HOME路径下</span></span><br><span class="line"><span class="comment"># 选取默认Python环境创建虚拟环境：</span></span><br><span class="line">-- mkvirtualenv 虚拟环境名称</span><br><span class="line"><span class="comment"># 基于某Python环境创建虚拟环境：</span></span><br><span class="line">-- mkvirtualenv -p python2<span class="number">.7</span> 虚拟环境名称</span><br><span class="line">-- mkvirtualenv -p python3<span class="number">.6</span> 虚拟环境名称</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2、查看已有的虚拟环境</span></span><br><span class="line">-- workon</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3、使用某个虚拟环境</span></span><br><span class="line">-- workon 虚拟环境名称</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4、进入|退出 该虚拟环境的Python环境</span></span><br><span class="line">-- python | exit()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5、为虚拟环境安装模块</span></span><br><span class="line">-- pip或pip3 install 模块名</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6、退出当前虚拟环境</span></span><br><span class="line">-- deactivate</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7、删除虚拟环境(删除当前虚拟环境要先退出)</span></span><br><span class="line">-- rmvirtualenv 虚拟环境名称</span><br></pre></td></tr></table></figure><p>项目使用命令创建的虚拟环境</p><p><img src="/2020/08/23/python/image-20210804025252408.png" alt="python"></p><h2 id="linux安装虚拟环境"><a href="#linux安装虚拟环境" class="headerlink" title="linux安装虚拟环境"></a>linux安装虚拟环境</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">pip3 install virtualenvwrapper</span><br><span class="line">vim ~/.bashrc</span><br><span class="line"><span class="comment"># 增加配置</span></span><br><span class="line">export PATH=/usr/local/python3/<span class="built_in">bin</span>:$PATH</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">VIRTUALENVWRAPPER_PYTHON=/usr/local/python3/<span class="built_in">bin</span>/python3    <span class="comment"># 指定virtualenvwrapper执行的python版本</span></span><br><span class="line">export WORKON_HOME=/root/lhj/virtualenv    <span class="comment"># 指定虚拟环境存放目录，.virtualenvs目录名可自拟</span></span><br><span class="line">source /usr/local/python3/<span class="built_in">bin</span>/virtualenvwrapper.sh    <span class="comment"># virtualenvwrapper.sh所在目录</span></span><br><span class="line">source ~/.bashrc <span class="comment"># 激活配置</span></span><br><span class="line"></span><br><span class="line">mkvirtualenv test</span><br><span class="line"></span><br><span class="line">workon test</span><br><span class="line"></span><br><span class="line">deactivate</span><br><span class="line"></span><br><span class="line">rmvirtualenv test</span><br></pre></td></tr></table></figure><h2 id="mq使用json传输二进制的方案"><a href="#mq使用json传输二进制的方案" class="headerlink" title="mq使用json传输二进制的方案"></a>mq使用json传输二进制的方案</h2><ul><li>producter</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 对数组的图片格式进行编码</span></span><br><span class="line">success, encoded_image = cv2.imencode(<span class="string">&quot;.jpg&quot;</span>, frame)</span><br><span class="line"><span class="comment"># 将数组转为bytes</span></span><br><span class="line">img_bytes = encoded_image.tostring()</span><br><span class="line"><span class="comment"># b64编码，生成新的可字符化的二进制序列</span></span><br><span class="line">bast64_data = base64.b64encode(img_bytes)</span><br><span class="line"><span class="comment"># 字符串化，使用utf-8的方式解析二进制</span></span><br><span class="line">bast64_str = <span class="built_in">str</span>(bast64_data, <span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">message = json.dumps(&#123;<span class="string">&quot;imgname&quot;</span>: imgname, <span class="string">&quot;img&quot;</span>: bast64_str&#125;)</span><br><span class="line">mq(message)</span><br></pre></td></tr></table></figure><ul><li>consumer</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">on_message</span>(<span class="params">channel, method_frame, header_frame, body</span>):</span></span><br><span class="line">    <span class="comment"># print(method_frame.delivery_tag)</span></span><br><span class="line">    <span class="comment"># print(body)</span></span><br><span class="line">    channel.basic_ack(delivery_tag=method_frame.delivery_tag)</span><br><span class="line">    message = json.loads(body.decode())</span><br><span class="line">    imgname = message[<span class="string">&#x27;imgname&#x27;</span>]</span><br><span class="line">    img = message[<span class="string">&#x27;img&#x27;</span>]</span><br><span class="line">    <span class="comment"># 将字符串重新编码为utf-8的二进制序列（该序列被b64编码过）</span></span><br><span class="line">    bast64_data = img.encode(encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="comment"># b64解码,获得原二进制序列</span></span><br><span class="line">    data = base64.b64decode(bast64_data)</span><br></pre></td></tr></table></figure><h2 id="python格式化字符串之-s"><a href="#python格式化字符串之-s" class="headerlink" title="python格式化字符串之%()s"></a>python格式化字符串之%()s</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>demo = <span class="string">&#x27;%(name)s&#x27;</span>%&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;lhj&quot;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>demo</span><br><span class="line"><span class="string">&#x27;lhj&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>demo = <span class="string">&#x27;%(num)d&#x27;</span>%&#123;<span class="string">&quot;num&quot;</span>:[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]&#125;</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: %d <span class="built_in">format</span>: a number <span class="keyword">is</span> required, <span class="keyword">not</span> <span class="built_in">list</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>demo = <span class="string">&#x27;%(num)d&#x27;</span>%&#123;<span class="string">&quot;num&quot;</span>:<span class="number">26</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>demo</span><br><span class="line"><span class="string">&#x27;26&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="解决Linux-pip报错"><a href="#解决Linux-pip报错" class="headerlink" title="解决Linux pip报错"></a>解决Linux pip报错</h2><p><a href="https://www.cnblogs.com/larack/p/12196850.html">https://www.cnblogs.com/larack/p/12196850.html</a></p><p><img src="/2020/08/23/python/image-20210901222718795.png" alt="python"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">1.安装相关依赖</span><br><span class="line">yum install gcc libffi-devel zlib* openssl-devel</span><br><span class="line">2.安装openssl</span><br><span class="line">wget https://github.com/openssl/openssl/archive/OpenSSL_1_1_1d.tar.gz</span><br><span class="line">tar -zxvf OpenSSL_1_1_1d.tar.gz</span><br><span class="line">mkdir openssl</span><br><span class="line">cd OpenSSL_1_1_1d</span><br><span class="line">3.编译安装</span><br><span class="line">./config --prefix=/usr/local/openssl</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line">4.替换当前系统旧版本openssl</span><br><span class="line">mv /usr/bin/openssl /usr/bin/openssl.old</span><br><span class="line">mv /usr/lib64/openssl /usr/lib64/openssl.old</span><br><span class="line">mv /usr/lib64/libssl.so /usr/lib64/libssl.so.old</span><br><span class="line">ln -s /usr/local/openssl/bin/openssl /usr/bin/openssl</span><br><span class="line">ln -s /usr/local/openssl/include/openssl /usr/include/openssl</span><br><span class="line">ln -s /usr/local/openssl/lib/libssl.so /usr/lib64/libssl.so</span><br><span class="line">echo &quot;/usr/local/openssl/lib&quot; &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig -v </span><br><span class="line">5.查看版本</span><br><span class="line">openssl version</span><br><span class="line">6.重新安装python</span><br><span class="line">mkdir python3</span><br><span class="line">cd Python-3.8.5</span><br><span class="line">cd Python-3.8.5</span><br><span class="line">./configure --prefix=/usr/local/python3 --with-openssl=/usr/local/openssl</span><br><span class="line">make &amp;&amp; sudo make install</span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果出现pip警告</span></span><br><span class="line">echo &#x27;export PATH=/usr/local/python3/bin:$PATH&#x27; &gt;&gt;~/.bashrc</span><br><span class="line">source ~/.bashrc</span><br><span class="line"><span class="meta">#</span><span class="bash"> 建立软连接</span></span><br><span class="line">ln -s /usr/local/python3/bin/python3 /usr/bin/python3</span><br><span class="line">ln -s /usr/local/python3/bin/pip3 /usr/bin/pip3</span><br><span class="line"><span class="meta">#</span><span class="bash"> 验证</span></span><br><span class="line">python3 -v</span><br><span class="line">pip3 -v</span><br></pre></td></tr></table></figure><h2 id="windows-终止某进程"><a href="#windows-终止某进程" class="headerlink" title="windows 终止某进程"></a>windows 终止某进程</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; netstat -aon|findstr <span class="string">&quot;8888&quot;</span></span><br><span class="line">  TCP    <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">8888</span>           <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">0</span>              LISTENING       <span class="number">7036</span></span><br><span class="line">  TCP    [::]:<span class="number">8888</span>              [::]:<span class="number">0</span>                 LISTENING       <span class="number">7036</span></span><br><span class="line"></span><br><span class="line">&gt; taskkill /pid <span class="number">7036</span> /f</span><br><span class="line">成功: 已终止 PID 为 <span class="number">7036</span> 的进程。</span><br></pre></td></tr></table></figure><h2 id="Django"><a href="#Django" class="headerlink" title="Django"></a>Django</h2><h3 id="http协议"><a href="#http协议" class="headerlink" title="http协议"></a><strong>http协议</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> HTTP协议是Hyper Text Transfer Protocol（超文本传输协议）的缩写,是用于万维网服务器与本地浏览器之间传输超文本的传送协议</span><br><span class="line"><span class="number">2</span> 应用层的协议</span><br><span class="line"><span class="number">3</span> http协议特性（记一下） 数据传输是明文</span><br><span class="line">-<span class="number">1</span> 基于tcp/ip之上的应用层协议</span><br><span class="line">    -<span class="number">2</span> 基于请求－响应模式</span><br><span class="line">    -<span class="number">3</span> 无状态保存</span><br><span class="line">    -<span class="number">4</span> 无连接</span><br><span class="line"></span><br><span class="line">  https协议</span><br><span class="line">数据传输是秘文 采用http+ssl</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>  请求协议(浏览器发出来的)（记住）</span><br><span class="line">三部分：请求首行，请求头，请求体</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string"># 请求首行（以第一个\r\n区分的），</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 请求方式：GET  请求地址：/lqz/handsome   协议：http   版本：1.1版本</span></span><br><span class="line"><span class="string">GET /lqz/handsome HTTP/1.1\r\n</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 请求头（key:value形式）</span></span><br><span class="line"><span class="string">Host: 192.168.11.211:8080\r\n</span></span><br><span class="line"><span class="string">Connection: keep-alive\r\n</span></span><br><span class="line"><span class="string">Cache-Control: max-age=0\r\n</span></span><br><span class="line"><span class="string">Upgrade-Insecure-Requests: 1\r\n</span></span><br><span class="line"><span class="string">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.83 Safari/537.36\r\n</span></span><br><span class="line"><span class="string">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\r\n</span></span><br><span class="line"><span class="string">Accept-Encoding: gzip, deflate\r\n</span></span><br><span class="line"><span class="string">Accept-Language: zh-CN,zh;q=0.9\r\n\r\n&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># \r\n\r\n  下面的是请求体的内容</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">.....</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">5</span> 响应协议</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string"># 响应首行  响应协议和版本：HTTP/1.1  响应的状态码和标志：200 ok  </span></span><br><span class="line"><span class="string">HTTP/1.1 200 ok \r\</span></span><br><span class="line"><span class="string"># 响应头（key:value形式）</span></span><br><span class="line"><span class="string">key:value</span></span><br><span class="line"><span class="string">key:valu</span></span><br><span class="line"><span class="string">\r\n\r\n</span></span><br><span class="line"><span class="string"># 响应体：在浏览器里看到的东西(浏览器能把下面的html渲染成好看的样子)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">&lt;html lang=&quot;en&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;h1&gt;hello&lt;/h1&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="number">6</span> 响应状态码</span><br><span class="line">-1xx：请求正在处理（用户一般看不到）        </span><br><span class="line">    -2xx：请求成功（<span class="number">200</span>）</span><br><span class="line">    -3xx：重定向（<span class="number">301</span>  <span class="number">302</span>）访问一个地址，转到另一个地址</span><br><span class="line">    -4xx：客户端错误（<span class="number">404</span>，<span class="number">403</span>）</span><br><span class="line">    -5xx：服务端错误（<span class="number">502</span>）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="number">7</span> url:统一资源定位符</span><br><span class="line"><span class="comment"># 格式</span></span><br><span class="line">    http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8080</span>/order.html</span><br><span class="line">    ftp://xxx</span><br><span class="line">    协议：//IP:端口(<span class="number">80</span>)/路径?name=lqz&amp;age=<span class="number">18</span></span><br><span class="line">    统一资源定位符是可以从互联网上访问资源的一种方式，协议就是资源的地址</span><br></pre></td></tr></table></figure><h3 id="基于wsgiref写一个web框架"><a href="#基于wsgiref写一个web框架" class="headerlink" title="基于wsgiref写一个web框架"></a><strong>基于wsgiref写一个web框架</strong></h3><p><img src="/2020/08/23/python/image-20210727185036389.png" alt="python"></p><p><img src="/2020/08/23/python/image-20210727184937598.png" alt="python"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> wsgiref.simple_server <span class="keyword">import</span> make_server</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;index&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;login&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">order</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;order&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">error</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;error&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">urls = [</span><br><span class="line">    (<span class="string">&#x27;/index&#x27;</span>, index),</span><br><span class="line">    (<span class="string">&#x27;/login&#x27;</span>, login),</span><br><span class="line">    (<span class="string">&#x27;/order&#x27;</span>, order),</span><br><span class="line"></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">server</span>(<span class="params">environ, start_response</span>):</span>  <span class="comment"># 必须传两个参数</span></span><br><span class="line">    <span class="comment"># environ：是字典，http请求拆成字典,请求方式，请求地址，请求头。。。</span></span><br><span class="line">    <span class="comment"># start_response：响应对象，响应状态码，响应头放到里面</span></span><br><span class="line"></span><br><span class="line">    start_response(<span class="string">&#x27;200 OK&#x27;</span>, [])</span><br><span class="line">    current_path = environ.get(<span class="string">&#x27;PATH_INFO&#x27;</span>)</span><br><span class="line">    func = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">        <span class="keyword">if</span> current_path == url[<span class="number">0</span>]:  <span class="comment"># (),()</span></span><br><span class="line">            func = url[<span class="number">1</span>]</span><br><span class="line">            <span class="keyword">break</span>  <span class="comment"># 匹配到第一个结束循环</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 判断func是否有值</span></span><br><span class="line">    <span class="keyword">if</span> func:</span><br><span class="line">        res = func()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        res = error()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> [res.encode(<span class="string">&#x27;utf-8&#x27;</span>)]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># app是可调用对象，可以加括号执行的(函数内存地址)</span></span><br><span class="line">    myserver = make_server(<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">8081</span>, server)  <span class="comment"># 只要客户端发送一次请求，就会调用server()</span></span><br><span class="line">    myserver.serve_forever()  <span class="comment"># 服务就起来了，相当于之前写的socket一直监听8081端口</span></span><br></pre></td></tr></table></figure><p><strong>动静态网页</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">静态网页：静态的html，内容不会改变，每次访问看到的数据都一样</span><br><span class="line">动态网页：页面的数据会发生变化，每次访问看到的可能都不一样（数据来源可能是数据库）</span><br></pre></td></tr></table></figure><p><strong>模板语法之Jinjia2模块</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> jinja2 <span class="keyword">import</span> Template</span><br><span class="line"><span class="string">&quot;&quot;&quot;模板语法是在后端起作用的&quot;&quot;&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_user</span>():</span></span><br><span class="line">    user_dic = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;lhj&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="string">&#x27;21&#x27;</span>&#125;</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">r&#x27;user.html&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        data = f.read()</span><br><span class="line">    template = Template(data)</span><br><span class="line">    res = template.render(user=user_dic)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;用户页面&lt;/h1&gt;</span><br><span class="line">&#123;&#123;user.get(<span class="string">&#x27;name&#x27;</span>)&#125;&#125;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&#123;&#123;user.age&#125;&#125;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&#123;&#123;user[<span class="string">&#x27;name&#x27;</span>]&#125;&#125;</span><br><span class="line">&lt;br&gt;</span><br></pre></td></tr></table></figure><h3 id="模板语法之for循环"><a href="#模板语法之for循环" class="headerlink" title="模板语法之for循环"></a><strong>模板语法之for循环</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_user</span>():</span></span><br><span class="line">    <span class="comment"># 连接数据库 传递给html页面借助模板语法</span></span><br><span class="line">    conn = pymysql.connect(</span><br><span class="line">        host=<span class="string">&#x27;127.0.0.1&#x27;</span>, user=<span class="string">&#x27;root&#x27;</span>, password=<span class="string">&quot;1018&quot;</span>,</span><br><span class="line">        db=<span class="string">&#x27;django&#x27;</span>, port=<span class="number">3306</span>,</span><br><span class="line">        charset=<span class="string">&#x27;utf8&#x27;</span>, autocommit=<span class="literal">True</span></span><br><span class="line">    )</span><br><span class="line">    cursor = conn.cursor(cursor=pymysql.cursors.DictCursor)</span><br><span class="line">    sql = <span class="string">&#x27;select * from user&#x27;</span></span><br><span class="line">    affect_rows = cursor.execute(sql)</span><br><span class="line">    data_list = cursor.fetchall()</span><br><span class="line">    <span class="comment"># 将获取的数据传递给HTml页面</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">r&#x27;user.html&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        data = f.read()</span><br><span class="line">        tem = Template(data)</span><br><span class="line">        res = tem.render(data_list=data_list)</span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure><p><strong>user.html</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-8 col-md-offset-2&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;text-center&quot;</span>&gt;</span>用户数据<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">&quot;table table-hover table-striped&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>ID<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>Password<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>Hobby<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--           数据库拿出的是列表套字典         [&#123;&#125;,&#123;&#125;]--&gt;</span></span><br><span class="line">                &#123;% for data in data_list %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;data.id&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;data.name&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;data.password&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;data.hobby&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                &#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="python三大主流框架"><a href="#python三大主流框架" class="headerlink" title="python三大主流框架"></a><strong>python三大主流框架</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>Django </span><br><span class="line">特点:大而全,自带的功能特别多</span><br><span class="line">    缺点：过于笨重</span><br><span class="line"><span class="number">2.</span>Flask</span><br><span class="line">特点：小而精，自带的功能特别少，第三方的模块特别多</span><br><span class="line">    缺点：比较依赖第三方的开发者</span><br><span class="line"><span class="number">3.</span>Tornado</span><br><span class="line">特点：异步非阻塞，支持高并发</span><br><span class="line"></span><br><span class="line">A socket部分</span><br><span class="line">B 路由与视图函数对应关系</span><br><span class="line">C 模板语法</span><br><span class="line"></span><br><span class="line">django</span><br><span class="line"> A 用的别人的 wsgiref</span><br><span class="line">     B 自己</span><br><span class="line">     C 用的自己写得，没有Jinja2好用</span><br><span class="line">flask</span><br><span class="line"> A 用的别人的 werkzeug</span><br><span class="line">     B 自己</span><br><span class="line">     C 别人的（Jinja2）</span><br><span class="line">tornado</span><br><span class="line">A，B，C都是自己写得</span><br></pre></td></tr></table></figure><h3 id="django目录介绍"><a href="#django目录介绍" class="headerlink" title="django目录介绍"></a><strong>django目录介绍</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">-day60   项目名</span><br><span class="line">-app01   app的名字</span><br><span class="line">    -migrations   数据库变更相关记录（你不要删，也不要改）</span><br><span class="line">        -admin.py     后台管理（创建项目如果没有选，就没有）</span><br><span class="line">        -apps.py      app的相关配置，不用管</span><br><span class="line">        -models.py    数据库相关（重点）</span><br><span class="line">        -tests.py     测试相关（不用管）</span><br><span class="line">        -views.py     视图函数（重点）</span><br><span class="line">    -day60  跟项目名同名目录（项目总体配置相关，配置文件，路由）</span><br><span class="line">    -settings.py   很重要，整个项目的启动，由配置文件决定</span><br><span class="line">-urls.py       路由（总路由）</span><br><span class="line">        -wsgi.py       wsgi服务器的配置，不需要管（后期上线会改一点点）</span><br><span class="line">    -templates         模板文件（一个一个的html），pycharm创建出来才有这个文件夹</span><br><span class="line">    -manage.py         启动项目，创建app，各种命令的操作</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 重点的是   </span></span><br><span class="line">    -views.py</span><br><span class="line">    -models.py</span><br><span class="line">    -urls.py</span><br><span class="line">    -templagtes文件夹</span><br></pre></td></tr></table></figure><h3 id="MTV与MVC"><a href="#MTV与MVC" class="headerlink" title="MTV与MVC"></a><strong>MTV与MVC</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> django 是MTV架构，本质也是mvc</span><br><span class="line">-M：model，数据库相关操作</span><br><span class="line">    -T：template，模板文件（就是mvc的v层）</span><br><span class="line">    -V：view，视图（路由+V=MVC的控制器）</span><br><span class="line"><span class="number">2</span> MVC架构：主流的web框架都是mvc</span><br><span class="line">-Web应用分为模型(M)，控制器(C)和视图(V)</span><br><span class="line">    -M：model，数据库相关操作</span><br><span class="line">    -C：controler控制器，逻辑相关，逻辑代码</span><br><span class="line">    -V：视图，模板文件</span><br></pre></td></tr></table></figure><h3 id="django中orm的使用"><a href="#django中orm的使用" class="headerlink" title="django中orm的使用"></a><strong>django中orm的使用</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span> sqlite：也是要给数据库，文件数据库，一个库就是要给文件，不需要单独安装</span><br><span class="line">-咱们现在在用，也要用到关系型数据库，不想装mysql，就可以使用sqlite</span><br><span class="line">    -移动开发本地存储数据，存在sqlite中</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> 创建个UserInfo表，在models中写一个类</span><br><span class="line"><span class="number">2</span> 表中有字段（类属性），字段有属性，</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 第一步在models中写要给类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">        <span class="comment"># 字段属性--》后面那个对象决定的,</span></span><br><span class="line">        <span class="comment"># 改字段自增，并且是主键</span></span><br><span class="line">        <span class="built_in">id</span> = models.AutoField(primary_key=<span class="literal">True</span>)</span><br><span class="line">        <span class="comment"># 改字段是varchar类型，长度为32(唯一约束，是否是索引，默认值是，是否可以为空)</span></span><br><span class="line">        name = models.CharField(max_length=<span class="number">32</span>)</span><br><span class="line">        <span class="comment"># 密码字段</span></span><br><span class="line">        password =models.CharField(max_length=<span class="number">64</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 数字类型</span></span><br><span class="line">    gender = models.IntegerField(default=<span class="number">0</span>)  <span class="comment"># 默认值为0</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 省份</span></span><br><span class="line">        province = models.CharField(max_length=<span class="number">32</span>,null=<span class="literal">True</span>)  <span class="comment"># 可以为空</span></span><br><span class="line">        </span><br><span class="line"><span class="comment"># 第二步，把表创建出来(执行两个命令)</span></span><br><span class="line">-python3 manage.py makemigrations  <span class="comment"># 这条命令会在migrations创建一条记录，数据库变更记录</span></span><br><span class="line">    -python3 manage.py migrate         <span class="comment"># 把更改同步到数据库</span></span><br></pre></td></tr></table></figure><h3 id="diango连接mysql"><a href="#diango连接mysql" class="headerlink" title="diango连接mysql"></a><strong>diango连接mysql</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">-<span class="number">1</span> 配置文件中配置：settings.py</span><br><span class="line">    DATABASES = &#123;</span><br><span class="line">        <span class="string">&#x27;default&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;ENGINE&#x27;</span>: <span class="string">&#x27;django.db.backends.mysql&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&#x27;day62&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;HOST&#x27;</span>: <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;PORT&#x27;</span>: <span class="number">3306</span>,</span><br><span class="line">            <span class="string">&#x27;USER&#x27;</span>: <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;PASSWORD&#x27;</span>:<span class="string">&#x27;123&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    -<span class="number">2</span> 需要在 app的__init__.py 中写</span><br><span class="line">        <span class="keyword">import</span> pymysql</span><br><span class="line">    pymysql.install_as_MySQLdb()</span><br><span class="line">        </span><br><span class="line">    -<span class="number">3</span> 后续操作完全一样，在models中建立类，写字段</span><br><span class="line">    -<span class="number">4</span> 视图函数中插入，查询</span><br><span class="line">    -<span class="number">5</span> pycharm的--》tools---》run manage.py Task</span><br></pre></td></tr></table></figure><h3 id="Django请求生命周期流程图"><a href="#Django请求生命周期流程图" class="headerlink" title="Django请求生命周期流程图"></a><strong>Django请求生命周期流程图</strong></h3><p><img src="/2020/08/23/python/image-20210727195236543.png" alt="python"></p><p><img src="/2020/08/23/python/image-20210727195521016.png" alt="python"></p><h3 id="路由匹配注意事项"><a href="#路由匹配注意事项" class="headerlink" title="路由匹配注意事项"></a><strong>路由匹配注意事项</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> 路由参数  </span><br><span class="line">    <span class="comment"># 第一个参数是正则表达式</span></span><br><span class="line">    <span class="comment"># 第二个参数是视图函数内存地址</span></span><br><span class="line">    <span class="comment"># 第三个参数是个字典 &#123;&#x27;name&#x27;:lqz,&#x27;age&#x27;:18&#125;,给视图函数传递默认值</span></span><br><span class="line">    <span class="comment"># 第四个参数name，当前路由的别名，用作反向解析</span></span><br><span class="line">    url(<span class="string">r&#x27;^home2/&#x27;</span>, views.home,&#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;lqz&#x27;</span>,<span class="string">&#x27;age&#x27;</span>:<span class="number">19</span>&#125;,name=<span class="string">&#x27;home&#x27;</span>),</span><br><span class="line">    </span><br><span class="line"><span class="number">2</span> 访问根路径，触发视图函数执行（路由怎么配）</span><br><span class="line">-url(<span class="string">r&#x27;^$&#x27;</span>, admin.site.urls),</span><br><span class="line"></span><br><span class="line"><span class="number">3</span> 在路由中配置多个相同路由会怎么样？</span><br><span class="line">只会执行第一个</span><br><span class="line"></span><br><span class="line"><span class="number">4</span> 如下路由会怎么样？永远不会匹配到第二个</span><br><span class="line">    url(<span class="string">r&#x27;^login&#x27;</span>, views.home),</span><br><span class="line">    url(<span class="string">r&#x27;^login2&#x27;</span>, views.home),</span><br><span class="line">    </span><br><span class="line"><span class="number">5</span> 需要改成</span><br><span class="line">    url(<span class="string">r&#x27;^login/&#x27;</span>, views.home),</span><br><span class="line">    url(<span class="string">r&#x27;^login2/&#x27;</span>, views.home),</span><br><span class="line">    </span><br><span class="line"><span class="number">6</span> 取消自动加斜杠 settings.py</span><br><span class="line">APPEND_SLASH=<span class="literal">False</span>  <span class="comment"># 一般不加</span></span><br><span class="line"></span><br><span class="line"><span class="number">7</span>  限制路由以login开头结尾</span><br><span class="line">    url(<span class="string">r&#x27;^login$&#x27;</span>, views.home),</span><br><span class="line">    url(<span class="string">r&#x27;^login2$&#x27;</span>, views.home)</span><br><span class="line">    </span><br><span class="line"><span class="number">8</span>  首页</span><br><span class="line">url(<span class="string">r&#x27;^$&#x27;</span>, views.home)</span><br><span class="line">    </span><br><span class="line"><span class="number">9</span> 尾页</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="有名分组-无名分组"><a href="#有名分组-无名分组" class="headerlink" title="有名分组 无名分组"></a><strong>有名分组 无名分组</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment"># 无名分组</span></span><br><span class="line">    - 路由层</span><br><span class="line">    url(<span class="string">r&#x27;^login/(\d+)/([a-z]&#123;2&#125;)&#x27;</span>, views.login), <span class="comment"># 无名分组，会把括号内正则表达式匹配的值当做位置参数传给后面的视图函数</span></span><br><span class="line">     - 视图层</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">login</span>(<span class="params">request, x,y</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(x)</span><br><span class="line">    <span class="built_in">print</span>(y)</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;login&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 有名分组</span></span><br><span class="line">    - 路由层</span><br><span class="line">    url(<span class="string">r&#x27;^login/(?P&lt;year&gt;\d+)/(?P&lt;month&gt;[a-z]&#123;2&#125;)&#x27;</span>, views.login), <span class="comment"># 有名分组，会把括号内正则表达式匹配的值当做关键字参数传给后面的视图函数</span></span><br><span class="line">    - 视图层</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">login</span>(<span class="params">request, year,month</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(year)</span><br><span class="line">    <span class="built_in">print</span>(month)</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;login&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;无名有名分组不能混用&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h3 id="反向解析"><a href="#反向解析" class="headerlink" title="反向解析"></a><strong>反向解析</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r&#x27;login/&#x27;</span>, views2.login, name=<span class="string">&#x27;login&#x27;</span>),</span><br><span class="line">url(<span class="string">r&#x27;index/&#x27;</span>, views2.index, name=<span class="string">&#x27;index&#x27;</span>),</span><br><span class="line"><span class="comment"># 后端反向解析</span></span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render, HttpResponse, redirect, reverse</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(reverse(<span class="string">&#x27;login&#x27;</span>))  <span class="comment"># /login/</span></span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&#x27;index2.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 前端反向解析</span></span><br><span class="line">&lt;a href=<span class="string">&quot;&#123;% url &#x27;login&#x27; %&#125;&quot;</span>&gt;<span class="number">111</span>&lt;/a&gt;</span><br></pre></td></tr></table></figure><h3 id="无名有名反向解析"><a href="#无名有名反向解析" class="headerlink" title="无名有名反向解析"></a><strong>无名有名反向解析</strong></h3><p><img src="/2020/08/23/python/image-20210727205757190.png" alt="python"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r&#x27;index/(\d+)&#x27;</span>, views2.index, name=<span class="string">&#x27;index&#x27;</span>),</span><br><span class="line"><span class="comment"># 后端反向解析</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(reverse(<span class="string">&#x27;login&#x27;</span>),args=(<span class="number">1</span>,))  <span class="comment"># /login/</span></span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&#x27;index2.html&#x27;</span>)</span><br><span class="line"><span class="comment"># 前端反向解析</span></span><br><span class="line">&lt;a href=<span class="string">&quot;&#123;% url &#x27;login&#x27; 1 %&#125;&quot;</span>&gt;<span class="number">111</span>&lt;/a&gt;</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;这个分组后面的数字一般放的都是数据的主键值，数据的编辑和删减&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">edit</span>(<span class="params">request,edit_id</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(reverse(<span class="string">&#x27;反向解析路由的名字&#x27;</span>),args=(edit_id,))  </span><br><span class="line"></span><br><span class="line">&#123;% <span class="keyword">for</span> user <span class="keyword">in</span> user_queryset %&#125;</span><br><span class="line">&lt;a herf=<span class="string">&quot;&#123;% url &#x27;反向解析路由的名字&#x27; user.id %&#125;&quot;</span>&gt;编辑 &lt;/a&gt;</span><br><span class="line">&#123;%  endfor  %&#125;</span><br></pre></td></tr></table></figure><h3 id="路由分发"><a href="#路由分发" class="headerlink" title="路由分发"></a><strong>路由分发</strong></h3><p><img src="/2020/08/23/python/image-20210727205950867.png" alt="python"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 总路由</span></span><br><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url, include</span><br><span class="line"><span class="keyword">from</span> app01 <span class="keyword">import</span> urls <span class="keyword">as</span> app01_urls</span><br><span class="line"><span class="keyword">from</span> app02 <span class="keyword">import</span> urls <span class="keyword">as</span> app02_urls</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    <span class="comment"># 1&quot;&quot;&quot;路由分发&quot;&quot;&quot;</span></span><br><span class="line">    url(<span class="string">r&#x27;app01/&#x27;</span>, include(app01_urls)),</span><br><span class="line">    url(<span class="string">r&#x27;app02/&#x27;</span>, include(app02_urls)),</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 2&quot;&quot;&quot;终极写法（注意 总路由里面的url不能加$结尾）&quot;&quot;&quot;</span></span><br><span class="line">    url(<span class="string">r&#x27;^app01/&#x27;</span>, include(<span class="string">&#x27;app01.urls&#x27;</span>)),</span><br><span class="line">    url(<span class="string">r&#x27;^app02/&#x27;</span>, include(<span class="string">&#x27;app02.urls&#x27;</span>)),</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment"># app01路由</span></span><br><span class="line"><span class="keyword">from</span> app01 <span class="keyword">import</span> views</span><br><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url, include</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line"></span><br><span class="line">    url(<span class="string">r&#x27;login/&#x27;</span>, views.login, name=<span class="string">&#x27;login&#x27;</span>),</span><br><span class="line"></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment"># app02路由</span></span><br><span class="line"><span class="keyword">from</span> app02 <span class="keyword">import</span> views</span><br><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url, include</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line"></span><br><span class="line">    url(<span class="string">r&#x27;login/&#x27;</span>, views.login, name=<span class="string">&#x27;login&#x27;</span>),</span><br><span class="line"></span><br><span class="line">]</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="render内部原理"><a href="#render内部原理" class="headerlink" title="render内部原理"></a><strong>render内部原理</strong></h3><p><img src="/2020/08/23/python/image-20210727214600829.png" alt="python"></p><h3 id="JsonResponse"><a href="#JsonResponse" class="headerlink" title="JsonResponse"></a>JsonResponse</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> JsonResponse</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span>(<span class="params">request</span>):</span></span><br><span class="line">    l = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line">    user_dic = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;刘皓杰&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">19</span>&#125;</span><br><span class="line">    <span class="comment"># return JsonResponse(l, safe=False)  # 列表序列化要加safe参数</span></span><br><span class="line">    <span class="keyword">return</span> JsonResponse(user_dic, json_dumps_params=&#123;<span class="string">&quot;ensure_ascii&quot;</span>: <span class="literal">False</span>&#125;)  <span class="comment"># 列表序列化要加safe参数</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a><strong>文件上传</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.core.files.uploadedfile <span class="keyword">import</span> InMemoryUploadedFile</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>(<span class="params">request</span>):</span></span><br><span class="line"><span class="built_in">print</span>(request.FILES)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(request.FILES.get(<span class="string">&#x27;myfile&#x27;</span>)))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(request.body)</span><br><span class="line"><span class="built_in">print</span>(request.GET)</span><br><span class="line"><span class="built_in">print</span>(request.POST)</span><br><span class="line"></span><br><span class="line">file = request.FILES.get(<span class="string">&#x27;myfile&#x27;</span>)</span><br><span class="line">file_name = request.FILES.get(<span class="string">&#x27;myfile&#x27;</span>).name</span><br><span class="line"><span class="built_in">print</span>(file_name) ==&gt; <span class="built_in">print</span>(file.name)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存到文件</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(file_name,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> file.chunks():</span><br><span class="line">        f.write(line)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> HttpResponse(<span class="string">&#x27;文件上传成功！&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># action</span></span><br><span class="line"><span class="comment">#1 不写，默认向当前地址发送请求</span></span><br><span class="line"><span class="comment">#2 /index/，向当前域（http://127.0.0.1:8000/）的/index/发送请求</span></span><br><span class="line"><span class="comment">#3 http://127.0.0.1:8000/index/，向该地址发送请求（可以向第三方服务发送请求）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># method</span></span><br><span class="line"><span class="comment"># 1 post：发送post请求（默认编码情况下：以key=value&amp;key=value的形式拼到请求体中）</span></span><br><span class="line"><span class="comment"># 2 get：发送get请求（以key=value&amp;key=value的形式拼到路径中）</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;form action=<span class="string">&quot;/index/&quot;</span> method=<span class="string">&quot;post&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span><br><span class="line">    &lt;p&gt;用户名&lt;<span class="built_in">input</span> <span class="built_in">type</span>=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;name&quot;</span>&gt;&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;密码&lt;<span class="built_in">input</span> <span class="built_in">type</span>=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;password&quot;</span>&gt;&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;&lt;<span class="built_in">input</span> <span class="built_in">type</span>=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;myfile&quot;</span>&gt;&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;&lt;<span class="built_in">input</span> <span class="built_in">type</span>=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;登录&quot;</span>&gt;&lt;/p&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><h3 id="cbv和fbv"><a href="#cbv和fbv" class="headerlink" title="cbv和fbv"></a><strong>cbv和fbv</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cbv和fbv(CBV基于类的视图(Class base view)和FBV基于函数的视图（Function base view）</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.views <span class="keyword">import</span> View</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Index</span>(<span class="params">View</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;get&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;post&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">urls.py</span><br><span class="line"><span class="comment"># CBV配置路由</span></span><br><span class="line">    <span class="comment"># url(r&#x27;^index/&#x27;, views.Index.as_view()),</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="string">&quot;&quot;&quot;cbv本质</span></span><br><span class="line"><span class="string"># 1 请来了，路由匹配成功执行 path(&#x27;index/&#x27;, views.Index.as_view()),    执行views.Index.as_view()()# 2 本质是执行as_view()内部有个闭包函数view()# 3 本质是view()---》dispatch()# 4 dispatch内部，根据请求的方法（get,post）----&gt;执行视图类中的def get  def post</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h3 id="模板的继承和导入"><a href="#模板的继承和导入" class="headerlink" title="模板的继承和导入"></a><strong>模板的继承和导入</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="comment"># 模板的继承#&#125;</span></span><br><span class="line">&#123;% extends <span class="string">&#x27;index.html&#x27;</span> %&#125;</span><br><span class="line">    </span><br><span class="line">&#123;<span class="comment"># 模板的导入#&#125;</span></span><br><span class="line">&#123;% include <span class="string">&#x27;test.html&#x27;</span> %&#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line"></span><br><span class="line">    &#123;<span class="comment"># 模板的导入#&#125;</span></span><br><span class="line">    &#123;% include <span class="string">&#x27;test.html&#x27;</span> %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure><h3 id="ORM"><a href="#ORM" class="headerlink" title="ORM"></a><strong>ORM</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> orm:对象关系映射（跟语言无关）</span><br><span class="line">    数据库中的表     ----》对应程序的一个类</span><br><span class="line">        数据库中的一行数据----》对应程序中的一个对象</span><br><span class="line"><span class="number">2</span> python中常见orm框架</span><br><span class="line">-django的orm框架</span><br><span class="line">    -sqlachemy orm框架</span><br><span class="line">    </span><br><span class="line"><span class="number">3</span> java：（扩展），java中写web项目</span><br><span class="line">ssh框架 ：spring+struts（有漏洞）+hibernate（orm框架） （我的那个年代）</span><br><span class="line">ssm框架：spring+springmvc+mybatis（orm框架，可以写原生sql）</span><br><span class="line">    springboot：sb框架 ，tomcat内置进去了</span><br><span class="line">    springcloud：微服务</span><br><span class="line"><span class="number">4</span> orm能干的事</span><br><span class="line">-创建表（不能创建数据库，手动创建数据库）</span><br><span class="line">    -增加删除表内字段</span><br><span class="line">    -增删查改数据</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="number">0</span> sqlite：也是要给数据库，文件数据库，一个库就是要给文件，不需要单独安装</span><br><span class="line">-咱们现在在用，也要用到关系型数据库，不想装mysql，就可以使用sqlite</span><br><span class="line">    -移动开发本地存储数据，存在sqlite中</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> 创建个UserInfo表，在models中写一个类</span><br><span class="line"><span class="number">2</span> 表中有字段（类属性），字段有属性，</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 第一步在models中写要给类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">        <span class="comment"># 字段属性--》后面那个对象决定的,</span></span><br><span class="line">        <span class="comment"># 改字段自增，并且是主键</span></span><br><span class="line">        <span class="built_in">id</span> = models.AutoField(primary_key=<span class="literal">True</span>)</span><br><span class="line">        <span class="comment"># 改字段是varchar类型，长度为32(唯一约束，是否是索引，默认值是，是否可以为空)</span></span><br><span class="line">        name = models.CharField(max_length=<span class="number">32</span>)</span><br><span class="line">        <span class="comment"># 密码字段</span></span><br><span class="line">        password =models.CharField(max_length=<span class="number">64</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 数字类型</span></span><br><span class="line">    gender = models.IntegerField(default=<span class="number">0</span>)  <span class="comment"># 默认值为0</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 省份</span></span><br><span class="line">        province = models.CharField(max_length=<span class="number">32</span>,null=<span class="literal">True</span>)  <span class="comment"># 可以为空</span></span><br><span class="line">        </span><br><span class="line"><span class="comment"># 第二步，把表创建出来(执行两个命令)</span></span><br><span class="line">-python3 manage.py makemigrations  <span class="comment"># 这条命令会在migrations创建一条记录，数据库变更记录</span></span><br><span class="line">    -python3 manage.py migrate         <span class="comment"># 把更改同步到数据库</span></span><br></pre></td></tr></table></figure><h3 id="查询表记录API"><a href="#查询表记录API" class="headerlink" title="查询表记录API"></a><strong>查询表记录API</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="number">1</span>&gt; <span class="built_in">all</span>():                  查询所有结果</span><br><span class="line">&lt;<span class="number">2</span>&gt; <span class="built_in">filter</span>(**kwargs):       它包含了与所给筛选条件相匹配的对象</span><br><span class="line">&lt;<span class="number">3</span>&gt; get(**kwargs):          返回与所给筛选条件相匹配的对象，返回结果有且只有一个，如果符合筛选条件的对象超过一个或者没有都会抛出错误。</span><br><span class="line">&lt;<span class="number">4</span>&gt; exclude(**kwargs):      它包含了与所给筛选条件不匹配的对象</span><br><span class="line">&lt;<span class="number">5</span>&gt; order_by(*field):       对查询结果排序(<span class="string">&#x27;-id&#x27;</span>)</span><br><span class="line">&lt;<span class="number">6</span>&gt; reverse():              对查询结果反向排序</span><br><span class="line">&lt;<span class="number">8</span>&gt; count():                返回数据库中匹配查询(QuerySet)的对象数量。</span><br><span class="line">&lt;<span class="number">9</span>&gt; first():                返回第一条记录</span><br><span class="line">&lt;<span class="number">10</span>&gt; last():                返回最后一条记录</span><br><span class="line">&lt;<span class="number">11</span>&gt; exists():              如果QuerySet包含数据，就返回<span class="literal">True</span>，否则返回<span class="literal">False</span></span><br><span class="line">&lt;<span class="number">12</span>&gt; values(*field):        返回一个ValueQuerySet——一个特殊的QuerySet，运行后得到的并不是一系列                          model的实例化对象，而是一个可迭代的字典序列</span><br><span class="line">&lt;<span class="number">13</span>&gt; values_list(*field):   它与values()非常相似，它返回的是一个元组序列，values返回的是一个字典序列</span><br><span class="line">&lt;<span class="number">14</span>&gt; distinct():            从返回结果中剔除重复纪录</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 必会13条</span></span><br><span class="line">    <span class="comment"># 1.all()       查询所有</span></span><br><span class="line">    <span class="comment"># 2.filter()    带有过滤条件查询</span></span><br><span class="line">    <span class="comment"># 3.get()       直接拿数据对象条件不存在报错</span></span><br><span class="line">    <span class="comment"># 4.first()     拿QuerySet中第一个元素</span></span><br><span class="line">    res = models.UserInfo.objects.<span class="built_in">all</span>().first()</span><br><span class="line">    <span class="built_in">print</span>(res)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 5.last()     拿QuerySet中最后一个元素</span></span><br><span class="line">    <span class="comment"># 6. values()  可以指定获取数据的字段--》返回结果列表套字典</span></span><br><span class="line">    res = models.UserInfo.objects.values(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(res)  <span class="comment"># &lt;QuerySet [&#123;&#x27;name&#x27;: &#x27;lhj&#x27;&#125;, &#123;&#x27;name&#x27;: &#x27;lxx&#x27;&#125;, &#123;&#x27;name&#x27;: &#x27;lxx&#x27;&#125;]&gt;</span></span><br><span class="line"><span class="built_in">print</span>(res.query)  <span class="comment"># 查看内部封装的SQL语句，只能用于QuerySet对象</span></span><br><span class="line">    <span class="comment"># 7. values_list()  可以指定获取数据的字段--》返回结果列表套元组</span></span><br><span class="line">    res = models.UserInfo.objects.values_list(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(res)   <span class="comment"># &lt;QuerySet [(&#x27;lhj&#x27;,), (&#x27;lxx&#x27;,), (&#x27;lxx&#x27;,)]&gt;</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    print(res.query) </span></span><br><span class="line"><span class="string">    查看原生sql语句</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 8.distinct()     去重</span></span><br><span class="line">    <span class="comment"># res = models.UserInfo.objects.values_list(&#x27;name&#x27;,).distinct()</span></span><br><span class="line">    <span class="comment"># print(res)</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    去重一定是要一模一样的数据</span></span><br><span class="line"><span class="string">    而且不能忽略主键</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 9. order_by() 排序--》 默认升序</span></span><br><span class="line">    res = models.UserInfo.objects.order_by(<span class="string">&#x27;register_time&#x27;</span>) <span class="comment"># 升序</span></span><br><span class="line">    res = models.UserInfo.objects.order_by(<span class="string">&#x27;-register_time&#x27;</span>) <span class="comment"># 降序</span></span><br><span class="line">    <span class="built_in">print</span>(res)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 10.reverse 反转--》  前提是已将排过序</span></span><br><span class="line">    res = models.UserInfo.objects.order_by(<span class="string">&#x27;register_time&#x27;</span>).reverse()</span><br><span class="line">    <span class="built_in">print</span>(res)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 11.count() 统计个数</span></span><br><span class="line">    res = models.UserInfo.objects.count()</span><br><span class="line">    <span class="built_in">print</span>(res)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 12.exclude()  排除在外</span></span><br><span class="line">    res = models.UserInfo.objects.exclude(name=<span class="string">&#x27;alex&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(res)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 13.exists()  返回布尔值，基本用不到</span></span><br></pre></td></tr></table></figure><h3 id="表模型多表查询"><a href="#表模型多表查询" class="headerlink" title="表模型多表查询"></a><strong>表模型多表查询</strong></h3><p>models.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Publish</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    <span class="built_in">id</span> = models.AutoField(primary_key=<span class="literal">True</span>)</span><br><span class="line">    name = models.CharField(max_length=<span class="number">32</span>)</span><br><span class="line">    addr = models.CharField(max_length=<span class="number">64</span>)</span><br><span class="line">    phone = models.CharField(max_length=<span class="number">64</span>)</span><br><span class="line">    email = models.EmailField()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Book</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    <span class="built_in">id</span> = models.AutoField(primary_key=<span class="literal">True</span>)</span><br><span class="line">    name = models.CharField(max_length=<span class="number">32</span>)</span><br><span class="line">    price = models.DecimalField(max_digits=<span class="number">6</span>, decimal_places=<span class="number">2</span>)</span><br><span class="line">    publish_date = models.DateTimeField(auto_now_add=<span class="literal">True</span>.default=datetime.datetime.now)</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    auto_now     数据更新时间修改</span></span><br><span class="line"><span class="string">    auto_now_add 创建时间则不会修改</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    publish = models.ForeignKey(to=Publish, on_delete=models.CASCADE)  <span class="comment"># 不写，默认跟主键做关联</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 自动创建出第三张表(这句话会自动创建第三章表)</span></span><br><span class="line">    <span class="comment"># authors在数据库中不存在该字段，没有to_field</span></span><br><span class="line">    <span class="comment"># 默认情况：第三张表有id字段，当前Book表的id和Author表的id字段</span></span><br><span class="line">    authors = models.ManyToManyField(to=<span class="string">&#x27;Author&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Author</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    <span class="built_in">id</span> = models.AutoField(primary_key=<span class="literal">True</span>)</span><br><span class="line">    name = models.CharField(max_length=<span class="number">32</span>)</span><br><span class="line">    age = models.SmallIntegerField()</span><br><span class="line">    <span class="comment"># 一对一的本质是  ForeignKey+unique</span></span><br><span class="line">    <span class="comment"># author_detail=models.ForeignKey(to=&#x27;AuthorDetail&#x27;,to_field=&#x27;id&#x27;,unique=True)</span></span><br><span class="line"></span><br><span class="line">    author_detail = models.OneToOneField(to=<span class="string">&#x27;AuthorDetail&#x27;</span>, on_delete=models.CASCADE)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AuthorDetail</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    <span class="built_in">id</span> = models.AutoField(primary_key=<span class="literal">True</span>)</span><br><span class="line">    sex = models.SmallIntegerField()</span><br><span class="line">    addr = models.CharField(max_length=<span class="number">64</span>)</span><br><span class="line">    phone = models.BigIntegerField()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>生成表</p><p><img src="/2020/08/23/python/image-20220616164255678.png" alt="python"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">python manage.py makemigrations</span><br><span class="line">python manage.py migrate</span><br><span class="line"><span class="comment"># makemigrations 若报错</span></span><br><span class="line"><span class="comment"># 进入python解释器安装目录：D:\python\Lib\site-packages\django\contrib\admin\migrations删除除了__init__.py里面的所有文件</span></span><br><span class="line"><span class="comment"># 创建表及一些元数据信息</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">    <span class="comment"># 表名</span></span><br><span class="line">    db_table = <span class="string">&quot;book&quot;</span></span><br><span class="line">    <span class="comment">#联合索引</span></span><br><span class="line">    index_together = [</span><br><span class="line">        (<span class="string">&quot;name&quot;</span>, <span class="string">&quot;publish&quot;</span>),</span><br><span class="line">    ]</span><br><span class="line">    <span class="comment"># 联合唯一索引</span></span><br><span class="line">    unique_together = ((<span class="string">&quot;name&quot;</span>, <span class="string">&quot;publish&quot;</span>),)</span><br></pre></td></tr></table></figure><p>在django测试环境模拟多表操作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    os.environ.setdefault(<span class="string">&#x27;DJANGO_SETTINGS_MODULE&#x27;</span>, <span class="string">&#x27;django_server.settings&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">import</span> django</span><br><span class="line">    django.setup()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">from</span> app01 <span class="keyword">import</span> models</span><br><span class="line">    <span class="comment"># 一对多添加记录</span></span><br><span class="line">    <span class="comment"># 增</span></span><br><span class="line">    publish = models.Publish.objects.create(name=<span class="string">&#x27;南京出版社&#x27;</span>, addr=<span class="string">&#x27;南京&#x27;</span>, email=<span class="string">&#x27;666@qq.com&#x27;</span>)</span><br><span class="line">    models.Book.objects.create(name=<span class="string">&#x27;封神榜&#x27;</span>, price=<span class="number">166.88</span>, publish_id=publish.<span class="built_in">id</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 删</span></span><br><span class="line">    res = models.Publish.objects.<span class="built_in">filter</span>(pk=<span class="number">1</span>).delete()</span><br><span class="line">    <span class="built_in">print</span>(res)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 查</span></span><br><span class="line">    res = models.Book.objects.<span class="built_in">all</span>()</span><br><span class="line">    <span class="built_in">print</span>(res)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 改</span></span><br><span class="line">    <span class="comment">#1</span></span><br><span class="line">    res = models.Book.objects.<span class="built_in">filter</span>(pk=<span class="number">1</span>).update(publish_id=<span class="number">3</span>)</span><br><span class="line">    <span class="built_in">print</span>(res)</span><br><span class="line">    <span class="comment">#2</span></span><br><span class="line">    publish_obj = models.Publish.objects.<span class="built_in">filter</span>(pk=<span class="number">2</span>).first()</span><br><span class="line">    models.Book.objects.<span class="built_in">filter</span>(pk=<span class="number">1</span>).update(publish=publish_obj)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 多对多添加记录</span></span><br><span class="line">     author_detail = models.AuthorDetail.objects.create(phone=<span class="number">123456</span>, sex=<span class="number">0</span>, addr=<span class="string">&#x27;北京&#x27;</span>)</span><br><span class="line">     author = models.Author.objects.create(name=<span class="string">&#x27;大冰&#x27;</span>, age=<span class="number">36</span>, author_detail_id=author_detail.<span class="built_in">id</span>)</span><br><span class="line">    book = models.Book.objects.get(name=<span class="string">&#x27;祈祷落幕时&#x27;</span>)</span><br><span class="line">    <span class="comment"># 方式一  添加作者对象</span></span><br><span class="line">    <span class="comment"># author_1 = models.Author.objects.get(id=1)</span></span><br><span class="line">    <span class="comment"># author_2 = models.Author.objects.get(id=2)</span></span><br><span class="line">    <span class="comment"># book.authors.add(author_1, author_2)</span></span><br><span class="line">    <span class="comment"># 方式二  添加ID</span></span><br><span class="line">    book.authors.add(<span class="number">1</span>, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 白夜行删除一个作者</span></span><br><span class="line">    <span class="comment"># book = models.Book.objects.get(name=&#x27;白夜行&#x27;)</span></span><br><span class="line">    <span class="comment"># book.authors.remove(1)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># clear 清空所有作者</span></span><br><span class="line">    <span class="comment"># book = models.Book.objects.get(name=&#x27;白夜行&#x27;)</span></span><br><span class="line">    <span class="comment"># book.authors.add(2, 3)</span></span><br><span class="line">    <span class="comment"># book.authors.clear()</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># set 先清空，再add,前提是不存在的作者</span></span><br><span class="line">    <span class="comment"># book = models.Book.objects.get(name=&#x27;白夜行&#x27;)</span></span><br><span class="line">    <span class="comment"># book.authors.set([1, 3])</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 双下划线的跨表查询</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    外键字段在哪一方就是正向</span></span><br><span class="line"><span class="string">    book --》 publish 正向</span></span><br><span class="line"><span class="string">    publish --》 book 反向</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    正向查询按字段</span></span><br><span class="line"><span class="string">    反向查询按表名小写</span></span><br><span class="line"><span class="string">        _set.all()</span></span><br><span class="line"><span class="string">        查询结果有多个需要加 表名小写_set.all()</span></span><br><span class="line"><span class="string">        如果一个直接表名小写_set</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="comment"># 1.查询书籍主键为1的出版社和书的名称</span></span><br><span class="line">    <span class="comment"># res = models.Book.objects.filter(pk=1).values(&#x27;publish__name&#x27;,&#x27;name&#x27;)</span></span><br><span class="line">    <span class="comment"># print(res)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 反向</span></span><br><span class="line">    <span class="comment"># res = models.Publish.objects.filter(book__id=1).values(&#x27;name&#x27;, &#x27;book__name&#x27;)</span></span><br><span class="line">    <span class="comment"># print(res)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2.查询作者大冰的手机号和书籍名称</span></span><br><span class="line">    res = models.Author.objects.<span class="built_in">filter</span>(name__exact=<span class="string">&quot;大冰&quot;</span>).values(<span class="string">&#x27;author_detail__phone&#x27;</span>, <span class="string">&#x27;book__name&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(res)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 反向</span></span><br><span class="line">    res = models.AuthorDetail.objects.<span class="built_in">filter</span>(author__name=<span class="string">&quot;大冰&quot;</span>).values(<span class="string">&#x27;phone&#x27;</span>, <span class="string">&#x27;author__book__name&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(res)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 3.查询书籍主键为1的价钱和作者地址</span></span><br><span class="line">    res = models.Book.objects.<span class="built_in">filter</span>(pk=<span class="number">2</span>).values(<span class="string">&#x27;price&#x27;</span>, <span class="string">&#x27;authors__author_detail__addr&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(res)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 反向</span></span><br><span class="line">    res = models.AuthorDetail.objects.<span class="built_in">filter</span>(author__book__id=<span class="number">2</span>).values(<span class="string">&#x27;author__book__price&#x27;</span>, <span class="string">&#x27;addr&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(res)</span><br></pre></td></tr></table></figure><h3 id="双下划线的模糊查询"><a href="#双下划线的模糊查询" class="headerlink" title="双下划线的模糊查询"></a><strong>双下划线的模糊查询</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># __的使用方法</span></span><br><span class="line">   <span class="comment"># 1 查询年龄大于30</span></span><br><span class="line">   <span class="comment">#  age__gt(大于)</span></span><br><span class="line">   <span class="comment">#  age__gte(大于等于)</span></span><br><span class="line">   <span class="comment"># res = models.UserInfo.objects.filter(age__gt = 30)</span></span><br><span class="line">   <span class="comment"># print(res)</span></span><br><span class="line"></span><br><span class="line">   <span class="comment"># 2 查询年龄小于30</span></span><br><span class="line">   <span class="comment">#  age__lt(小于)</span></span><br><span class="line">   <span class="comment">#  age__lte(小于等于)</span></span><br><span class="line">   <span class="comment"># res = models.UserInfo.objects.filter(age__lt=30)</span></span><br><span class="line">   <span class="comment"># print(res)</span></span><br><span class="line"></span><br><span class="line">   <span class="comment"># 3 查询年龄在18或28或38</span></span><br><span class="line">   <span class="comment"># age__in</span></span><br><span class="line">   <span class="comment"># res = models.UserInfo.objects.filter(age__in=[18, 28, 38])</span></span><br><span class="line">   <span class="comment"># print(res)</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">#4 查询年龄在18或48之间</span></span><br><span class="line">   <span class="comment"># age__range</span></span><br><span class="line">   <span class="comment"># res = models.UserInfo.objects.filter(age__range=[18, 48])</span></span><br><span class="line">   <span class="comment"># print(res)</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">#5 模糊查询 默认区分大小写</span></span><br><span class="line">   <span class="comment"># name__contains</span></span><br><span class="line">   <span class="comment"># res = models.UserInfo.objects.filter(name__contains=&#x27;a&#x27;)</span></span><br><span class="line">   <span class="comment"># print(res)</span></span><br><span class="line"></span><br><span class="line">   <span class="comment"># 忽略大小写</span></span><br><span class="line">   <span class="comment"># name__icontains</span></span><br><span class="line">   <span class="comment"># res = models.UserInfo.objects.filter(name__icontains=&#x27;a&#x27;)</span></span><br><span class="line">   <span class="comment"># print(res)</span></span><br></pre></td></tr></table></figure><h3 id="聚合查询"><a href="#聚合查询" class="headerlink" title="聚合查询"></a><strong>聚合查询</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> app01 <span class="keyword">import</span> models</span><br><span class="line"><span class="keyword">from</span> django.db.models <span class="keyword">import</span> Max, Min, Sum, Avg, Count</span><br><span class="line"></span><br><span class="line">res=models.Book.objects.aggregate(Max(<span class="string">&#x27;price&#x27;</span>),Min(<span class="string">&#x27;price&#x27;</span>),Sum(<span class="string">&#x27;price&#x27;</span>),Avg(<span class="string">&#x27;price&#x27;</span>),Count(<span class="string">&#x27;id&#x27;</span>))</span><br><span class="line">    <span class="built_in">print</span>(res)</span><br><span class="line">    <span class="comment"># 起别名</span></span><br><span class="line"><span class="comment"># aggregate(a=Max(&#x27;price&#x27;))</span></span><br></pre></td></tr></table></figure><h3 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a><strong>分组查询</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  annotate() 内写聚合函数</span></span><br><span class="line">    <span class="comment">#  values在前表示group by的字段</span></span><br><span class="line">    <span class="comment">#  values在后表示取某几个字段</span></span><br><span class="line">    <span class="comment">#  filter在前表示where</span></span><br><span class="line">    <span class="comment">#  filter在后表示having</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">from</span> app01 <span class="keyword">import</span> models</span><br><span class="line">    <span class="keyword">from</span> django.db.models <span class="keyword">import</span> Max, Min, Sum, Avg, Count</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 练习：统计每一本书作者个数</span></span><br><span class="line">    <span class="comment">## 1</span></span><br><span class="line">    <span class="comment"># books = models.Book.objects.annotate(author_num=Count(&#x27;authors&#x27;))</span></span><br><span class="line">    <span class="comment"># for book in books:</span></span><br><span class="line">    <span class="comment">#     print(book.name)</span></span><br><span class="line">    <span class="comment">#     print(book.author_num)</span></span><br><span class="line">    <span class="comment">## 2</span></span><br><span class="line">    <span class="comment"># books = models.Book.objects.annotate(author_num=Count(&#x27;authors&#x27;)).values(&#x27;name&#x27;,&#x27;author_num&#x27;)</span></span><br><span class="line">    <span class="comment"># print(books)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">## 3</span></span><br><span class="line">    <span class="comment"># author = models.Author.objects.values(&#x27;book&#x27;).annotate(author_num=Count(&#x27;name&#x27;)).values(&#x27;book__name&#x27;,&#x27;author_num&#x27;)</span></span><br><span class="line">    <span class="comment"># print(author)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#  练习：统计每一个出版社的最便宜的书</span></span><br><span class="line">    <span class="comment">## 1</span></span><br><span class="line">    <span class="comment"># publish = models.Publish.objects.annotate(min=Min(&#x27;book__price&#x27;)).values(&#x27;name&#x27;, &#x27;min&#x27;)</span></span><br><span class="line">    <span class="comment"># print(publish)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">## 2</span></span><br><span class="line">    <span class="comment"># book = models.Book.objects.values(&#x27;publish&#x27;).annotate(min=Min(&#x27;price&#x27;)).values(&#x27;publish__name&#x27;, &#x27;min&#x27;)</span></span><br><span class="line">    <span class="comment"># print(book)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 练习：统计不止一个作者的图书：（作者数量大于一）</span></span><br><span class="line">    <span class="comment">## 1</span></span><br><span class="line">    <span class="comment"># author = models.Author.objects.values(&#x27;book__id&#x27;).annotate(count=Count(&#x27;id&#x27;)).filter(count__gt=1).values(&#x27;book__name&#x27;, &#x27;count&#x27;)</span></span><br><span class="line">    <span class="comment"># print(author)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">## 2</span></span><br><span class="line">    <span class="comment"># book = models.Book.objects.annotate(count=Count(&#x27;authors__id&#x27;)).filter(count__gt=1).values(&#x27;name&#x27;, &#x27;count&#x27;)</span></span><br><span class="line">    <span class="comment"># print(book)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># #统计价格数大于200元，作者个数大于1的图书</span></span><br><span class="line">    <span class="comment"># book = models.Book.objects.filter(price__gt=200).annotate(count=Count(&#x27;authors__id&#x27;)).filter(count__gt=1).values(&#x27;name&#x27;, &#x27;count&#x27;)</span></span><br><span class="line">    <span class="comment"># print(book)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 练习：根据一本图书作者数量的多少对查询集 QuerySet进行排序:</span></span><br><span class="line">    <span class="comment"># book = models.Book.objects.annotate(count=Count(&#x27;authors&#x27;)).order_by(&#x27;count&#x27;)</span></span><br><span class="line">    <span class="comment"># print(book)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 练习：查询各个作者出的书的总价格:</span></span><br><span class="line">    <span class="comment"># author = models.Author.objects.annotate(sum=Sum(&#x27;book__price&#x27;)).values(&#x27;name&#x27;,&#x27;sum&#x27;)</span></span><br><span class="line">    <span class="comment"># print(author)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 练习：查询每个出版社的名称和书籍个数</span></span><br><span class="line">    <span class="comment"># res = models.Publish.objects.annotate(count=Count(&#x27;book__id&#x27;)).values(&#x27;name&#x27;, &#x27;count&#x27;)</span></span><br><span class="line">    <span class="comment"># print(res)</span></span><br></pre></td></tr></table></figure><h3 id="F和Q查询"><a href="#F和Q查询" class="headerlink" title="F和Q查询"></a><strong>F和Q查询</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment"># F查询：取出数据库的某个字段的值</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 把read_num都加1</span></span><br><span class="line">    <span class="keyword">from</span> django.db.models <span class="keyword">import</span> F</span><br><span class="line">    ret=models.Book.objects.<span class="built_in">all</span>().update(read_num=F(<span class="string">&#x27;read_num&#x27;</span>)+<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(ret)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">#查询评论数大于阅读数的书籍</span></span><br><span class="line">    ret=models.Book.objects.<span class="built_in">all</span>().<span class="built_in">filter</span>(commit_num__gt=F(<span class="string">&#x27;read_num&#x27;</span>))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> ret:</span><br><span class="line">        <span class="built_in">print</span>(i.name)</span><br><span class="line"></span><br><span class="line">    <span class="comment">## 查询评论数大于阅读数2倍的书籍</span></span><br><span class="line">    ret=models.Book.objects.<span class="built_in">filter</span>(commit_num__gt=F(<span class="string">&#x27;read_num&#x27;</span>)*<span class="number">2</span>)</span><br><span class="line">    <span class="built_in">print</span>(ret)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment"># Q查询：制造  与或非的条件</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Q查询：制造  与或非的条件</span></span><br><span class="line">    <span class="comment"># 查询名字叫egon或者价格大于100的书</span></span><br><span class="line">    <span class="keyword">from</span> django.db.models <span class="keyword">import</span> Q</span><br><span class="line">    <span class="comment"># ret=models.Book.objects.filter(Q(name=&#x27;egon&#x27;) | Q(price__gt=100))</span></span><br><span class="line">    <span class="comment"># 查询名字叫egon并且价格大于100的书</span></span><br><span class="line">    <span class="comment"># ret=models.Book.objects.filter(Q(name=&#x27;egon&#x27;) &amp; Q(price__gt=100))</span></span><br><span class="line">    <span class="comment"># ret=models.Book.objects.filter(name=&#x27;egon&#x27;,price__gt=100)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 查询名字不为egon的书</span></span><br><span class="line">    <span class="comment"># ret = models.Book.objects.filter(~Q(name=&#x27;egon&#x27;))</span></span><br><span class="line">    <span class="comment"># print(ret)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Q可以嵌套</span></span><br><span class="line">    ret = models.Book.objects.<span class="built_in">filter</span>((Q(name=<span class="string">&#x27;egon&#x27;</span>) &amp; Q(price__lt=<span class="number">100</span>)) | Q(id__lt=<span class="number">3</span>))</span><br><span class="line">    <span class="built_in">print</span>(ret)</span><br></pre></td></tr></table></figure><h3 id="打印原生sql"><a href="#打印原生sql" class="headerlink" title="打印原生sql"></a><strong>打印原生sql</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">LOGGING = &#123;</span><br><span class="line">    <span class="string">&#x27;version&#x27;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">&#x27;disable_existing_loggers&#x27;</span>: <span class="literal">False</span>,</span><br><span class="line">    <span class="string">&#x27;handlers&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;console&#x27;</span>:&#123;</span><br><span class="line">            <span class="string">&#x27;level&#x27;</span>:<span class="string">&#x27;DEBUG&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;class&#x27;</span>:<span class="string">&#x27;logging.StreamHandler&#x27;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;loggers&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;django.db.backends&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;handlers&#x27;</span>: [<span class="string">&#x27;console&#x27;</span>],</span><br><span class="line">            <span class="string">&#x27;propagate&#x27;</span>: <span class="literal">True</span>,</span><br><span class="line">            <span class="string">&#x27;level&#x27;</span>:<span class="string">&#x27;DEBUG&#x27;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Django日志配置"><a href="#Django日志配置" class="headerlink" title="Django日志配置"></a>Django日志配置</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">LOGGING = &#123;</span><br><span class="line">    <span class="string">&#x27;version&#x27;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">&#x27;disable_existing_loggers&#x27;</span>: <span class="literal">False</span>, <span class="comment"># 是否禁用已经存在的日志器</span></span><br><span class="line">    <span class="string">&#x27;formatters&#x27;</span>: &#123;  <span class="comment"># 输出日志的格式</span></span><br><span class="line">        <span class="string">&#x27;verbose&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;format&#x27;</span>: <span class="string">&#x27;%(levelname)s %(asctime)s %(module)s %(lineno)d %(message)s&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;simple&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;format&#x27;</span>: <span class="string">&#x27;%(levelname)s %(module)s %(lineno)d %(message)s&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;filters&#x27;</span>: &#123;  <span class="comment"># 对日志进行过滤</span></span><br><span class="line">        <span class="string">&#x27;require_debug_true&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;()&#x27;</span>: <span class="string">&#x27;django.utils.log.RequireDebugTrue&#x27;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;handlers&#x27;</span>: &#123; <span class="comment"># 日志的处理方式</span></span><br><span class="line">        <span class="string">&#x27;console&#x27;</span>: &#123;  <span class="comment"># 终端输出日志</span></span><br><span class="line">            <span class="string">&#x27;level&#x27;</span>: <span class="string">&#x27;INFO&#x27;</span>,  <span class="comment"># 大于INFO级别，才输出</span></span><br><span class="line">            <span class="string">&#x27;filters&#x27;</span>: [<span class="string">&#x27;require_debug_true&#x27;</span>],</span><br><span class="line">            <span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;logging.StreamHandler&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;formatter&#x27;</span>: <span class="string">&#x27;simple&#x27;</span> <span class="comment"># 输出简单的样式</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;file&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;level&#x27;</span>: <span class="string">&#x27;INFO&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;logging.handlers.RotatingFileHandler&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;filename&#x27;</span>: os.path.join(BASE_DIR , <span class="string">&quot;logs/log.log&quot;</span>),  <span class="comment"># 日志文件的位置</span></span><br><span class="line">            <span class="string">&#x27;maxBytes&#x27;</span>: <span class="number">300</span> * <span class="number">1024</span> * <span class="number">1024</span>,  <span class="comment"># 文件最多存储 300M 的内存   日志文件满了，他会自动新建meiduo1 meiduo2</span></span><br><span class="line">            <span class="string">&#x27;backupCount&#x27;</span>: <span class="number">10</span>, <span class="comment"># 最多十个文件</span></span><br><span class="line">            <span class="string">&#x27;formatter&#x27;</span>: <span class="string">&#x27;verbose&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;loggers&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;django&#x27;</span>: &#123;  <span class="comment"># 定义了一个名为django的日志器</span></span><br><span class="line">            <span class="string">&#x27;handlers&#x27;</span>: [<span class="string">&#x27;console&#x27;</span>, <span class="string">&#x27;file&#x27;</span>], <span class="comment"># 可以同时在终端跟文件中输出</span></span><br><span class="line">            <span class="string">&#x27;propagate&#x27;</span>: <span class="literal">True</span>,</span><br><span class="line">            <span class="string">&#x27;level;&#x27;</span>:<span class="string">&#x27;INFO&#x27;</span> <span class="comment"># 日至输出的最低级别</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="事务"><a href="#事务" class="headerlink" title="事务"></a><strong>事务</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 事物：ACID，事物的隔离级别（搜），锁， 行级锁，表级锁</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># djanog orm中使用事物：原子性操作，要么都成功，要么都失败</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 新增一个作者详情，新增一个作者</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 事物的三个粒度</span></span><br><span class="line">    <span class="comment"># 1 局部使用</span></span><br><span class="line">    <span class="keyword">from</span> django.db <span class="keyword">import</span> transaction</span><br><span class="line">    <span class="keyword">with</span> transaction.atomic(): <span class="comment"># 都在事物中，要么都成功，要么都失败</span></span><br><span class="line">        author_detail=models.AuthorDetail.objects.create(addr=<span class="string">&#x27;xxx&#x27;</span>,phone=<span class="string">&#x27;123&#x27;</span>,sex=<span class="number">1</span>)</span><br><span class="line">        <span class="comment"># raise Exception(&#x27;抛了异常&#x27;)</span></span><br><span class="line">        author=models.Author.objects.create(name=<span class="string">&#x27;llqz&#x27;</span>,age=<span class="number">19</span>,author_detail=author_detail)</span><br><span class="line">        </span><br><span class="line">    <span class="comment"># 2 视图函数装饰器,这一个视图函数都在一个事物中</span></span><br><span class="line">    <span class="comment"># @transaction.atomic</span></span><br><span class="line">    <span class="comment"># def index(request):</span></span><br><span class="line">    <span class="comment">#     return HttpResponse(&#x27;ok&#x27;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 3 整个http请求，在事物中，在setting.py中配置</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    DATABASES = &#123;</span></span><br><span class="line"><span class="string">        &#x27;default&#x27;: &#123;</span></span><br><span class="line"><span class="string">            ...</span></span><br><span class="line"><span class="string">            &#x27;PORT&#x27;: 3306,</span></span><br><span class="line"><span class="string">            &#x27;ATOMIC_REQUEST&#x27;: True,</span></span><br><span class="line"><span class="string">       </span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &#x27;ATOMIC_REQUEST&#x27;: True,</span></span><br><span class="line"><span class="string">设置为True统一个http请求对应的所有sql都放在一个事务中执行（要么所有都成功，要么所有都失败）。</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="forms组件"><a href="#forms组件" class="headerlink" title="forms组件"></a><strong>forms组件</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django <span class="keyword">import</span> forms</span><br><span class="line"><span class="keyword">from</span> django.forms <span class="keyword">import</span> widgets</span><br><span class="line"><span class="keyword">from</span> django.forms <span class="keyword">import</span> ValidationError</span><br><span class="line"><span class="keyword">from</span> django.core.validators <span class="keyword">import</span> RegexValidator</span><br><span class="line"><span class="keyword">from</span> app01 <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Reg</span>(<span class="params">forms.Form</span>):</span></span><br><span class="line">    name = forms.CharField(max_length=<span class="number">32</span>, min_length=<span class="number">3</span>, required=<span class="literal">True</span>, label=<span class="string">&#x27;用户名&#x27;</span>, error_messages=&#123;</span><br><span class="line">        <span class="string">&#x27;max_length&#x27;</span>: <span class="string">&#x27;用户名长度不能超过32位&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;min_length&#x27;</span>: <span class="string">&#x27;用户名长度不能小于3位&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;required&#x27;</span>: <span class="string">&#x27;用户名不能为空&#x27;</span></span><br><span class="line">    &#125;, widget=forms.widgets.TextInput(attrs=&#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;form-control&#x27;</span>&#125;))</span><br><span class="line"></span><br><span class="line">    password = forms.CharField(max_length=<span class="number">32</span>, min_length=<span class="number">3</span>, label=<span class="string">&#x27;密码&#x27;</span>, error_messages=&#123;</span><br><span class="line">        <span class="string">&#x27;max_length&#x27;</span>: <span class="string">&#x27;密码长度不能超过32位&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;min_length&#x27;</span>: <span class="string">&#x27;密码长度不能小于3位&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;required&#x27;</span>: <span class="string">&#x27;密码不能为空&#x27;</span></span><br><span class="line">    &#125;, widget=forms.widgets.PasswordInput(attrs=&#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;form-control&#x27;</span>&#125;))</span><br><span class="line"></span><br><span class="line">    re_password = forms.CharField(max_length=<span class="number">32</span>, min_length=<span class="number">3</span>, label=<span class="string">&#x27;确认密码&#x27;</span>, error_messages=&#123;</span><br><span class="line">        <span class="string">&#x27;max_length&#x27;</span>: <span class="string">&#x27;确认密码长度不能超过32位&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;min_length&#x27;</span>: <span class="string">&#x27;确认密码长度不能小于3位&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;required&#x27;</span>: <span class="string">&#x27;确认密码不能为空&#x27;</span></span><br><span class="line">    &#125;, widget=forms.widgets.PasswordInput(attrs=&#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;form-control&#x27;</span>&#125;))</span><br><span class="line"></span><br><span class="line">    phone = forms.CharField(</span><br><span class="line">        max_length=<span class="number">11</span>,</span><br><span class="line">        error_messages=&#123;</span><br><span class="line">            <span class="string">&#x27;max_length&#x27;</span>: <span class="string">&#x27;手机长度不能超过11位&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;required&#x27;</span>: <span class="string">&#x27;手机号不能为空&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        validators=[</span><br><span class="line">            RegexValidator(<span class="string">r&#x27;^[0-9]+$&#x27;</span>, <span class="string">&#x27;请输入数字&#x27;</span>),</span><br><span class="line">            RegexValidator(<span class="string">r&#x27;^0?(13|14|15|17|18|19)[0-9]&#123;9&#125;$&#x27;</span>, <span class="string">&#x27;手机号码格式不对&#x27;</span>),</span><br><span class="line">        ],</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">clean_password</span>(<span class="params">self</span>):</span></span><br><span class="line">        password = self.cleaned_data.get(<span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;111&#x27;</span> <span class="keyword">in</span> password:</span><br><span class="line">            self.add_error(<span class="string">&#x27;password&#x27;</span>, <span class="string">&#x27;错误&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> password</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">clean_name</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment"># self:当前form对象</span></span><br><span class="line">        name = self.cleaned_data.get(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">        user = models.UserInfo.objects.<span class="built_in">filter</span>(username=name)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> user:</span><br><span class="line">            <span class="keyword">return</span> name</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span> ValidationError(<span class="string">&#x27;用户名已存在&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">clean</span>(<span class="params">self</span>):</span></span><br><span class="line">        password = self.cleaned_data.get(<span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">        re_password = self.cleaned_data.get(<span class="string">&#x27;re_password&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> re_password == password:</span><br><span class="line">            <span class="comment"># raise ValidationError(&#x27;两次密码不一致&#x27;)</span></span><br><span class="line">            self.add_error(<span class="string">&#x27;re_password&#x27;</span>, <span class="string">&#x27;两次密码不一致&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> self.cleaned_data</span><br></pre></td></tr></table></figure><h3 id="django中cookie的使用"><a href="#django中cookie的使用" class="headerlink" title="django中cookie的使用"></a><strong>django中cookie的使用</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 0 会话跟踪，会话保持</span></span><br><span class="line"><span class="comment"># 1 cookie规范</span></span><br><span class="line">-记住：当前网站在浏览器上cookie个数和大小有限制</span><br><span class="line"> -Cookie大小上限为4KB； </span><br><span class="line"> -一个服务器最多在客户端浏览器上保存<span class="number">20</span>个Cookie； </span><br><span class="line"> -一个浏览器最多保存<span class="number">300</span>个Cookie；</span><br><span class="line"><span class="comment"># 2 django中操作cookie</span></span><br><span class="line">-增：obj.set_cookie(<span class="string">&#x27;key&#x27;</span>,<span class="string">&#x27;value&#x27;</span>)</span><br><span class="line">    -删: obj.delete_cookie(<span class="string">&#x27;key&#x27;</span>)  <span class="comment"># 设置过期</span></span><br><span class="line">    -查: request.COOKIES.get(<span class="string">&#x27;key&#x27;</span>)</span><br><span class="line">    -改: obj.set_cookie(<span class="string">&#x27;key&#x27;</span>,<span class="string">&#x27;value1&#x27;</span>)</span><br><span class="line"><span class="comment"># 3 带签名的cookie（加盐，加密）</span></span><br><span class="line">-增：obj.set_signed_cookie(<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;lqz&#x27;</span>,<span class="string">&#x27;123&#x27;</span>)</span><br><span class="line">    -删: obj.delete_cookie(<span class="string">&#x27;name&#x27;</span>)  <span class="comment"># 设置过期</span></span><br><span class="line">    -查: request.get_signed_cookie(<span class="string">&#x27;name&#x27;</span>,salt=<span class="string">&#x27;123&#x27;</span>)</span><br><span class="line">    -改: obj.set_signed_cookie(<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;lqz&#x27;</span>,<span class="string">&#x27;123&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="cookie-session-token"><a href="#cookie-session-token" class="headerlink" title="cookie session token"></a><strong>cookie session token</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cookie：存在客户端的键值对，想服务端发送请求，会携带它过去（不安全）</span><br><span class="line">session：存在服务端的键值对（内存，文件，redis，mysql）</span><br><span class="line">-缺陷：随着用户的增多，存储需要消耗服务端资源</span><br><span class="line">token：就是个字符串（既安全又存有个人信息），加密字符串，会有个人信息</span><br><span class="line">-token现在应用广泛，契合了前后端分离</span><br><span class="line">    - JWT json web token</span><br></pre></td></tr></table></figure><h3 id="cookie版登陆校验"><a href="#cookie版登陆校验" class="headerlink" title="cookie版登陆校验"></a><strong>cookie版登陆校验</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render, HttpResponse, redirect</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> JsonResponse</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">wrapper</span>(<span class="params">func</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">inner</span>(<span class="params">request, *args, **kwargs</span>):</span></span><br><span class="line">        <span class="comment"># print(request.get_full_path()) #  可以获取用户上次次要访问的url</span></span><br><span class="line">        <span class="comment"># print(request.path_info)</span></span><br><span class="line">        target_url = request.get_full_path()</span><br><span class="line">        <span class="keyword">if</span> request.COOKIES.get(<span class="string">&#x27;name&#x27;</span>):</span><br><span class="line">            <span class="keyword">return</span> func(request, *args, **kwargs)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> redirect(<span class="string">&#x27;/app01/login/?%s&#x27;</span> %target_url)</span><br><span class="line">    <span class="keyword">return</span> inner</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;GET&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">&#x27;login.html&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        name = request.POST.get(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">        password = request.POST.get(<span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> name == <span class="string">&#x27;lxx&#x27;</span> <span class="keyword">and</span> password == <span class="string">&#x27;123&#x27;</span>:</span><br><span class="line">            <span class="comment"># 获取用户上次次要访问的url</span></span><br><span class="line">            target_url = request.GET.get(<span class="string">&#x27;next&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> target_url:</span><br><span class="line">                obj = redirect(target_url)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="comment"># 保存用户登录状态</span></span><br><span class="line">                obj = redirect(<span class="string">&#x27;/app01/order/&#x27;</span>)</span><br><span class="line">                <span class="comment"># max_age=3 设置超时时间3秒</span></span><br><span class="line">            obj.set_cookie(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;admin&#x27;</span>, max_age=<span class="number">3</span>)</span><br><span class="line">            <span class="keyword">return</span> obj</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&#x27;login.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@wrapper</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">order</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;我是order页面&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">delete_cookie</span>(<span class="params">request</span>):</span></span><br><span class="line">    obj = HttpResponse(<span class="string">&#x27;删除name 这个cookie&#x27;</span>)</span><br><span class="line">    obj.delete_cookie(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> obj</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>login.html</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.4.1/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/js/bootstrap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container-fluid&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-6 col-md-offset-3&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;text-center&quot;</span>&gt;</span>登陆页面<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>username</span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">id</span>=<span class="string">&quot;inp_name&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>password</span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;inp_password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;text-center&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span> <span class="attr">id</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control btn btn-info&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="中间件"><a href="#中间件" class="headerlink" title="中间件"></a><strong>中间件</strong></h3><p><strong>process_request和process_response</strong></p><p><img src="/2020/08/23/python/877318-20180523153139864-2049371026.png" alt="python"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MiddleWares</span>(<span class="params">MiddlewareMixin</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_request</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Md1请求&quot;</span>)</span><br><span class="line">        <span class="comment"># return HttpResponse(&#x27;Md1中断&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># process_request方法里面不写返回值，默认也是返回None，如果你自己写了return None，也是一样的效果，不会中断你的请求，但是如果你return 的一个httpresponse对象，那么就会在这个方法中断你的请求，直接返回给用户，这就成了非正常的流程了</span></span><br><span class="line"><span class="comment"># 并且，如果你在这里return了httpresponse对象，那么会从你这个中间件类中的process_response方法开始执行返回操作，所以这个类里面只要有process_response方法，肯定会执行</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_response</span>(<span class="params">self, request, response</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Md1返回&quot;</span>)</span><br><span class="line">        <span class="comment">#print(response.__dict__[&#x27;_container&#x27;][0].decode(&#x27;utf-8&#x27;)) #查看响应体里面的内容的方法，或者直接使用response.content也可以看到响应体里面的内容，由于response是个变量，直接点击看源码是看不到的，你打印type(response)发现是HttpResponse对象，查看这个对象的源码就知道有什么方法可以用了。</span></span><br><span class="line">　　　　 <span class="keyword">return</span> response  <span class="comment">#必须有返回值，写return response  ，这个response就像一个接力棒一样</span></span><br><span class="line">        <span class="comment">#return HttpResponse(&#x27;瞎搞&#x27;) ,如果你写了这个，那么你视图返回过来的内容就被它给替代了</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MiddleWares1</span>(<span class="params">MiddlewareMixin</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_request</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Md2请求&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> HttpResponse(<span class="string">&quot;Md2中断&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_response</span>(<span class="params">self, request, response</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Md2返回&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> response</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    　　　　结果：</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Md1请求</span></span><br><span class="line"><span class="string">Md2请求</span></span><br><span class="line"><span class="string">view函数...</span></span><br><span class="line"><span class="string">Md2返回</span></span><br><span class="line"><span class="string">Md1返回</span></span><br><span class="line"><span class="string">　　　　注意：如果当请求到达请求2的时候直接不符合条件返回，即return HttpResponse(&quot;Md2中断&quot;)，程序将把请求直接发给中间件2返回，然后依次返回到请求者，结果如下：</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">　　　　返回Md2中断的页面，后台打印如下： </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Md1请求</span></span><br><span class="line"><span class="string">Md2请求</span></span><br><span class="line"><span class="string">Md2返回</span></span><br><span class="line"><span class="string">Md1返回</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>process_view</strong></p><p><img src="/2020/08/23/python/877318-20180523150722556-373788290.png" alt="python"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">　　　　　　process_view(self, request, view_func, view_args, view_kwargs)</span><br><span class="line"></span><br><span class="line">　　　　　　该方法有四个参数</span><br><span class="line"></span><br><span class="line">　　　　　　request是HttpRequest对象。</span><br><span class="line"></span><br><span class="line">　　　　　　view_func是Django即将使用的视图函数。 （它是实际的函数对象，而不是函数的名称作为字符串。）</span><br><span class="line"></span><br><span class="line">　　　　　　view_args是将传递给视图的位置参数的列表.</span><br><span class="line"></span><br><span class="line">　　　　　　view_kwargs是将传递给视图的关键字参数的字典。 view_args和view_kwargs都不包含第一个视图参数（request）。</span><br><span class="line"></span><br><span class="line">　　　　　　Django会在调用视图函数之前调用process_view方法。</span><br><span class="line"></span><br><span class="line">　　　　　　它应该返回<span class="literal">None</span>或一个HttpResponse对象。 如果返回<span class="literal">None</span>，Django将继续处理这个请求，执行任何其他中间件的process_view方法，然后在执行相应的视图。 如果它返回一个HttpResponse对象，Django不会调用对应的视图函数。 它将执行中间件的process_response方法并将应用到该HttpResponse并返回结果。</span><br><span class="line">        </span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">MD1</span>(<span class="params">MiddlewareMixin</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_request</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;MD1里面的 process_request&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_response</span>(<span class="params">self, request, response</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;MD1里面的 process_response&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_view</span>(<span class="params">self, request, view_func, view_args, view_kwargs</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;-&quot;</span> * <span class="number">80</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;MD1 中的process_view&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(view_func, view_func.__name__) <span class="comment">#就是url映射到的那个视图函数，也就是说每个中间件的这个process_view已经提前拿到了要执行的那个视图函数</span></span><br><span class="line">        <span class="comment">#ret = view_func(request) #提前执行视图函数，不用到了上图的视图函数的位置再执行，如果你视图函数有参数的话，可以这么写 view_func(request,view_args,view_kwargs) </span></span><br><span class="line">        <span class="comment">#return ret  #直接就在MD1中间件这里这个类的process_response给返回了，就不会去找到视图函数里面的这个函数去执行了。</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="string">&#x27;&#x27;</span><span class="built_in">print</span>(view_func(request), view_func.__name__)<span class="string">&#x27;直接执行视图函数中的函数</span></span><br><span class="line"><span class="string">        Md1请求</span></span><br><span class="line"><span class="string">Md2请求</span></span><br><span class="line"><span class="string">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="string">MD1 中的process_view</span></span><br><span class="line"><span class="string">我是order</span></span><br><span class="line"><span class="string">&lt;HttpResponse status_code=200, &quot;text/html; charset=utf-8&quot;&gt; order</span></span><br><span class="line"><span class="string">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        &#x27;</span><span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MD2</span>(<span class="params">MiddlewareMixin</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_request</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;MD2里面的 process_request&quot;</span>)</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_response</span>(<span class="params">self, request, response</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;MD2里面的 process_response&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_view</span>(<span class="params">self, request, view_func, view_args, view_kwargs</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;-&quot;</span> * <span class="number">80</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;MD2 中的process_view&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(view_func, view_func.__name__)</span><br><span class="line"></span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">      Md1请求</span></span><br><span class="line"><span class="string">Md2请求</span></span><br><span class="line"><span class="string">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="string">MD1 中的process_view</span></span><br><span class="line"><span class="string">&lt;function order at 0x0000018F624699D0&gt; order</span></span><br><span class="line"><span class="string">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="string">MD2 中的process_view</span></span><br><span class="line"><span class="string">&lt;function order at 0x0000018F624699D0&gt; order</span></span><br><span class="line"><span class="string">我是order</span></span><br><span class="line"><span class="string">Md2返回</span></span><br><span class="line"><span class="string">Md1返回</span></span><br><span class="line"><span class="string">[23/Oct/2020 22:00:17] &quot;GET /order/ HTTP/1.1&quot; 200 459</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        process_view方法是在process_request之后，reprocess_response之前，视图函数之前执行的，执行顺序按照MIDDLEWARE中的注册顺序从前到后顺序执行的</span><br></pre></td></tr></table></figure><h3 id="CSRF-TOKEN跨站请求伪造"><a href="#CSRF-TOKEN跨站请求伪造" class="headerlink" title="CSRF_TOKEN跨站请求伪造"></a><strong>CSRF_TOKEN跨站请求伪造</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">django解决了csrf攻击，中间件：django.middleware.csrf.CsrfViewMiddleware</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">4</span> 后期中间件不能注释，每次发送post请求，都需要携带csrf_token随机字符串</span><br><span class="line">-form表单提交 </span><br><span class="line">    -在form表单中 &#123;% csrf_token%&#125;</span><br><span class="line">        </span><br><span class="line">    -ajax提交（如何携带）</span><br><span class="line">    方式一：放到data中</span><br><span class="line">     $.ajax(&#123;</span><br><span class="line">            url: <span class="string">&#x27;/csrf_test/&#x27;</span>,</span><br><span class="line">            method: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">            data: &#123;<span class="string">&#x27;name&#x27;</span>: $(<span class="string">&#x27;[name=&quot;name&quot;]&#x27;</span>).val(),</span><br><span class="line">                <span class="string">&#x27;password&#x27;</span>: $(<span class="string">&#x27;[name=&quot;password&quot;]&#x27;</span>).val(),</span><br><span class="line">                <span class="string">&#x27;csrfmiddlewaretoken&#x27;</span>:$(<span class="string">&#x27;[name=&quot;csrfmiddlewaretoken&quot;]&#x27;</span>).val()</span><br><span class="line">            &#125;,</span><br><span class="line">            success: function (data) &#123;</span><br><span class="line">                console.log(<span class="string">&#x27;成功了&#x27;</span>)</span><br><span class="line">                console.log(data)</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line">            error: function (data) &#123;</span><br><span class="line">                console.log(<span class="string">&#x27;xxxxx&#x27;</span>)</span><br><span class="line">                console.log(data)</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        方式二：放到data中</span><br><span class="line">        <span class="string">&#x27;csrfmiddlewaretoken&#x27;</span>:<span class="string">&#x27;&#123;&#123; csrf_token &#125;&#125;&#x27;</span></span><br><span class="line">        方式三：放到头中</span><br><span class="line">        headers:&#123;<span class="string">&#x27;X-CSRFToken&#x27;</span>:<span class="string">&#x27;&#123;&#123;csrf_token&#125;&#125;&#x27;</span>&#125;,</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"> <span class="comment"># jquery.cookie.js</span></span><br><span class="line">-在浏览器中对cookie进行增，删，查，改</span><br><span class="line">    -前后端分离（js操作cookie）</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment"># 全局使用，局部禁csrf</span></span><br><span class="line">-在视图函数上加装饰器</span><br><span class="line">    <span class="keyword">from</span> django.views.decorators.csrf <span class="keyword">import</span> csrf_exempt,csrf_protect</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="meta">@csrf_exempt  </span><span class="comment"># 全局启用，局部禁用（中间件不能注释，这个视图函数，已经没有csrf校验了）</span></span><br><span class="line"><span class="meta">@csrf_protect  </span><span class="comment"># 全局禁用，局部使用csrf(中间件要注释，这个视图函数有csrf校验)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">csrf_test</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;GET&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">&#x27;login.html&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        name = request.POST.get(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">        password = request.POST.get(<span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(name)</span><br><span class="line">        <span class="built_in">print</span>(password)</span><br><span class="line">        <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;登录成功&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 古怪的使用方式，在urls.py中</span></span><br><span class="line">path(<span class="string">&#x27;csrf_test/&#x27;</span>, csrf_exempt(views.csrf_test))</span><br></pre></td></tr></table></figure><h3 id="auth-内置属性及方法"><a href="#auth-内置属性及方法" class="headerlink" title="auth 内置属性及方法"></a><strong>auth 内置属性及方法</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render, redirect, HttpResponse</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.decorators <span class="keyword">import</span> login_required</span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> auth</span><br><span class="line"><span class="keyword">from</span> app01 <span class="keyword">import</span> models, myforms</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> JsonResponse</span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.models <span class="keyword">import</span> User</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># def register(request):</span></span><br><span class="line"><span class="comment">#     if request.method == &#x27;GET&#x27;:</span></span><br><span class="line"><span class="comment">#         return render(request, &#x27;register.html&#x27;,)</span></span><br><span class="line"><span class="comment">#     else:</span></span><br><span class="line"><span class="comment">#         username = request.POST.get(&#x27;name&#x27;)</span></span><br><span class="line"><span class="comment">#         password = request.POST.get(&#x27;password&#x27;)</span></span><br><span class="line"><span class="comment">#         phone = request.POST.get(&#x27;phone&#x27;)</span></span><br><span class="line"><span class="comment">#         # 操作auth_user表写入数据</span></span><br><span class="line"><span class="comment">#         # User.objects.create(username=username, password=password) # 这种密码在表中没有加密</span></span><br><span class="line"><span class="comment">#         # User.objects.create_user(username=username, password=password)  # 创建普通用户</span></span><br><span class="line"><span class="comment">#         # User.objects.create_user(username=username, password=password)  # 创建普通用户</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#         models.UserInfo.objects.create_user(username=username, password=password, phone=123)</span></span><br><span class="line"><span class="comment">#         return redirect(&#x27;/login/&#x27;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">### 加上验证</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">register</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;GET&#x27;</span>:</span><br><span class="line">        form = myforms.Reg()</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">&#x27;register.html&#x27;</span>, &#123;<span class="string">&#x27;form&#x27;</span>: form&#125;)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        form = myforms.Reg(request.POST)</span><br><span class="line">        data = &#123;<span class="string">&#x27;status&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;</span><br><span class="line">        <span class="keyword">if</span> form.is_valid():</span><br><span class="line">            username = form.cleaned_data.get(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">            password = form.cleaned_data.get(<span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">            phone = form.cleaned_data.get(<span class="string">&#x27;phone&#x27;</span>)</span><br><span class="line">            models.UserInfo.objects.create_user(username=username, password=password, phone=phone)</span><br><span class="line">            data[<span class="string">&#x27;msg&#x27;</span>] = <span class="string">&quot;/login/&quot;</span></span><br><span class="line">            <span class="keyword">return</span> JsonResponse(data)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># print(form.errors)</span></span><br><span class="line">            <span class="comment"># print(&#x27;=&#x27; * 100)</span></span><br><span class="line">            data[<span class="string">&#x27;status&#x27;</span>] = <span class="number">0</span></span><br><span class="line">            data[<span class="string">&#x27;msg&#x27;</span>] = form.errors</span><br><span class="line">            <span class="keyword">return</span> JsonResponse(data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;GET&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">&#x27;login.html&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        username = request.POST.get(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">        password = request.POST.get(<span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">        <span class="comment"># 去用户表校验数据</span></span><br><span class="line">        <span class="comment"># 1 表如何获取</span></span><br><span class="line">        <span class="comment"># 2 密码如何比对</span></span><br><span class="line">        user_obj = auth.authenticate(request, username=username, password=password)</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        1.自动查找auth_user表</span></span><br><span class="line"><span class="string">        2.自动给密码加密再比对</span></span><br><span class="line"><span class="string">        该方法注意事项</span></span><br><span class="line"><span class="string">            括号内必须同时传入用户名和密码</span></span><br><span class="line"><span class="string">            # auth_user 表中用户名字段是username        </span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="comment"># print(user_obj)  # 获得用户对象</span></span><br><span class="line">        <span class="comment"># print(user_obj.username)  # 获得用户对象</span></span><br><span class="line">        <span class="comment"># print(user_obj.password)  # 获得用户对象</span></span><br><span class="line">        <span class="comment">## 获取到下次要跳转的页面</span></span><br><span class="line">        url = request.GET.get(<span class="string">&#x27;next&#x27;</span>)</span><br><span class="line">        <span class="comment">## 判断当前用户是否存在</span></span><br><span class="line">        <span class="keyword">if</span> user_obj:</span><br><span class="line">            <span class="keyword">if</span> url:</span><br><span class="line">                <span class="comment"># 保存用户状态</span></span><br><span class="line">                auth.login(request, user_obj)  <span class="comment">## 类似于 request.session[key] = user_obj</span></span><br><span class="line">                <span class="keyword">return</span> redirect(url)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> redirect(<span class="string">&#x27;/home/&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;当前用户不存在&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">logout</span>(<span class="params">request</span>):</span></span><br><span class="line">    auth.logout(request)  <span class="comment"># 类似于request.session.flush()</span></span><br><span class="line">    <span class="keyword">return</span> redirect(<span class="string">&#x27;/login/&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@login_required</span></span><br><span class="line"><span class="comment">## 修改密码</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_password</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        username = request.POST.get(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">        old_password = request.POST.get(<span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">        new_password = request.POST.get(<span class="string">&#x27;new_password&#x27;</span>)</span><br><span class="line">        re_password = request.POST.get(<span class="string">&#x27;re_password&#x27;</span>)</span><br><span class="line">        <span class="comment"># 先校验两次密码是否一致</span></span><br><span class="line">        <span class="keyword">if</span> new_password == re_password:</span><br><span class="line">            <span class="comment"># 校验老密码对不对</span></span><br><span class="line">            is_right = request.user.check_password(old_password)</span><br><span class="line">            <span class="keyword">if</span> is_right:</span><br><span class="line">                <span class="comment"># 修改密码</span></span><br><span class="line">                request.user.set_password(new_password)  <span class="comment"># 修改对象的属性</span></span><br><span class="line">                request.user.save()  <span class="comment"># 保存到数据库</span></span><br><span class="line">        <span class="keyword">return</span> redirect(<span class="string">&#x27;/login/&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&#x27;set_password.html&#x27;</span>, <span class="built_in">locals</span>())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">局部和全局</span></span><br><span class="line"><span class="string">局部 &gt; 全局</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@login_required(<span class="params">login_url=<span class="string">&#x27;/login/&#x27;</span></span>)  </span><span class="comment"># 局部配置，用户没有登录跳转到登陆页面</span></span><br><span class="line"><span class="comment"># @login_required  # 全局</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">home</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;用户登录才能看到首页&#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="built_in">print</span>(request.user)  <span class="comment"># 获取当前登录对象,自动去django_session表中查找相对应的用户对象给你封装到request.user中</span></span><br><span class="line">    <span class="comment"># print(request.user.is_authenticated())  # 判断用户是否登录</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;home页面&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>models.py</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.models <span class="keyword">import</span> User, AbstractUser</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 扩展表，面向对象的继承</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span>(<span class="params">AbstractUser</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    如果继承了AbstractUser</span></span><br><span class="line"><span class="string">    再执行数据库迁移的时候auth_user就不会创建出来了</span></span><br><span class="line"><span class="string">    而UserInfo表中会出现auth_user中所有的字段外加自己扩展的字段</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    前提</span></span><br><span class="line"><span class="string">        1.再继承之前没有执行过数据库迁移命令</span></span><br><span class="line"><span class="string">        2.继承的类里面不能覆盖AbstractUser里面的字段名</span></span><br><span class="line"><span class="string">        3，需要再配置文件中告诉django你要用UserInfo替代auth_user</span></span><br><span class="line"><span class="string">            AUTH_USER_MODEL = &#x27;app01.UserInfo&#x27;</span></span><br><span class="line"><span class="string">                                &#x27;应用名.表名&#x27;</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    phone = models.BigIntegerField()</span><br><span class="line">    create_time = models.DateField(auto_now_add=<span class="literal">True</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Signal-Redis-Websocket"><a href="#Signal-Redis-Websocket" class="headerlink" title="Signal+Redis+Websocket"></a>Signal+Redis+Websocket</h3><p><img src="/2020/08/23/python/image-20220504163012406.png" alt="python"></p><p>models.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> mongoengine</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line">mongoengine.connect(<span class="string">&quot;fs&quot;</span>, host=<span class="string">&quot;127.0.0.1&quot;</span>, port=<span class="number">27017</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AlgorithmSliceModel</span>(<span class="params">mongoengine.Document</span>):</span></span><br><span class="line">    meta = &#123;</span><br><span class="line">        <span class="string">&quot;collection&quot;</span>: <span class="string">&quot;video&quot;</span>,</span><br><span class="line">        <span class="string">&quot;ordering&quot;</span>: [<span class="string">&#x27;-id&#x27;</span>],</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">id</span> = mongoengine.SequenceField(required=<span class="literal">True</span>, primary_key=<span class="literal">True</span>)</span><br><span class="line">    algorithm = mongoengine.StringField(required=<span class="literal">True</span>)</span><br><span class="line">    filename = mongoengine.StringField(max_length=<span class="number">150</span>, required=<span class="literal">True</span>)</span><br><span class="line">    event_started = mongoengine.DateTimeField(default=datetime.datetime.now)</span><br><span class="line">    event_started_addr = mongoengine.StringField(required=<span class="literal">True</span>)</span><br><span class="line">    event_addr_type = mongoengine.StringField(required=<span class="literal">True</span>)</span><br><span class="line">    event_name = mongoengine.StringField(required=<span class="literal">True</span>, max_length=<span class="number">50</span>)</span><br><span class="line">    slice_video = mongoengine.FileField(required=<span class="literal">False</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>signal.py</p><ul><li>定义信号在数据存入库之后触发该信号，将事件信息发布到redis中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django_redis <span class="keyword">import</span> get_redis_connection</span><br><span class="line"><span class="keyword">from</span> mongoengine <span class="keyword">import</span> signals</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> AlgorithmSliceModel</span><br><span class="line"><span class="keyword">from</span> django.dispatch <span class="keyword">import</span> receiver</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@receiver(<span class="params">signals.post_save, sender=AlgorithmSliceModel</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">publish_event</span>(<span class="params">sender, created, **kwargs</span>):</span></span><br><span class="line">    <span class="keyword">if</span> created:</span><br><span class="line">        document = kwargs[<span class="string">&#x27;document&#x27;</span>]</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;New model created!&quot;</span>)</span><br><span class="line">        event = &#123; </span><br><span class="line">            <span class="string">&quot;filename&quot;</span>: <span class="string">&quot;&#123;&#125;&quot;</span>.<span class="built_in">format</span>(document.filename)</span><br><span class="line">        &#125;</span><br><span class="line">        connection = get_redis_connection(<span class="string">&quot;default&quot;</span>)</span><br><span class="line">        payload = json.dumps(event)</span><br><span class="line">        connection.publish(<span class="string">&quot;events&quot;</span>, payload)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>apps.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.apps <span class="keyword">import</span> AppConfig</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ServiceConfig</span>(<span class="params">AppConfig</span>):</span></span><br><span class="line">    name = <span class="string">&#x27;service&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">ready</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">import</span> service.signals</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>settings.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CACHES = &#123;</span><br><span class="line">    <span class="string">&quot;default&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;BACKEND&quot;</span>: <span class="string">&quot;django_redis.cache.RedisCache&quot;</span>,</span><br><span class="line">        <span class="string">&quot;LOCATION&quot;</span>: <span class="string">&quot;redis://192.168.17.6:6379/1&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>websocket</p><ul><li>开启一个websocket服务端连接，订阅redis中事件消息推送</li></ul><p>server.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> websockets</span><br><span class="line"><span class="keyword">import</span> aioredis</span><br><span class="line"></span><br><span class="line">logger = logging.getLogger(<span class="string">&#x27;websockets&#x27;</span>)</span><br><span class="line">logging.basicConfig(</span><br><span class="line">    <span class="built_in">format</span>=<span class="string">&quot;%(asctime)s %(message)s&quot;</span>,</span><br><span class="line">    level=logging.DEBUG,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">USERS = <span class="built_in">set</span>()</span><br><span class="line">EVENT = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 用户数量事件</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">users_event</span>():</span></span><br><span class="line">    <span class="keyword">return</span> json.dumps(&#123;<span class="string">&#x27;type&#x27;</span>: <span class="string">&#x27;users&#x27;</span>, <span class="string">&#x27;count&#x27;</span>: <span class="built_in">len</span>(USERS)&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">state_event</span>():</span></span><br><span class="line">    <span class="keyword">return</span> json.dumps(&#123;<span class="string">&#x27;type&#x27;</span>: <span class="string">&#x27;model_value_event&#x27;</span>, **EVENT&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">handler</span>(<span class="params">websocket</span>):</span></span><br><span class="line">    <span class="keyword">global</span> USERS</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        USERS.add(websocket)</span><br><span class="line">        websockets.broadcast(USERS, users_event())</span><br><span class="line">        <span class="keyword">async</span> <span class="keyword">for</span> message <span class="keyword">in</span> websocket:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">except</span> websockets.ConnectionClosedOK:</span><br><span class="line">        logger.info(<span class="string">&#x27;websocket client closed!&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> websockets.ConnectionClosedError <span class="keyword">as</span> e:</span><br><span class="line">        logger.error(<span class="string">&#x27;websocket closed error: &#123;0&#125;&#x27;</span>.<span class="built_in">format</span>(e))</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        USERS.remove(websocket)</span><br><span class="line">        websockets.broadcast(USERS, users_event())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">process_events</span>():</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Listen to events in Redis and process them.&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">global</span> EVENT</span><br><span class="line">    redis = aioredis.from_url(<span class="string">&quot;redis://192.168.17.6:6379/1&quot;</span>)</span><br><span class="line">    pubsub = redis.pubsub()</span><br><span class="line">    <span class="keyword">await</span> pubsub.subscribe(<span class="string">&quot;events&quot;</span>)</span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">for</span> message <span class="keyword">in</span> pubsub.listen():</span><br><span class="line">        <span class="keyword">if</span> message[<span class="string">&quot;type&quot;</span>] != <span class="string">&quot;message&quot;</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        payload = message[<span class="string">&quot;data&quot;</span>].decode()</span><br><span class="line">        event = json.loads(payload)</span><br><span class="line">        EVENT = event</span><br><span class="line">        websockets.broadcast(USERS, state_event())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">with</span> websockets.serve(handler, <span class="string">&quot;localhost&quot;</span>, <span class="number">8888</span>):</span><br><span class="line">        <span class="keyword">await</span> process_events()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    asyncio.run(main())</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="DjangoRestFramework"><a href="#DjangoRestFramework" class="headerlink" title="DjangoRestFramework"></a>DjangoRestFramework</h2><p><a href="https://www.django-rest-framework.org/api-guide/exceptions/">https://www.django-rest-framework.org/api-guide/exceptions/</a></p><h3 id="restful规范"><a href="#restful规范" class="headerlink" title="restful规范"></a><strong>restful规范</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> Representational State Transfer:表征性状态转移</span><br><span class="line"><span class="number">2</span> Web API接口的设计风格，尤其适用于前后端分离的应用模式中</span><br><span class="line"><span class="number">3</span> 与语言，平台无关，任何框架都可以写出符合restful规范的api接口</span><br><span class="line"><span class="number">4</span> 规范：<span class="number">10</span>条</span><br><span class="line">-<span class="number">1</span>  数据的安全保障：url链接一般都采用https协议进行传输</span><br><span class="line">    -<span class="number">2</span>  接口特征表现：api关键字标识</span><br><span class="line">    -https://api.baidu.com/books/</span><br><span class="line">        -https://www.baidu.com/api/books/</span><br><span class="line">    -<span class="number">3</span> 多版本共存：url链接中标识接口版本</span><br><span class="line">    -https://api.baidu.com/v1/books/</span><br><span class="line">-https://api.baidu.com/v2/books/</span><br><span class="line">    -<span class="number">4</span> 数据即是资源，均使用名词（可复数）***********</span><br><span class="line">    -接口一般都是完成前后台数据的交互，交互的数据我们称之为资源</span><br><span class="line">        -一般提倡用资源的复数形式,不要使用动词</span><br><span class="line">        -查询所有图书</span><br><span class="line">        -https://api.baidu.com/books/</span><br><span class="line">            -https://api.baidu.com/get_all_books/ <span class="comment"># 错误示范</span></span><br><span class="line">            -https://api.baidu.com/delete-user    <span class="comment"># 错误的示范</span></span><br><span class="line">            -https://api.baidu.com/user           <span class="comment"># 删除用户的示例：疑问：到底是删还是查？</span></span><br><span class="line">                </span><br><span class="line">   -<span class="number">5</span> 资源操作由请求方式决定：</span><br><span class="line">https://api.baidu.com/books       - get请求：获取所有书</span><br><span class="line">        https://api.baidu.com/books/<span class="number">1</span>     - get请求：获取主键为<span class="number">1</span>的书</span><br><span class="line">        https://api.baidu.com/books       - post请求：新增一本书书</span><br><span class="line">        https://api.baidu.com/books/<span class="number">1</span>     - put请求：整体修改主键为<span class="number">1</span>的书</span><br><span class="line">        https://api.baidu.com/books/<span class="number">1</span>     - patch请求：局部修改主键为<span class="number">1</span>的书</span><br><span class="line">        https://api.baidu.com/books/<span class="number">1</span>     - delete请求：删除主键为<span class="number">1</span>的书</span><br><span class="line">            </span><br><span class="line">   -<span class="number">6</span> 过滤，通过在url上传参的形式传递搜索条件</span><br><span class="line">        https://api.example.com/v1/zoos?limit=<span class="number">10</span>         ：指定返回记录的数量</span><br><span class="line">        https://api.example.com/v1/zoos?offset=<span class="number">10</span>&amp;limit=<span class="number">3</span>：指定返回记录的开始位置</span><br><span class="line">        https://api.example.com/v1/zoos?page=<span class="number">2</span>&amp;per_page=<span class="number">100</span>：指定第几页，以及每页的记录数</span><br><span class="line">        https://api.example.com/v1/zoos?sortby=name&amp;order=asc：指定返回结果按照哪个属性排序，以及排序顺序</span><br><span class="line">        https://api.example.com/v1/zoos?animal_type_id=<span class="number">1</span>：指定筛选条件</span><br><span class="line">            </span><br><span class="line">   -<span class="number">7</span>  响应状态码</span><br><span class="line">-返回数据中带状态码</span><br><span class="line">-&#123;<span class="string">&#x27;code&#x27;</span>:<span class="number">100</span>&#125;</span><br><span class="line">   -<span class="number">8</span> 返回结果中带错误信息</span><br><span class="line">-&#123;<span class="string">&#x27;code&#x27;</span>:<span class="number">100</span>,<span class="string">&#x27;msg&#x27;</span>:<span class="string">&#x27;因为xx原因失败&#x27;</span>&#125;</span><br><span class="line">   -<span class="number">9</span> 返回结果，该符合以下规范</span><br><span class="line">GET /collection：返回资源对象的列表（数组）</span><br><span class="line">        GET /collection/resource：返回单个资源对象（字典）</span><br><span class="line">        POST /collection：返回新生成的资源对象    （新增后的对象字典）</span><br><span class="line">        PUT /collection/resource：返回完整的资源对象 （修改后的对象字典）</span><br><span class="line">        PATCH /collection/resource：返回完整的资源对象 （修改后的对象字典）</span><br><span class="line">        DELETE /collection/resource：返回一个空文档   （）</span><br><span class="line">        </span><br><span class="line">   -<span class="number">10</span> 返回的数据中带链接地址</span><br><span class="line">-查询<span class="built_in">id</span>为<span class="number">1</span>的图书接口，返回结果示例</span><br><span class="line">    &#123;<span class="string">&#x27;code&#x27;</span>:<span class="number">100</span>,</span><br><span class="line">         <span class="string">&#x27;msg&#x27;</span>:<span class="string">&#x27;成功&#x27;</span>,</span><br><span class="line">         <span class="string">&#x27;result&#x27;</span>:</span><br><span class="line">             &#123;<span class="string">&#x27;title&#x27;</span>:<span class="string">&#x27;金瓶梅&#x27;</span>,</span><br><span class="line">              <span class="string">&#x27;price&#x27;</span>:<span class="number">12.3</span>,</span><br><span class="line">              <span class="string">&#x27;publish&#x27;</span>:<span class="string">&#x27;https://127.0.0.1/api/v1/publish/3&#x27;</span></span><br><span class="line">             &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="APIView源码分析"><a href="#APIView源码分析" class="headerlink" title="APIView源码分析"></a>APIView源码分析</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> APIview的as_view</span><br><span class="line">-内部还是执行了View的闭包函数view</span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">as_view</span>(<span class="params">cls, **initkwargs</span>):</span></span><br><span class="line">        view = <span class="built_in">super</span>().as_view(**initkwargs)</span><br><span class="line">        view.cls = cls</span><br><span class="line">        view.initkwargs = initkwargs</span><br><span class="line">        <span class="keyword">return</span> csrf_exempt(view)  -禁用掉了csrf</span><br><span class="line"><span class="number">2</span> 原生View类中过的as_view中的闭包函数view</span><br><span class="line">-本质执行了self.dispatch(request, *args, **kwargs)，执行的是APIView的dispatch</span><br><span class="line"><span class="number">3</span> APIView的dispatch</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">dispatch</span>(<span class="params">self, request, *args, **kwargs</span>):</span></span><br><span class="line">        <span class="comment"># DRF的Request类的对象，内部有request._request,是原生request</span></span><br><span class="line">        request = self.initialize_request(request, *args, **kwargs)</span><br><span class="line">        self.request = request</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># 三大认证模块(APIView下的initial)</span></span><br><span class="line">            self.initial(request, *args, **kwargs)</span><br><span class="line">            <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">            #认证，权限，频率</span></span><br><span class="line"><span class="string">            self.perform_authentication(request)</span></span><br><span class="line"><span class="string">        self.check_permissions(request)</span></span><br><span class="line"><span class="string">        self.check_throttles(request)</span></span><br><span class="line"><span class="string">            &#x27;&#x27;&#x27;</span></span><br><span class="line">            <span class="keyword">if</span> request.method.lower() <span class="keyword">in</span> self.http_method_names:</span><br><span class="line">                handler = <span class="built_in">getattr</span>(self, request.method.lower(),</span><br><span class="line">                                  self.http_method_not_allowed)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                handler = self.http_method_not_allowed</span><br><span class="line"></span><br><span class="line">            response = handler(request, *args, **kwargs)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> exc:</span><br><span class="line">            <span class="comment"># 全局的异常捕获</span></span><br><span class="line">            response = self.handle_exception(exc)</span><br><span class="line"><span class="comment"># 把视图函数(类)返回的response，又包装了一下</span></span><br><span class="line">        self.response = self.finalize_response(request, response, *args, **kwargs)</span><br><span class="line">        <span class="keyword">return</span> self.response</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;python&quot;&gt;&lt;a href=&quot;#python&quot; class=&quot;headerlink&quot; title=&quot;python&quot;&gt;&lt;/a&gt;python&lt;/h1&gt;&lt;h2 id=&quot;队列与堆栈&quot;&gt;&lt;a href=&quot;#队列与堆栈&quot; class=&quot;headerlink&quot; title=</summary>
      
    
    
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Mysql</title>
    <link href="http://example.com/2020/08/20/MySQL/"/>
    <id>http://example.com/2020/08/20/MySQL/</id>
    <published>2020-08-20T09:23:37.000Z</published>
    <updated>2022-06-15T16:13:24.219Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h1><h3 id="初始sql"><a href="#初始sql" class="headerlink" title="初始sql"></a>初始sql</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># SQL语言主要用于存取数据、查询数据、更新数据和管理关系数据库系统,SQL语言由IBM开发。SQL语言分为3种类型：</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#1、DDL语句    数据库定义语言： 数据库、表、视图、索引、存储过程，例如CREATE DROP ALTER</span></span><br><span class="line"><span class="comment">#2、DML语句    数据库操纵语言： 插入数据INSERT、删除数据DELETE、更新数据UPDATE、查询数据SELECT</span></span><br><span class="line"><span class="comment">#3、DCL语句    数据库控制语言： 例如控制用户的访问权限GRANT、REVOKE</span></span><br></pre></td></tr></table></figure><h3 id="针对库的修删改查-文件夹"><a href="#针对库的修删改查-文件夹" class="headerlink" title="针对库的修删改查(文件夹)"></a>针对库的修删改查(文件夹)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#增 create database db charset = &#x27;gbk(可以指定编码)&#x27;;</span></span><br><span class="line"><span class="comment">#查看所有 show databases db;</span></span><br><span class="line"><span class="comment">#查看单个 show create database db;</span></span><br><span class="line"><span class="comment">#改 alter database db charset = &#x27;utf-8&#x27;</span></span><br><span class="line"><span class="comment">#删 drop databases db;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="针对表的修删改查（文件）"><a href="#针对表的修删改查（文件）" class="headerlink" title="针对表的修删改查（文件）"></a>针对表的修删改查（文件）</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">在操作表（文件）的时候，需要指定所在的库（文件夹）</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># 查看当前所在库的名字</span></span><br><span class="line">select database();</span><br><span class="line"><span class="comment"># 切换库</span></span><br><span class="line">use db; <span class="comment">#切换到db库下就会在当前这个库下面操作</span></span><br><span class="line"><span class="comment"># 增</span></span><br><span class="line"><span class="comment"># 创建一个表有id name字段 char（4）4限制字符个数</span></span><br><span class="line">create table t1(<span class="built_in">id</span> <span class="built_in">int</span>,name char);</span><br><span class="line"><span class="comment"># 增加字段</span></span><br><span class="line">alter table t1 add gender char(<span class="number">4</span>)first;</span><br><span class="line">alter table t1 add level <span class="built_in">int</span> after <span class="built_in">id</span></span><br><span class="line"><span class="comment"># 查 </span></span><br><span class="line">show tables; <span class="comment"># 查看当前库下所有表名</span></span><br><span class="line">show create table t1; <span class="comment">#查看创建的表名</span></span><br><span class="line">describe t1; <span class="comment">#描述详细的表，简写为 desc t1;</span></span><br><span class="line"><span class="comment"># 改</span></span><br><span class="line">alter table t1 modify name char(<span class="number">8</span>); <span class="comment">#修改name字段的字符个数</span></span><br><span class="line"><span class="comment"># 修改字段</span></span><br><span class="line">alter table t1 change name mingzi char(<span class="number">3</span>); <span class="comment">#修改name字段改为mingzi字符长度（3）位</span></span><br><span class="line">alter table t1 change name NAME char(<span class="number">4</span>),change <span class="built_in">id</span> ID tinyint;</span><br><span class="line"><span class="comment"># 删</span></span><br><span class="line">drop table t1;</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">create table db1.t1(id int); 也可以用绝对路径操作不同的库</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="针对数据的修删改查"><a href="#针对数据的修删改查" class="headerlink" title="针对数据的修删改查"></a>针对数据的修删改查</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">一定要先有库再有表才能操作记录</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># 增</span></span><br><span class="line">insert into m1 values(<span class="number">1</span>,<span class="string">&#x27;alex&#x27;</span>);</span><br><span class="line"><span class="comment"># 逗号隔开支持多个</span></span><br><span class="line">insert into m1 values(<span class="number">1</span>,<span class="string">&#x27;alex&#x27;</span>),(<span class="number">2</span>,<span class="string">&#x27;egon&#x27;</span>),(<span class="number">3</span>,<span class="string">&#x27;lxx&#x27;</span>);</span><br><span class="line"><span class="comment"># 查</span></span><br><span class="line">select * <span class="keyword">from</span> m1; <span class="comment">#查所有，当数据量特别大不推荐使用</span></span><br><span class="line">select name <span class="keyword">from</span> m1;</span><br><span class="line"><span class="comment"># 改</span></span><br><span class="line">update m1 <span class="built_in">set</span> name=<span class="string">&#x27;dsb&#x27;</span> where <span class="built_in">id</span>&gt;<span class="number">1</span>;</span><br><span class="line"><span class="comment"># 删</span></span><br><span class="line">delete <span class="keyword">from</span> m1 where <span class="built_in">id</span> &gt;<span class="number">1</span>;</span><br><span class="line">delete <span class="keyword">from</span> m1 where name = <span class="string">&#x27;alex&#x27;</span>;</span><br><span class="line"><span class="comment"># 将表所有的数据清空</span></span><br><span class="line">delete <span class="keyword">from</span> m1;</span><br><span class="line"><span class="comment"># 清空整张表：</span></span><br><span class="line">    truncate m1;</span><br><span class="line">     auto_increment 表示：自增</span><br><span class="line">     primary key 表示：约束（不能重复且不能为空）；加速查找</span><br><span class="line">    create table t3(<span class="built_in">id</span> <span class="built_in">int</span> primary key auto_increment,name char(<span class="number">10</span>));</span><br><span class="line">    insert t3(name) values(<span class="string">&quot;egon&quot;</span>),(<span class="string">&quot;tom&quot;</span>),(<span class="string">&quot;jack&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="Mysql主要存储引擎"><a href="#Mysql主要存储引擎" class="headerlink" title="Mysql主要存储引擎"></a>Mysql主要存储引擎</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">innodb 存储数据更加安全</span><br><span class="line">myisam 比innodb速度快，但更注重的事数据安全</span><br><span class="line">memory 内存引擎（数据全部存放在内存中）断电数据丢失</span><br><span class="line">blackhole 无论存什么，都立刻消失(黑洞)</span><br><span class="line"></span><br><span class="line">MariaDB [db1]&gt; create table t1(<span class="built_in">id</span> <span class="built_in">int</span>)engine=innodb;</span><br><span class="line">MariaDB [db1]&gt; create table t2(<span class="built_in">id</span> <span class="built_in">int</span>)engine=myisam;</span><br><span class="line">MariaDB [db1]&gt; create table t3(<span class="built_in">id</span> <span class="built_in">int</span>)engine=memory;</span><br><span class="line">MariaDB [db1]&gt; create table t4(<span class="built_in">id</span> <span class="built_in">int</span>)engine=blackhole;</span><br><span class="line">MariaDB [db1]&gt; quit</span><br><span class="line">[root@egon db1]<span class="comment"># ls /var/lib/mysql/db1/ #发现后两种存储引擎只有表结构，无数据</span></span><br><span class="line">db.opt  t1.frm  t1.ibd  t2.MYD  t2.MYI  t2.frm  t3.frm  t4.frm</span><br><span class="line"></span><br><span class="line"><span class="comment">#memory，在重启mysql或者重启机器后，表内数据清空</span></span><br><span class="line"><span class="comment">#blackhole，往表内插入任何数据，都相当于丢入黑洞，表内永远不存记录</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="创建表的完整语法"><a href="#创建表的完整语法" class="headerlink" title="创建表的完整语法"></a>创建表的完整语法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#语法：</span></span><br><span class="line">create table 表名(</span><br><span class="line">字段名<span class="number">1</span> 类型[(宽度) 约束条件],</span><br><span class="line">字段名<span class="number">2</span> 类型[(宽度) 约束条件],</span><br><span class="line">字段名<span class="number">3</span> 类型[(宽度) 约束条件]</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#注意：</span></span><br><span class="line"><span class="number">1.</span> 在同一张表中，字段名是不能相同</span><br><span class="line"><span class="number">2.</span> 宽度和约束条件可选</span><br><span class="line"><span class="number">3.</span> 字段名和类型是必须的</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> create database db;</span><br><span class="line"><span class="number">2</span> use db;</span><br><span class="line">  select database(); </span><br><span class="line"><span class="comment"># 表中的最后一个字段不要加逗号</span></span><br><span class="line"><span class="number">3</span> create table t1 (<span class="built_in">id</span> <span class="built_in">int</span>,</span><br><span class="line">             name char(<span class="number">5</span>),</span><br><span class="line">             age <span class="built_in">int</span>(<span class="number">3</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">4</span> insert into t1 values(<span class="number">1</span>,<span class="string">&#x27;alex&#x27;</span>,<span class="number">18</span>);</span><br><span class="line">  insert into t1 values(<span class="number">2</span>,<span class="string">&#x27;egon&#x27;</span>,<span class="number">28</span>);</span><br><span class="line">  insert into t1 values(<span class="number">3</span>,<span class="string">&#x27;tank&#x27;</span>,<span class="number">38</span>);</span><br><span class="line"></span><br><span class="line">  insert into t1 values(<span class="number">1</span>,<span class="string">&#x27;alex&#x27;</span>,<span class="number">18</span>),(<span class="number">2</span>,<span class="string">&#x27;egon&#x27;</span>,<span class="number">28</span>),(<span class="number">3</span>,<span class="string">&#x27;tank&#x27;</span>,<span class="number">38</span>);</span><br><span class="line"></span><br><span class="line"><span class="number">5</span> insert into t1(<span class="built_in">id</span>) values(<span class="number">5</span>),(<span class="number">6</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="修改表"><a href="#修改表" class="headerlink" title="修改表"></a>修改表</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">create table tt1(<span class="built_in">id</span> <span class="built_in">int</span>, name char(<span class="number">4</span>));</span><br><span class="line"><span class="comment"># 修改表名</span></span><br><span class="line">alter table tt1 rename t1;</span><br><span class="line"><span class="comment"># 修改字段</span></span><br><span class="line">alter table t1 modify <span class="built_in">id</span> tinyint;</span><br><span class="line"></span><br><span class="line">alter table t1 change name NAME char(<span class="number">4</span>),change <span class="built_in">id</span> ID tinyint;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 增加字段</span></span><br><span class="line">alter table t1 add sex char(<span class="number">4</span>)after ID,add level <span class="built_in">int</span> first;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除字段</span></span><br><span class="line">alter table t1 drop sex;</span><br><span class="line">alter table t1 drop NAME,drop gender;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制表</span></span><br><span class="line">create table tt1 select user, password,host <span class="keyword">from</span> mysql.user;</span><br><span class="line"></span><br><span class="line">desc tt1;</span><br><span class="line">mysql&gt; select * <span class="keyword">from</span> tt1;</span><br><span class="line">+------+-------------------------------------------+-----------+</span><br><span class="line">| user | password                                  | host      |</span><br><span class="line">+------+-------------------------------------------+-----------+</span><br><span class="line">| root | *4363FCCB4E301C8C07D323BFEEBC53BF1B8F3517 | localhost |</span><br><span class="line">| root |                                           | <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> |</span><br><span class="line">| root |                                           | ::<span class="number">1</span>       |</span><br><span class="line">|      |                                           | localhost |</span><br><span class="line">+------+-------------------------------------------+-----------+</span><br><span class="line"><span class="comment"># 只复制表结构</span></span><br><span class="line">create table t3 select user,host,password <span class="keyword">from</span> mysql.user where <span class="number">1</span>!=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">mysql&gt; select * <span class="keyword">from</span> tt1;</span><br><span class="line">Empty <span class="built_in">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">示例：</span><br><span class="line"><span class="number">1.</span> 修改存储引擎</span><br><span class="line">mysql&gt; alter table service </span><br><span class="line">    -&gt; engine=innodb;</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> 添加字段</span><br><span class="line">mysql&gt; alter table student10</span><br><span class="line">    -&gt; add name varchar(<span class="number">20</span>) <span class="keyword">not</span> null,</span><br><span class="line">    -&gt; add age <span class="built_in">int</span>(<span class="number">3</span>) <span class="keyword">not</span> null default <span class="number">22</span>;</span><br><span class="line">    </span><br><span class="line">mysql&gt; alter table student10</span><br><span class="line">    -&gt; add stu_num varchar(<span class="number">10</span>) <span class="keyword">not</span> null after name;                //添加name字段之后</span><br><span class="line"></span><br><span class="line">mysql&gt; alter table student10                        </span><br><span class="line">    -&gt; add sex enum(<span class="string">&#x27;male&#x27;</span>,<span class="string">&#x27;female&#x27;</span>) default <span class="string">&#x27;male&#x27;</span> first;          //添加到最前面</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span> 删除字段</span><br><span class="line">mysql&gt; alter table student10</span><br><span class="line">    -&gt; drop sex;</span><br><span class="line"></span><br><span class="line">mysql&gt; alter table service</span><br><span class="line">    -&gt; drop mac;</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span> 修改字段类型modify</span><br><span class="line">mysql&gt; alter table student10</span><br><span class="line">    -&gt; modify age <span class="built_in">int</span>(<span class="number">3</span>);</span><br><span class="line">mysql&gt; alter table student10</span><br><span class="line">    -&gt; modify <span class="built_in">id</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">not</span> null primary key auto_increment;    //修改为主键</span><br><span class="line"></span><br><span class="line"><span class="number">5.</span> 增加约束（针对已有的主键增加auto_increment）</span><br><span class="line">mysql&gt; alter table student10 modify <span class="built_in">id</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">not</span> null primary key auto_increment;</span><br><span class="line">ERROR <span class="number">1068</span> (<span class="number">42000</span>): Multiple primary key defined</span><br><span class="line"></span><br><span class="line">mysql&gt; alter table student10 modify <span class="built_in">id</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">not</span> null auto_increment;</span><br><span class="line">Query OK, <span class="number">0</span> rows affected (<span class="number">0.01</span> sec)</span><br><span class="line">Records: <span class="number">0</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="number">6.</span> 对已经存在的表增加复合主键</span><br><span class="line">mysql&gt; alter table service2</span><br><span class="line">    -&gt; add primary key(host_ip,port);        </span><br><span class="line"></span><br><span class="line"><span class="number">7.</span> 增加主键</span><br><span class="line">mysql&gt; alter table student1</span><br><span class="line">    -&gt; modify name varchar(<span class="number">10</span>) <span class="keyword">not</span> null primary key;</span><br><span class="line"></span><br><span class="line"><span class="number">8.</span> 增加主键和自动增长</span><br><span class="line">mysql&gt; alter table student1</span><br><span class="line">    -&gt; modify <span class="built_in">id</span> <span class="built_in">int</span> <span class="keyword">not</span> null primary key auto_increment;</span><br><span class="line"></span><br><span class="line"><span class="number">9.</span> 删除主键</span><br><span class="line">a. 删除自增约束</span><br><span class="line">mysql&gt; alter table student10 modify <span class="built_in">id</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">not</span> null; </span><br><span class="line"></span><br><span class="line">b. 删除主键</span><br><span class="line">mysql&gt; alter table student10                                 </span><br><span class="line">    -&gt; drop primary key;</span><br></pre></td></tr></table></figure><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><h3 id="表字段类型之整型"><a href="#表字段类型之整型" class="headerlink" title="表字段类型之整型"></a>表字段类型之整型</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">create table t6(<span class="built_in">id</span> <span class="built_in">int</span>);</span><br><span class="line">create table t7(<span class="built_in">id</span> tinyint);</span><br><span class="line">insert into t6 values(<span class="number">112</span>)；</span><br><span class="line">insert into t6 values(<span class="number">11233333333</span>);</span><br><span class="line">mysql&gt; select * <span class="keyword">from</span> t6;</span><br><span class="line">+------------+</span><br><span class="line">| <span class="built_in">id</span>         |</span><br><span class="line">+------------+</span><br><span class="line">|        <span class="number">112</span> |</span><br><span class="line">| <span class="number">2147483647</span> |</span><br><span class="line">+------------+</span><br><span class="line"></span><br><span class="line">insert into t7 values(<span class="number">128</span>);</span><br><span class="line">insert into t7 values(<span class="number">129</span>);</span><br><span class="line">mysql&gt; select * <span class="keyword">from</span> t7;</span><br><span class="line">+------+</span><br><span class="line">| <span class="built_in">id</span>   |</span><br><span class="line">+------+</span><br><span class="line">|  <span class="number">127</span> |</span><br><span class="line">|  <span class="number">127</span> |</span><br><span class="line">+------+</span><br><span class="line"><span class="number">2</span> rows <span class="keyword">in</span> <span class="built_in">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 浮点型</span></span><br><span class="line">m是数字总个数，d是小数点后个数。</span><br><span class="line">create table t8</span><br><span class="line">(x <span class="built_in">float</span>(<span class="number">255</span>,<span class="number">30</span>),  <span class="comment">#随着小数的增多，精度开始不准确</span></span><br><span class="line"> y double(<span class="number">255</span>,<span class="number">30</span>),  <span class="comment">#精度比float要准确点，但随着小数的增多，同样变得不准确</span></span><br><span class="line"> z decimal(<span class="number">65</span>,<span class="number">30</span>)); <span class="comment">#精度始终准确,d为30，于是只留了30位小数</span></span><br><span class="line"></span><br><span class="line">insert into t8 values</span><br><span class="line">(<span class="number">1.111111111111111111111111111111</span>,<span class="number">1.111111111111111111111111111111</span>,<span class="number">1.111111111111111111111111111111</span>);</span><br><span class="line"></span><br><span class="line">mysql&gt; select * <span class="keyword">from</span> t8;</span><br><span class="line">+----------------------------------+----------------------------------+----------------------------------+</span><br><span class="line">| x                                | y                                | z                                |</span><br><span class="line">+----------------------------------+----------------------------------+----------------------------------+</span><br><span class="line">| <span class="number">1.111111164093017600000000000000</span> | <span class="number">1.111111111111111200000000000000</span> | <span class="number">1.111111111111111111111111111111</span> |</span><br><span class="line">+----------------------------------+----------------------------------+----------------------------------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> <span class="built_in">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h3 id="表字段类型之日期"><a href="#表字段类型之日期" class="headerlink" title="表字段类型之日期"></a>表字段类型之日期</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">year</span><br><span class="line"></span><br><span class="line">time 时:分:秒 </span><br><span class="line">        </span><br><span class="line">date 年:月:日 </span><br><span class="line">        </span><br><span class="line">datetime 年:月:日 时:分:秒 </span><br><span class="line"></span><br><span class="line">timestamp 年:月:日 时:分:秒 </span><br><span class="line"></span><br><span class="line">create table t9(y year,t time,d date,dt datetime,ts timestamp);</span><br><span class="line">insert t9 values(now(),now(),now(),now(),now());</span><br><span class="line"></span><br><span class="line">mysql&gt; select * <span class="keyword">from</span> t9;</span><br><span class="line">+------+----------+------------+---------------------+---------------------+</span><br><span class="line">| y    | t        | d          | dt                  | ts                  |</span><br><span class="line">+------+----------+------------+---------------------+---------------------+</span><br><span class="line">| <span class="number">2020</span> | <span class="number">21</span>:<span class="number">34</span>:<span class="number">00</span> | <span class="number">2020</span>-09-01 | <span class="number">2020</span>-09-01 <span class="number">21</span>:<span class="number">34</span>:<span class="number">00</span> | <span class="number">2020</span>-09-01 <span class="number">21</span>:<span class="number">34</span>:<span class="number">00</span> |</span><br><span class="line">+------+----------+------------+---------------------+---------------------+</span><br><span class="line"></span><br><span class="line">create table t10 (</span><br><span class="line"><span class="built_in">id</span> <span class="built_in">int</span>,</span><br><span class="line">name varchar(<span class="number">8</span>),</span><br><span class="line">-- update_time datetime <span class="keyword">not</span> null default now() on update now(),</span><br><span class="line">update_time timestamp,</span><br><span class="line">reg_time datetime <span class="keyword">not</span> null default now() <span class="comment"># 不为空，默认值当前时间  </span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">insert into t10(<span class="built_in">id</span>, name) values(<span class="number">1</span>,<span class="string">&#x27;alex&#x27;</span>);</span><br><span class="line"></span><br><span class="line">select * <span class="keyword">from</span> t10;</span><br><span class="line">+------+------+---------------------+---------------------+</span><br><span class="line">| <span class="built_in">id</span>   | name | update_time         | reg_time            |</span><br><span class="line">+------+------+---------------------+---------------------+</span><br><span class="line">|    <span class="number">1</span> | alex | <span class="number">2020</span>-09-01 <span class="number">21</span>:<span class="number">43</span>:<span class="number">38</span> | <span class="number">2020</span>-09-01 <span class="number">21</span>:<span class="number">43</span>:<span class="number">38</span> |</span><br><span class="line">+------+------+---------------------+---------------------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">update t10 <span class="built_in">set</span> name = <span class="string">&#x27;lili&#x27;</span> where <span class="built_in">id</span> =<span class="number">1</span>;</span><br><span class="line">select * <span class="keyword">from</span> t10;</span><br><span class="line">+------+------+---------------------+---------------------+</span><br><span class="line">| <span class="built_in">id</span>   | name | update_time         | reg_time            |</span><br><span class="line">+------+------+---------------------+---------------------+</span><br><span class="line">|    <span class="number">1</span> | lili | <span class="number">2020</span>-09-01 <span class="number">21</span>:<span class="number">44</span>:<span class="number">36</span> | <span class="number">2020</span>-09-01 <span class="number">21</span>:<span class="number">43</span>:<span class="number">38</span> |</span><br><span class="line">+------+------+---------------------+---------------------+</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="表字段类型之字符"><a href="#表字段类型之字符" class="headerlink" title="表字段类型之字符"></a>表字段类型之字符</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">create table t11(x char(<span class="number">5</span>)); <span class="comment">#char 定长，不够则补全空格</span></span><br><span class="line">create table t12(x varchar(<span class="number">5</span>)); <span class="comment">#varchar 变长，预留1-2bytes来存储真实数据的长度</span></span><br><span class="line"></span><br><span class="line">insert into t11 values(<span class="string">&#x27;你好啊 &#x27;</span>);</span><br><span class="line">insert into t12 values(<span class="string">&#x27;你好啊 &#x27;</span>);</span><br><span class="line">t11=&gt;字符个数 <span class="number">5</span>  字节个数 <span class="number">11</span></span><br><span class="line">t12=&gt;字符个数 <span class="number">4</span>  字节个数 <span class="number">10</span></span><br><span class="line"></span><br><span class="line">select length(x) <span class="keyword">from</span> t11;</span><br><span class="line">+-----------+</span><br><span class="line">| length(x) |</span><br><span class="line">+-----------+</span><br><span class="line">|         <span class="number">9</span> |</span><br><span class="line">+-----------+</span><br><span class="line">select length(x) <span class="keyword">from</span> t12;</span><br><span class="line">+-----------+</span><br><span class="line">| length(x) |</span><br><span class="line">+-----------+</span><br><span class="line">|        <span class="number">10</span> |</span><br><span class="line">+-----------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> sql_mode = <span class="string">&quot;pad_char_to_full_length&quot;</span>;</span><br><span class="line">select char_length(x) <span class="keyword">from</span> t11;</span><br><span class="line">+----------------+</span><br><span class="line">| char_length(x) |</span><br><span class="line">+----------------+</span><br><span class="line">|              <span class="number">5</span> |</span><br><span class="line">+----------------+</span><br><span class="line"></span><br><span class="line">select char_length(x) <span class="keyword">from</span> t12;</span><br><span class="line">+----------------+</span><br><span class="line">| char_length(x) |</span><br><span class="line">+----------------+</span><br><span class="line">|              <span class="number">4</span> |</span><br><span class="line">+----------------+</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="表字段类型之枚举与集合"><a href="#表字段类型之枚举与集合" class="headerlink" title="表字段类型之枚举与集合"></a>表字段类型之枚举与集合</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">create table student(</span><br><span class="line"></span><br><span class="line">name varchar(<span class="number">10</span>) <span class="keyword">not</span> null,</span><br><span class="line">create table student(</span><br><span class="line"></span><br><span class="line">name varchar(<span class="number">10</span>) <span class="keyword">not</span> null,</span><br><span class="line"></span><br><span class="line">age <span class="built_in">int</span>(<span class="number">3</span>) unsigned <span class="keyword">not</span> null default <span class="number">18</span>,</span><br><span class="line"></span><br><span class="line">sex enum(<span class="string">&#x27;male&#x27;</span>,<span class="string">&#x27;female&#x27;</span>) default <span class="string">&#x27;male&#x27;</span>,</span><br><span class="line"></span><br><span class="line">hobby <span class="built_in">set</span> (<span class="string">&#x27;play&#x27;</span>,<span class="string">&#x27;study&#x27;</span>,<span class="string">&#x27;read&#x27;</span>,<span class="string">&#x27;music&#x27;</span>) default <span class="string">&#x27;play,music&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">alter table student add <span class="built_in">id</span> <span class="built_in">int</span> primary key auto_increment; <span class="comment"># 增加id字段</span></span><br><span class="line"></span><br><span class="line">insert into student(name,hobby) values(<span class="string">&#x27;alex&#x27;</span>,<span class="string">&#x27;study&#x27;</span>);</span><br><span class="line"></span><br><span class="line">insert into student(name,hobby) values(<span class="string">&#x27;lili&#x27;</span>,<span class="string">&#x27;read&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="表之间的三种关系"><a href="#表之间的三种关系" class="headerlink" title="表之间的三种关系"></a>表之间的三种关系</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 表 多对一</span></span><br><span class="line">create table press(</span><br><span class="line"><span class="built_in">id</span> <span class="built_in">int</span> primary key auto_increment,</span><br><span class="line">name varchar(<span class="number">8</span>) <span class="keyword">not</span> null);</span><br><span class="line"></span><br><span class="line">create table book(</span><br><span class="line"><span class="built_in">id</span> <span class="built_in">int</span> primary key auto_increment,</span><br><span class="line">name varchar(<span class="number">9</span>) <span class="keyword">not</span> null,</span><br><span class="line">press_id <span class="built_in">int</span> <span class="keyword">not</span> null,</span><br><span class="line">foreign key(press_id) references press(<span class="built_in">id</span>)</span><br><span class="line">on delete cascade</span><br><span class="line">on update cascade</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">insert into press(name) values(<span class="string">&#x27;新经典&#x27;</span>),(<span class="string">&#x27;北京工业&#x27;</span>);</span><br><span class="line">insert into book(name,press_id) values(<span class="string">&#x27;白夜行&#x27;</span>,<span class="number">1</span>),(<span class="string">&#x27;沉睡的森林&#x27;</span>,<span class="number">2</span>),(<span class="string">&#x27;祈祷落幕时&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">update press <span class="built_in">set</span> <span class="built_in">id</span>=<span class="number">3</span> where <span class="built_in">id</span> =<span class="number">2</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment"># 多对多</span></span><br><span class="line">create table author(</span><br><span class="line"><span class="built_in">id</span> <span class="built_in">int</span> primary key auto_increment,</span><br><span class="line">name varchar(<span class="number">8</span>) <span class="keyword">not</span> null);</span><br><span class="line"></span><br><span class="line">create table author_book(</span><br><span class="line"><span class="built_in">id</span> <span class="built_in">int</span> primary key auto_increment,</span><br><span class="line">name varchar(<span class="number">8</span>) <span class="keyword">not</span> null,</span><br><span class="line">author_id <span class="built_in">int</span> <span class="keyword">not</span> null,</span><br><span class="line">book_id <span class="built_in">int</span> <span class="keyword">not</span> null,</span><br><span class="line">foreign key (author_id) references author(<span class="built_in">id</span>)</span><br><span class="line">on delete cascade</span><br><span class="line">on update cascade,</span><br><span class="line">foreign key (book_id) references book(<span class="built_in">id</span>)</span><br><span class="line">on delete cascade</span><br><span class="line">on update cascade</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">insert into author(name) values(<span class="string">&#x27;egon&#x27;</span>),(<span class="string">&#x27;alex&#x27;</span>),(<span class="string">&#x27;yuanhao&#x27;</span>),(<span class="string">&#x27;wpq&#x27;</span>);</span><br><span class="line"></span><br><span class="line">insert into author_book(author_id,book_id) values</span><br><span class="line">(<span class="number">1</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="number">1</span>,<span class="number">2</span>),</span><br><span class="line">(<span class="number">1</span>,<span class="number">3</span>),</span><br><span class="line">(<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 一对一</span></span><br><span class="line">create table customer(</span><br><span class="line">    <span class="built_in">id</span> <span class="built_in">int</span> primary key auto_increment,</span><br><span class="line">    name varchar(<span class="number">16</span>),</span><br><span class="line">    phone char(<span class="number">11</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">create table student(</span><br><span class="line">    <span class="built_in">id</span> <span class="built_in">int</span> primary key auto_increment,</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">varchar</span>(<span class="params"><span class="number">10</span></span>),</span></span><br><span class="line"><span class="class">    <span class="title">course</span> <span class="title">varchar</span>(<span class="params"><span class="number">16</span></span>),</span></span><br><span class="line"><span class="class">    <span class="title">c_id</span> <span class="title">int</span> <span class="title">unique</span>,</span></span><br><span class="line"><span class="class">    <span class="title">foreign</span> <span class="title">key</span>(<span class="params">c_id</span>) <span class="title">references</span> <span class="title">customer</span>(<span class="params"><span class="built_in">id</span></span>) <span class="title">on</span> <span class="title">delete</span> <span class="title">cascade</span> <span class="title">on</span> <span class="title">update</span> <span class="title">cascade</span></span></span><br><span class="line"><span class="class">);</span></span><br></pre></td></tr></table></figure><h3 id="单表查询"><a href="#单表查询" class="headerlink" title="单表查询"></a>单表查询</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 插入</span></span><br><span class="line">mysql&gt; create table user(name varchar(<span class="number">16</span>),password varchar(<span class="number">10</span>));</span><br><span class="line">Query OK, <span class="number">0</span> rows affected (<span class="number">0.29</span> sec)</span><br><span class="line">mysql&gt;</span><br><span class="line">mysql&gt; insert into user select user,password <span class="keyword">from</span> mysql.user;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除</span></span><br><span class="line">delete <span class="keyword">from</span> 表 where 条件;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新</span></span><br><span class="line">update 表 <span class="built_in">set</span> 字段=值 where 条件;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 单表查询语法</span></span><br><span class="line">select distinct 字段<span class="number">1</span>,字段<span class="number">2</span>,字段<span class="number">3</span>,... <span class="keyword">from</span> 表名</span><br><span class="line">                            where 过滤条件</span><br><span class="line">                            group by 分组的条件</span><br><span class="line">                            having 筛选条件</span><br><span class="line">                            order by 排序字段</span><br><span class="line">                            limit n;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 简单查询</span></span><br><span class="line">select name,sex <span class="keyword">from</span> emp;</span><br><span class="line">select name <span class="keyword">as</span> 名字,sex 性别 <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line">select * <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 避免重复（针对的是记录）</span></span><br><span class="line"><span class="comment"># 不能去重带主键和唯一</span></span><br><span class="line">select distinct post <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进行四则运算</span></span><br><span class="line">select name <span class="keyword">as</span> 名字,salary*<span class="number">12</span> <span class="keyword">as</span> 年薪 <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># concat()拼接记录的内容</span></span><br><span class="line">select name ,concat(salary*<span class="number">12</span>,<span class="string">&quot;$&quot;</span>) <span class="keyword">from</span> emp;</span><br><span class="line">select name ,concat(<span class="string">&quot;annual_salary&quot;</span>,<span class="string">&#x27;:&#x27;</span>,salary*<span class="number">12</span>) <span class="keyword">as</span> 年薪 <span class="keyword">from</span> emp;</span><br><span class="line">select name ,concat(<span class="string">&quot;annual_salary&quot;</span>,<span class="string">&#x27;:&#x27;</span>,salary*<span class="number">12</span>,<span class="string">&#x27;:&#x27;</span>,<span class="string">&#x27;$&#x27;</span>) <span class="keyword">as</span> 年薪 <span class="keyword">from</span> emp;</span><br><span class="line">select name ,concat_ws(<span class="string">&quot;:&quot;</span>,<span class="string">&quot;annual_salary&quot;</span>,salary*<span class="number">12</span>,<span class="string">&#x27;$&#x27;</span>) <span class="keyword">as</span> 年薪 <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">select (</span><br><span class="line">    case</span><br><span class="line">    when name=<span class="string">&quot;egon&quot;</span> then</span><br><span class="line">        name</span><br><span class="line">    when name=<span class="string">&quot;alex&quot;</span> then</span><br><span class="line">        concat(name,<span class="string">&quot;_dsb&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        concat(name,<span class="string">&quot;_sb&quot;</span>)</span><br><span class="line">    end</span><br><span class="line">) <span class="keyword">as</span> 名字 <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">===========================================where</span><br><span class="line">select * <span class="keyword">from</span> emp where <span class="built_in">id</span> &gt;= <span class="number">3</span> <span class="keyword">and</span> <span class="built_in">id</span> &lt;= <span class="number">5</span>;</span><br><span class="line">select * <span class="keyword">from</span> emp where <span class="built_in">id</span> between <span class="number">3</span> <span class="keyword">and</span> <span class="number">5</span>;</span><br><span class="line">select * <span class="keyword">from</span> emp where <span class="built_in">id</span> <span class="keyword">not</span> between <span class="number">3</span> <span class="keyword">and</span> <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">select * <span class="keyword">from</span> emp where <span class="built_in">id</span>=<span class="number">3</span> <span class="keyword">or</span> <span class="built_in">id</span>=<span class="number">5</span> <span class="keyword">or</span> <span class="built_in">id</span>=<span class="number">7</span>;</span><br><span class="line">select * <span class="keyword">from</span> emp where <span class="built_in">id</span> <span class="keyword">in</span> (<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>);</span><br><span class="line">select * <span class="keyword">from</span> emp where <span class="built_in">id</span> <span class="keyword">not</span> <span class="keyword">in</span> (<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>);</span><br><span class="line"></span><br><span class="line">select * <span class="keyword">from</span> emp where <span class="built_in">id</span>=<span class="number">3</span> <span class="keyword">or</span> <span class="built_in">id</span>=<span class="number">5</span> <span class="keyword">or</span> <span class="built_in">id</span>=<span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">select * <span class="keyword">from</span> emp where name like <span class="string">&#x27;jin%&#x27;</span>;</span><br><span class="line">select * <span class="keyword">from</span> emp where name like <span class="string">&#x27;jin___&#x27;</span>;</span><br><span class="line"></span><br><span class="line">select * <span class="keyword">from</span> emp where name regexp <span class="string">&#x27;n$&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql&gt; select * <span class="keyword">from</span> emp where post_comment <span class="keyword">is</span> <span class="keyword">not</span> null;</span><br><span class="line">Empty <span class="built_in">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; update emp <span class="built_in">set</span> post_comment=<span class="string">&#x27;&#x27;</span> where <span class="built_in">id</span>=<span class="number">3</span>;</span><br><span class="line">Query OK, <span class="number">1</span> row affected (<span class="number">0.07</span> sec)</span><br><span class="line">Rows matched: <span class="number">1</span>  Changed: <span class="number">1</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mysql&gt; select * <span class="keyword">from</span> emp where post_comment <span class="keyword">is</span> <span class="keyword">not</span> null;</span><br><span class="line">+----+---------+------+-----+------------+---------+--------------+---------+--------+-----------+</span><br><span class="line">| <span class="built_in">id</span> | name    | sex  | age | hire_date  | post    | post_comment | salary  | office | depart_id |</span><br><span class="line">+----+---------+------+-----+------------+---------+--------------+---------+--------+-----------+</span><br><span class="line">|  <span class="number">3</span> | wupeiqi | male |  <span class="number">81</span> | <span class="number">2013</span>-03-05 | teacher |              | <span class="number">8300.00</span> |    <span class="number">401</span> |         <span class="number">1</span> |</span><br><span class="line">+----+---------+------+-----+------------+---------+--------------+---------+--------+-----------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> <span class="built_in">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">select * <span class="keyword">from</span> emp where name=<span class="string">&quot;丫丫&quot;</span>;</span><br><span class="line">select * <span class="keyword">from</span> emp where name regexp <span class="string">&quot;丫$&quot;</span>;</span><br><span class="line">select * <span class="keyword">from</span> emp where name like <span class="string">&quot;丫_&quot;</span>;</span><br><span class="line">select * <span class="keyword">from</span> emp where name regexp <span class="string">&quot;^程&quot;</span>;</span><br><span class="line">select <span class="built_in">hex</span>(name) <span class="keyword">from</span> t4  where <span class="built_in">hex</span>(name) regexp <span class="string">&#x27;e[4-9][0-9a-f]&#123;4&#125;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">===========================================group by</span><br><span class="line">分完组之后只能看到分组的字段以及聚合的结果</span><br><span class="line"></span><br><span class="line"><span class="built_in">max</span>()</span><br><span class="line"><span class="built_in">min</span>()</span><br><span class="line">avg()</span><br><span class="line"><span class="built_in">sum</span>()</span><br><span class="line">count()</span><br><span class="line"></span><br><span class="line">select depart_id,count(<span class="built_in">id</span>),avg(salary),<span class="built_in">max</span>(age),<span class="built_in">min</span>(salary),<span class="built_in">sum</span>(salary) <span class="keyword">from</span> emp group by depart_id;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每个部门都有多少个人</span></span><br><span class="line">select depart_id,count(<span class="built_in">id</span>) <span class="keyword">from</span> emp group by depart_id;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每个职位男生的平均薪资</span></span><br><span class="line">select post,avg(salary) <span class="keyword">from</span> emp where sex=<span class="string">&quot;male&quot;</span> group by post;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">select post, group_concat(name) <span class="keyword">from</span> emp group by post;</span><br><span class="line">select post, group_concat(name) <span class="keyword">from</span> emp where sex=<span class="string">&quot;male&quot;</span> group by post;</span><br><span class="line"></span><br><span class="line">===========================================having</span><br><span class="line"><span class="comment"># having与where本质区别就是在于having是在分组之后发生过滤，可以使用聚合函数</span></span><br><span class="line"></span><br><span class="line">mysql&gt; select <span class="built_in">max</span>(salary) <span class="keyword">from</span> emp where <span class="built_in">max</span>(salary) &gt; <span class="number">100000</span>;</span><br><span class="line">ERROR <span class="number">1111</span> (HY000): Invalid use of group function</span><br><span class="line">mysql&gt; select <span class="built_in">max</span>(salary) <span class="keyword">from</span> emp having <span class="built_in">max</span>(salary) &gt; <span class="number">100000</span>;</span><br><span class="line">+-------------+</span><br><span class="line">| <span class="built_in">max</span>(salary) |</span><br><span class="line">+-------------+</span><br><span class="line">|  <span class="number">1000000.31</span> |</span><br><span class="line">+-------------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> <span class="built_in">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 找出来男生平均薪资大于3000的职位</span></span><br><span class="line"></span><br><span class="line">select post,avg(salary) <span class="keyword">from</span> emp where sex=<span class="string">&quot;male&quot;</span> group by post having avg(salary) &gt; <span class="number">8000</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">===========================================order by排序</span><br><span class="line">select * <span class="keyword">from</span> emp order by salary;</span><br><span class="line"> select * <span class="keyword">from</span> emp order by salary desc;</span><br><span class="line"> select * <span class="keyword">from</span> emp order by age,<span class="built_in">id</span> desc;</span><br><span class="line"></span><br><span class="line"> select post,avg(salary) <span class="keyword">from</span> emp where sex=<span class="string">&quot;male&quot;</span> group by post having avg(salary) &gt; <span class="number">3000</span>;</span><br><span class="line"> mysql&gt; select post,avg(salary) <span class="keyword">from</span> emp where sex=<span class="string">&quot;male&quot;</span> group by post having avg(salary) &gt; <span class="number">3000</span>;</span><br><span class="line">+-----------------------------------------+---------------+</span><br><span class="line">| post                                    | avg(salary)   |</span><br><span class="line">+-----------------------------------------+---------------+</span><br><span class="line">| operation                               |  <span class="number">16000.043333</span> |</span><br><span class="line">| teacher                                 | <span class="number">175650.051667</span> |</span><br><span class="line">| 老男孩驻沙河办事处外交大使              |   <span class="number">7300.330000</span> |</span><br><span class="line">+-----------------------------------------+---------------+</span><br><span class="line"><span class="number">3</span> rows <span class="keyword">in</span> <span class="built_in">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select post,avg(salary) <span class="keyword">from</span> emp where sex=<span class="string">&quot;male&quot;</span> group by post having avg(salary) &gt; <span class="number">3000</span> order by avg(salary);</span><br><span class="line">+-----------------------------------------+---------------+</span><br><span class="line">| post                                    | avg(salary)   |</span><br><span class="line">+-----------------------------------------+---------------+</span><br><span class="line">| 老男孩驻沙河办事处外交大使              |   <span class="number">7300.330000</span> |</span><br><span class="line">| operation                               |  <span class="number">16000.043333</span> |</span><br><span class="line">| teacher                                 | <span class="number">175650.051667</span> |</span><br><span class="line">+-----------------------------------------+---------------+</span><br><span class="line"><span class="number">3</span> rows <span class="keyword">in</span> <span class="built_in">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select post,avg(salary) <span class="keyword">as</span> v <span class="keyword">from</span> emp where sex=<span class="string">&quot;male&quot;</span> group by post having avg(salary) &gt; <span class="number">3000</span> order by v;</span><br><span class="line">+-----------------------------------------+---------------+</span><br><span class="line">| post                                    | v             |</span><br><span class="line">+-----------------------------------------+---------------+</span><br><span class="line">| 老男孩驻沙河办事处外交大使              |   <span class="number">7300.330000</span> |</span><br><span class="line">| operation                               |  <span class="number">16000.043333</span> |</span><br><span class="line">| teacher                                 | <span class="number">175650.051667</span> |</span><br><span class="line">+-----------------------------------------+---------------+</span><br><span class="line"><span class="number">3</span> rows <span class="keyword">in</span> <span class="built_in">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">select * <span class="keyword">from</span> emp limit <span class="number">0</span>,<span class="number">5</span>;</span><br><span class="line">select * <span class="keyword">from</span> emp limit <span class="number">5</span>,<span class="number">5</span>;</span><br><span class="line">select * <span class="keyword">from</span> emp limit <span class="number">10</span>,<span class="number">5</span>;</span><br><span class="line">select * <span class="keyword">from</span> emp limit <span class="number">15</span>,<span class="number">5</span>;</span><br><span class="line">select * <span class="keyword">from</span> emp limit <span class="number">20</span>,<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">create table dep(</span><br><span class="line"><span class="built_in">id</span> <span class="built_in">int</span>,</span><br><span class="line">name varchar(<span class="number">20</span>) </span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">create table emp(</span><br><span class="line"><span class="built_in">id</span> <span class="built_in">int</span> primary key auto_increment,</span><br><span class="line">name varchar(<span class="number">20</span>),</span><br><span class="line">sex enum(<span class="string">&#x27;male&#x27;</span>,<span class="string">&#x27;female&#x27;</span>) <span class="keyword">not</span> null default <span class="string">&#x27;male&#x27;</span>,</span><br><span class="line">age <span class="built_in">int</span>,</span><br><span class="line">dep_id <span class="built_in">int</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">#插入数据</span></span><br><span class="line">insert into dep values</span><br><span class="line">(<span class="number">200</span>,<span class="string">&#x27;技术&#x27;</span>),</span><br><span class="line">(<span class="number">201</span>,<span class="string">&#x27;人力资源&#x27;</span>),</span><br><span class="line">(<span class="number">202</span>,<span class="string">&#x27;销售&#x27;</span>),</span><br><span class="line">(<span class="number">203</span>,<span class="string">&#x27;运营&#x27;</span>);</span><br><span class="line"></span><br><span class="line">insert into emp(name,sex,age,dep_id) values</span><br><span class="line">(<span class="string">&#x27;egon&#x27;</span>,<span class="string">&#x27;male&#x27;</span>,<span class="number">18</span>,<span class="number">200</span>),</span><br><span class="line">(<span class="string">&#x27;alex&#x27;</span>,<span class="string">&#x27;female&#x27;</span>,<span class="number">48</span>,<span class="number">201</span>),</span><br><span class="line">(<span class="string">&#x27;wupeiqi&#x27;</span>,<span class="string">&#x27;male&#x27;</span>,<span class="number">38</span>,<span class="number">201</span>),</span><br><span class="line">(<span class="string">&#x27;yuanhao&#x27;</span>,<span class="string">&#x27;female&#x27;</span>,<span class="number">28</span>,<span class="number">202</span>),</span><br><span class="line">(<span class="string">&#x27;liwenzhou&#x27;</span>,<span class="string">&#x27;male&#x27;</span>,<span class="number">18</span>,<span class="number">200</span>),</span><br><span class="line">(<span class="string">&#x27;jingliyang&#x27;</span>,<span class="string">&#x27;female&#x27;</span>,<span class="number">18</span>,<span class="number">204</span>)</span><br><span class="line">;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1 交叉连接：不适用任何匹配条件。生成笛卡尔积</span></span><br><span class="line">select * <span class="keyword">from</span> dep,emp;</span><br><span class="line"><span class="comment"># 2 内连接：只连接匹配的行</span></span><br><span class="line">select * <span class="keyword">from</span> emp,dep where emp.dep_id = dep.<span class="built_in">id</span>;</span><br><span class="line">select * <span class="keyword">from</span> emp inner join dep on emp.dep_id = dep.<span class="built_in">id</span>;</span><br><span class="line"><span class="comment"># 3 外链接之左连接：优先显示左表全部记录</span></span><br><span class="line">select * <span class="keyword">from</span> emp left join dep on emp.dep_id = dep.<span class="built_in">id</span>;</span><br><span class="line">+----+------------+--------+------+--------+------+--------------+</span><br><span class="line">| <span class="built_in">id</span> | name       | sex    | age  | dep_id | <span class="built_in">id</span>   | name         |</span><br><span class="line">+----+------------+--------+------+--------+------+--------------+</span><br><span class="line">|  <span class="number">1</span> | egon       | male   |   <span class="number">18</span> |    <span class="number">200</span> |  <span class="number">200</span> | 技术         |</span><br><span class="line">|  <span class="number">5</span> | liwenzhou  | male   |   <span class="number">18</span> |    <span class="number">200</span> |  <span class="number">200</span> | 技术         |</span><br><span class="line">|  <span class="number">2</span> | alex       | female |   <span class="number">48</span> |    <span class="number">201</span> |  <span class="number">201</span> | 人力资源     |</span><br><span class="line">|  <span class="number">3</span> | wupeiqi    | male   |   <span class="number">38</span> |    <span class="number">201</span> |  <span class="number">201</span> | 人力资源     |</span><br><span class="line">|  <span class="number">4</span> | yuanhao    | female |   <span class="number">28</span> |    <span class="number">202</span> |  <span class="number">202</span> | 销售         |</span><br><span class="line">|  <span class="number">6</span> | jingliyang | female |   <span class="number">18</span> |    <span class="number">204</span> | NULL | NULL         |</span><br><span class="line">+----+------------+--------+------+--------+------+--------------+</span><br><span class="line"><span class="comment"># 4 外链接之右连接：优先显示右表全部记录</span></span><br><span class="line">select * <span class="keyword">from</span> emp right join dep on emp.dep_id = dep.<span class="built_in">id</span>;</span><br><span class="line">+------+-----------+--------+------+--------+------+--------------+</span><br><span class="line">| <span class="built_in">id</span>   | name      | sex    | age  | dep_id | <span class="built_in">id</span>   | name         |</span><br><span class="line">+------+-----------+--------+------+--------+------+--------------+</span><br><span class="line">|    <span class="number">1</span> | egon      | male   |   <span class="number">18</span> |    <span class="number">200</span> |  <span class="number">200</span> | 技术         |</span><br><span class="line">|    <span class="number">2</span> | alex      | female |   <span class="number">48</span> |    <span class="number">201</span> |  <span class="number">201</span> | 人力资源     |</span><br><span class="line">|    <span class="number">3</span> | wupeiqi   | male   |   <span class="number">38</span> |    <span class="number">201</span> |  <span class="number">201</span> | 人力资源     |</span><br><span class="line">|    <span class="number">4</span> | yuanhao   | female |   <span class="number">28</span> |    <span class="number">202</span> |  <span class="number">202</span> | 销售         |</span><br><span class="line">|    <span class="number">5</span> | liwenzhou | male   |   <span class="number">18</span> |    <span class="number">200</span> |  <span class="number">200</span> | 技术         |</span><br><span class="line">| NULL | NULL      | NULL   | NULL |   NULL |  <span class="number">203</span> | 运营         |</span><br><span class="line">+------+-----------+--------+------+--------+------+--------------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5 全外连接：显示左右两个表全部记录</span></span><br><span class="line">select * <span class="keyword">from</span> emp left join dep on emp.dep_id = dep.<span class="built_in">id</span></span><br><span class="line">union </span><br><span class="line">select * <span class="keyword">from</span> emp right join dep on emp.dep_id = dep.<span class="built_in">id</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># =================== 符合条件连接查询</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 员工年龄&gt;25 的姓名，所在部门和年纪</span></span><br><span class="line">select emp.name,dep.name,age <span class="keyword">from</span> emp inner join dep on emp.dep_id = dep.<span class="built_in">id</span> where age&gt;<span class="number">25</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment"># =====================子查询</span></span><br><span class="line"><span class="comment"># 查询平均年龄在25岁以上的部门名</span></span><br><span class="line"><span class="comment"># 方式一</span></span><br><span class="line">select dep.name, dep_id <span class="keyword">from</span> emp inner join dep on emp.dep_id = dep.<span class="built_in">id</span> group by dep_id having avg(age)&gt;<span class="number">25</span>;  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 方式二</span></span><br><span class="line">select <span class="built_in">id</span>,name <span class="keyword">from</span> dep</span><br><span class="line">    where <span class="built_in">id</span> <span class="keyword">in</span> </span><br><span class="line">        (select dep_id <span class="keyword">from</span> emp group by dep_id having avg(age) &gt; <span class="number">25</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看技术部员工姓名</span></span><br><span class="line"><span class="comment"># 方式一</span></span><br><span class="line">select name <span class="keyword">from</span> emp where dep_id <span class="keyword">in</span>(select <span class="built_in">id</span> <span class="keyword">from</span> dep where name=<span class="string">&#x27;技术&#x27;</span>);</span><br><span class="line"><span class="comment"># 方式二</span></span><br><span class="line">select emp.name <span class="keyword">from</span> emp inner join dep on emp.dep_id = dep.<span class="built_in">id</span> where dep.name =<span class="string">&#x27;技术&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">create table <span class="class"><span class="keyword">class</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="class">    <span class="built_in">id</span> <span class="built_in">int</span> primary key auto_increment,</span></span></span><br><span class="line"><span class="params"><span class="class">    name varchar(<span class="params"><span class="number">16</span></span>) unique</span></span></span><br><span class="line"><span class="params"><span class="class"></span>);</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">create</span> <span class="title">table</span> <span class="title">student</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="class"><span class="built_in">id</span> <span class="built_in">int</span> primary key auto_increment,</span></span></span><br><span class="line"><span class="params"><span class="class">name varchar(<span class="params"><span class="number">10</span></span>),</span></span></span><br><span class="line"><span class="params"><span class="class">gendenr varchar(<span class="params"><span class="number">6</span></span>),</span></span></span><br><span class="line"><span class="params"><span class="class">cid <span class="built_in">int</span> <span class="keyword">not</span> null,</span></span></span><br><span class="line"><span class="params"><span class="class">foreign key(<span class="params">cid</span>) references <span class="keyword">class</span>(<span class="params"><span class="built_in">id</span></span>)</span></span></span><br><span class="line"><span class="params"><span class="class">on delete cascade</span></span></span><br><span class="line"><span class="params"><span class="class">on update cascade</span></span></span><br><span class="line"><span class="params"><span class="class"></span>);</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">create</span> <span class="title">table</span> <span class="title">teacher</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="class"><span class="built_in">id</span> <span class="built_in">int</span> primary key auto_increment,</span></span></span><br><span class="line"><span class="params"><span class="class">name varchar(<span class="params"><span class="number">10</span></span>)</span></span></span><br><span class="line"><span class="params"><span class="class"></span>);</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">create</span> <span class="title">table</span> <span class="title">course</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="class"><span class="built_in">id</span> <span class="built_in">int</span> primary key auto_increment,</span></span></span><br><span class="line"><span class="params"><span class="class">name varchar(<span class="params"><span class="number">10</span></span>),</span></span></span><br><span class="line"><span class="params"><span class="class">tid <span class="built_in">int</span> <span class="keyword">not</span> null,</span></span></span><br><span class="line"><span class="params"><span class="class">foreign key(<span class="params">tid</span>) references teacher(<span class="params"><span class="built_in">id</span></span>)</span></span></span><br><span class="line"><span class="params"><span class="class">on delete cascade</span></span></span><br><span class="line"><span class="params"><span class="class">on update cascade </span></span></span><br><span class="line"><span class="params"><span class="class"></span>);</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">create</span> <span class="title">table</span> <span class="title">score</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="class"><span class="built_in">id</span> <span class="built_in">int</span> primary key auto_increment,</span></span></span><br><span class="line"><span class="params"><span class="class">fraction <span class="built_in">int</span> <span class="keyword">not</span> null,</span></span></span><br><span class="line"><span class="params"><span class="class">sid <span class="built_in">int</span> <span class="keyword">not</span> null,</span></span></span><br><span class="line"><span class="params"><span class="class">cid <span class="built_in">int</span> <span class="keyword">not</span> null,</span></span></span><br><span class="line"><span class="params"><span class="class">foreign key(<span class="params">sid</span>) references student(<span class="params"><span class="built_in">id</span></span>)</span></span></span><br><span class="line"><span class="params"><span class="class">on delete cascade</span></span></span><br><span class="line"><span class="params"><span class="class">on update cascade,</span></span></span><br><span class="line"><span class="params"><span class="class">foreign key(<span class="params">cid</span>) references course(<span class="params"><span class="built_in">id</span></span>)</span></span></span><br><span class="line"><span class="params"><span class="class">on delete cascade</span></span></span><br><span class="line"><span class="params"><span class="class">on update cascade </span></span></span><br><span class="line"><span class="params"><span class="class"></span>);</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"># 班级表插入数据</span></span><br><span class="line"><span class="class"><span class="title">insert</span> <span class="title">into</span> <span class="title">class</span>(<span class="params">name</span>) <span class="title">values</span>(<span class="params"><span class="string">&#x27;十五期一班&#x27;</span></span>),(<span class="params"><span class="string">&#x27;十四期二班&#x27;</span></span>),(<span class="params"><span class="string">&#x27;十六期三班&#x27;</span></span>);</span></span><br><span class="line"><span class="class"># 学生表插入数据</span></span><br><span class="line"><span class="class"><span class="title">insert</span> <span class="title">into</span> <span class="title">student</span>(<span class="params">name,gender,cid</span>) <span class="title">values</span>(<span class="params"><span class="string">&#x27;钢弹&#x27;</span>,<span class="string">&#x27;male&#x27;</span>,<span class="number">1</span></span>),(<span class="params"><span class="string">&#x27;铁锤&#x27;</span>,<span class="string">&#x27;male&#x27;</span>,<span class="number">2</span></span>),(<span class="params"><span class="string">&#x27;莉莉&#x27;</span>,<span class="string">&#x27;female&#x27;</span>,<span class="number">3</span></span>);</span></span><br><span class="line"><span class="class"># 老师表插入数据</span></span><br><span class="line"><span class="class"><span class="title">insert</span> <span class="title">into</span> <span class="title">teacher</span>(<span class="params">name</span>) <span class="title">values</span>(<span class="params"><span class="string">&#x27;egon&#x27;</span></span>),(<span class="params"><span class="string">&#x27;lxx&#x27;</span></span>),(<span class="params"><span class="string">&#x27;jason&#x27;</span></span>);</span></span><br><span class="line"><span class="class"># 课程表插入数据</span></span><br><span class="line"><span class="class"><span class="title">insert</span> <span class="title">into</span> <span class="title">course</span>(<span class="params">name,tid</span>) <span class="title">values</span>(<span class="params"><span class="string">&#x27;python&#x27;</span>,<span class="number">1</span></span>),(<span class="params"><span class="string">&#x27;go&#x27;</span>,<span class="number">2</span></span>),(<span class="params"><span class="string">&#x27;linux&#x27;</span>,<span class="number">1</span></span>);</span></span><br><span class="line"><span class="class"># 成绩表插入数据</span></span><br><span class="line"><span class="class"><span class="title">insert</span> <span class="title">into</span> <span class="title">score</span>(<span class="params">fraction,cid,sid</span>) <span class="title">values</span>(<span class="params"><span class="number">80</span>,<span class="number">2</span>,<span class="number">1</span></span>),(<span class="params"><span class="number">90</span>,<span class="number">3</span>,<span class="number">3</span></span>);</span></span><br></pre></td></tr></table></figure><h3 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h3><p><img src="/2020/08/20/MySQL/image-20210307060739486.png" alt="Mysql"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#授权表</span></span><br><span class="line">user <span class="comment">#该表放行的权限，针对：所有数据，所有库下所有表，以及表下的所有字段</span></span><br><span class="line">db <span class="comment">#该表放行的权限，针对：某一数据库，该数据库下的所有表，以及表下的所有字段</span></span><br><span class="line">tables_priv <span class="comment">#该表放行的权限。针对：某一张表，以及该表下的所有字段</span></span><br><span class="line">columns_priv <span class="comment">#该表放行的权限，针对：某一个字段</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#按图解释：</span></span><br><span class="line">user：放行db1，db2及其包含的所有</span><br><span class="line">db：放行db1，及其db1包含的所有</span><br><span class="line">tables_priv:放行db1.table1，及其该表包含的所有</span><br><span class="line">columns_prive:放行db1.table1.column1，只放行该字段</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建用户</span></span><br><span class="line">create user <span class="string">&#x27;egon&#x27;</span>@<span class="string">&#x27;1.1.1.1&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line">create user <span class="string">&#x27;egon&#x27;</span>@<span class="string">&#x27;192.168.1.%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line">create user <span class="string">&#x27;egon&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#授权：对文件夹，对文件，对文件某一字段的权限</span></span><br><span class="line">查看帮助：<span class="built_in">help</span> grant</span><br><span class="line">常用权限有：select,update,alter,delete</span><br><span class="line"><span class="built_in">all</span>可以代表除了grant之外的所有权限</span><br><span class="line"></span><br><span class="line"><span class="comment">#针对所有库的授权:*.*</span></span><br><span class="line">grant select on *.* to <span class="string">&#x27;egon1&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>; <span class="comment">#只在user表中可以查到egon1用户的select权限被设置为Y</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#针对某一数据库：db1.*</span></span><br><span class="line">grant select on db1.* to <span class="string">&#x27;egon2&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>; <span class="comment">#只在db表中可以查到egon2用户的select权限被设置为Y</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#针对某一个表：db1.t1</span></span><br><span class="line">grant select on db1.t1 to <span class="string">&#x27;egon3&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;  <span class="comment">#只在tables_priv表中可以查到egon3用户的select权限</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#针对某一个字段：</span></span><br><span class="line">mysql&gt; select * <span class="keyword">from</span> t3;</span><br><span class="line">+------+-------+------+</span><br><span class="line">| <span class="built_in">id</span>   | name  | age  |</span><br><span class="line">+------+-------+------+</span><br><span class="line">|    <span class="number">1</span> | egon1 |   <span class="number">18</span> |</span><br><span class="line">|    <span class="number">2</span> | egon2 |   <span class="number">19</span> |</span><br><span class="line">|    <span class="number">3</span> | egon3 |   <span class="number">29</span> |</span><br><span class="line">+------+-------+------+</span><br><span class="line"></span><br><span class="line">grant select (<span class="built_in">id</span>,name),update (age) on db1.t3 to <span class="string">&#x27;egon4&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>; </span><br><span class="line"><span class="comment">#可以在tables_priv和columns_priv中看到相应的权限</span></span><br><span class="line">mysql&gt; select * <span class="keyword">from</span> tables_priv where user=<span class="string">&#x27;egon4&#x27;</span>\G</span><br><span class="line">*************************** <span class="number">1.</span> row ***************************</span><br><span class="line">       Host: localhost</span><br><span class="line">         Db: db1</span><br><span class="line">       User: egon4</span><br><span class="line"> Table_name: t3</span><br><span class="line">    Grantor: root@localhost</span><br><span class="line">  Timestamp: <span class="number">0000</span>-<span class="number">00</span>-<span class="number">00</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span></span><br><span class="line"> Table_priv:</span><br><span class="line">Column_priv: Select,Update</span><br><span class="line">row <span class="keyword">in</span> <span class="built_in">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * <span class="keyword">from</span> columns_priv where user=<span class="string">&#x27;egon4&#x27;</span>\G</span><br><span class="line">*************************** <span class="number">1.</span> row ***************************</span><br><span class="line">       Host: localhost</span><br><span class="line">         Db: db1</span><br><span class="line">       User: egon4</span><br><span class="line"> Table_name: t3</span><br><span class="line">Column_name: <span class="built_in">id</span></span><br><span class="line">  Timestamp: <span class="number">0000</span>-<span class="number">00</span>-<span class="number">00</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span></span><br><span class="line">Column_priv: Select</span><br><span class="line">*************************** <span class="number">2.</span> row ***************************</span><br><span class="line">       Host: localhost</span><br><span class="line">         Db: db1</span><br><span class="line">       User: egon4</span><br><span class="line"> Table_name: t3</span><br><span class="line">Column_name: name</span><br><span class="line">  Timestamp: <span class="number">0000</span>-<span class="number">00</span>-<span class="number">00</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span></span><br><span class="line">Column_priv: Select</span><br><span class="line">*************************** <span class="number">3.</span> row ***************************</span><br><span class="line">       Host: localhost</span><br><span class="line">         Db: db1</span><br><span class="line">       User: egon4</span><br><span class="line"> Table_name: t3</span><br><span class="line">Column_name: age</span><br><span class="line">  Timestamp: <span class="number">0000</span>-<span class="number">00</span>-<span class="number">00</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span></span><br><span class="line">Column_priv: Update</span><br><span class="line">rows <span class="keyword">in</span> <span class="built_in">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除权限</span></span><br><span class="line">revoke select on db1.* <span class="keyword">from</span> <span class="string">&#x27;egon&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">权限相关操作</span><br></pre></td></tr></table></figure><h3 id="SQL语句查询执行顺序"><a href="#SQL语句查询执行顺序" class="headerlink" title="SQL语句查询执行顺序"></a>SQL语句查询执行顺序</h3><h4 id="SELECT语句关键字的定义顺序"><a href="#SELECT语句关键字的定义顺序" class="headerlink" title="SELECT语句关键字的定义顺序"></a>SELECT语句关键字的定义顺序</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">SELECT DISTINCT &lt;select_list&gt;</span><br><span class="line">FROM &lt;left_table&gt;</span><br><span class="line">&lt;join_type&gt; JOIN &lt;right_table&gt;</span><br><span class="line">ON &lt;join_condition&gt;</span><br><span class="line">WHERE &lt;where_condition&gt;</span><br><span class="line">GROUP BY &lt;group_by_list&gt;</span><br><span class="line">HAVING &lt;having_condition&gt;</span><br><span class="line">ORDER BY &lt;order_by_condition&gt;</span><br><span class="line">LIMIT &lt;limit_number&gt;</span><br></pre></td></tr></table></figure><h4 id="SELECT语句关键字的执行顺序"><a href="#SELECT语句关键字的执行顺序" class="headerlink" title="SELECT语句关键字的执行顺序"></a>SELECT语句关键字的执行顺序</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">7</span>)     SELECT </span><br><span class="line">(<span class="number">8</span>)     DISTINCT &lt;select_list&gt;</span><br><span class="line">(<span class="number">1</span>)     FROM &lt;left_table&gt;</span><br><span class="line">(<span class="number">3</span>)     &lt;join_type&gt; JOIN &lt;right_table&gt;</span><br><span class="line">(<span class="number">2</span>)     ON &lt;join_condition&gt;</span><br><span class="line">(<span class="number">4</span>)     WHERE &lt;where_condition&gt;</span><br><span class="line">(<span class="number">5</span>)     GROUP BY &lt;group_by_list&gt;</span><br><span class="line">(<span class="number">6</span>)     HAVING &lt;having_condition&gt;</span><br><span class="line">(<span class="number">9</span>)     ORDER BY &lt;order_by_condition&gt;</span><br><span class="line">(<span class="number">10</span>)    LIMIT &lt;limit_number&gt;</span><br></pre></td></tr></table></figure><h4 id="准备表和数据"><a href="#准备表和数据" class="headerlink" title="准备表和数据"></a>准备表和数据</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 新建一个测试数据库TestDB；</span><br><span class="line"></span><br><span class="line">create database TestDB;</span><br><span class="line"><span class="number">2.</span>创建测试表table1和table2；</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CREATE TABLE table1</span><br><span class="line"> (</span><br><span class="line">     customer_id VARCHAR(<span class="number">10</span>) NOT NULL,</span><br><span class="line">     city VARCHAR(<span class="number">10</span>) NOT NULL,</span><br><span class="line">     PRIMARY KEY(customer_id)</span><br><span class="line"> )ENGINE=INNODB DEFAULT CHARSET=UTF8;</span><br><span class="line"></span><br><span class="line"> CREATE TABLE table2</span><br><span class="line"> (</span><br><span class="line">     order_id INT NOT NULL auto_increment,</span><br><span class="line">     customer_id VARCHAR(<span class="number">10</span>),</span><br><span class="line">     PRIMARY KEY(order_id)</span><br><span class="line"> )ENGINE=INNODB DEFAULT CHARSET=UTF8;</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>插入测试数据；</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> INSERT INTO table1(customer_id,city) VALUES(<span class="string">&#x27;163&#x27;</span>,<span class="string">&#x27;hangzhou&#x27;</span>);</span><br><span class="line"> INSERT INTO table1(customer_id,city) VALUES(<span class="string">&#x27;9you&#x27;</span>,<span class="string">&#x27;shanghai&#x27;</span>);</span><br><span class="line"> INSERT INTO table1(customer_id,city) VALUES(<span class="string">&#x27;tx&#x27;</span>,<span class="string">&#x27;hangzhou&#x27;</span>);</span><br><span class="line"> INSERT INTO table1(customer_id,city) VALUES(<span class="string">&#x27;baidu&#x27;</span>,<span class="string">&#x27;hangzhou&#x27;</span>);</span><br><span class="line"></span><br><span class="line"> INSERT INTO table2(customer_id) VALUES(<span class="string">&#x27;163&#x27;</span>);</span><br><span class="line"> INSERT INTO table2(customer_id) VALUES(<span class="string">&#x27;163&#x27;</span>);</span><br><span class="line"> INSERT INTO table2(customer_id) VALUES(<span class="string">&#x27;9you&#x27;</span>);</span><br><span class="line"> INSERT INTO table2(customer_id) VALUES(<span class="string">&#x27;9you&#x27;</span>);</span><br><span class="line"> INSERT INTO table2(customer_id) VALUES(<span class="string">&#x27;9you&#x27;</span>);</span><br><span class="line"> INSERT INTO table2(customer_id) VALUES(<span class="string">&#x27;tx&#x27;</span>);</span><br><span class="line"> INSERT INTO table2(customer_id) VALUES(NULL);</span><br><span class="line"></span><br><span class="line">准备工作做完以后，table1和table2看起来应该像下面这样：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql&gt; select * <span class="keyword">from</span> table1;</span><br><span class="line"> +-------------+----------+</span><br><span class="line"> | customer_id | city     |</span><br><span class="line"> +-------------+----------+</span><br><span class="line"> | <span class="number">163</span>         | hangzhou |</span><br><span class="line"> | 9you        | shanghai |</span><br><span class="line"> | baidu       | hangzhou |</span><br><span class="line"> | tx          | hangzhou |</span><br><span class="line"> +-------------+----------+</span><br><span class="line"> <span class="number">4</span> rows <span class="keyword">in</span> <span class="built_in">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"> mysql&gt; select * <span class="keyword">from</span> table2;</span><br><span class="line"> +----------+-------------+</span><br><span class="line"> | order_id | customer_id |</span><br><span class="line"> +----------+-------------+</span><br><span class="line"> |        <span class="number">1</span> | <span class="number">163</span>         |</span><br><span class="line"> |        <span class="number">2</span> | <span class="number">163</span>         |</span><br><span class="line"> |        <span class="number">3</span> | 9you        |</span><br><span class="line"> |        <span class="number">4</span> | 9you        |</span><br><span class="line"> |        <span class="number">5</span> | 9you        |</span><br><span class="line"> |        <span class="number">6</span> | tx          |</span><br><span class="line"> |        <span class="number">7</span> | NULL        |</span><br><span class="line"> +----------+-------------+</span><br><span class="line"> <span class="number">7</span> rows <span class="keyword">in</span> <span class="built_in">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT a.customer_id,COUNT(b.order_id) <span class="keyword">as</span> total_orders FROM TABLE1 <span class="keyword">as</span> a INNER JOIN table2 <span class="keyword">as</span> b on a.customer_id = b.customer_id WHERE a.city = <span class="string">&#x27;hangzhou&#x27;</span> GROUP BY a.customer_id HAVING COUNT(b.customer_id &lt; <span class="number">2</span>) ORDER BY total_orders  desc;</span><br></pre></td></tr></table></figure><h4 id="单表查询的语法"><a href="#单表查询的语法" class="headerlink" title="单表查询的语法"></a>单表查询的语法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SELECT 字段<span class="number">1</span>,字段<span class="number">2.</span>.. FROM 表名</span><br><span class="line">                  WHERE 条件</span><br><span class="line">                  GROUP BY field</span><br><span class="line">                  HAVING 筛选</span><br><span class="line">                  ORDER BY field</span><br><span class="line">                  LIMIT 限制条数</span><br></pre></td></tr></table></figure><h4 id="关键字的执行优先级"><a href="#关键字的执行优先级" class="headerlink" title="关键字的执行优先级"></a>关键字的执行优先级</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">重点中的重点：关键字的执行优先级</span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">where</span><br><span class="line">group by</span><br><span class="line">having</span><br><span class="line">select</span><br><span class="line">distinct</span><br><span class="line">order by</span><br><span class="line">limit</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">1.</span>找到表:<span class="keyword">from</span></span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>拿着where指定的约束条件，去文件/表中取出一条条记录</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>将取出的一条条记录进行分组group by，如果没有group by，则整体作为一组</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>将分组的结果进行having过滤</span><br><span class="line"></span><br><span class="line"><span class="number">5.</span>执行select</span><br><span class="line"></span><br><span class="line"><span class="number">6.</span>去重</span><br><span class="line"></span><br><span class="line"><span class="number">7.</span>将结果按条件排序：order by</span><br><span class="line"></span><br><span class="line"><span class="number">8.</span>限制结果的显示条数</span><br></pre></td></tr></table></figure><h4 id="单表查询练习"><a href="#单表查询练习" class="headerlink" title="单表查询练习"></a>单表查询练习</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1</span></span><br><span class="line">CREATE TABLE employee (</span><br><span class="line"><span class="built_in">id</span> INT NOT NULL UNIQUE auto_increment,</span><br><span class="line">NAME VARCHAR ( <span class="number">20</span> ) NOT NULL,</span><br><span class="line">sex enum ( <span class="string">&#x27;male&#x27;</span>, <span class="string">&#x27;female&#x27;</span> ) NOT NULL DEFAULT <span class="string">&#x27;male&#x27;</span>,<span class="comment">#大部分是男的</span></span><br><span class="line">age INT ( <span class="number">3</span> ) UNSIGNED NOT NULL DEFAULT <span class="number">28</span>,</span><br><span class="line">hire_date date NOT NULL,</span><br><span class="line">post VARCHAR ( <span class="number">50</span> ),</span><br><span class="line">post_comment VARCHAR ( <span class="number">100</span> ),</span><br><span class="line">salary DOUBLE ( <span class="number">15</span>, <span class="number">2</span> ),</span><br><span class="line">office INT,<span class="comment">#一个部门一个屋子</span></span><br><span class="line">depart_id INT </span><br><span class="line">);</span><br><span class="line"><span class="comment"># 2</span></span><br><span class="line">desc employee;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3 </span></span><br><span class="line"><span class="comment">#插入记录</span></span><br><span class="line"><span class="comment">#三个部门：教学，销售，运营</span></span><br><span class="line">insert into employee(name,sex,age,hire_date,post,salary,office,depart_id) values</span><br><span class="line">(<span class="string">&#x27;egon&#x27;</span>,<span class="string">&#x27;male&#x27;</span>,<span class="number">18</span>,<span class="string">&#x27;20170301&#x27;</span>,<span class="string">&#x27;老男孩驻沙河办事处外交大使&#x27;</span>,<span class="number">7300.33</span>,<span class="number">401</span>,<span class="number">1</span>), <span class="comment">#以下是教学部</span></span><br><span class="line">(<span class="string">&#x27;alex&#x27;</span>,<span class="string">&#x27;male&#x27;</span>,<span class="number">78</span>,<span class="string">&#x27;20150302&#x27;</span>,<span class="string">&#x27;teacher&#x27;</span>,<span class="number">1000000.31</span>,<span class="number">401</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="string">&#x27;wupeiqi&#x27;</span>,<span class="string">&#x27;male&#x27;</span>,<span class="number">81</span>,<span class="string">&#x27;20130305&#x27;</span>,<span class="string">&#x27;teacher&#x27;</span>,<span class="number">8300</span>,<span class="number">401</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="string">&#x27;yuanhao&#x27;</span>,<span class="string">&#x27;male&#x27;</span>,<span class="number">73</span>,<span class="string">&#x27;20140701&#x27;</span>,<span class="string">&#x27;teacher&#x27;</span>,<span class="number">3500</span>,<span class="number">401</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="string">&#x27;liwenzhou&#x27;</span>,<span class="string">&#x27;male&#x27;</span>,<span class="number">28</span>,<span class="string">&#x27;20121101&#x27;</span>,<span class="string">&#x27;teacher&#x27;</span>,<span class="number">2100</span>,<span class="number">401</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="string">&#x27;jingliyang&#x27;</span>,<span class="string">&#x27;female&#x27;</span>,<span class="number">18</span>,<span class="string">&#x27;20110211&#x27;</span>,<span class="string">&#x27;teacher&#x27;</span>,<span class="number">9000</span>,<span class="number">401</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="string">&#x27;jinxin&#x27;</span>,<span class="string">&#x27;male&#x27;</span>,<span class="number">18</span>,<span class="string">&#x27;19000301&#x27;</span>,<span class="string">&#x27;teacher&#x27;</span>,<span class="number">30000</span>,<span class="number">401</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="string">&#x27;成龙&#x27;</span>,<span class="string">&#x27;male&#x27;</span>,<span class="number">48</span>,<span class="string">&#x27;20101111&#x27;</span>,<span class="string">&#x27;teacher&#x27;</span>,<span class="number">10000</span>,<span class="number">401</span>,<span class="number">1</span>),</span><br><span class="line"></span><br><span class="line">(<span class="string">&#x27;歪歪&#x27;</span>,<span class="string">&#x27;female&#x27;</span>,<span class="number">48</span>,<span class="string">&#x27;20150311&#x27;</span>,<span class="string">&#x27;sale&#x27;</span>,<span class="number">3000.13</span>,<span class="number">402</span>,<span class="number">2</span>),<span class="comment">#以下是销售部门</span></span><br><span class="line">(<span class="string">&#x27;丫丫&#x27;</span>,<span class="string">&#x27;female&#x27;</span>,<span class="number">38</span>,<span class="string">&#x27;20101101&#x27;</span>,<span class="string">&#x27;sale&#x27;</span>,<span class="number">2000.35</span>,<span class="number">402</span>,<span class="number">2</span>),</span><br><span class="line">(<span class="string">&#x27;丁丁&#x27;</span>,<span class="string">&#x27;female&#x27;</span>,<span class="number">18</span>,<span class="string">&#x27;20110312&#x27;</span>,<span class="string">&#x27;sale&#x27;</span>,<span class="number">1000.37</span>,<span class="number">402</span>,<span class="number">2</span>),</span><br><span class="line">(<span class="string">&#x27;星星&#x27;</span>,<span class="string">&#x27;female&#x27;</span>,<span class="number">18</span>,<span class="string">&#x27;20160513&#x27;</span>,<span class="string">&#x27;sale&#x27;</span>,<span class="number">3000.29</span>,<span class="number">402</span>,<span class="number">2</span>),</span><br><span class="line">(<span class="string">&#x27;格格&#x27;</span>,<span class="string">&#x27;female&#x27;</span>,<span class="number">28</span>,<span class="string">&#x27;20170127&#x27;</span>,<span class="string">&#x27;sale&#x27;</span>,<span class="number">4000.33</span>,<span class="number">402</span>,<span class="number">2</span>),</span><br><span class="line"></span><br><span class="line">(<span class="string">&#x27;张野&#x27;</span>,<span class="string">&#x27;male&#x27;</span>,<span class="number">28</span>,<span class="string">&#x27;20160311&#x27;</span>,<span class="string">&#x27;operation&#x27;</span>,<span class="number">10000.13</span>,<span class="number">403</span>,<span class="number">3</span>), <span class="comment">#以下是运营部门</span></span><br><span class="line">(<span class="string">&#x27;程咬金&#x27;</span>,<span class="string">&#x27;male&#x27;</span>,<span class="number">18</span>,<span class="string">&#x27;19970312&#x27;</span>,<span class="string">&#x27;operation&#x27;</span>,<span class="number">20000</span>,<span class="number">403</span>,<span class="number">3</span>),</span><br><span class="line">(<span class="string">&#x27;程咬银&#x27;</span>,<span class="string">&#x27;female&#x27;</span>,<span class="number">18</span>,<span class="string">&#x27;20130311&#x27;</span>,<span class="string">&#x27;operation&#x27;</span>,<span class="number">19000</span>,<span class="number">403</span>,<span class="number">3</span>),</span><br><span class="line">(<span class="string">&#x27;程咬铜&#x27;</span>,<span class="string">&#x27;male&#x27;</span>,<span class="number">18</span>,<span class="string">&#x27;20150411&#x27;</span>,<span class="string">&#x27;operation&#x27;</span>,<span class="number">18000</span>,<span class="number">403</span>,<span class="number">3</span>),</span><br><span class="line">(<span class="string">&#x27;程咬铁&#x27;</span>,<span class="string">&#x27;female&#x27;</span>,<span class="number">18</span>,<span class="string">&#x27;20140512&#x27;</span>,<span class="string">&#x27;operation&#x27;</span>,<span class="number">17000</span>,<span class="number">403</span>,<span class="number">3</span>)</span><br><span class="line">;</span><br><span class="line"></span><br><span class="line"><span class="comment">#ps：如果在windows系统中，插入中文字符，select的结果为空白，可以将所有字符编码统一设置成gbk</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span> 查出所有员工的名字，薪资,格式为</span><br><span class="line">    &lt;名字:egon&gt;    &lt;薪资:<span class="number">3000</span>&gt;</span><br><span class="line"><span class="number">2</span> 查出所有的岗位（去掉重复）</span><br><span class="line"><span class="number">3</span> 查出所有员工名字，以及他们的年薪,年薪的字段名为annual_year</span><br><span class="line"></span><br><span class="line">select concat(<span class="string">&#x27;&lt;名字:&#x27;</span>,name,<span class="string">&#x27;&gt;    &#x27;</span>,<span class="string">&#x27;&lt;薪资:&#x27;</span>,salary,<span class="string">&#x27;&gt;&#x27;</span>) <span class="keyword">from</span> employee;</span><br><span class="line">select distinct depart_id <span class="keyword">from</span> employee;</span><br><span class="line">select name,salary*<span class="number">12</span> annual_salary <span class="keyword">from</span> employee;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">. 查看岗位是teacher的员工姓名、年龄</span><br><span class="line">select name,age <span class="keyword">from</span> employee where post = <span class="string">&#x27;teacher&#x27;</span>;</span><br><span class="line"></span><br><span class="line">. 查看岗位是teacher且年龄大于<span class="number">30</span>岁的员工姓名、年龄</span><br><span class="line">select name,age <span class="keyword">from</span> employee where post=<span class="string">&#x27;teacher&#x27;</span> <span class="keyword">and</span> age &gt; <span class="number">30</span>; </span><br><span class="line">. 查看岗位是teacher且薪资在<span class="number">9000</span>-<span class="number">1000</span>范围内的员工姓名、年龄、薪资</span><br><span class="line">select name,age,salary <span class="keyword">from</span> employee where post=<span class="string">&#x27;teacher&#x27;</span> <span class="keyword">and</span> salary between <span class="number">9000</span> <span class="keyword">and</span> <span class="number">10000</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">. 查看岗位描述不为NULL的员工信息</span><br><span class="line">select * <span class="keyword">from</span> employee where post_comment <span class="keyword">is</span> <span class="keyword">not</span> null;</span><br><span class="line"></span><br><span class="line">. 查看岗位是teacher且薪资是<span class="number">10000</span>或<span class="number">9000</span>或<span class="number">30000</span>的员工姓名、年龄、薪资</span><br><span class="line">select name,age,salary <span class="keyword">from</span> employee where post=<span class="string">&#x27;teacher&#x27;</span> <span class="keyword">and</span> salary <span class="keyword">in</span> (<span class="number">10000</span>,<span class="number">9000</span>,<span class="number">30000</span>);</span><br><span class="line"></span><br><span class="line">. 查看岗位是teacher且薪资不是<span class="number">10000</span>或<span class="number">9000</span>或<span class="number">30000</span>的员工姓名、年龄、薪资</span><br><span class="line">select name,age,salary <span class="keyword">from</span> employee where post=<span class="string">&#x27;teacher&#x27;</span> <span class="keyword">and</span> salary <span class="keyword">not</span> <span class="keyword">in</span> (<span class="number">10000</span>,<span class="number">9000</span>,<span class="number">30000</span>);</span><br><span class="line"></span><br><span class="line">. 查看岗位是teacher且名字是jin开头的员工姓名、年薪</span><br><span class="line">select name,salary*<span class="number">12</span> <span class="keyword">from</span> employee where post=<span class="string">&#x27;teacher&#x27;</span> <span class="keyword">and</span> name like <span class="string">&#x27;jin%&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="分组查询group-by"><a href="#分组查询group-by" class="headerlink" title="分组查询group_by"></a>分组查询group_by</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 一 什么是分组？为什么要分组？</span></span><br><span class="line"><span class="comment">#1、首先明确一点：分组发生在where之后，即分组是基于where之后得到的记录而进行的</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2、分组指的是：将所有记录按照某个相同字段进行归类，比如针对员工信息表的职位分组，或者按照性别进行分组等</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#3、为何要分组呢？</span></span><br><span class="line">    取每个部门的最高工资</span><br><span class="line">    取每个部门的员工数</span><br><span class="line">    取男人数和女人数</span><br><span class="line"></span><br><span class="line">小窍门：‘每’这个字后面的字段，就是我们分组的依据</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#4、大前提：</span></span><br><span class="line">    可以按照任意字段分组，但是分组完毕后，比如group by post，只能查看post字段，如果想查看组内信息，需要借助于聚合函数</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment"># ONLY_FULL_GROUP_BY</span></span><br><span class="line"><span class="comment">#查看MySQL 5.7默认的sql_mode如下：</span></span><br><span class="line">mysql&gt; select @@<span class="keyword">global</span>.sql_mode;</span><br><span class="line">ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</span><br><span class="line"></span><br><span class="line"><span class="comment">#！！！注意</span></span><br><span class="line">ONLY_FULL_GROUP_BY的语义就是确定select target <span class="built_in">list</span>中的所有列的值都是明确语义，简单的说来，在ONLY_FULL_GROUP_BY模式下，target <span class="built_in">list</span>中的值要么是来自于聚集函数的结果，要么是来自于group by <span class="built_in">list</span>中的表达式的值。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#设置sql_mole如下操作(我们可以去掉ONLY_FULL_GROUP_BY模式)：</span></span><br><span class="line">mysql&gt; <span class="built_in">set</span> <span class="keyword">global</span> sql_mode=<span class="string">&#x27;STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION&#x27;</span>;</span><br><span class="line"></span><br><span class="line">！！！SQL_MODE设置！！！</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select @@<span class="keyword">global</span>.sql_mode;</span><br><span class="line">+-------------------+</span><br><span class="line">| @@<span class="keyword">global</span>.sql_mode |</span><br><span class="line">+-------------------+</span><br><span class="line">|                   |</span><br><span class="line">+-------------------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> <span class="built_in">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * <span class="keyword">from</span> emp group by post; </span><br><span class="line">+----+------+--------+-----+------------+----------------------------+--------------+------------+--------+-----------+</span><br><span class="line">| <span class="built_in">id</span> | name | sex    | age | hire_date  | post                       | post_comment | salary     | office | depart_id |</span><br><span class="line">+----+------+--------+-----+------------+----------------------------+--------------+------------+--------+-----------+</span><br><span class="line">| <span class="number">14</span> | 张野 | male   |  <span class="number">28</span> | <span class="number">2016</span>-03-<span class="number">11</span> | operation                  | NULL         |   <span class="number">10000.13</span> |    <span class="number">403</span> |         <span class="number">3</span> |</span><br><span class="line">|  <span class="number">9</span> | 歪歪 | female |  <span class="number">48</span> | <span class="number">2015</span>-03-<span class="number">11</span> | sale                       | NULL         |    <span class="number">3000.13</span> |    <span class="number">402</span> |         <span class="number">2</span> |</span><br><span class="line">|  <span class="number">2</span> | alex | male   |  <span class="number">78</span> | <span class="number">2015</span>-03-02 | teacher                    | NULL         | <span class="number">1000000.31</span> |    <span class="number">401</span> |         <span class="number">1</span> |</span><br><span class="line">|  <span class="number">1</span> | egon | male   |  <span class="number">18</span> | <span class="number">2017</span>-03-01 | 老男孩驻沙河办事处外交大使 | NULL         |    <span class="number">7300.33</span> |    <span class="number">401</span> |         <span class="number">1</span> |</span><br><span class="line">+----+------+--------+-----+------------+----------------------------+--------------+------------+--------+-----------+</span><br><span class="line"><span class="number">4</span> rows <span class="keyword">in</span> <span class="built_in">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#由于没有设置ONLY_FULL_GROUP_BY,于是也可以有结果，默认都是组内的第一条记录，但其实这是没有意义的</span></span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="built_in">set</span> <span class="keyword">global</span> sql_mode=<span class="string">&#x27;ONLY_FULL_GROUP_BY&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">0</span> rows affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; quit <span class="comment">#设置成功后，一定要退出，然后重新登录方可生效</span></span><br><span class="line">Bye</span><br><span class="line"></span><br><span class="line">mysql&gt; use db1;</span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; select * <span class="keyword">from</span> emp group by post; <span class="comment">#报错</span></span><br><span class="line">ERROR <span class="number">1055</span> (<span class="number">42000</span>): <span class="string">&#x27;db1.emp.id&#x27;</span> isn<span class="string">&#x27;t in GROUP BY</span></span><br><span class="line"><span class="string">mysql&gt; select post,count(id) from emp group by post; #只能查看分组依据和使用聚合函数</span></span><br><span class="line"><span class="string">+----------------------------+-----------+</span></span><br><span class="line"><span class="string">| post                       | count(id) |</span></span><br><span class="line"><span class="string">+----------------------------+-----------+</span></span><br><span class="line"><span class="string">| operation                  |         5 |</span></span><br><span class="line"><span class="string">| sale                       |         5 |</span></span><br><span class="line"><span class="string">| teacher                    |         7 |</span></span><br><span class="line"><span class="string">| 老男孩驻沙河办事处外交大使 |         1 |</span></span><br><span class="line"><span class="string">+----------------------------+-----------+</span></span><br><span class="line"><span class="string">4 rows in set (0.00 sec)</span></span><br></pre></td></tr></table></figure><p>group_by</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">单独使用GROUP BY关键字分组</span><br><span class="line">    SELECT post FROM employee GROUP BY post;</span><br><span class="line">    注意：我们按照post字段分组，那么select查询的字段只能是post，想要获取组内的其他相关信息，需要借助函数</span><br><span class="line"></span><br><span class="line">GROUP BY关键字和GROUP_CONCAT()函数一起使用</span><br><span class="line">    SELECT post,GROUP_CONCAT(name) FROM employee GROUP BY post;<span class="comment">#按照岗位分组，并查看组内成员名</span></span><br><span class="line">    SELECT post,GROUP_CONCAT(name) <span class="keyword">as</span> emp_members FROM employee GROUP BY post;</span><br><span class="line"></span><br><span class="line">GROUP BY与聚合函数一起使用</span><br><span class="line">    select post,count(<span class="built_in">id</span>) <span class="keyword">as</span> count <span class="keyword">from</span> employee group by post;<span class="comment">#按照岗位分组，并查看每个组有多少人</span></span><br></pre></td></tr></table></figure><h4 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-- SELECT COUNT(*) FROM employee; <span class="comment"># 统计表中共有多少条数据</span></span><br><span class="line">SELECT COUNT(*) FROM employee WHERE depart_id=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">SELECT <span class="built_in">max</span>(salary) FROM employee;</span><br><span class="line">SELECT <span class="built_in">min</span>(salary) FROM employee;</span><br><span class="line">SELECT avg(salary) FROM employee;</span><br><span class="line">SELECT <span class="built_in">sum</span>(salary) FROM employee;</span><br><span class="line">SELECT SUM(salary) FROM employee WHERE depart_id=<span class="number">3</span>;</span><br></pre></td></tr></table></figure><p>练习</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 查询岗位名以及岗位包含的所有员工名字</span><br><span class="line"><span class="number">2.</span> 查询岗位名以及各岗位内包含的员工个数</span><br><span class="line"><span class="number">3.</span> 查询公司内男员工和女员工的个数</span><br><span class="line"><span class="number">4.</span> 查询岗位名以及各岗位的平均薪资</span><br><span class="line"><span class="number">5.</span> 查询岗位名以及各岗位的最高薪资</span><br><span class="line"><span class="number">6.</span> 查询岗位名以及各岗位的最低薪资</span><br><span class="line"><span class="number">7.</span> 查询男员工与男员工的平均薪资，女员工与女员工的平均薪资</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">select post,group_concat(name) <span class="keyword">from</span> employee group by post;</span><br><span class="line">SELECT post, count(<span class="built_in">id</span>) FROM employee GROUP BY post;</span><br><span class="line">SELECT sex,count(<span class="built_in">id</span>) FROM employee GROUP BY sex;</span><br><span class="line">SELECTpost,avg(salary) FROMemployee GROUP BY post;</span><br><span class="line">SELECTpost,<span class="built_in">max</span>(salary) FROMemployee GROUP BY post;</span><br><span class="line">SELECTpost,<span class="built_in">min</span>(salary) FROMemployee GROUP BY post;</span><br><span class="line">SELECT sex,avg(salary) FROM employee GROUP BY sex;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="having过滤"><a href="#having过滤" class="headerlink" title="having过滤"></a>having过滤</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#！！！执行优先级从高到低：where &gt; group by &gt; having </span></span><br><span class="line"><span class="comment">#1. Where 发生在分组group by之前，因而Where中可以有任意字段，但是绝对不能使用聚合函数。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2. Having发生在分组group by之后，因而Having中可以使用分组的字段，无法直接取到其他字段,可以使用聚合函数</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select @@sql_mode;</span><br><span class="line">+--------------------+</span><br><span class="line">| @@sql_mode         |</span><br><span class="line">+--------------------+</span><br><span class="line">| ONLY_FULL_GROUP_BY |</span><br><span class="line">+--------------------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> <span class="built_in">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * <span class="keyword">from</span> employee where salary &gt; <span class="number">100000</span>;</span><br><span class="line">+----+------+------+-----+------------+---------+--------------+------------+--------+-----------+</span><br><span class="line">| <span class="built_in">id</span> | name | sex  | age | hire_date  | post    | post_comment | salary     | office | depart_id |</span><br><span class="line">+----+------+------+-----+------------+---------+--------------+------------+--------+-----------+</span><br><span class="line">|  <span class="number">2</span> | alex | male |  <span class="number">78</span> | <span class="number">2015</span>-03-02 | teacher | NULL         | <span class="number">1000000.31</span> |    <span class="number">401</span> |         <span class="number">1</span> |</span><br><span class="line">+----+------+------+-----+------------+---------+--------------+------------+--------+-----------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> <span class="built_in">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * <span class="keyword">from</span> employee having salary &gt; <span class="number">100000</span>;</span><br><span class="line">ERROR <span class="number">1463</span> (<span class="number">42000</span>): Non-grouping field <span class="string">&#x27;salary&#x27;</span> <span class="keyword">is</span> used <span class="keyword">in</span> HAVING clause</span><br><span class="line"></span><br><span class="line">mysql&gt; select post,group_concat(name) <span class="keyword">from</span> employee group by post having salary &gt; <span class="number">10000</span>;<span class="comment">#错误，分组后无法直接取到salary字段</span></span><br><span class="line">ERROR <span class="number">1054</span> (42S22): Unknown column <span class="string">&#x27;salary&#x27;</span> <span class="keyword">in</span> <span class="string">&#x27;having clause&#x27;</span></span><br><span class="line">mysql&gt; select post,group_concat(name) <span class="keyword">from</span> employee group by post having avg(salary) &gt; <span class="number">10000</span>;</span><br><span class="line">+-----------+-------------------------------------------------------+</span><br><span class="line">| post | group_concat(name) |</span><br><span class="line">+-----------+-------------------------------------------------------+</span><br><span class="line">| operation | 程咬铁,程咬铜,程咬银,程咬金,张野 |</span><br><span class="line">| teacher | 成龙,jinxin,jingliyang,liwenzhou,yuanhao,wupeiqi,alex |</span><br><span class="line">+-----------+-------------------------------------------------------+</span><br><span class="line"><span class="number">2</span> rows <span class="keyword">in</span> <span class="built_in">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">验证</span><br></pre></td></tr></table></figure><p>练习</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">1.</span> 查询各岗位内包含的员工个数小于<span class="number">3</span>的岗位名、岗位内包含员工名字、个数</span><br><span class="line"></span><br><span class="line">SELECT post,GROUP_CONCAT(name),count(<span class="built_in">id</span>) FROM employee GROUP BY post HAVING count(<span class="built_in">id</span>) &lt; <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span> 查询各岗位平均薪资大于<span class="number">10000</span>的岗位名、平均工资</span><br><span class="line"></span><br><span class="line">SELECT post ,avg(salary) FROM employee GROUP BY post HAVING avg(salary)&gt;<span class="number">10000</span>;</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span> 查询各岗位平均薪资大于<span class="number">10000</span>且小于<span class="number">20000</span>的岗位名、平均工资</span><br><span class="line">SELECT post ,avg(salary) FROM employee GROUP BY post HAVING avg(salary)&gt;<span class="number">10000</span> <span class="keyword">and</span> avg(salary)&lt;<span class="number">20000</span>;</span><br></pre></td></tr></table></figure><h4 id="查询排序-ORDER-BY"><a href="#查询排序-ORDER-BY" class="headerlink" title="查询排序:ORDER BY"></a>查询排序:ORDER BY</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">按单列排序</span><br><span class="line">    SELECT * FROM employee ORDER BY salary;</span><br><span class="line">    SELECT * FROM employee ORDER BY salary ASC; <span class="comment"># 升序  从小到大</span></span><br><span class="line">    SELECT * FROM employee ORDER BY salary DESC;<span class="comment"># 降序  从大到小</span></span><br><span class="line"></span><br><span class="line">按多列排序:先按照age排序，如果年纪相同，则按照薪资排序</span><br><span class="line">    SELECT * <span class="keyword">from</span> employee</span><br><span class="line">        ORDER BY age,</span><br><span class="line">        salary DESC;</span><br></pre></td></tr></table></figure><p>练习</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 查询所有员工信息，先按照age升序排序，如果age相同则按照hire_date降序排序</span><br><span class="line">select * <span class="keyword">from</span> employee ORDER BY age asc,hire_date desc;</span><br><span class="line"><span class="number">2.</span> 查询各岗位平均薪资大于<span class="number">10000</span>的岗位名、平均工资,结果按平均薪资升序排列</span><br><span class="line">SELECT post,avg(salary) FROM employee GROUP BY post HAVING avg(salary) &gt; <span class="number">10000</span> ORDER BY avg(salary) ASC;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">3.</span> 查询各岗位平均薪资大于<span class="number">10000</span>的岗位名、平均工资,结果按平均薪资降序排列</span><br><span class="line">SELECT post,avg(salary) FROM employee GROUP BY post HAVING avg(salary) &gt; <span class="number">10000</span> ORDER BY avg(salary) DESC;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="限制查询的记录数-LIMIT"><a href="#限制查询的记录数-LIMIT" class="headerlink" title="限制查询的记录数:LIMIT"></a>限制查询的记录数:LIMIT</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">示例：</span><br><span class="line">    SELECT * FROM employee ORDER BY salary DESC </span><br><span class="line">        LIMIT <span class="number">3</span>;                    <span class="comment">#默认初始位置为0 </span></span><br><span class="line">    </span><br><span class="line">    SELECT * FROM employee ORDER BY salary DESC</span><br><span class="line">        LIMIT <span class="number">0</span>,<span class="number">5</span>; <span class="comment">#从第0开始，即先查询出第一条，然后包含这一条在内往后查5条</span></span><br><span class="line"></span><br><span class="line">    SELECT * FROM employee ORDER BY salary DESC</span><br><span class="line">        LIMIT <span class="number">5</span>,<span class="number">5</span>; <span class="comment">#从第5开始，即先查询出第6条，然后包含这一条在内往后查5条</span></span><br></pre></td></tr></table></figure><h4 id="使用正则表达式查询"><a href="#使用正则表达式查询" class="headerlink" title="使用正则表达式查询"></a>使用正则表达式查询</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM employee WHERE name REGEXP <span class="string">&#x27;^ale&#x27;</span>;</span><br><span class="line"></span><br><span class="line">SELECT * FROM employee WHERE name REGEXP <span class="string">&#x27;on$&#x27;</span>;</span><br><span class="line"></span><br><span class="line">SELECT * FROM employee WHERE name REGEXP <span class="string">&#x27;m&#123;2&#125;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">小结：对字符串匹配的方式</span><br><span class="line">WHERE name = <span class="string">&#x27;egon&#x27;</span>;</span><br><span class="line">WHERE name LIKE <span class="string">&#x27;yua%&#x27;</span>;</span><br><span class="line">WHERE name REGEXP <span class="string">&#x27;on$&#x27;</span>;</span><br><span class="line"></span><br><span class="line">查看所有员工中名字是jin开头，n或者g结果的员工信息</span><br><span class="line">SELECT * FROM employee WHERE name REGEXP <span class="string">&#x27;^jin&#x27;</span> <span class="keyword">or</span> <span class="string">&#x27;^n&#x27;</span> <span class="keyword">or</span> <span class="string">&#x27;^g&#x27;</span>;</span><br><span class="line"></span><br><span class="line">SELECT * FROM employee WHERE name REGEXP <span class="keyword">in</span> (<span class="string">&#x27;^jin&#x27;</span>,<span class="string">&#x27;^n&#x27;</span>,<span class="string">&#x27;^g&#x27;</span>);</span><br><span class="line"></span><br><span class="line">select * <span class="keyword">from</span> employee where name regexp <span class="string">&#x27;^jin.*[gn]$&#x27;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="数据备份"><a href="#数据备份" class="headerlink" title="数据备份"></a>数据备份</h1><h3 id="MySQL数据备份"><a href="#MySQL数据备份" class="headerlink" title="MySQL数据备份"></a>MySQL数据备份</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1. 物理备份： 直接复制数据库文件，适用于大型数据库环境。但不能恢复到异构系统中如Windows。</span></span><br><span class="line"><span class="comment">#2. 逻辑备份： 备份的是建表、建库、插入等操作所执行SQL语句，适用于中小型数据库，效率相对较低。</span></span><br><span class="line"><span class="comment">#3. 导出表： 将表导入到文本文件中。 </span></span><br></pre></td></tr></table></figure><h4 id="使用mysqldump实现逻辑备份"><a href="#使用mysqldump实现逻辑备份" class="headerlink" title="使用mysqldump实现逻辑备份"></a>使用mysqldump实现逻辑备份</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#语法：</span></span><br><span class="line"><span class="comment"># mysqldump -h 服务器 -u用户名 -p密码 数据库名 &gt; 备份文件.sql</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#示例：</span></span><br><span class="line"><span class="comment">#单库备份</span></span><br><span class="line">mysqldump -uroot -p123 db1 &gt; db1.sql</span><br><span class="line">mysqldump -uroot -p123 db1 table1 table2 &gt; db1-table1-table2.sql</span><br><span class="line"></span><br><span class="line"><span class="comment">#多库备份</span></span><br><span class="line">mysqldump -uroot -p123 --databases db1 db2 mysql db3 &gt; db1_db2_mysql_db3.sql</span><br><span class="line"></span><br><span class="line"><span class="comment">#备份所有库</span></span><br><span class="line">mysqldump -uroot -p123 --<span class="built_in">all</span>-databases &gt; <span class="built_in">all</span>.sql</span><br></pre></td></tr></table></figure><h4 id="恢复逻辑备份"><a href="#恢复逻辑备份" class="headerlink" title="恢复逻辑备份"></a>恢复逻辑备份</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方法一：</span></span><br><span class="line">[root@egon backup]<span class="comment"># mysql -uroot -p123 &lt; /backup/all.sql</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#方法二：</span></span><br><span class="line">mysql&gt; use db1;</span><br><span class="line">mysql&gt; SET SQL_LOG_BIN=<span class="number">0</span>;</span><br><span class="line">mysql&gt; source /root/db1.sql</span><br><span class="line"></span><br><span class="line"><span class="comment">#注：如果备份/恢复单个库时，可以修改sql文件</span></span><br><span class="line">DROP database <span class="keyword">if</span> exists school;</span><br><span class="line">create database school;</span><br><span class="line">use school;</span><br></pre></td></tr></table></figure><h4 id="备份-恢复案例"><a href="#备份-恢复案例" class="headerlink" title="备份/恢复案例"></a><strong>备份/恢复案例</strong></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#数据库备份/恢复实验一：数据库损坏</span></span><br><span class="line">备份：</span><br><span class="line"><span class="number">1.</span> <span class="comment"># mysqldump -uroot -p123 --all-databases &gt; /backup/`date +%F`_all.sql</span></span><br><span class="line"><span class="number">2.</span> <span class="comment"># mysql -uroot -p123 -e &#x27;flush logs&#x27; //截断并产生新的binlog</span></span><br><span class="line"><span class="number">3.</span> 插入数据 //模拟服务器正常运行</span><br><span class="line"><span class="number">4.</span> mysql&gt; <span class="built_in">set</span> sql_log_bin=<span class="number">0</span>; //模拟服务器损坏</span><br><span class="line">mysql&gt; drop database db;</span><br><span class="line"></span><br><span class="line">恢复：</span><br><span class="line"><span class="number">1.</span> <span class="comment"># mysqlbinlog 最后一个binlog &gt; /backup/last_bin.log</span></span><br><span class="line"><span class="number">2.</span> mysql&gt; <span class="built_in">set</span> sql_log_bin=<span class="number">0</span>; </span><br><span class="line">mysql&gt; source /backup/<span class="number">2014</span>-02-13_<span class="built_in">all</span>.sql //恢复最近一次完全备份 </span><br><span class="line">mysql&gt; source /backup/last_bin.log //恢复最后个binlog文件</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#数据库备份/恢复实验二：如果有误删除</span></span><br><span class="line">备份：</span><br><span class="line"><span class="number">1.</span> mysqldump -uroot -p123 --<span class="built_in">all</span>-databases &gt; /backup/`date +%F`_<span class="built_in">all</span>.sql</span><br><span class="line"><span class="number">2.</span> mysql -uroot -p123 -e <span class="string">&#x27;flush logs&#x27;</span> //截断并产生新的binlog</span><br><span class="line"><span class="number">3.</span> 插入数据 //模拟服务器正常运行</span><br><span class="line"><span class="number">4.</span> drop table db1.t1 //模拟误删除</span><br><span class="line"><span class="number">5.</span> 插入数据 //模拟服务器正常运行</span><br><span class="line"></span><br><span class="line">恢复：</span><br><span class="line"><span class="number">1.</span> <span class="comment"># mysqlbinlog 最后一个binlog --stop-position=260 &gt; /tmp/1.sql </span></span><br><span class="line"><span class="comment"># mysqlbinlog 最后一个binlog --start-position=900 &gt; /tmp/2.sql </span></span><br><span class="line"><span class="number">2.</span> mysql&gt; <span class="built_in">set</span> sql_log_bin=<span class="number">0</span>; </span><br><span class="line">mysql&gt; source /backup/<span class="number">2014</span>-02-13_<span class="built_in">all</span>.sql //恢复最近一次完全备份</span><br><span class="line">mysql&gt; source /tmp/<span class="number">1.</span>log //恢复最后个binlog文件</span><br><span class="line">mysql&gt; source /tmp/<span class="number">2.</span>log //恢复最后个binlog文件</span><br><span class="line"></span><br><span class="line">注意事项：</span><br><span class="line"><span class="number">1.</span> 完全恢复到一个干净的环境（例如新的数据库或删除原有的数据库）</span><br><span class="line"><span class="number">2.</span> 恢复期间所有SQL语句不应该记录到binlog中</span><br></pre></td></tr></table></figure><h4 id="实现自动化备份"><a href="#实现自动化备份" class="headerlink" title="实现自动化备份"></a>实现自动化备份</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">备份计划：</span><br><span class="line"><span class="number">1.</span> 什么时间 <span class="number">2</span>:<span class="number">00</span></span><br><span class="line"><span class="number">2.</span> 对哪些数据库备份</span><br><span class="line"><span class="number">3.</span> 备份文件放的位置</span><br><span class="line"></span><br><span class="line">备份脚本：</span><br><span class="line">[root@egon ~]<span class="comment"># vim /mysql_back.sql</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">back_dir=/backup</span><br><span class="line">back_file=`date +%F`_<span class="built_in">all</span>.sql</span><br><span class="line">user=root</span><br><span class="line"><span class="keyword">pass</span>=<span class="number">123</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! -d /backup ];then</span><br><span class="line">mkdir -p /backup</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份并截断日志</span></span><br><span class="line">mysqldump -u$&#123;user&#125; -p$&#123;<span class="keyword">pass</span>&#125; --events --<span class="built_in">all</span>-databases &gt; $&#123;back_dir&#125;/$&#123;back_file&#125;</span><br><span class="line">mysql -u$&#123;user&#125; -p$&#123;<span class="keyword">pass</span>&#125; -e <span class="string">&#x27;flush logs&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 只保留最近一周的备份</span></span><br><span class="line">cd $back_dir</span><br><span class="line">find . -mtime +<span class="number">7</span> -<span class="built_in">exec</span> rm -rf &#123;&#125; \;</span><br><span class="line"></span><br><span class="line">手动测试：</span><br><span class="line">[root@egon ~]<span class="comment"># chmod a+x /mysql_back.sql </span></span><br><span class="line">[root@egon ~]<span class="comment"># chattr +i /mysql_back.sql</span></span><br><span class="line">[root@egon ~]<span class="comment"># /mysql_back.sql</span></span><br><span class="line"></span><br><span class="line">配置cron：</span><br><span class="line">[root@egon ~]<span class="comment"># crontab -l</span></span><br><span class="line"><span class="number">2</span> * * * /mysql_back.sql</span><br></pre></td></tr></table></figure><h4 id="表的导出和导入"><a href="#表的导出和导入" class="headerlink" title="表的导出和导入"></a><strong>表的导出和导入</strong></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">SELECT... INTO OUTFILE 导出文本文件</span><br><span class="line">示例：</span><br><span class="line">mysql&gt; SELECT * FROM school.student1</span><br><span class="line">INTO OUTFILE <span class="string">&#x27;student1.txt&#x27;</span></span><br><span class="line">FIELDS TERMINATED BY <span class="string">&#x27;,&#x27;</span> //定义字段分隔符</span><br><span class="line">OPTIONALLY ENCLOSED BY <span class="string">&#x27;”&#x27;</span> //定义字符串使用什么符号括起来</span><br><span class="line">LINES TERMINATED BY <span class="string">&#x27;\n&#x27;</span> ; //定义换行符</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql 命令导出文本文件</span><br><span class="line">示例:</span><br><span class="line"><span class="comment"># mysql -u root -p123 -e &#x27;select * from student1.school&#x27; &gt; /tmp/student1.txt</span></span><br><span class="line"><span class="comment"># mysql -u root -p123 --xml -e &#x27;select * from student1.school&#x27; &gt; /tmp/student1.xml</span></span><br><span class="line"><span class="comment"># mysql -u root -p123 --html -e &#x27;select * from student1.school&#x27; &gt; /tmp/student1.html</span></span><br><span class="line"></span><br><span class="line">LOAD DATA INFILE 导入文本文件</span><br><span class="line">mysql&gt; DELETE FROM student1;</span><br><span class="line">mysql&gt; LOAD DATA INFILE <span class="string">&#x27;/tmp/student1.txt&#x27;</span></span><br><span class="line">INTO TABLE school.student1</span><br><span class="line">FIELDS TERMINATED BY <span class="string">&#x27;,&#x27;</span></span><br><span class="line">OPTIONALLY ENCLOSED BY <span class="string">&#x27;”&#x27;</span></span><br><span class="line">LINES TERMINATED BY <span class="string">&#x27;\n&#x27;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#可能会报错</span></span><br><span class="line">mysql&gt; select * <span class="keyword">from</span> db1.emp into outfile <span class="string">&#x27;C:\\db1.emp.txt&#x27;</span> fields terminated by <span class="string">&#x27;,&#x27;</span> lines terminated by <span class="string">&#x27;\r\n&#x27;</span>;</span><br><span class="line">ERROR <span class="number">1238</span> (HY000): Variable <span class="string">&#x27;secure_file_priv&#x27;</span> <span class="keyword">is</span> a read only variable</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#数据库最关键的是数据，一旦数据库权限泄露，那么通过上述语句就可以轻松将数据导出到文件中然后下载拿走，因而mysql对此作了限制，只能将文件导出到指定目录</span></span><br><span class="line">在配置文件中</span><br><span class="line">[mysqld]</span><br><span class="line">secure_file_priv=<span class="string">&#x27;C:\\&#x27;</span> <span class="comment">#只能将数据导出到C:\\下</span></span><br><span class="line"></span><br><span class="line">重启mysql</span><br><span class="line">重新执行上述语句</span><br><span class="line"></span><br><span class="line">报错：Variable <span class="string">&#x27;secure_file_priv&#x27;</span> <span class="keyword">is</span> a read only</span><br></pre></td></tr></table></figure><h4 id="数据库迁移"><a href="#数据库迁移" class="headerlink" title="数据库迁移"></a>数据库迁移</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">务必保证在相同版本之间迁移</span><br><span class="line"><span class="comment"># mysqldump -h 源IP -uroot -p123 --databases db1 | mysql -h 目标IP -uroot -p456</span></span><br></pre></td></tr></table></figure><h4 id="sql注入解决"><a href="#sql注入解决" class="headerlink" title="sql注入解决"></a>sql注入解决</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 原来是我们对sql进行字符串拼接</span></span><br><span class="line"><span class="comment"># sql=&quot;select * from userinfo where name=&#x27;%s&#x27; and password=&#x27;%s&#x27;&quot; %(user,pwd)</span></span><br><span class="line"><span class="comment"># print(sql)</span></span><br><span class="line"><span class="comment"># res=cursor.execute(sql)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#改写为（execute帮我们做字符串拼接，我们无需且一定不能再为%s加引号了）</span></span><br><span class="line">sql=<span class="string">&quot;select * from userinfo where name=%s and password=%s&quot;</span> <span class="comment">#！！！注意%s需要去掉引号，因为pymysql会自动为我们加上</span></span><br><span class="line">res=cursor.execute(sql,[user,pwd]) <span class="comment">#pymysql模块自动帮我们解决sql注入的问题，只要我们按照pymysql的规矩来。</span></span><br></pre></td></tr></table></figure><h4 id="增、删、改：conn-commit"><a href="#增、删、改：conn-commit" class="headerlink" title="增、删、改：conn.commit()"></a><strong>增、删、改：conn.commit()</strong></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"><span class="comment">#链接</span></span><br><span class="line">conn=pymysql.connect(host=<span class="string">&#x27;localhost&#x27;</span>,user=<span class="string">&#x27;root&#x27;</span>,password=<span class="string">&#x27;123&#x27;</span>,database=<span class="string">&#x27;egon&#x27;</span>)</span><br><span class="line"><span class="comment">#游标</span></span><br><span class="line">cursor=conn.cursor()</span><br><span class="line"></span><br><span class="line"><span class="comment">#执行sql语句</span></span><br><span class="line"><span class="comment">#part1</span></span><br><span class="line"><span class="comment"># sql=&#x27;insert into userinfo(name,password) values(&quot;root&quot;,&quot;123456&quot;);&#x27;</span></span><br><span class="line"><span class="comment"># res=cursor.execute(sql) #执行sql语句，返回sql影响成功的行数</span></span><br><span class="line"><span class="comment"># print(res)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#part2</span></span><br><span class="line"><span class="comment"># sql=&#x27;insert into userinfo(name,password) values(%s,%s);&#x27;</span></span><br><span class="line"><span class="comment"># res=cursor.execute(sql,(&quot;root&quot;,&quot;123456&quot;)) #执行sql语句，返回sql影响成功的行数</span></span><br><span class="line"><span class="comment"># print(res)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#part3</span></span><br><span class="line">sql=<span class="string">&#x27;insert into userinfo(name,password) values(%s,%s);&#x27;</span></span><br><span class="line">res=cursor.executemany(sql,[(<span class="string">&quot;root&quot;</span>,<span class="string">&quot;123456&quot;</span>),(<span class="string">&quot;lhf&quot;</span>,<span class="string">&quot;12356&quot;</span>),(<span class="string">&quot;eee&quot;</span>,<span class="string">&quot;156&quot;</span>)]) <span class="comment">#执行sql语句，返回sql影响成功的行数</span></span><br><span class="line"><span class="built_in">print</span>(res)</span><br><span class="line"></span><br><span class="line">conn.commit() <span class="comment">#提交后才发现表中插入记录成功</span></span><br><span class="line">cursor.close()</span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure><h4 id="查：fetchone，fetchmany，fetchall"><a href="#查：fetchone，fetchmany，fetchall" class="headerlink" title="查：fetchone，fetchmany，fetchall"></a><strong>查：fetchone，fetchmany，fetchall</strong></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"><span class="comment">#链接</span></span><br><span class="line">conn=pymysql.connect(host=<span class="string">&#x27;localhost&#x27;</span>,user=<span class="string">&#x27;root&#x27;</span>,password=<span class="string">&#x27;123&#x27;</span>,database=<span class="string">&#x27;egon&#x27;</span>)</span><br><span class="line"><span class="comment">#游标</span></span><br><span class="line">cursor=conn.cursor()</span><br><span class="line"></span><br><span class="line"><span class="comment">#执行sql语句</span></span><br><span class="line">sql=<span class="string">&#x27;select * from userinfo;&#x27;</span></span><br><span class="line">rows=cursor.execute(sql) <span class="comment">#执行sql语句，返回sql影响成功的行数rows,将结果放入一个集合，等待被查询</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cursor.scroll(3,mode=&#x27;absolute&#x27;) # 相对绝对位置移动</span></span><br><span class="line"><span class="comment"># cursor.scroll(3,mode=&#x27;relative&#x27;) # 相对当前位置移动</span></span><br><span class="line">res1=cursor.fetchone()</span><br><span class="line">res2=cursor.fetchone()</span><br><span class="line">res3=cursor.fetchone()</span><br><span class="line">res4=cursor.fetchmany(<span class="number">2</span>)</span><br><span class="line">res5=cursor.fetchall()</span><br><span class="line"><span class="built_in">print</span>(res1)</span><br><span class="line"><span class="built_in">print</span>(res2)</span><br><span class="line"><span class="built_in">print</span>(res3)</span><br><span class="line"><span class="built_in">print</span>(res4)</span><br><span class="line"><span class="built_in">print</span>(res5)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%s rows in set (0.00 sec)&#x27;</span> %rows)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">conn.commit() <span class="comment">#提交后才发现表中插入记录成功</span></span><br><span class="line">cursor.close()</span><br><span class="line">conn.close()</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">(1, &#x27;root&#x27;, &#x27;123456&#x27;)</span></span><br><span class="line"><span class="string">(2, &#x27;root&#x27;, &#x27;123456&#x27;)</span></span><br><span class="line"><span class="string">(3, &#x27;root&#x27;, &#x27;123456&#x27;)</span></span><br><span class="line"><span class="string">((4, &#x27;root&#x27;, &#x27;123456&#x27;), (5, &#x27;root&#x27;, &#x27;123456&#x27;))</span></span><br><span class="line"><span class="string">((6, &#x27;root&#x27;, &#x27;123456&#x27;), (7, &#x27;lhf&#x27;, &#x27;12356&#x27;), (8, &#x27;eee&#x27;, &#x27;156&#x27;))</span></span><br><span class="line"><span class="string">rows in set (0.00 sec)</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="获取插入的最后一条数据的自增ID"><a href="#获取插入的最后一条数据的自增ID" class="headerlink" title="获取插入的最后一条数据的自增ID"></a><strong>获取插入的最后一条数据的自增ID</strong></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line">conn=pymysql.connect(host=<span class="string">&#x27;localhost&#x27;</span>,user=<span class="string">&#x27;root&#x27;</span>,password=<span class="string">&#x27;123&#x27;</span>,database=<span class="string">&#x27;egon&#x27;</span>)</span><br><span class="line">cursor=conn.cursor()</span><br><span class="line"></span><br><span class="line">sql=<span class="string">&#x27;insert into userinfo(name,password) values(&quot;xxx&quot;,&quot;123&quot;);&#x27;</span></span><br><span class="line">rows=cursor.execute(sql)</span><br><span class="line"><span class="built_in">print</span>(cursor.lastrowid) <span class="comment">#在插入语句后查看</span></span><br><span class="line"></span><br><span class="line">conn.commit()</span><br><span class="line"></span><br><span class="line">cursor.close()</span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure><h1 id="SQL练习"><a href="#SQL练习" class="headerlink" title="SQL练习"></a>SQL练习</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、查询所有的课程的名称以及对应的任课老师姓名</span><br><span class="line"></span><br><span class="line">select * <span class="keyword">from</span> course inner join teacher on course.teacher_id = teacher.tid;</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、查询学生表中男女生各有多少人</span><br><span class="line"></span><br><span class="line">SELECT gender,COUNT(<span class="number">1</span>) FROM student GROUP BY gender;</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>、查询物理成绩等于<span class="number">100</span>的学生的姓名</span><br><span class="line">select sname <span class="keyword">from</span> student where sid <span class="keyword">in</span></span><br><span class="line">(select student_id <span class="keyword">from</span></span><br><span class="line"> score inner join course on course.cid = score.course_id </span><br><span class="line"> where course.cname = <span class="string">&#x27;物理&#x27;</span> <span class="keyword">and</span> num = <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>、查询平均成绩大于八十分的同学的姓名和平均成绩</span><br><span class="line">select sname,t1.avg_num <span class="keyword">from</span> student inner join</span><br><span class="line">(select student_id,avg(num) <span class="keyword">as</span> avg_num </span><br><span class="line"> <span class="keyword">from</span> score group by student_id</span><br><span class="line"> having avg(num) &gt; <span class="number">80</span>) <span class="keyword">as</span> t1</span><br><span class="line">on student.sid = t1.student_id;</span><br><span class="line"><span class="number">5</span>、查询所有学生的学号，姓名，选课数，总成绩</span><br><span class="line">select student.sid,sname , t1.course_count, t1.sum_num</span><br><span class="line"><span class="keyword">from</span> student left join </span><br><span class="line">(select student_id,</span><br><span class="line"> count(course_id) <span class="keyword">as</span> course_count,</span><br><span class="line"> <span class="built_in">sum</span>(num) <span class="keyword">as</span> sum_num </span><br><span class="line"> <span class="keyword">from</span> score </span><br><span class="line"> group by student_id) <span class="keyword">as</span> t1</span><br><span class="line">on student.sid = t1.student_id;</span><br><span class="line"><span class="number">6</span>、 查询姓李老师的个数</span><br><span class="line">select count(tname) <span class="keyword">from</span> teacher where tname like <span class="string">&#x27;李%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="number">7</span>、 查询没有报李平老师课的学生姓名</span><br><span class="line"></span><br><span class="line">select sname <span class="keyword">from</span> student where sid <span class="keyword">not</span> <span class="keyword">in</span> (</span><br><span class="line">    select distinct student_id </span><br><span class="line"><span class="keyword">from</span> score</span><br><span class="line">    where course_id <span class="keyword">in</span> (</span><br><span class="line">   select course.cid <span class="keyword">from</span> course </span><br><span class="line">    inner join teacher on teacher.tid = course.teacher_id</span><br><span class="line">    where teacher.tname = <span class="string">&#x27;李平老师&#x27;</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="number">8</span>、 查询物理课程比生物课程高的学生的学号</span><br><span class="line">select t1.student_id <span class="keyword">from</span> </span><br><span class="line">(select student_id ,num <span class="keyword">from</span> score</span><br><span class="line">where course_id =(</span><br><span class="line">select cid <span class="keyword">from</span> course where course.cname = <span class="string">&#x27;物理&#x27;</span>)) <span class="keyword">as</span> t1</span><br><span class="line">inner join </span><br><span class="line">(select student_id ,num <span class="keyword">from</span> score</span><br><span class="line">where course_id =(</span><br><span class="line">select cid <span class="keyword">from</span> course where course.cname = <span class="string">&#x27;生物&#x27;</span>)) <span class="keyword">as</span> t2</span><br><span class="line">on t1.student_id = t2.student_id </span><br><span class="line">where t1.num &gt; t2.num;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">9</span>、 查询没有同时选修物理课程和体育课程的学生姓名</span><br><span class="line">select sname <span class="keyword">from</span> student where sid <span class="keyword">in</span> (</span><br><span class="line">    select  student_id</span><br><span class="line"><span class="keyword">from</span> score</span><br><span class="line">where </span><br><span class="line">    course_id <span class="keyword">in</span> (</span><br><span class="line">    select cid <span class="keyword">from</span> course </span><br><span class="line">        where </span><br><span class="line">        cname = <span class="string">&#x27;物理&#x27;</span> <span class="keyword">or</span> cname = <span class="string">&#x27;体育&#x27;</span>)</span><br><span class="line">    group by student_id </span><br><span class="line">    having count(course_id) = <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="number">10</span>、查询挂科超过两门(包括两门)的学生姓名和班级</span><br><span class="line"></span><br><span class="line">select sname,<span class="keyword">class</span>.caption <span class="keyword">from</span> student inner join(</span><br><span class="line">select student_id <span class="keyword">from</span> score</span><br><span class="line">where num &lt;<span class="number">60</span></span><br><span class="line">group by student_id </span><br><span class="line">    having</span><br><span class="line">count(course_id) &gt;= <span class="number">2</span>) <span class="keyword">as</span> t1 </span><br><span class="line">inner join <span class="class"><span class="keyword">class</span></span></span><br><span class="line"><span class="class"><span class="title">on</span> <span class="title">t1</span>.<span class="title">student_id</span> = <span class="title">student</span>.<span class="title">sid</span></span></span><br><span class="line"><span class="class"><span class="title">and</span> <span class="title">student</span>.<span class="title">class_id</span> = <span class="title">class</span>.<span class="title">cid</span>;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">11 、查询选修了所有课程的学生姓名</span></span><br><span class="line"><span class="class"><span class="title">select</span> <span class="title">sname</span> <span class="title">from</span> <span class="title">student</span> <span class="title">where</span> <span class="title">sid</span> <span class="title">in</span> (<span class="params">select student_id <span class="keyword">from</span> score group by student_id </span></span></span><br><span class="line"><span class="params"><span class="class">  having count(<span class="params">course_id</span>) = (<span class="params">select count(<span class="params">cid</span>) <span class="keyword">from</span> course</span>)</span>);</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">12、查询李平老师教的课程的所有成绩记录</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">select</span> * <span class="title">from</span> <span class="title">score</span> <span class="title">where</span> <span class="title">course_id</span> <span class="title">in</span> (<span class="params">select cid <span class="keyword">from</span> course inner join teacher on course.teacher_id = teacher.tid</span></span></span><br><span class="line"><span class="params"><span class="class">  where teacher.tname = <span class="string">&#x27;李平老师&#x27;</span></span>);</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">13、查询全部学生都选修了的课程号和课程名</span></span><br><span class="line"><span class="class"><span class="title">select</span> <span class="title">cid</span>,<span class="title">cname</span> <span class="title">from</span> <span class="title">course</span> <span class="title">where</span> <span class="title">cid</span> <span class="title">in</span> (<span class="params">select course_id <span class="keyword">from</span> score group by course_id</span></span></span><br><span class="line"><span class="params"><span class="class">   having </span></span></span><br><span class="line"><span class="params"><span class="class"> count(<span class="params">student_id</span>) = (<span class="params">select count(<span class="params">sid</span>) <span class="keyword">from</span> student</span>)                                      </span>);</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">14、查询每门课程被选修的次数</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">select</span> <span class="title">course_id</span>,<span class="title">count</span>(<span class="params">student_id</span>) <span class="title">from</span> <span class="title">score</span> <span class="title">group</span> <span class="title">by</span> <span class="title">course_id</span>;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">15、查询之选修了一门课程的学生姓名和学号</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">select</span> <span class="title">sname</span>,<span class="title">sid</span> <span class="title">from</span> <span class="title">student</span> <span class="title">where</span> <span class="title">sid</span> <span class="title">in</span> (<span class="params">select student_id <span class="keyword">from</span> score group by student_id</span></span></span><br><span class="line"><span class="params"><span class="class"> having count(<span class="params">course_id</span>) =<span class="number">1</span></span>);</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">16、查询所有学生考出的成绩并按从高到低排序（成绩去重）</span></span><br><span class="line"><span class="class"><span class="title">select</span> <span class="title">distinct</span> <span class="title">num</span> <span class="title">from</span> <span class="title">score</span> <span class="title">order</span> <span class="title">by</span> <span class="title">num</span> <span class="title">desc</span>;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">17、查询平均成绩大于85的学生姓名和平均成绩</span></span><br><span class="line"><span class="class"><span class="title">select</span> <span class="title">sname</span> ,<span class="title">t1</span>.<span class="title">avg_num</span> <span class="title">from</span> <span class="title">student</span> <span class="title">inner</span> <span class="title">join</span>(<span class="params">select student_id,avg(<span class="params">num</span>) <span class="keyword">as</span> avg_num <span class="keyword">from</span> score  group by student_id having avg(<span class="params">num</span>) &gt; <span class="number">85</span></span>) <span class="title">as</span> <span class="title">t1</span></span></span><br><span class="line"><span class="class"><span class="title">on</span> <span class="title">student</span>.<span class="title">sid</span> = <span class="title">t1</span>.<span class="title">student_id</span>;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">18、查询生物成绩不及格的学生姓名和对应生物分数</span></span><br><span class="line"><span class="class"><span class="title">select</span> <span class="title">sname</span>, <span class="title">num</span> <span class="title">from</span> </span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">19、查询在所有选修了李平老师课程的学生中，这些课程(<span class="params">李平老师的课程，不是所有课程</span>)平均成绩最高的学生姓名</span></span><br><span class="line"><span class="class"><span class="title">SELECT</span></span></span><br><span class="line"><span class="class">    <span class="title">student</span>.<span class="title">sname</span></span></span><br><span class="line"><span class="class"><span class="title">FROM</span></span></span><br><span class="line"><span class="class">    <span class="title">student</span></span></span><br><span class="line"><span class="class"><span class="title">WHERE</span></span></span><br><span class="line"><span class="class">    <span class="title">sid</span> = (<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="class">        SELECT </span></span></span><br><span class="line"><span class="params"><span class="class">            student_id</span></span></span><br><span class="line"><span class="params"><span class="class">        FROM</span></span></span><br><span class="line"><span class="params"><span class="class">            score</span></span></span><br><span class="line"><span class="params"><span class="class">        WHERE</span></span></span><br><span class="line"><span class="params"><span class="class">            course_id IN (<span class="params"></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="class">                SELECT</span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="class">                    course.cid</span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="class">                FROM</span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="class">                    course</span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="class">                INNER JOIN teacher ON course.teacher_id = teacher.tid</span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="class">                WHERE</span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="class">                    teacher.tname = <span class="string">&#x27;李平老师&#x27;</span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="class">            </span>)group by student_id  order by avg(<span class="params">num</span>) desc limit <span class="number">1</span></span></span></span><br><span class="line"><span class="params"><span class="class">    </span>) ;</span></span><br><span class="line"><span class="class"> </span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">20、查询每门课程成绩最好的前两名学生姓名</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">21、查询不同课程但成绩相同的学号，课程号，成绩</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"> <span class="title">SELECT</span> <span class="title">DISTINCT</span>  <span class="title">s1</span>.<span class="title">course_id</span>,<span class="title">s2</span>.<span class="title">course_id</span>,<span class="title">s1</span>.<span class="title">num</span>,<span class="title">s2</span>.<span class="title">num</span> <span class="title">FROM</span> <span class="title">score</span> <span class="title">AS</span> <span class="title">s1</span>, <span class="title">score</span> <span class="title">AS</span> <span class="title">s2</span> <span class="title">WHERE</span> <span class="title">s1</span>.<span class="title">num</span> = <span class="title">s2</span>.<span class="title">num</span> <span class="title">AND</span> <span class="title">s1</span>.<span class="title">course_id</span> &lt;&gt; <span class="title">s2</span>.<span class="title">course_id</span>;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">22、查询没学过“叶平”老师课程的学生姓名以及选修的课程名称；</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">    <span class="title">select</span> <span class="title">student_id</span>,<span class="title">student</span>.<span class="title">sname</span> <span class="title">from</span> <span class="title">score</span></span></span><br><span class="line"><span class="class">    <span class="title">left</span> <span class="title">join</span> <span class="title">student</span> <span class="title">on</span> <span class="title">score</span>.<span class="title">student_id</span> = <span class="title">student</span>.<span class="title">sid</span></span></span><br><span class="line"><span class="class">    <span class="title">where</span> <span class="title">score</span>.<span class="title">course_id</span> <span class="title">not</span> <span class="title">in</span> (<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="class">        select cid <span class="keyword">from</span> course left join teacher on course.teacher_id = teacher.tid where tname = <span class="string">&#x27;李华老师&#x27;</span></span></span></span><br><span class="line"><span class="params"><span class="class">    </span>)</span></span><br><span class="line"><span class="class">    <span class="title">group</span> <span class="title">by</span> <span class="title">student_id</span>;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">23、查询所有选修了学号为1的同学选修过的一门或者多门课程的同学学号和姓名；</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">24、任课最多的老师中学生单科成绩最高的学生姓名</span></span><br><span class="line"><span class="class"></span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;MySQL&quot;&gt;&lt;a href=&quot;#MySQL&quot; class=&quot;headerlink&quot; title=&quot;MySQL&quot;&gt;&lt;/a&gt;MySQL&lt;/h1&gt;&lt;h3 id=&quot;初始sql&quot;&gt;&lt;a href=&quot;#初始sql&quot; class=&quot;headerlink&quot; title=&quot;初始s</summary>
      
    
    
    
    
    <category term="Mysql" scheme="http://example.com/tags/Mysql/"/>
    
  </entry>
  
</feed>
